{"version":3,"file":"999.js","mappings":"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","sources":["webpack://starpyapp/./node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs","webpack://starpyapp/./node_modules/@sqlite.org/sqlite-wasm/index.mjs","webpack://starpyapp/./node_modules/@evolu/common-web/dist/SqliteFactoryLive.js","webpack://starpyapp/./node_modules/@evolu/common-web/dist/Db.worker.js","webpack://starpyapp/webpack/bootstrap","webpack://starpyapp/webpack/runtime/chunk loaded","webpack://starpyapp/webpack/runtime/define property getters","webpack://starpyapp/webpack/runtime/ensure chunk","webpack://starpyapp/webpack/runtime/get javascript chunk filename","webpack://starpyapp/webpack/runtime/get mini-css chunk filename","webpack://starpyapp/webpack/runtime/global","webpack://starpyapp/webpack/runtime/hasOwnProperty shorthand","webpack://starpyapp/webpack/runtime/make namespace object","webpack://starpyapp/webpack/runtime/publicPath","webpack://starpyapp/webpack/runtime/importScripts chunk loading","webpack://starpyapp/webpack/runtime/startup chunk dependencies","webpack://starpyapp/webpack/startup"],"sourcesContent":["/*\n  2022-08-24\n\n  The author disclaims copyright to this source code.  In place of a\n  legal notice, here is a blessing:\n\n  *   May you do good and not evil.\n  *   May you find forgiveness for yourself and forgive others.\n  *   May you share freely, never taking more than you give.\n\n  ***********************************************************************\n\n  This file implements a Promise-based proxy for the sqlite3 Worker\n  API #1. It is intended to be included either from the main thread or\n  a Worker, but only if (A) the environment supports nested Workers\n  and (B) it's _not_ a Worker which loads the sqlite3 WASM/JS\n  module. This file's features will load that module and provide a\n  slightly simpler client-side interface than the slightly-lower-level\n  Worker API does.\n\n  This script necessarily exposes one global symbol, but clients may\n  freely `delete` that symbol after calling it.\n*/\n'use strict';\n\nglobalThis.sqlite3Worker1Promiser = function callee(\n  config = callee.defaultConfig,\n) {\n  if (1 === arguments.length && 'function' === typeof arguments[0]) {\n    const f = config;\n    config = Object.assign(Object.create(null), callee.defaultConfig);\n    config.onready = f;\n  } else {\n    config = Object.assign(Object.create(null), callee.defaultConfig, config);\n  }\n  const handlerMap = Object.create(null);\n  const noop = function () {};\n  const err = config.onerror || noop;\n  const debug = config.debug || noop;\n  const idTypeMap = config.generateMessageId ? undefined : Object.create(null);\n  const genMsgId =\n    config.generateMessageId ||\n    function (msg) {\n      return (\n        msg.type + '#' + (idTypeMap[msg.type] = (idTypeMap[msg.type] || 0) + 1)\n      );\n    };\n  const toss = (...args) => {\n    throw new Error(args.join(' '));\n  };\n  if (!config.worker) config.worker = callee.defaultConfig.worker;\n  if ('function' === typeof config.worker) config.worker = config.worker();\n  let dbId;\n  let promiserFunc;\n  config.worker.onmessage = function (ev) {\n    ev = ev.data;\n    debug('worker1.onmessage', ev);\n    let msgHandler = handlerMap[ev.messageId];\n    if (!msgHandler) {\n      if (ev && 'sqlite3-api' === ev.type && 'worker1-ready' === ev.result) {\n        if (config.onready) config.onready(promiserFunc);\n        return;\n      }\n      msgHandler = handlerMap[ev.type];\n      if (msgHandler && msgHandler.onrow) {\n        msgHandler.onrow(ev);\n        return;\n      }\n      if (config.onunhandled) config.onunhandled(arguments[0]);\n      else err('sqlite3Worker1Promiser() unhandled worker message:', ev);\n      return;\n    }\n    delete handlerMap[ev.messageId];\n    switch (ev.type) {\n      case 'error':\n        msgHandler.reject(ev);\n        return;\n      case 'open':\n        if (!dbId) dbId = ev.dbId;\n        break;\n      case 'close':\n        if (ev.dbId === dbId) dbId = undefined;\n        break;\n      default:\n        break;\n    }\n    try {\n      msgHandler.resolve(ev);\n    } catch (e) {\n      msgHandler.reject(e);\n    }\n  };\n  return (promiserFunc = function () {\n    let msg;\n    if (1 === arguments.length) {\n      msg = arguments[0];\n    } else if (2 === arguments.length) {\n      msg = Object.create(null);\n      msg.type = arguments[0];\n      msg.args = arguments[1];\n      msg.dbId = msg.args.dbId;\n    } else {\n      toss('Invalid arguments for sqlite3Worker1Promiser()-created factory.');\n    }\n    if (!msg.dbId && msg.type !== 'open') msg.dbId = dbId;\n    msg.messageId = genMsgId(msg);\n    msg.departureTime = performance.now();\n    const proxy = Object.create(null);\n    proxy.message = msg;\n    let rowCallbackId;\n    if ('exec' === msg.type && msg.args) {\n      if ('function' === typeof msg.args.callback) {\n        rowCallbackId = msg.messageId + ':row';\n        proxy.onrow = msg.args.callback;\n        msg.args.callback = rowCallbackId;\n        handlerMap[rowCallbackId] = proxy;\n      } else if ('string' === typeof msg.args.callback) {\n        toss(\n          'exec callback may not be a string when using the Promise interface.',\n        );\n      }\n    }\n\n    let p = new Promise(function (resolve, reject) {\n      proxy.resolve = resolve;\n      proxy.reject = reject;\n      handlerMap[msg.messageId] = proxy;\n      debug(\n        'Posting',\n        msg.type,\n        'message to Worker dbId=' + (dbId || 'default') + ':',\n        msg,\n      );\n      config.worker.postMessage(msg);\n    });\n    if (rowCallbackId) p = p.finally(() => delete handlerMap[rowCallbackId]);\n    return p;\n  });\n};\n\nglobalThis.sqlite3Worker1Promiser.defaultConfig = {\n  worker: function () {\n    return new Worker(\n      new URL('sqlite3-worker1-bundler-friendly.mjs', import.meta.url),\n      {\n        type: 'module',\n      },\n    );\n  },\n  onerror: (...args) => console.error('worker1 promiser error', ...args),\n};\n\nsqlite3Worker1Promiser.v2 = function (config) {\n  let oldFunc;\n  if ('function' == typeof config) {\n    oldFunc = config;\n    config = {};\n  } else if ('function' === typeof config?.onready) {\n    oldFunc = config.onready;\n    delete config.onready;\n  }\n  const promiseProxy = Object.create(null);\n  config = Object.assign(config || Object.create(null), {\n    onready: async function (func) {\n      try {\n        if (oldFunc) await oldFunc(func);\n        promiseProxy.resolve(func);\n      } catch (e) {\n        promiseProxy.reject(e);\n      }\n    },\n  });\n  const p = new Promise(function (resolve, reject) {\n    promiseProxy.resolve = resolve;\n    promiseProxy.reject = reject;\n  });\n  try {\n    this.original(config);\n  } catch (e) {\n    promiseProxy.reject(e);\n  }\n  return p;\n}.bind({\n  original: sqlite3Worker1Promiser,\n});\n\nexport default sqlite3Worker1Promiser.v2;\n","import { default as sqlite3InitModule } from './sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs';\nimport './sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs';\n\nconst sqlite3Worker1Promiser = self.sqlite3Worker1Promiser;\n\nexport default sqlite3InitModule;\nexport { sqlite3Worker1Promiser };\n","import { Config, NanoIdGenerator, Sqlite, SqliteFactory, createRuntime, ensureTransferableError, getLockName, maybeLogSqliteQueryExecutionTime, valuesToSqliteValues, } from \"@evolu/common\";\nimport sqlite3InitModule from \"@sqlite.org/sqlite-wasm\";\nimport * as Arr from \"effect/Array\";\nimport * as Effect from \"effect/Effect\";\nimport { absurd, constVoid } from \"effect/Function\";\nimport * as Layer from \"effect/Layer\";\n/**\n * \"opfs-sahpool\" does not support multiple simultaneous connections, and it can\n * be instantiated only within a web worker and only within one tab of the same\n * origin. We use Web Locks and BroadcastChannel to enable multiple tabs\n * functionality.\n *\n * - https://sqlite.org/wasm/doc/trunk/persistence.md\n *\n * There is a sophisticated workaround by the great rhashimoto:\n * https://github.com/rhashimoto/wa-sqlite/discussions/81\n *\n * I decided not to use it because we can't use SharedWorker in Chrome Android,\n * and I don't want to use ServiceWorker because it's slower and tricky.\n *\n * This implementation doesn't need SharedWorker or ServiceWorker and does not\n * use dedicated broadcast channels to keep code as simple as possible. Browsers\n * are updating OPFS rapidly, so we may not need this workaround at all in the\n * future.\n */\n// https://github.com/sqlite/sqlite-wasm/issues/62\n// @ts-expect-error Missing types.\nglobalThis.sqlite3ApiConfig = {\n    warn: constVoid,\n};\nexport const SqliteFactoryLive = Layer.effect(SqliteFactory, Effect.gen(function* () {\n    const nanoIdGenerator = yield* NanoIdGenerator;\n    const sqlite3Promise = sqlite3InitModule();\n    return SqliteFactory.of({\n        createSqlite: Effect.gen(function* () {\n            const channel = yield* Effect.flatMap(getLockName(\"SqliteBroadcastChannel\"), createSqliteBroadcastChannel);\n            /** Handle incoming messages for a tab without initialized Sqlite. */\n            channel.onMessage = (message) => {\n                switch (message._tag) {\n                    case \"Exec\": {\n                        execsBeforeSqliteInit = [...execsBeforeSqliteInit, message];\n                        break;\n                    }\n                    case \"ExecError\":\n                    case \"ExecSuccess\": {\n                        /**\n                         * Remove already handled exec so the other tabs will not process\n                         * it.\n                         */\n                        execsBeforeSqliteInit = Arr.filter(execsBeforeSqliteInit, (m) => m.id !== message.id);\n                        maybeCallCallback(message);\n                        break;\n                    }\n                    default:\n                        absurd(message);\n                }\n            };\n            /**\n             * We don't know which tab will be elected leader, and messages are\n             * dispatched before initialization, so we must store them.\n             */\n            let execsBeforeSqliteInit = [];\n            const maybeCallCallback = (message) => {\n                const callback = callbacks.get(message.id);\n                if (callback) {\n                    callback(message);\n                    callbacks.delete(message.id);\n                }\n            };\n            const callbacks = new Map();\n            const config = yield* Config;\n            const runtime = createRuntime(config);\n            Effect.logTrace(\"SqliteWeb connection lock request\")\n                .pipe(Effect.zipRight(getLockName(\"SqliteConnection\")), Effect.flatMap((lockName) => Effect.async((resume) => {\n                navigator.locks.request(lockName, () => \n                /**\n                 * This promise prevents other tabs from acquiring the lock\n                 * because it's never resolved or rejected. The next SQLite\n                 * instance is created when the previous lock is released (a\n                 * tab is reloaded or closed).\n                 */\n                new Promise(() => {\n                    resume(Effect.promise(() => sqlite3Promise));\n                }));\n            })), Effect.tap(Effect.logTrace(\"SqliteWeb connection lock granted\")), Effect.flatMap((sqlite3) => Effect.promise(() => sqlite3.installOpfsSAHPoolVfs({ name: config.name })).pipe(Effect.map((poolUtil) => ({\n                sqlite: new poolUtil.OpfsSAHPoolDb(\"/evolu1.db\"),\n                sqlite3,\n            })))), Effect.tap(({ sqlite, sqlite3 }) => {\n                const exec = (query, id) => Effect.try({\n                    try: () => {\n                        if (query.sql === exportDatabaseQuery.sql) {\n                            const file = sqlite3.capi.sqlite3_js_db_export(sqlite);\n                            return [{ file }];\n                        }\n                        return sqlite.exec(query.sql, {\n                            returnValue: \"resultRows\",\n                            rowMode: \"object\",\n                            bind: valuesToSqliteValues(query.parameters || []),\n                        });\n                    },\n                    catch: ensureTransferableError,\n                }).pipe(maybeLogSqliteQueryExecutionTime(query), Effect.match({\n                    onSuccess: (rows) => {\n                        channel.postMessage({\n                            _tag: \"ExecSuccess\",\n                            id,\n                            result: { rows, changes: sqlite.changes() },\n                        });\n                    },\n                    onFailure: (error) => {\n                        channel.postMessage({ _tag: \"ExecError\", id, error });\n                    },\n                }), runtime.runSync);\n                channel.onMessage = (message) => {\n                    switch (message._tag) {\n                        /** A tab was elected so it can start processing. */\n                        case \"Exec\":\n                            exec(message.query, message.id);\n                            break;\n                        case \"ExecSuccess\":\n                        case \"ExecError\":\n                            maybeCallCallback(message);\n                            break;\n                        default:\n                            absurd(message);\n                    }\n                };\n                /** Handle execs arrived before Sqlite was initialized. */\n                execsBeforeSqliteInit.forEach((message) => {\n                    exec(message.query, message.id);\n                });\n                execsBeforeSqliteInit = [];\n            }))\n                .pipe(Effect.provideService(Config, config), runtime.runPromise);\n            const transactionName = yield* getLockName(\"SqliteTransaction\");\n            return Sqlite.of({\n                exec: (query) => Effect.flatMap(nanoIdGenerator.nanoid, (id) => Effect.async((resume) => {\n                    callbacks.set(id, (message) => {\n                        switch (message._tag) {\n                            case \"ExecSuccess\":\n                                resume(Effect.succeed(message.result));\n                                break;\n                            case \"ExecError\":\n                                resume(Effect.die(message.error));\n                                break;\n                        }\n                    });\n                    channel.postMessage({ _tag: \"Exec\", id, query });\n                })),\n                transaction: (mode) => (effect) => Effect.acquireUseRelease(Effect.async((resume) => {\n                    navigator.locks.request(transactionName, { mode: mode === \"last\" ? \"exclusive\" : mode }, () => new Promise((resolve) => {\n                        resume(Effect.succeed(resolve));\n                    }));\n                }), () => effect, (resolve) => Effect.sync(() => {\n                    // Don't resolve the last transaction; otherwise, it won't be the last.\n                    if (mode !== \"last\")\n                        resolve();\n                })),\n                export: () => Effect.flatMap(nanoIdGenerator.nanoid, (id) => Effect.async((resume) => {\n                    callbacks.set(id, (message) => {\n                        switch (message._tag) {\n                            case \"ExecSuccess\":\n                                resume(Effect.succeed(message.result.rows[0].file));\n                                break;\n                            case \"ExecError\":\n                                resume(Effect.die(message.error));\n                                break;\n                        }\n                    });\n                    channel.postMessage({\n                        _tag: \"Exec\",\n                        id,\n                        query: exportDatabaseQuery,\n                    });\n                })),\n            });\n        }),\n    });\n}));\nconst createSqliteBroadcastChannel = (name) => Effect.sync(() => {\n    const channel = new BroadcastChannel(name);\n    const sqliteChannel = {\n        postMessage: (message) => {\n            channel.postMessage(message);\n            // Send to itself as well.\n            sqliteChannel.onMessage(message);\n        },\n        onMessage: constVoid,\n    };\n    channel.onmessage = (e) => {\n        sqliteChannel.onMessage(e.data);\n    };\n    return sqliteChannel;\n});\n// There is no such query; we are just hacking API to avoid refactoring.\nconst exportDatabaseQuery = {\n    sql: \"export database\",\n};\n","import { SqliteFactory, SyncFactory, Time, createDb, } from \"@evolu/common\";\nimport * as Effect from \"effect/Effect\";\nimport * as Layer from \"effect/Layer\";\nimport { NanoIdGeneratorLive } from \"./NanoIdGeneratorLive.js\";\nimport { SyncLockLive } from \"./PlatformLive.js\";\nimport { expose, wrap } from \"./ProxyWorker.js\";\nimport { SqliteFactoryLive } from \"./SqliteFactoryLive.js\";\nconst SyncFactoryLive = Layer.succeed(SyncFactory, {\n    createSync: Effect.sync(() => wrap(new Worker(new URL(\"Sync.worker.js\", import.meta.url), {\n        type: \"module\",\n    }))),\n});\ncreateDb.pipe(Effect.provide(Layer.mergeAll(SqliteFactory.Common.pipe(Layer.provide(SqliteFactoryLive), Layer.provide(NanoIdGeneratorLive)), NanoIdGeneratorLive, Time.Live, SyncFactoryLive, SyncLockLive)), Effect.runSync, expose);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [122,960,588], () => (__webpack_require__(751999)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = self.location + \"\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t999: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkstarpyapp\"] = self[\"webpackChunkstarpyapp\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([122,960,588].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["globalThis","sqlite3Worker1Promiser","callee","config","defaultConfig","arguments","length","f","Object","assign","create","onready","handlerMap","noop","err","onerror","debug","idTypeMap","generateMessageId","undefined","genMsgId","msg","type","toss","args","Error","join","dbId","promiserFunc","worker","onmessage","ev","data","msgHandler","messageId","result","onrow","onunhandled","reject","resolve","e","departureTime","performance","now","proxy","rowCallbackId","message","callback","p","Promise","postMessage","finally","Worker","URL","console","error","v2","oldFunc","promiseProxy","async","func","this","original","bind","self","sqlite3ApiConfig","warn","constVoid","SqliteFactoryLive","Layer","effect","Sqlite","SqliteFactory","Effect","gen","nanoIdGenerator","NanoIdGenerator","sqlite3Promise","of","createSqlite","channel","flatMap","getLockName","createSqliteBroadcastChannel","onMessage","_tag","execsBeforeSqliteInit","m","id","maybeCallCallback","absurd","callbacks","get","delete","Map","Config","runtime","createRuntime","logTrace","pipe","zipRight","lockName","resume","navigator","locks","request","promise","tap","sqlite3","installOpfsSAHPoolVfs","name","map","poolUtil","sqlite","OpfsSAHPoolDb","exec","query","try","sql","exportDatabaseQuery","file","capi","sqlite3_js_db_export","returnValue","rowMode","valuesToSqliteValues","parameters","catch","ensureTransferableError","maybeLogSqliteQueryExecutionTime","match","onSuccess","rows","changes","onFailure","runSync","forEach","provideService","runPromise","transactionName","nanoid","set","succeed","die","transaction","mode","acquireUseRelease","sync","export","BroadcastChannel","sqliteChannel","SyncFactoryLive","Sync","SyncFactory","createSync","wrap","createDb","provide","mergeAll","Common","NanoIdGeneratorLive","Time","Live","SyncLockLive","expose","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","x","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","chunkId","all","reduce","promises","u","miniCssF","g","Function","window","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","test","replace","b","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","push","moreModules","pop","next","then"],"sourceRoot":""}