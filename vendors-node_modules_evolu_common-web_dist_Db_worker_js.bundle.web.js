/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@evolu/common-web/dist/Db.worker.js":
/*!**********************************************************!*\
  !*** ./node_modules/@evolu/common-web/dist/Db.worker.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @evolu/common */ "./node_modules/@evolu/common/dist/src/Sync.js");
/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @evolu/common */ "./node_modules/@evolu/common/dist/src/Db.js");
/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @evolu/common */ "./node_modules/@evolu/common/dist/src/Sqlite.js");
/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @evolu/common */ "./node_modules/@evolu/common/dist/src/Crdt.js");
/* harmony import */ var effect_Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! effect/Effect */ "./node_modules/effect/dist/esm/Effect.js");
/* harmony import */ var effect_Layer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! effect/Layer */ "./node_modules/effect/dist/esm/Layer.js");
/* harmony import */ var _NanoIdGeneratorLive_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./NanoIdGeneratorLive.js */ "./node_modules/@evolu/common-web/dist/NanoIdGeneratorLive.js");
/* harmony import */ var _PlatformLive_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./PlatformLive.js */ "./node_modules/@evolu/common-web/dist/PlatformLive.js");
/* harmony import */ var _ProxyWorker_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ProxyWorker.js */ "./node_modules/@evolu/common-web/dist/ProxyWorker.js");
/* harmony import */ var _SqliteFactoryLive_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SqliteFactoryLive.js */ "./node_modules/@evolu/common-web/dist/SqliteFactoryLive.js");







const SyncFactoryLive = effect_Layer__WEBPACK_IMPORTED_MODULE_0__.succeed(_evolu_common__WEBPACK_IMPORTED_MODULE_1__.SyncFactory, {
    createSync: effect_Effect__WEBPACK_IMPORTED_MODULE_2__.sync(() => (0,_ProxyWorker_js__WEBPACK_IMPORTED_MODULE_3__.wrap)(new Worker(new URL(/* worker import */ __webpack_require__.p + __webpack_require__.u("node_modules_evolu_common-web_dist_Sync_worker_js"), __webpack_require__.b), {
        type: undefined,
    }))),
});
_evolu_common__WEBPACK_IMPORTED_MODULE_4__.createDb.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.provide(effect_Layer__WEBPACK_IMPORTED_MODULE_0__.mergeAll(_evolu_common__WEBPACK_IMPORTED_MODULE_5__.SqliteFactory.Common.pipe(effect_Layer__WEBPACK_IMPORTED_MODULE_0__.provide(_SqliteFactoryLive_js__WEBPACK_IMPORTED_MODULE_6__.SqliteFactoryLive), effect_Layer__WEBPACK_IMPORTED_MODULE_0__.provide(_NanoIdGeneratorLive_js__WEBPACK_IMPORTED_MODULE_7__.NanoIdGeneratorLive)), _NanoIdGeneratorLive_js__WEBPACK_IMPORTED_MODULE_7__.NanoIdGeneratorLive, _evolu_common__WEBPACK_IMPORTED_MODULE_8__.Time.Live, SyncFactoryLive, _PlatformLive_js__WEBPACK_IMPORTED_MODULE_9__.SyncLockLive)), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.runSync, _ProxyWorker_js__WEBPACK_IMPORTED_MODULE_3__.expose);


/***/ }),

/***/ "./node_modules/@evolu/common-web/dist/NanoIdGeneratorLive.js":
/*!********************************************************************!*\
  !*** ./node_modules/@evolu/common-web/dist/NanoIdGeneratorLive.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NanoIdGeneratorLive: () => (/* binding */ NanoIdGeneratorLive)
/* harmony export */ });
/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @evolu/common */ "./node_modules/@evolu/common/dist/src/Crypto.js");
/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! nanoid */ "./node_modules/nanoid/index.browser.js");


const NanoIdGeneratorLive = (0,_evolu_common__WEBPACK_IMPORTED_MODULE_0__.createNanoIdGeneratorLive)(nanoid__WEBPACK_IMPORTED_MODULE_1__.customAlphabet, nanoid__WEBPACK_IMPORTED_MODULE_1__.nanoid);


/***/ }),

/***/ "./node_modules/@evolu/common-web/dist/PlatformLive.js":
/*!*************************************************************!*\
  !*** ./node_modules/@evolu/common-web/dist/PlatformLive.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AppStateLive: () => (/* binding */ AppStateLive),
/* harmony export */   SyncLockLive: () => (/* binding */ SyncLockLive)
/* harmony export */ });
/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @evolu/common */ "./node_modules/@evolu/common/dist/src/Platform.js");
/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @evolu/common */ "./node_modules/@evolu/common/dist/src/Evolu.js");
/* harmony import */ var effect_Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! effect/Effect */ "./node_modules/effect/dist/esm/Effect.js");
/* harmony import */ var effect_Layer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! effect/Layer */ "./node_modules/effect/dist/esm/Layer.js");



const AppStateLive = effect_Layer__WEBPACK_IMPORTED_MODULE_0__.succeed(_evolu_common__WEBPACK_IMPORTED_MODULE_1__.AppState, {
    init: ({ reloadUrl, onRequestSync }) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.sync(() => {
        if (typeof document === "undefined") {
            return { reset: effect_Effect__WEBPACK_IMPORTED_MODULE_2__["void"] };
        }
        const localStorageKey = "evolu:reloadAllTabs";
        const replaceLocation = () => {
            location.replace(reloadUrl);
        };
        window.addEventListener("storage", (e) => {
            if (e.key === localStorageKey)
                replaceLocation();
        });
        let timer;
        const handleRequestSyncEvents = () => {
            if (timer != null)
                return;
            onRequestSync();
            timer = window.setTimeout(() => {
                timer = null;
            }, 50);
        };
        window.addEventListener("online", handleRequestSyncEvents);
        document.addEventListener("visibilitychange", () => {
            if (document.visibilityState !== "hidden")
                handleRequestSyncEvents();
        });
        window.addEventListener("focus", handleRequestSyncEvents);
        const reset = effect_Effect__WEBPACK_IMPORTED_MODULE_2__.sync(() => {
            localStorage.setItem(localStorageKey, Date.now().toString());
            replaceLocation();
        });
        return { reset };
    }),
});
const SyncLockLive = effect_Layer__WEBPACK_IMPORTED_MODULE_0__.succeed(_evolu_common__WEBPACK_IMPORTED_MODULE_1__.SyncLock, {
    tryAcquire: effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
        yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("SyncLock tryAcquire");
        const lockName = yield* (0,_evolu_common__WEBPACK_IMPORTED_MODULE_3__.getLockName)("SyncLock");
        const acquire = effect_Effect__WEBPACK_IMPORTED_MODULE_2__.async((resume) => {
            navigator.locks.request(lockName, { ifAvailable: true }, (lock) => {
                if (lock == null) {
                    effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("SyncLock not acquired").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.zipRight(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.fail(new _evolu_common__WEBPACK_IMPORTED_MODULE_1__.SyncLockAlreadySyncingError())), resume);
                    return;
                }
                return new Promise((resolve) => {
                    effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("SyncLock acquired").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.zipRight(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.succeed({
                        release: effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("SyncLock released").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.sync(resolve))),
                    })), resume);
                });
            });
        });
        const release = ({ release }) => release;
        return yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.acquireRelease(acquire, release);
    }),
});


/***/ }),

/***/ "./node_modules/@evolu/common-web/dist/SqliteFactoryLive.js":
/*!******************************************************************!*\
  !*** ./node_modules/@evolu/common-web/dist/SqliteFactoryLive.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SqliteFactoryLive: () => (/* binding */ SqliteFactoryLive)
/* harmony export */ });
/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @evolu/common */ "./node_modules/@evolu/common/dist/src/Sqlite.js");
/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @evolu/common */ "./node_modules/@evolu/common/dist/src/Crypto.js");
/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @evolu/common */ "./node_modules/@evolu/common/dist/src/Evolu.js");
/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @evolu/common */ "./node_modules/@evolu/common/dist/src/Config.js");
/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @evolu/common */ "./node_modules/@evolu/common/dist/src/Error.js");
/* harmony import */ var _sqlite_org_sqlite_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sqlite.org/sqlite-wasm */ "./node_modules/@sqlite.org/sqlite-wasm/index.mjs");
/* harmony import */ var effect_Array__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! effect/Array */ "./node_modules/effect/dist/esm/Array.js");
/* harmony import */ var effect_Effect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! effect/Effect */ "./node_modules/effect/dist/esm/Effect.js");
/* harmony import */ var effect_Function__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! effect/Function */ "./node_modules/effect/dist/esm/Function.js");
/* harmony import */ var effect_Layer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! effect/Layer */ "./node_modules/effect/dist/esm/Layer.js");






/**
 * "opfs-sahpool" does not support multiple simultaneous connections, and it can
 * be instantiated only within a web worker and only within one tab of the same
 * origin. We use Web Locks and BroadcastChannel to enable multiple tabs
 * functionality.
 *
 * - https://sqlite.org/wasm/doc/trunk/persistence.md
 *
 * There is a sophisticated workaround by the great rhashimoto:
 * https://github.com/rhashimoto/wa-sqlite/discussions/81
 *
 * I decided not to use it because we can't use SharedWorker in Chrome Android,
 * and I don't want to use ServiceWorker because it's slower and tricky.
 *
 * This implementation doesn't need SharedWorker or ServiceWorker and does not
 * use dedicated broadcast channels to keep code as simple as possible. Browsers
 * are updating OPFS rapidly, so we may not need this workaround at all in the
 * future.
 */
// https://github.com/sqlite/sqlite-wasm/issues/62
// @ts-expect-error Missing types.
globalThis.sqlite3ApiConfig = {
    warn: effect_Function__WEBPACK_IMPORTED_MODULE_1__.constVoid,
};
const SqliteFactoryLive = effect_Layer__WEBPACK_IMPORTED_MODULE_2__.effect(_evolu_common__WEBPACK_IMPORTED_MODULE_3__.SqliteFactory, effect_Effect__WEBPACK_IMPORTED_MODULE_4__.gen(function* () {
    const nanoIdGenerator = yield* _evolu_common__WEBPACK_IMPORTED_MODULE_5__.NanoIdGenerator;
    const sqlite3Promise = (0,_sqlite_org_sqlite_wasm__WEBPACK_IMPORTED_MODULE_0__["default"])();
    return _evolu_common__WEBPACK_IMPORTED_MODULE_3__.SqliteFactory.of({
        createSqlite: effect_Effect__WEBPACK_IMPORTED_MODULE_4__.gen(function* () {
            const channel = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_4__.flatMap((0,_evolu_common__WEBPACK_IMPORTED_MODULE_6__.getLockName)("SqliteBroadcastChannel"), createSqliteBroadcastChannel);
            /** Handle incoming messages for a tab without initialized Sqlite. */
            channel.onMessage = (message) => {
                switch (message._tag) {
                    case "Exec": {
                        execsBeforeSqliteInit = [...execsBeforeSqliteInit, message];
                        break;
                    }
                    case "ExecError":
                    case "ExecSuccess": {
                        /**
                         * Remove already handled exec so the other tabs will not process
                         * it.
                         */
                        execsBeforeSqliteInit = effect_Array__WEBPACK_IMPORTED_MODULE_7__.filter(execsBeforeSqliteInit, (m) => m.id !== message.id);
                        maybeCallCallback(message);
                        break;
                    }
                    default:
                        (0,effect_Function__WEBPACK_IMPORTED_MODULE_1__.absurd)(message);
                }
            };
            /**
             * We don't know which tab will be elected leader, and messages are
             * dispatched before initialization, so we must store them.
             */
            let execsBeforeSqliteInit = [];
            const maybeCallCallback = (message) => {
                const callback = callbacks.get(message.id);
                if (callback) {
                    callback(message);
                    callbacks.delete(message.id);
                }
            };
            const callbacks = new Map();
            const config = yield* _evolu_common__WEBPACK_IMPORTED_MODULE_8__.Config;
            const runtime = (0,_evolu_common__WEBPACK_IMPORTED_MODULE_8__.createRuntime)(config);
            effect_Effect__WEBPACK_IMPORTED_MODULE_4__.logTrace("SqliteWeb connection lock request")
                .pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_4__.zipRight((0,_evolu_common__WEBPACK_IMPORTED_MODULE_6__.getLockName)("SqliteConnection")), effect_Effect__WEBPACK_IMPORTED_MODULE_4__.flatMap((lockName) => effect_Effect__WEBPACK_IMPORTED_MODULE_4__.async((resume) => {
                navigator.locks.request(lockName, () => 
                /**
                 * This promise prevents other tabs from acquiring the lock
                 * because it's never resolved or rejected. The next SQLite
                 * instance is created when the previous lock is released (a
                 * tab is reloaded or closed).
                 */
                new Promise(() => {
                    resume(effect_Effect__WEBPACK_IMPORTED_MODULE_4__.promise(() => sqlite3Promise));
                }));
            })), effect_Effect__WEBPACK_IMPORTED_MODULE_4__.tap(effect_Effect__WEBPACK_IMPORTED_MODULE_4__.logTrace("SqliteWeb connection lock granted")), effect_Effect__WEBPACK_IMPORTED_MODULE_4__.flatMap((sqlite3) => effect_Effect__WEBPACK_IMPORTED_MODULE_4__.promise(() => sqlite3.installOpfsSAHPoolVfs({ name: config.name })).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_4__.map((poolUtil) => ({
                sqlite: new poolUtil.OpfsSAHPoolDb("/evolu1.db"),
                sqlite3,
            })))), effect_Effect__WEBPACK_IMPORTED_MODULE_4__.tap(({ sqlite, sqlite3 }) => {
                const exec = (query, id) => effect_Effect__WEBPACK_IMPORTED_MODULE_4__["try"]({
                    try: () => {
                        if (query.sql === exportDatabaseQuery.sql) {
                            const file = sqlite3.capi.sqlite3_js_db_export(sqlite);
                            return [{ file }];
                        }
                        return sqlite.exec(query.sql, {
                            returnValue: "resultRows",
                            rowMode: "object",
                            bind: (0,_evolu_common__WEBPACK_IMPORTED_MODULE_3__.valuesToSqliteValues)(query.parameters || []),
                        });
                    },
                    catch: _evolu_common__WEBPACK_IMPORTED_MODULE_9__.ensureTransferableError,
                }).pipe((0,_evolu_common__WEBPACK_IMPORTED_MODULE_3__.maybeLogSqliteQueryExecutionTime)(query), effect_Effect__WEBPACK_IMPORTED_MODULE_4__.match({
                    onSuccess: (rows) => {
                        channel.postMessage({
                            _tag: "ExecSuccess",
                            id,
                            result: { rows, changes: sqlite.changes() },
                        });
                    },
                    onFailure: (error) => {
                        channel.postMessage({ _tag: "ExecError", id, error });
                    },
                }), runtime.runSync);
                channel.onMessage = (message) => {
                    switch (message._tag) {
                        /** A tab was elected so it can start processing. */
                        case "Exec":
                            exec(message.query, message.id);
                            break;
                        case "ExecSuccess":
                        case "ExecError":
                            maybeCallCallback(message);
                            break;
                        default:
                            (0,effect_Function__WEBPACK_IMPORTED_MODULE_1__.absurd)(message);
                    }
                };
                /** Handle execs arrived before Sqlite was initialized. */
                execsBeforeSqliteInit.forEach((message) => {
                    exec(message.query, message.id);
                });
                execsBeforeSqliteInit = [];
            }))
                .pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_4__.provideService(_evolu_common__WEBPACK_IMPORTED_MODULE_8__.Config, config), runtime.runPromise);
            const transactionName = yield* (0,_evolu_common__WEBPACK_IMPORTED_MODULE_6__.getLockName)("SqliteTransaction");
            return _evolu_common__WEBPACK_IMPORTED_MODULE_3__.Sqlite.of({
                exec: (query) => effect_Effect__WEBPACK_IMPORTED_MODULE_4__.flatMap(nanoIdGenerator.nanoid, (id) => effect_Effect__WEBPACK_IMPORTED_MODULE_4__.async((resume) => {
                    callbacks.set(id, (message) => {
                        switch (message._tag) {
                            case "ExecSuccess":
                                resume(effect_Effect__WEBPACK_IMPORTED_MODULE_4__.succeed(message.result));
                                break;
                            case "ExecError":
                                resume(effect_Effect__WEBPACK_IMPORTED_MODULE_4__.die(message.error));
                                break;
                        }
                    });
                    channel.postMessage({ _tag: "Exec", id, query });
                })),
                transaction: (mode) => (effect) => effect_Effect__WEBPACK_IMPORTED_MODULE_4__.acquireUseRelease(effect_Effect__WEBPACK_IMPORTED_MODULE_4__.async((resume) => {
                    navigator.locks.request(transactionName, { mode: mode === "last" ? "exclusive" : mode }, () => new Promise((resolve) => {
                        resume(effect_Effect__WEBPACK_IMPORTED_MODULE_4__.succeed(resolve));
                    }));
                }), () => effect, (resolve) => effect_Effect__WEBPACK_IMPORTED_MODULE_4__.sync(() => {
                    // Don't resolve the last transaction; otherwise, it won't be the last.
                    if (mode !== "last")
                        resolve();
                })),
                export: () => effect_Effect__WEBPACK_IMPORTED_MODULE_4__.flatMap(nanoIdGenerator.nanoid, (id) => effect_Effect__WEBPACK_IMPORTED_MODULE_4__.async((resume) => {
                    callbacks.set(id, (message) => {
                        switch (message._tag) {
                            case "ExecSuccess":
                                resume(effect_Effect__WEBPACK_IMPORTED_MODULE_4__.succeed(message.result.rows[0].file));
                                break;
                            case "ExecError":
                                resume(effect_Effect__WEBPACK_IMPORTED_MODULE_4__.die(message.error));
                                break;
                        }
                    });
                    channel.postMessage({
                        _tag: "Exec",
                        id,
                        query: exportDatabaseQuery,
                    });
                })),
            });
        }),
    });
}));
const createSqliteBroadcastChannel = (name) => effect_Effect__WEBPACK_IMPORTED_MODULE_4__.sync(() => {
    const channel = new BroadcastChannel(name);
    const sqliteChannel = {
        postMessage: (message) => {
            channel.postMessage(message);
            // Send to itself as well.
            sqliteChannel.onMessage(message);
        },
        onMessage: effect_Function__WEBPACK_IMPORTED_MODULE_1__.constVoid,
    };
    channel.onmessage = (e) => {
        sqliteChannel.onMessage(e.data);
    };
    return sqliteChannel;
});
// There is no such query; we are just hacking API to avoid refactoring.
const exportDatabaseQuery = {
    sql: "export database",
};


/***/ }),

/***/ "./node_modules/@evolu/common/dist/src/Db.js":
/*!***************************************************!*\
  !*** ./node_modules/@evolu/common/dist/src/Db.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Callbacks: () => (/* binding */ Callbacks),
/* harmony export */   DbFactory: () => (/* binding */ DbFactory),
/* harmony export */   Index: () => (/* binding */ Index),
/* harmony export */   createDb: () => (/* binding */ createDb),
/* harmony export */   deserializeQuery: () => (/* binding */ deserializeQuery),
/* harmony export */   emptyRows: () => (/* binding */ emptyRows),
/* harmony export */   notSupportedPlatformWorker: () => (/* binding */ notSupportedPlatformWorker),
/* harmony export */   queryResultFromRows: () => (/* binding */ queryResultFromRows),
/* harmony export */   serializeQuery: () => (/* binding */ serializeQuery),
/* harmony export */   upsertValueIntoTableRowColumn: () => (/* binding */ upsertValueIntoTableRowColumn)
/* harmony export */ });
/* harmony import */ var _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @effect/schema/Schema */ "./node_modules/@effect/schema/dist/esm/Schema.js");
/* harmony import */ var _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @effect/schema/Schema */ "./node_modules/@effect/schema/dist/esm/ParseResult.js");
/* harmony import */ var effect_Array__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! effect/Array */ "./node_modules/effect/dist/esm/Array.js");
/* harmony import */ var effect_Console__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! effect/Console */ "./node_modules/effect/dist/esm/Console.js");
/* harmony import */ var effect_Context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! effect/Context */ "./node_modules/effect/dist/esm/Context.js");
/* harmony import */ var effect_Deferred__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! effect/Deferred */ "./node_modules/effect/dist/esm/Deferred.js");
/* harmony import */ var effect_Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! effect/Effect */ "./node_modules/effect/dist/esm/Effect.js");
/* harmony import */ var effect_Function__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! effect/Function */ "./node_modules/effect/dist/esm/Function.js");
/* harmony import */ var effect_Option__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! effect/Option */ "./node_modules/effect/dist/esm/Option.js");
/* harmony import */ var effect_Predicate__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! effect/Predicate */ "./node_modules/effect/dist/esm/Predicate.js");
/* harmony import */ var effect_Ref__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! effect/Ref */ "./node_modules/effect/dist/esm/Ref.js");
/* harmony import */ var effect_Schedule__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! effect/Schedule */ "./node_modules/effect/dist/esm/Schedule.js");
/* harmony import */ var effect_String__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! effect/String */ "./node_modules/effect/dist/esm/String.js");
/* harmony import */ var effect_SynchronizedRef__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! effect/SynchronizedRef */ "./node_modules/effect/dist/esm/SynchronizedRef.js");
/* harmony import */ var _Crdt_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Crdt.js */ "./node_modules/@evolu/common/dist/src/Crdt.js");
/* harmony import */ var _Crypto_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Crypto.js */ "./node_modules/@evolu/common/dist/src/Crypto.js");
/* harmony import */ var _Diff_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Diff.js */ "./node_modules/@evolu/common/dist/src/Diff.js");
/* harmony import */ var _Error_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./Error.js */ "./node_modules/@evolu/common/dist/src/Error.js");
/* harmony import */ var _Model_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./Model.js */ "./node_modules/@evolu/common/dist/src/Model.js");
/* harmony import */ var _Owner_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Owner.js */ "./node_modules/@evolu/common/dist/src/Owner.js");
/* harmony import */ var _Platform_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Platform.js */ "./node_modules/@evolu/common/dist/src/Platform.js");
/* harmony import */ var _Sql_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Sql.js */ "./node_modules/@evolu/common/dist/src/Sql.js");
/* harmony import */ var _Sqlite_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Sqlite.js */ "./node_modules/@evolu/common/dist/src/Sqlite.js");
/* harmony import */ var _Sync_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Sync.js */ "./node_modules/@evolu/common/dist/src/Sync.js");























const Index = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.Struct({
    name: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.String,
    sql: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.String,
});
class DbFactory extends effect_Context__WEBPACK_IMPORTED_MODULE_1__.Tag("DbFactory")() {
}
const createDb = effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
    const { createSqlite } = yield* _Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.SqliteFactory;
    const { createSync } = yield* _Sync_js__WEBPACK_IMPORTED_MODULE_4__.SyncFactory;
    const initContext = effect_Context__WEBPACK_IMPORTED_MODULE_1__.empty().pipe(effect_Context__WEBPACK_IMPORTED_MODULE_1__.add(_Crypto_js__WEBPACK_IMPORTED_MODULE_5__.NanoIdGenerator, yield* _Crypto_js__WEBPACK_IMPORTED_MODULE_5__.NanoIdGenerator), effect_Context__WEBPACK_IMPORTED_MODULE_1__.add(_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.Time, yield* _Crdt_js__WEBPACK_IMPORTED_MODULE_6__.Time), effect_Context__WEBPACK_IMPORTED_MODULE_1__.add(_Platform_js__WEBPACK_IMPORTED_MODULE_7__.SyncLock, yield* _Platform_js__WEBPACK_IMPORTED_MODULE_7__.SyncLock));
    const afterInitContext = yield* effect_Deferred__WEBPACK_IMPORTED_MODULE_8__.make();
    const afterInit = (options) => (effect) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(effect_Deferred__WEBPACK_IMPORTED_MODULE_8__["await"](afterInitContext), (context) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(_Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite, (sqlite) => sqlite.transaction(options.transaction)(effect)).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.provide(context)));
    const queryRowsRef = yield* effect_SynchronizedRef__WEBPACK_IMPORTED_MODULE_9__.make(new Map());
    const db = {
        init: (schema, initialData, onError, onSyncStateChange, onReceive, mnemonic) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
            yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logDebug(["Db init", { schema }]);
            const sqlite = yield* createSqlite;
            const contextWithSqlite = effect_Context__WEBPACK_IMPORTED_MODULE_1__.add(initContext, _Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite, sqlite);
            const owner = yield* getSchema.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(ensureSchema(schema)), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap((currentSchema) => {
                if (currentSchema.tables.map((t) => t.name).includes("evolu_owner"))
                    return readOwner;
                return createOwner(mnemonic).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(applyMutations(initialData)));
            }), sqlite.transaction("exclusive"), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.provide(contextWithSqlite));
            const sync = yield* createSync.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.provide(initContext));
            yield* sync.init(owner);
            effect_Deferred__WEBPACK_IMPORTED_MODULE_8__.unsafeDone(afterInitContext, effect_Effect__WEBPACK_IMPORTED_MODULE_2__.succeed(contextWithSqlite.pipe(effect_Context__WEBPACK_IMPORTED_MODULE_1__.add(_Owner_js__WEBPACK_IMPORTED_MODULE_10__.Owner, owner), effect_Context__WEBPACK_IMPORTED_MODULE_1__.add(_Sync_js__WEBPACK_IMPORTED_MODULE_4__.Sync, sync), effect_Context__WEBPACK_IMPORTED_MODULE_1__.add(Callbacks, { onError, onSyncStateChange, onReceive }))));
            return owner;
        }),
        loadQueries: (queries) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logDebug(["Db loadQueries", { queries }]).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.zipRight(loadQueries(queries, queryRowsRef)), afterInit({ transaction: "shared" })),
        mutate: (mutations, queriesToRefresh) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
            yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logDebug(["Db mutate", { mutations, queriesToRefresh }]);
            const time = yield* _Crdt_js__WEBPACK_IMPORTED_MODULE_6__.Time;
            const sqlite = yield* _Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite;
            const [toSyncMutations, localOnlyMutations] = effect_Array__WEBPACK_IMPORTED_MODULE_11__.partition(mutations, 
            /** Table name starting with '_' is local only (not synced). */
            (mutation) => mutation.table.startsWith("_"));
            for (const mutation of localOnlyMutations) {
                const isDeleteMutation = mutationToNewMessages(mutation).some(({ column, value }) => column === "isDeleted" && value === 1);
                if (isDeleteMutation) {
                    yield* sqlite.exec({
                        sql: `delete from "${mutation.table}" where "id" = ?;`,
                        parameters: [mutation.id],
                    });
                }
                else {
                    const messages = mutationToNewMessages(mutation);
                    for (const message of messages) {
                        const now = yield* time.now;
                        yield* upsertValueIntoTableRowColumn(message, messages, now);
                    }
                }
            }
            if (toSyncMutations.length > 0) {
                yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(applyMutations(toSyncMutations), forkSync);
            }
            return yield* loadQueries(queriesToRefresh, queryRowsRef);
        }).pipe(afterInit({ transaction: "exclusive" })),
        resetOwner: () => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("Db resetOwner").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(dropAllTables), afterInit({ transaction: "last" })),
        restoreOwner: (schema, mnemonic) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("Db restoreOwner").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(dropAllTables), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(getSchema, ensureSchema(schema))), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(createOwner(mnemonic)), afterInit({ transaction: "last" })),
        ensureSchema: (schema) => getSchema.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(ensureSchema(schema)), afterInit({ transaction: "exclusive" })),
        sync: (queriesToRefresh) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logDebug(["Db sync", { queriesToRefresh }]).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.zipRight(forkSync()), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.zipRight(loadQueries(queriesToRefresh, queryRowsRef)), afterInit({ transaction: "shared" })),
        exportDatabase: () => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("Db exportDatabase").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.zipRight(_Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap((sqlite) => sqlite.export()), afterInit({ transaction: "exclusive" })),
        // TODO:
        // dispose: () =>
        //   Effect.logTrace("Db dispose").pipe(
        //     Effect.tap(Scope.close(scope, Exit.succeed("Db disposed"))),
        //     afterInit({ transaction: "last" }),
        //   ),
    };
    return db;
});
const Callbacks = effect_Context__WEBPACK_IMPORTED_MODULE_1__.GenericTag("Callbacks");
const loadQueries = (queries, queryRowsRef) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
    const sqlite = yield* _Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite;
    const previousState = yield* effect_SynchronizedRef__WEBPACK_IMPORTED_MODULE_9__.getAndUpdateEffect(queryRowsRef, (previousState) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.forEach(queries, (query) => {
        const sqliteQuery = deserializeQuery(query);
        return sqlite.exec(sqliteQuery).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(maybeExplainQueryPlan(sqliteQuery)), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(({ rows }) => [query, rows]));
    }), (queriesRows) => new Map([...previousState, ...queriesRows])));
    const currentState = yield* effect_SynchronizedRef__WEBPACK_IMPORTED_MODULE_9__.get(queryRowsRef);
    return queries.map((query) => ({
        query,
        patches: (0,_Diff_js__WEBPACK_IMPORTED_MODULE_12__.makePatches)(previousState.get(query), currentState.get(query) || []),
    }));
});
const maybeExplainQueryPlan = (sqliteQuery) => {
    if (!sqliteQuery.options?.logExplainQueryPlan)
        return effect_Effect__WEBPACK_IMPORTED_MODULE_2__["void"];
    return _Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap((sqlite) => sqlite.exec({
        ...sqliteQuery,
        sql: `EXPLAIN QUERY PLAN ${sqliteQuery.sql}`,
    })), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(effect_Console__WEBPACK_IMPORTED_MODULE_13__.log("ExplainQueryPlan", sqliteQuery)), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(({ rows }) => effect_Console__WEBPACK_IMPORTED_MODULE_13__.log((0,_Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.drawSqliteQueryPlan)(rows))), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(effect_Function__WEBPACK_IMPORTED_MODULE_14__.constVoid));
};
const getSchema = effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* (_) {
    yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("Db getSchema");
    const sqlite = yield* _Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite;
    const tables = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(sqlite.exec({
        // https://til.simonwillison.net/sqlite/list-all-columns-in-a-database
        sql: `
select
  sqlite_master.name as tableName,
  table_info.name as columnName
from
  sqlite_master
  join pragma_table_info(sqlite_master.name) as table_info
    `.trim(),
    }), ({ rows }) => {
        const map = new Map();
        rows.forEach((row) => {
            const { tableName, columnName } = row;
            if (!map.has(tableName))
                map.set(tableName, []);
            map.get(tableName)?.push(columnName);
        });
        return globalThis.Array.from(map, ([name, columns]) => ({
            name,
            columns,
        }));
    });
    const indexes = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(sqlite.exec({
        sql: `
select
  name, sql
from
  sqlite_master
where
  type='index' and
  name not like 'sqlite_%' and
  name not like 'index_evolu_%'
`.trim(),
    }), (result) => effect_Array__WEBPACK_IMPORTED_MODULE_11__.map(result.rows, (row) => ({
        name: row.name,
        /**
         * SQLite returns "CREATE INDEX" for "create index" for some reason.
         * Other keywords remain unchanged. We have to normalize the casing
         * for `indexEquivalence` manually.
         */
        sql: row.sql.replace("CREATE INDEX", "create index"),
    })));
    return { tables, indexes };
});
const ensureSchema = (newSchema) => (currentSchema) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
    yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("Db ensureSchema");
    const sql = [];
    newSchema.tables.forEach((table) => {
        const currentTable = currentSchema.tables.find((t) => t.name === table.name);
        if (!currentTable) {
            sql.push(`
  create table ${table.name} (
    "id" text primary key,
    ${table.columns
                .filter((c) => c !== "id")
                // "A column with affinity BLOB does not prefer one storage class over another
                // and no attempt is made to coerce data from one storage class into another."
                // https://www.sqlite.org/datatype3.html
                .map((name) => `"${name}" blob`)
                .join(", ")}
  );`.trim());
        }
        else {
            effect_Array__WEBPACK_IMPORTED_MODULE_11__.differenceWith(effect_String__WEBPACK_IMPORTED_MODULE_15__.Equivalence)(table.columns, currentTable.columns).forEach((newColumn) => {
                sql.push(`alter table "${table.name}" add column "${newColumn}" blob;`);
            });
        }
    });
    // Remove old indexes.
    effect_Array__WEBPACK_IMPORTED_MODULE_11__.differenceWith(indexEquivalence)(currentSchema.indexes, effect_Array__WEBPACK_IMPORTED_MODULE_11__.intersectionWith(indexEquivalence)(currentSchema.indexes, newSchema.indexes)).forEach((indexToDrop) => {
        sql.push(`drop index "${indexToDrop.name}";`);
    });
    // Add new indexes.
    effect_Array__WEBPACK_IMPORTED_MODULE_11__.differenceWith(indexEquivalence)(newSchema.indexes, currentSchema.indexes).forEach((newIndex) => {
        sql.push(`${newIndex.sql};`);
    });
    if (sql.length > 0) {
        const sqlite = yield* _Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite;
        yield* sqlite.exec({ sql: sql.join("\n") });
    }
});
const indexEquivalence = (self, that) => self.name === that.name && self.sql === that.sql;
const readOwner = effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("Db readOwner").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.zipRight(_Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap((sqlite) => sqlite.exec(_Sql_js__WEBPACK_IMPORTED_MODULE_16__.selectOwner)), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(({ rows: [row] }) => ({
    id: row.id,
    mnemonic: row.mnemonic,
    encryptionKey: row.encryptionKey,
})));
const createOwner = (mnemonic) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("Db createOwner").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.zipRight(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.all([(0,_Owner_js__WEBPACK_IMPORTED_MODULE_10__.makeOwner)(mnemonic), _Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite, _Crdt_js__WEBPACK_IMPORTED_MODULE_6__.makeInitialTimestamp])), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(([owner, sqlite, initialTimestampString]) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.all([
    sqlite.exec(_Sql_js__WEBPACK_IMPORTED_MODULE_16__.createMessageTable),
    sqlite.exec(_Sql_js__WEBPACK_IMPORTED_MODULE_16__.createMessageTableIndex),
    sqlite.exec(_Sql_js__WEBPACK_IMPORTED_MODULE_16__.createOwnerTable),
    sqlite.exec({
        ..._Sql_js__WEBPACK_IMPORTED_MODULE_16__.insertOwner,
        parameters: [
            owner.id,
            owner.mnemonic,
            owner.encryptionKey,
            (0,_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.timestampToString)(initialTimestampString),
            (0,_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.merkleTreeToString)(_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.initialMerkleTree),
        ],
    }),
])), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(([owner]) => owner));
const applyMutations = (mutations) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* (_) {
    const { timestamp, merkleTree } = yield* readTimestampAndMerkleTree;
    const [nextTimestamp, messages] = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.mapAccum(mutations.flatMap(mutationToNewMessages), timestamp, (currentTimestamp, newMessage) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map((0,_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.sendTimestamp)(currentTimestamp), (nextTimestamp) => {
        const message = {
            ...newMessage,
            timestamp: (0,_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.timestampToString)(nextTimestamp),
        };
        return [nextTimestamp, message];
    }));
    const nextMerkleTree = yield* applyMessages(merkleTree, messages);
    yield* writeTimestampAndMerkleTree(nextTimestamp, nextMerkleTree);
    return messages;
});
const readTimestampAndMerkleTree = _Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap((sqlite) => sqlite.exec(_Sql_js__WEBPACK_IMPORTED_MODULE_16__.selectOwnerTimestampAndMerkleTree)), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(({ rows: [{ timestamp, merkleTree }] }) => ({
    timestamp: (0,_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.unsafeTimestampFromString)(timestamp),
    merkleTree: merkleTree,
})));
const mutationToNewMessages = (mutation) => (0,effect_Function__WEBPACK_IMPORTED_MODULE_14__.pipe)(Object.entries(mutation.values), effect_Array__WEBPACK_IMPORTED_MODULE_11__.filterMap(([column, value]) => 
// The value can be undefined if exactOptionalPropertyTypes isn't true.
// Don't insert nulls because null is the default value.
value === undefined || (mutation.isInsert && value == null)
    ? effect_Option__WEBPACK_IMPORTED_MODULE_17__.none()
    : effect_Option__WEBPACK_IMPORTED_MODULE_17__.some([column, value])), effect_Array__WEBPACK_IMPORTED_MODULE_11__.map(([column, value]) => ({
    table: mutation.table,
    row: mutation.id,
    column,
    value: typeof value === "boolean"
        ? (0,_Model_js__WEBPACK_IMPORTED_MODULE_18__.cast)(value)
        : value instanceof Date
            ? (0,_Model_js__WEBPACK_IMPORTED_MODULE_18__.cast)(value)
            : value,
})));
const applyMessages = (merkleTree, messages) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
    const sqlite = yield* _Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite;
    for (const message of messages) {
        const messageTimestamp = (0,_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.unsafeTimestampFromString)(message.timestamp);
        const lastTimestamp = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(sqlite.exec({
            ..._Sql_js__WEBPACK_IMPORTED_MODULE_16__.selectLastTimestampForTableRowColumn,
            parameters: [message.table, message.row, message.column, 1],
        }), ({ rows }) => rows.length > 0 ? rows[0].timestamp : null);
        if (lastTimestamp == null || lastTimestamp < message.timestamp) {
            yield* upsertValueIntoTableRowColumn(message, messages, messageTimestamp.millis);
        }
        if (lastTimestamp == null || lastTimestamp !== message.timestamp) {
            const { changes } = yield* sqlite.exec({
                ..._Sql_js__WEBPACK_IMPORTED_MODULE_16__.insertIntoMessagesIfNew,
                parameters: [
                    message.timestamp,
                    message.table,
                    message.row,
                    message.column,
                    message.value,
                ],
            });
            if (changes === 1)
                merkleTree = (0,_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.insertIntoMerkleTree)(merkleTree, messageTimestamp);
        }
    }
    return merkleTree;
});
const upsertValueIntoTableRowColumn = (message, messages, millis) => _Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map((sqlite) => {
    const now = (0,_Model_js__WEBPACK_IMPORTED_MODULE_18__.cast)(new Date(millis));
    return sqlite.exec({
        sql: `
    insert into
      "${message.table}" ("id", "${message.column}", "createdAt", "updatedAt")
    values
      (?, ?, ?, ?)
    on conflict do update set
      "${message.column}" = ?,
      "updatedAt" = ?
        `.trim(),
        parameters: [message.row, message.value, now, now, message.value, now],
    });
}), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap((insert) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.catchSomeDefect(insert, (error) => _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_19__.is(SqliteNoSuchTableOrColumnError)(error)
    ? effect_Option__WEBPACK_IMPORTED_MODULE_17__.some(
    // If one message fails, we ensure schema for all messages.
    ensureSchemaByNewMessages(messages).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.zipRight(insert)))
    : effect_Option__WEBPACK_IMPORTED_MODULE_17__.none())));
const SqliteNoSuchTableOrColumnError = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.Struct({
    message: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.Union(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.String.pipe(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.includes("no such table")), _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.String.pipe(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.includes("no such column")), _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.String.pipe(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.includes("has no column"))),
});
const ensureSchemaByNewMessages = (messages) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
    const tablesMap = new Map();
    messages.forEach((message) => {
        const table = tablesMap.get(message.table);
        if (table == null) {
            tablesMap.set(message.table, {
                name: message.table,
                columns: [message.column, "createdAt", "updatedAt"],
            });
            return;
        }
        if (table.columns.includes(message.column))
            return;
        tablesMap.set(message.table, {
            name: message.table,
            columns: table.columns.concat(message.column),
        });
    });
    const tables = effect_Array__WEBPACK_IMPORTED_MODULE_11__.fromIterable(tablesMap.values());
    yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(getSchema, ensureSchema({ tables, indexes: [] }));
});
const writeTimestampAndMerkleTree = (timestamp, merkleTree) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(_Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite, (sqlite) => sqlite.exec({
    ..._Sql_js__WEBPACK_IMPORTED_MODULE_16__.updateOwnerTimestampAndMerkleTree,
    parameters: [
        (0,_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.merkleTreeToString)(merkleTree),
        (0,_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.timestampToString)(timestamp),
    ],
}));
const dropAllTables = effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
    yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("Db dropAllTables");
    const sqlite = yield* _Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite;
    const schema = yield* getSchema;
    yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.forEach(schema.tables, (table) => 
    // The dropped table is completely removed from the database schema and
    // the disk file. The table can not be recovered.
    // All indices and triggers associated with the table are also deleted.
    // https://sqlite.org/lang_droptable.html
    sqlite.exec({ sql: `drop table "${table.name}"` }));
});
const forkSync = (messages = []) => _Platform_js__WEBPACK_IMPORTED_MODULE_7__.SyncLock.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap((syncLock) => syncLock.tryAcquire), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.matchEffect({
    onFailure: () => effect_Effect__WEBPACK_IMPORTED_MODULE_2__["void"],
    onSuccess: () => syncLoop(messages),
}), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.scoped, effect_Effect__WEBPACK_IMPORTED_MODULE_2__.forkDaemon);
const syncLoop = (messages = []) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* (_) {
    const sqlite = yield* _Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite;
    const sync = yield* _Sync_js__WEBPACK_IMPORTED_MODULE_4__.Sync;
    const callbacks = yield* Callbacks;
    const time = yield* _Crdt_js__WEBPACK_IMPORTED_MODULE_6__.Time;
    const syncDataRef = yield* readTimestampAndMerkleTree.pipe(sqlite.transaction("shared"), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map((a) => ({ ...a, messages })), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(effect_Ref__WEBPACK_IMPORTED_MODULE_20__.make));
    callbacks.onSyncStateChange({ _tag: "SyncStateIsSyncing" });
    yield* effect_Ref__WEBPACK_IMPORTED_MODULE_20__.get(syncDataRef).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(sync.sync), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(handleSyncResult), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.repeat({
        // TODO: Schedule.jittered(Schedule.exponential("10 millis"))
        schedule: effect_Schedule__WEBPACK_IMPORTED_MODULE_21__.recurs(50),
        until: effect_Option__WEBPACK_IMPORTED_MODULE_17__.match({
            onNone: () => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
                callbacks.onSyncStateChange({
                    _tag: "SyncStateIsSynced",
                    time: yield* time.now,
                });
                return true;
            }),
            onSome: (syncData) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
                yield* effect_Ref__WEBPACK_IMPORTED_MODULE_20__.set(syncDataRef, syncData);
                return false;
            }),
        }),
    }), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.catchAllDefect((error) => 
    // Db can run in a Web Worker, so we must ensure transferable error.
    effect_Effect__WEBPACK_IMPORTED_MODULE_2__.fail((0,_Error_js__WEBPACK_IMPORTED_MODULE_22__.makeUnexpectedError)((0,_Error_js__WEBPACK_IMPORTED_MODULE_22__.ensureTransferableError)(error)))), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.catchTag("SyncStateIsNotSynced", (state) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.succeed(callbacks.onSyncStateChange(state))), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.catchAll((error) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.succeed(callbacks.onError(error))));
});
const handleSyncResult = (result) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(_Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.Sqlite, (sqlite) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* (_) {
    const { onReceive } = yield* Callbacks;
    const current = yield* readTimestampAndMerkleTree;
    const nextTimestamp = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.reduce(result.messages, current.timestamp, (local, message) => (0,_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.receiveTimestamp)({
        local,
        remote: (0,_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.unsafeTimestampFromString)(message.timestamp),
    }));
    const nextMerkleTree = yield* applyMessages(current.merkleTree, result.messages);
    if (result.messages.length > 0) {
        yield* writeTimestampAndMerkleTree(nextTimestamp, nextMerkleTree);
        onReceive();
    }
    return yield* (0,_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.diffMerkleTrees)(result.merkleTree, nextMerkleTree).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap((diff) => sqlite.exec({
        ..._Sql_js__WEBPACK_IMPORTED_MODULE_16__.selectMessagesToSync,
        parameters: [(0,_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.timestampToString)((0,_Crdt_js__WEBPACK_IMPORTED_MODULE_6__.makeSyncTimestamp)(diff))],
    })), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(({ rows }) => ({
        messages: rows,
        merkleTree: nextMerkleTree,
        timestamp: nextTimestamp,
    })), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.option);
}).pipe(sqlite.transaction("exclusive")));
// We use queries as keys, hence JSON.stringify.
const serializeQuery = ({ sql, parameters = [], options, }) => {
    const query = {
        sql,
        parameters: parameters.map((p) => effect_Predicate__WEBPACK_IMPORTED_MODULE_23__.isUint8Array(p)
            ? effect_Array__WEBPACK_IMPORTED_MODULE_11__.fromIterable(p)
            : (0,_Sqlite_js__WEBPACK_IMPORTED_MODULE_3__.isJsonObjectOrArray)(p)
                ? { json: p }
                : p),
        ...(options && { options }),
    };
    return JSON.stringify(query);
};
const deserializeQuery = (query) => {
    const serializedSqliteQuery = JSON.parse(query);
    return {
        ...serializedSqliteQuery,
        parameters: serializedSqliteQuery.parameters.map((p) => effect_Array__WEBPACK_IMPORTED_MODULE_11__.isArray(p)
            ? new Uint8Array(p)
            : typeof p === "object" && p != null
                ? p.json
                : p),
    };
};
// To preserve identity.
const _emptyRows = [];
const emptyRows = () => _emptyRows;
// To preserve identity.
const queryResultCache = new WeakMap();
const queryResultFromRows = (rows) => {
    let queryResult = queryResultCache.get(rows);
    if (queryResult == null) {
        queryResult = { rows, row: rows[0] };
        queryResultCache.set(rows, queryResult);
    }
    return queryResult;
};
const notSupportedPlatformWorker = {
    init: () => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.fail({
        _tag: "NotSupportedPlatformError",
    }),
    loadQueries: () => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.succeed([]),
    mutate: () => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.succeed([]),
    resetOwner: () => effect_Effect__WEBPACK_IMPORTED_MODULE_2__["void"],
    restoreOwner: () => effect_Effect__WEBPACK_IMPORTED_MODULE_2__["void"],
    ensureSchema: () => effect_Effect__WEBPACK_IMPORTED_MODULE_2__["void"],
    sync: () => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.succeed([]),
    exportDatabase: () => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.succeed(new Uint8Array()),
};


/***/ }),

/***/ "./node_modules/@evolu/common/dist/src/Diff.js":
/*!*****************************************************!*\
  !*** ./node_modules/@evolu/common/dist/src/Diff.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   applyPatches: () => (/* binding */ applyPatches),
/* harmony export */   areEqual: () => (/* binding */ areEqual),
/* harmony export */   makePatches: () => (/* binding */ makePatches)
/* harmony export */ });
/* harmony import */ var effect_Array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! effect/Array */ "./node_modules/effect/dist/esm/Array.js");
/* harmony import */ var effect_Predicate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! effect/Predicate */ "./node_modules/effect/dist/esm/Predicate.js");


const applyPatches = (patches, current) => patches.reduce((next, patch) => {
    switch (patch.op) {
        case "replaceAll":
            return patch.value;
        case "replaceAt": {
            return effect_Array__WEBPACK_IMPORTED_MODULE_0__.replace(next, patch.index, patch.value);
        }
    }
}, current);
/**
 * We detect only changes in the whole result and in-place edits. In the future,
 * we will add more heuristics. We will probably not implement the Myers diff
 * algorithm because it's faster to rerender all than to compute many detailed
 * patches. We will only implement logic a developer would implement manually,
 * if necessary.
 */
const makePatches = (previousRows, nextRows) => {
    if (previousRows === undefined)
        return [{ op: "replaceAll", value: nextRows }];
    // TODO: Detect prepend and append, it's cheap.
    if (previousRows.length !== nextRows.length) {
        return [{ op: "replaceAll", value: nextRows }];
    }
    const length = previousRows.length;
    const replaceAtPatches = [];
    for (let i = 0; i < length; i++) {
        const previousRow = previousRows[i];
        const nextRow = nextRows[i];
        // We expect the same shape for both rows.
        for (const key in previousRow)
            if (!areEqual(previousRow[key], nextRow[key])) {
                replaceAtPatches.push({ op: "replaceAt", value: nextRow, index: i });
                break;
            }
    }
    if (length > 0 && replaceAtPatches.length === length) {
        return [{ op: "replaceAll", value: nextRows }];
    }
    return replaceAtPatches;
};
const areEqual = (a, b) => {
    // Compare string, number, null ASAP.
    if (a === b)
        return true;
    // Different type works only for string and number, everything else is an object.
    if (typeof a !== typeof b)
        return false;
    // Both are nonnullable objects.
    if (typeof a === "object" && a !== null && b !== null) {
        const aIsUint8Array = effect_Predicate__WEBPACK_IMPORTED_MODULE_1__.isUint8Array(a);
        const bIsUint8Array = effect_Predicate__WEBPACK_IMPORTED_MODULE_1__.isUint8Array(b);
        if (aIsUint8Array && bIsUint8Array) {
            if (a.length !== b.length)
                return false;
            for (let i = 0; i < a.length; i++)
                if (a[i] !== b[i])
                    return false;
            return true;
        }
        const aIsArray = effect_Array__WEBPACK_IMPORTED_MODULE_0__.isArray(a);
        const bIsArray = effect_Array__WEBPACK_IMPORTED_MODULE_0__.isArray(b);
        if (aIsArray && bIsArray) {
            if (a.length !== b.length)
                return false;
            for (let i = 0; i < a.length; i++)
                if (!areEqual(a[i], b[i]))
                    return false;
            return true;
        }
        if (!aIsUint8Array && !bIsUint8Array && !aIsArray && !bIsArray) {
            const aKeys = Object.keys(a);
            const bKeys = Object.keys(b);
            if (aKeys.length !== bKeys.length)
                return false;
            for (const key of aKeys)
                if (!areEqual(a[key], b[key]))
                    return false;
            return true;
        }
    }
    return false;
};


/***/ }),

/***/ "./node_modules/@evolu/common/dist/src/Evolu.js":
/*!******************************************************!*\
  !*** ./node_modules/@evolu/common/dist/src/Evolu.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EvoluFactory: () => (/* binding */ EvoluFactory),
/* harmony export */   createIndexes: () => (/* binding */ createIndexes),
/* harmony export */   getLockName: () => (/* binding */ getLockName)
/* harmony export */ });
/* harmony import */ var _effect_schema_AST__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @effect/schema/AST */ "./node_modules/@effect/schema/dist/esm/AST.js");
/* harmony import */ var _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @effect/schema/Schema */ "./node_modules/@effect/schema/dist/esm/Schema.js");
/* harmony import */ var effect_Array__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! effect/Array */ "./node_modules/effect/dist/esm/Array.js");
/* harmony import */ var effect_Context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! effect/Context */ "./node_modules/effect/dist/esm/Context.js");
/* harmony import */ var effect_Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! effect/Effect */ "./node_modules/effect/dist/esm/Effect.js");
/* harmony import */ var effect_Function__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! effect/Function */ "./node_modules/effect/dist/esm/Function.js");
/* harmony import */ var effect_Layer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! effect/Layer */ "./node_modules/effect/dist/esm/Layer.js");
/* harmony import */ var effect_Number__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! effect/Number */ "./node_modules/effect/dist/esm/Number.js");
/* harmony import */ var effect_Option__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! effect/Option */ "./node_modules/effect/dist/esm/Option.js");
/* harmony import */ var effect_Predicate__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! effect/Predicate */ "./node_modules/effect/dist/esm/Predicate.js");
/* harmony import */ var effect_Record__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! effect/Record */ "./node_modules/effect/dist/esm/Record.js");
/* harmony import */ var kysely__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! kysely */ "./node_modules/kysely/dist/esm/kysely.js");
/* harmony import */ var kysely__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! kysely */ "./node_modules/kysely/dist/esm/dialect/sqlite/sqlite-adapter.js");
/* harmony import */ var kysely__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! kysely */ "./node_modules/kysely/dist/esm/driver/dummy-driver.js");
/* harmony import */ var kysely__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! kysely */ "./node_modules/kysely/dist/esm/dialect/sqlite/sqlite-query-compiler.js");
/* harmony import */ var _Config_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Config.js */ "./node_modules/@evolu/common/dist/src/Config.js");
/* harmony import */ var _Crypto_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Crypto.js */ "./node_modules/@evolu/common/dist/src/Crypto.js");
/* harmony import */ var _Socket_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Socket.js */ "./node_modules/@evolu/common/dist/src/Socket.js");
/* harmony import */ var _Db_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Db.js */ "./node_modules/@evolu/common/dist/src/Db.js");
/* harmony import */ var _Diff_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./Diff.js */ "./node_modules/@evolu/common/dist/src/Diff.js");
/* harmony import */ var _Error_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Error.js */ "./node_modules/@evolu/common/dist/src/Error.js");
/* harmony import */ var _Platform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Platform.js */ "./node_modules/@evolu/common/dist/src/Platform.js");
/* harmony import */ var _Sqlite_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./Sqlite.js */ "./node_modules/@evolu/common/dist/src/Sqlite.js");
/* harmony import */ var _Store_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./Store.js */ "./node_modules/@evolu/common/dist/src/Store.js");
/* harmony import */ var _Sync_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Sync.js */ "./node_modules/@evolu/common/dist/src/Sync.js");






















class EvoluFactory extends effect_Context__WEBPACK_IMPORTED_MODULE_0__.Tag("EvoluFactory")() {
}
EvoluFactory.Common = effect_Layer__WEBPACK_IMPORTED_MODULE_1__.effect(EvoluFactory, effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
    const flushSync = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.serviceOption(_Platform_js__WEBPACK_IMPORTED_MODULE_3__.FlushSync), effect_Option__WEBPACK_IMPORTED_MODULE_4__.getOrElse(() => (callback) => callback()));
    const context = effect_Context__WEBPACK_IMPORTED_MODULE_0__.empty().pipe(effect_Context__WEBPACK_IMPORTED_MODULE_0__.add(_Db_js__WEBPACK_IMPORTED_MODULE_5__.DbFactory, yield* _Db_js__WEBPACK_IMPORTED_MODULE_5__.DbFactory), effect_Context__WEBPACK_IMPORTED_MODULE_0__.add(_Crypto_js__WEBPACK_IMPORTED_MODULE_6__.NanoIdGenerator, yield* _Crypto_js__WEBPACK_IMPORTED_MODULE_6__.NanoIdGenerator), effect_Context__WEBPACK_IMPORTED_MODULE_0__.add(_Platform_js__WEBPACK_IMPORTED_MODULE_3__.FlushSync, flushSync), effect_Context__WEBPACK_IMPORTED_MODULE_0__.add(_Platform_js__WEBPACK_IMPORTED_MODULE_3__.AppState, yield* _Platform_js__WEBPACK_IMPORTED_MODULE_3__.AppState));
    // For hot/live reloading and future Evolu dynamic import.
    const instances = new Map();
    return EvoluFactory.of({
        createEvolu: (schema, { indexes, initialData, mnemonic, ...config } = {}) => {
            const runtime = (0,_Config_js__WEBPACK_IMPORTED_MODULE_7__.createRuntime)(config);
            const name = config?.name || _Config_js__WEBPACK_IMPORTED_MODULE_7__.defaultConfig.name;
            const dbSchema = {
                tables: schemaToTables(schema),
                indexes: indexes || [],
            };
            let evolu = instances.get(name);
            if (evolu == null) {
                evolu = createEvolu(dbSchema, runtime, initialData, mnemonic).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.provide(context), runtime.runSync);
                instances.set(name, evolu);
            }
            else {
                evolu.ensureSchema(dbSchema);
            }
            return evolu;
        },
    });
}));
const schemaToTables = (schema) => (0,effect_Function__WEBPACK_IMPORTED_MODULE_8__.pipe)(getPropertySignatures(schema), effect_Record__WEBPACK_IMPORTED_MODULE_9__.toEntries, effect_Array__WEBPACK_IMPORTED_MODULE_10__.map(([name, schema]) => ({
    name,
    columns: Object.keys(getPropertySignatures(schema)),
})));
// TODO: Simplify.
// https://discord.com/channels/795981131316985866/1218626687546294386/1218796529725476935
const getPropertySignatures = (schema) => {
    const out = {};
    const propertySignatures = _effect_schema_AST__WEBPACK_IMPORTED_MODULE_11__.getPropertySignatures(schema.ast);
    for (let i = 0; i < propertySignatures.length; i++) {
        const propertySignature = propertySignatures[i];
        out[propertySignature.name] = (0,_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_12__.make)(propertySignature.type);
    }
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    return out;
};
const createEvolu = (schema, runtime, initialData, mnemonic) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
    yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("EvoluFactory createEvolu");
    const config = yield* _Config_js__WEBPACK_IMPORTED_MODULE_7__.Config;
    const dbFactory = yield* _Db_js__WEBPACK_IMPORTED_MODULE_5__.DbFactory;
    const appState = yield* _Platform_js__WEBPACK_IMPORTED_MODULE_3__.AppState;
    const nanoIdGenerator = yield* _Crypto_js__WEBPACK_IMPORTED_MODULE_6__.NanoIdGenerator;
    const flushSync = yield* _Platform_js__WEBPACK_IMPORTED_MODULE_3__.FlushSync;
    const db = yield* dbFactory.createDb;
    const errorStore = yield* (0,_Store_js__WEBPACK_IMPORTED_MODULE_13__.makeStore)(null);
    const ownerStore = yield* (0,_Store_js__WEBPACK_IMPORTED_MODULE_13__.makeStore)(null);
    const rowsStore = yield* (0,_Store_js__WEBPACK_IMPORTED_MODULE_13__.makeStore)(new Map());
    const syncStateStore = yield* (0,_Store_js__WEBPACK_IMPORTED_MODULE_13__.makeStore)(_Sync_js__WEBPACK_IMPORTED_MODULE_14__.initialSyncState);
    const loadingPromises = new Map();
    const subscribedQueries = new Map();
    const handleAllErrors = (effect) => effect.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.catchAllDefect((error) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.fail((0,_Error_js__WEBPACK_IMPORTED_MODULE_15__.makeUnexpectedError)(error))), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tapError(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logError), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tapError(errorStore.setState));
    const runFork = (0,effect_Function__WEBPACK_IMPORTED_MODULE_8__.flow)(handleAllErrors, runtime.runFork);
    const runSync = (0,effect_Function__WEBPACK_IMPORTED_MODULE_8__.flow)(handleAllErrors, runtime.runSync);
    const runPromise = (0,effect_Function__WEBPACK_IMPORTED_MODULE_8__.flow)(handleAllErrors, runtime.runPromise);
    const initialDataAsMutations = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.provideService(initialDataToMutations(initialData), _Crypto_js__WEBPACK_IMPORTED_MODULE_6__.NanoIdGenerator, nanoIdGenerator);
    const handleDbError = (error) => {
        effect_Effect__WEBPACK_IMPORTED_MODULE_2__.fail(error).pipe(runFork);
    };
    const handleSyncStateChange = (state) => {
        effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logDebug(["Evolu handleSyncStateChange", { state }]).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.zipRight(syncStateStore.setState(state)), runFork);
    };
    const handleDbReceive = () => {
        effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
            yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("Evolu handleDbReceive");
            releaseUnsubscribedLoadingPromises();
            const queries = [...subscribedQueries.keys()];
            if (queries.length > 0) {
                yield* effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(db.loadQueries(queries), handlePatches());
            }
        }).pipe(runFork);
    };
    const sync = ({ refreshQueries }) => () => {
        effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(db.sync(refreshQueries ? [...subscribedQueries.keys()] : []), handlePatches()).pipe(runFork);
    };
    db.init(schema, initialDataAsMutations, handleDbError, handleSyncStateChange, handleDbReceive, mnemonic).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(sync({ refreshQueries: false })), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(ownerStore.setState), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.catchTag("NotSupportedPlatformError", () => effect_Effect__WEBPACK_IMPORTED_MODULE_2__["void"]), // no-op
    runFork);
    let socketResolved = false;
    const socket = new Promise((resolve) => {
        ownerStore.subscribe(() => {
            const owner = ownerStore.getState();
            if (!socketResolved && typeof owner?.id === "string") {
                socketResolved = true;
                resolve((0,_Socket_js__WEBPACK_IMPORTED_MODULE_16__.createSocket)(sync, config, owner));
            }
        });
    });
    const appStateReset = yield* appState.init({
        onRequestSync: sync({ refreshQueries: true }),
        reloadUrl: config.reloadUrl,
    });
    const handlePatches = (options) => (patches) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logDebug(["Evolu handlePatches", { patches }]).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.zipRight(rowsStoreStateFromPatches(patches)), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap((nextState) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.forEach(patches, ({ query }) => resolveLoadingPromises(query, nextState.get(query) || (0,_Db_js__WEBPACK_IMPORTED_MODULE_5__.emptyRows)()))), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap((nextState) => {
        if (options?.flushSync) {
            flushSync(() => {
                rowsStore.setState(nextState).pipe(runSync);
            });
        }
        else {
            rowsStore.setState(nextState).pipe(runSync);
        }
    }));
    const rowsStoreStateFromPatches = (patches) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.sync(() => {
        const rowsStoreState = rowsStore.getState();
        if (patches.length === 0)
            return rowsStoreState;
        const queriesRows = effect_Array__WEBPACK_IMPORTED_MODULE_10__.map(patches, ({ query, patches }) => [
            query,
            (0,_Diff_js__WEBPACK_IMPORTED_MODULE_17__.applyPatches)(patches, rowsStoreState.get(query) || (0,_Db_js__WEBPACK_IMPORTED_MODULE_5__.emptyRows)()),
        ]);
        return new Map([...rowsStoreState, ...queriesRows]);
    });
    const resolveLoadingPromises = (query, rows) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.sync(() => {
        const loadingPromise = loadingPromises.get(query);
        if (!loadingPromise)
            return;
        const result = (0,_Db_js__WEBPACK_IMPORTED_MODULE_5__.queryResultFromRows)(rows);
        if (loadingPromise.promise.status !== "fulfilled") {
            loadingPromise.resolve(result);
        }
        else {
            // A promise can't be fulfilled 2x, so we need a new one.
            loadingPromise.promise = Promise.resolve(result);
        }
        /**
         * "For example, a data framework can set the status and value fields on
         * a promise preemptively, before passing to React, so that React can
         * unwrap it without waiting a microtask."
         * https://github.com/acdlite/rfcs/blob/first-class-promises/text/0000-first-class-support-for-promises.md
         */
        Object.assign(loadingPromise.promise, {
            status: "fulfilled",
            value: result,
        });
        if (loadingPromise.releaseOnResolve) {
            loadingPromises.delete(query);
        }
    });
    /**
     * We can't delete loading promises in `resolveLoadingPromises` because they
     * must be cached, so repeated calls to `loadQuery` will always return the
     * same promise until the data changes, and we also can't cache them forever
     * because only subscribed queries are automatically updated (reactivity is
     * expensive) hence this function must be called manually on any mutation.
     */
    const releaseUnsubscribedLoadingPromises = () => {
        [...loadingPromises.entries()]
            .filter(([query]) => !subscribedQueries.has(query))
            .forEach(([query, loadingPromise]) => {
            if (loadingPromise.promise.status === "fulfilled") {
                loadingPromises.delete(query);
            }
            else {
                loadingPromise.releaseOnResolve = true;
            }
        });
    };
    const mutate = (() => {
        let queue = [];
        return (table, { id, ...values }, onComplete) => {
            effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logDebug(["Evolu mutate", { table, id, values }]).pipe(runSync);
            const isInsert = id == null;
            if (isInsert)
                id = nanoIdGenerator.rowId.pipe(runSync);
            queue = [...queue, [{ table, id, values, isInsert }, onComplete]];
            if (queue.length === 1)
                queueMicrotask(() => {
                    const [mutations, onCompletes] = effect_Array__WEBPACK_IMPORTED_MODULE_10__.unzip(queue);
                    queue = [];
                    const onCompletesDef = onCompletes.filter(effect_Predicate__WEBPACK_IMPORTED_MODULE_18__.isNotUndefined);
                    releaseUnsubscribedLoadingPromises();
                    db.mutate(mutations, [...subscribedQueries.keys()]).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(handlePatches({ flushSync: onCompletesDef.length > 0 })), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(() => {
                        onCompletesDef.forEach((onComplete) => onComplete());
                    }), runFork);
                });
            return { id };
        };
    })();
    const evolu = {
        socket,
        subscribeError: errorStore.subscribe,
        getError: errorStore.getState,
        createQuery: (queryCallback, options) => (0,effect_Function__WEBPACK_IMPORTED_MODULE_8__.pipe)(queryCallback(kysely).compile(), (compiledQuery) => {
            if ((0,_Sqlite_js__WEBPACK_IMPORTED_MODULE_19__.isSqlMutation)(compiledQuery.sql))
                throw new Error("SQL mutation (INSERT, UPDATE, DELETE, etc.) isn't allowed in the Evolu `createQuery` function. Kysely suggests it because there is no read-only Kysely yet, and removing such an API is not possible. For mutations, use Evolu mutation API.");
            const parameters = compiledQuery.parameters;
            return {
                sql: compiledQuery.sql,
                parameters,
                ...(options && { options }),
            };
        }, (query) => (0,_Db_js__WEBPACK_IMPORTED_MODULE_5__.serializeQuery)(query)),
        loadQuery: (() => {
            let queue = [];
            return (query) => {
                effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logDebug([
                    "Evolu loadQuery",
                    { query: (0,_Db_js__WEBPACK_IMPORTED_MODULE_5__.deserializeQuery)(query) },
                ]).pipe(runSync);
                let loadingPromise = loadingPromises.get(query);
                if (!loadingPromise) {
                    let resolve = effect_Function__WEBPACK_IMPORTED_MODULE_8__.constVoid;
                    const promise = new Promise((_resolve) => {
                        resolve = _resolve;
                    });
                    loadingPromise = { resolve, promise, releaseOnResolve: false };
                    loadingPromises.set(query, loadingPromise);
                    queue = [...queue, query];
                    if (queue.length === 1) {
                        queueMicrotask(() => {
                            db.loadQueries(effect_Array__WEBPACK_IMPORTED_MODULE_10__.dedupe(queue)).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(handlePatches()), runFork);
                            queue = [];
                        });
                    }
                }
                return loadingPromise.promise;
            };
        })(),
        loadQueries: (queries) => queries.map(evolu.loadQuery),
        subscribeQuery: (query) => (listener) => {
            subscribedQueries.set(query, effect_Number__WEBPACK_IMPORTED_MODULE_20__.increment(subscribedQueries.get(query) ?? 0));
            const unsubscribe = rowsStore.subscribe(listener);
            return () => {
                const count = subscribedQueries.get(query);
                if (count != null && count > 1)
                    subscribedQueries.set(query, effect_Number__WEBPACK_IMPORTED_MODULE_20__.decrement(count));
                else
                    subscribedQueries.delete(query);
                unsubscribe();
            };
        },
        getQuery: (query) => (0,_Db_js__WEBPACK_IMPORTED_MODULE_5__.queryResultFromRows)(rowsStore.getState().get(query) || (0,_Db_js__WEBPACK_IMPORTED_MODULE_5__.emptyRows)()),
        subscribeOwner: ownerStore.subscribe,
        getOwner: ownerStore.getState,
        subscribeSyncState: syncStateStore.subscribe,
        getSyncState: syncStateStore.getState,
        create: mutate,
        update: mutate,
        createOrUpdate: mutate,
        resetOwner: (options) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
            yield* db.resetOwner();
            if (options?.reload !== false)
                yield* appStateReset.reset;
        }).pipe(runPromise),
        restoreOwner: (mnemonic, options) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* () {
            yield* db.restoreOwner(schema, mnemonic);
            if (options?.reload !== false)
                yield* appStateReset.reset;
        }).pipe(runPromise),
        reloadApp: () => {
            appStateReset.reset.pipe(runFork);
        },
        ensureSchema: (schema) => {
            db.ensureSchema(schema).pipe(runFork);
        },
        exportDatabase: () => db.exportDatabase().pipe(runPromise),
    };
    return evolu;
});
const initialDataToMutations = (initialData = effect_Function__WEBPACK_IMPORTED_MODULE_8__.constVoid) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(_Crypto_js__WEBPACK_IMPORTED_MODULE_6__.NanoIdGenerator, (nanoIdGenerator) => {
    const mutations = [];
    const mutate = (table, { id, ...values }) => {
        if (id == null)
            id = nanoIdGenerator.rowId.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.runSync);
        mutations.push({ isInsert: true, id, table: table, values });
        return { id };
    };
    const evolu = {
        create: mutate,
        createOrUpdate: mutate,
    };
    initialData(evolu);
    return mutations;
});
// https://kysely.dev/docs/recipes/splitting-query-building-and-execution
const kysely = new kysely__WEBPACK_IMPORTED_MODULE_21__.Kysely({
    dialect: {
        createAdapter: () => new kysely__WEBPACK_IMPORTED_MODULE_22__.SqliteAdapter(),
        createDriver: () => new kysely__WEBPACK_IMPORTED_MODULE_23__.DummyDriver(),
        createIntrospector() {
            throw "Not implemeneted";
        },
        createQueryCompiler: () => new kysely__WEBPACK_IMPORTED_MODULE_24__.SqliteQueryCompiler(),
    },
});
const createIndex = kysely.schema.createIndex.bind(kysely.schema);
/**
 * Create SQLite indexes.
 *
 * See https://www.evolu.dev/docs/indexes
 *
 * @example
 *   const indexes = createIndexes((create) => [
 *     create("indexTodoCreatedAt").on("todo").column("createdAt"),
 *     create("indexTodoCategoryCreatedAt")
 *       .on("todoCategory")
 *       .column("createdAt"),
 *   ]);
 */
const createIndexes = (callback) => callback(createIndex).map((index) => ({
    name: index.toOperationNode().name.name,
    sql: index.compile().sql,
}));
/** Create a namespaced lock name. */
const getLockName = (name) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(_Config_js__WEBPACK_IMPORTED_MODULE_7__.Config, (config) => `evolu:${config.name}:${name}`);


/***/ }),

/***/ "./node_modules/@evolu/common/dist/src/Model.js":
/*!******************************************************!*\
  !*** ./node_modules/@evolu/common/dist/src/Model.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Id: () => (/* binding */ Id),
/* harmony export */   NonEmptyString1000: () => (/* binding */ NonEmptyString1000),
/* harmony export */   PositiveInt: () => (/* binding */ PositiveInt),
/* harmony export */   SqliteBoolean: () => (/* binding */ SqliteBoolean),
/* harmony export */   SqliteDate: () => (/* binding */ SqliteDate),
/* harmony export */   String: () => (/* binding */ String),
/* harmony export */   String1000: () => (/* binding */ String1000),
/* harmony export */   cast: () => (/* binding */ cast),
/* harmony export */   database: () => (/* binding */ database),
/* harmony export */   id: () => (/* binding */ id),
/* harmony export */   table: () => (/* binding */ table)
/* harmony export */ });
/* harmony import */ var _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @effect/schema/Schema */ "./node_modules/@effect/schema/dist/esm/Schema.js");
/* harmony import */ var _Sqlite_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Sqlite.js */ "./node_modules/@evolu/common/dist/src/Sqlite.js");


/** Branded Id Schema. To create Id Schema for a specific table, use {@link id}. */
const Id = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.String.pipe(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.pattern(/^[\w-]{21}$/), _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.brand("Id"));
/**
 * A factory function to create {@link Id} Schema for a specific table.
 *
 * @example
 *   import * as S from "@effect/schema/Schema";
 *   import { id } from "@evolu/react";
 *
 *   const TodoId = id("Todo");
 *   type TodoId = typeof TodoId.Type;
 */
const id = (table) => Id.pipe(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.brand(table));
/**
 * SQLite doesn't support the Date type, so Evolu uses SqliteDate instead. Use
 * the {@link cast} helper to cast SqliteDate from Date and back.
 * https://www.sqlite.org/quirks.html#no_separate_datetime_datatype
 */
const SqliteDate = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.String.pipe(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.filter((s) => !isNaN(Date.parse(s))), _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.brand("SqliteDate"));
/**
 * SQLite doesn't support the boolean type, so Evolu uses SqliteBoolean instead.
 * Use the {@link cast} helper to cast SqliteBoolean from boolean and back.
 * https://www.sqlite.org/quirks.html#no_separate_boolean_datatype
 */
const SqliteBoolean = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.Number.pipe(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.int(), _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.filter((s) => s === 0 || s === 1), _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.brand("SqliteBoolean"));
function cast(value) {
    if (typeof value === "boolean")
        return (value === true ? 1 : 0);
    if (typeof value === "number")
        return value === 1;
    if (value instanceof Date)
        return value.toISOString();
    return new Date(value);
}
/**
 * Create table schema.
 *
 * Supported types are null, string, number, Uint8Array, JSON Object, and JSON
 * Array. Use SqliteDate for dates and SqliteBoolean for booleans.
 *
 * Reserved columns are createdAt, updatedAt, isDeleted. Those columns are added
 * by default.
 *
 * @example
 *   const TodoId = id("Todo");
 *   type TodoId = typeof TodoId.Type;
 *
 *   const TodoTable = table({
 *     id: TodoId,
 *     title: NonEmptyString1000,
 *     isCompleted: S.nullable(SqliteBoolean),
 *   });
 *   type TodoTable = typeof TodoTable.Type;
 */
const table = (fields) => _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.Struct(fields).pipe(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.extend(ReservedColumns));
const ReservedColumns = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.Struct({
    createdAt: SqliteDate,
    updatedAt: SqliteDate,
    isDeleted: SqliteBoolean,
});
/**
 * Create database schema.
 *
 * Tables with a name prefixed with _ are local-only, which means they are not
 * synced. Local-only tables are useful for device-specific or temporal data.
 *
 * @example
 *   const Database = database({
 *     // A local-only table.
 *     _todo: TodoTable,
 *     todo: TodoTable,
 *     todoCategory: TodoCategoryTable,
 *   });
 *   type Database = typeof Database.Type;
 */
const database = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.Struct;
/**
 * String schema represents a string that is not stringified JSON. Using String
 * schema for strings stored in SQLite is crucial to ensure a stored string is
 * not automatically parsed to a JSON object or array when retrieved. Use String
 * schema for all string-based schemas.
 */
const String = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.String.pipe(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.filter((s) => {
    if (!(0,_Sqlite_js__WEBPACK_IMPORTED_MODULE_1__.maybeJson)(s))
        return true;
    try {
        JSON.parse(s);
    }
    catch (e) {
        return true;
    }
    return false;
}, { message: () => "a string that is not stringified JSON" }), _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.brand("String"));
/**
 * A string with a maximum length of 1000 characters.
 *
 * @example
 *   import * as S from "@effect/schema/Schema";
 *   import { String1000 } from "@evolu/react";
 *
 *   S.decode(String1000)(value);
 */
const String1000 = String.pipe(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.maxLength(1000), _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.brand("String1000"));
/**
 * A nonempty string with a maximum length of 1000 characters.
 *
 * @example
 *   import * as S from "@effect/schema/Schema";
 *   import { NonEmptyString1000 } from "@evolu/react";
 *
 *   S.decode(NonEmptyString1000)(value);
 */
const NonEmptyString1000 = String.pipe(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.minLength(1), _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.maxLength(1000), _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.brand("NonEmptyString1000"));
/**
 * A positive integer.
 *
 * @example
 *   import * as S from "@effect/schema/Schema";
 *   import { PositiveInt } from "@evolu/react";
 *
 *   S.decode(PositiveInt)(value);
 */
const PositiveInt = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.Number.pipe(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.int(), _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.positive(), _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_0__.brand("PositiveInt"));


/***/ }),

/***/ "./node_modules/@evolu/common/dist/src/Platform.js":
/*!*********************************************************!*\
  !*** ./node_modules/@evolu/common/dist/src/Platform.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AppState: () => (/* binding */ AppState),
/* harmony export */   FlushSync: () => (/* binding */ FlushSync),
/* harmony export */   SyncLock: () => (/* binding */ SyncLock),
/* harmony export */   SyncLockAlreadySyncingError: () => (/* binding */ SyncLockAlreadySyncingError)
/* harmony export */ });
/* harmony import */ var effect_Context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! effect/Context */ "./node_modules/effect/dist/esm/Context.js");

const FlushSync = effect_Context__WEBPACK_IMPORTED_MODULE_0__.GenericTag("FlushSync");
class AppState extends effect_Context__WEBPACK_IMPORTED_MODULE_0__.Tag("AppState")() {
}
class SyncLock extends effect_Context__WEBPACK_IMPORTED_MODULE_0__.Tag("SyncLock")() {
}
class SyncLockAlreadySyncingError {
    constructor() {
        this._tag = "SyncLockAlreadySyncingError";
    }
}


/***/ }),

/***/ "./node_modules/@evolu/common/dist/src/Socket.js":
/*!*******************************************************!*\
  !*** ./node_modules/@evolu/common/dist/src/Socket.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createSocket: () => (/* binding */ createSocket)
/* harmony export */ });
let syncTimeout;
let lockTimeout;
let socketTimeout;
let isLocked = false;
const SocketTimeout = 3000;
const SyncTimeout = 500;
const SyncLockTimeout = 500;
let socket;
const processWebsocketEvent = (sync, event) => {
    if (typeof event.data === "string" || isLocked === true)
        return;
    clearTimeout(syncTimeout);
    syncTimeout = undefined;
    syncTimeout = setTimeout(() => {
        isLocked = true;
        sync({ refreshQueries: true })();
        clearTimeout(syncTimeout);
        clearTimeout(lockTimeout);
        lockTimeout = setTimeout(() => {
            isLocked = false;
        }, SyncLockTimeout);
    }, SyncTimeout);
};
const createSocket = (sync, config, owner) => {
    if (config.externalWebsocketConnection) {
        // Hook up to an external WebSocket connection
        config.externalWebsocketConnection.send(JSON.stringify({ message: "subscribe", channelId: owner.id }));
        config.externalWebsocketConnection.addEventListener("message", (event) => processWebsocketEvent(sync, event));
        return config.externalWebsocketConnection;
    }
    if (config.enableWebsocketConnection) {
        // Create a WebSocket connection
        socket = new WebSocket(config.syncUrl?.replace("http", "ws"));
        // Handle incoming WebSocket messages
        socket.addEventListener("message", (event) => processWebsocketEvent(sync, event));
        // Handle WebSocket errors
        socket.onerror = (error) => {
            // eslint-disable-next-line no-console
            console.error("WebSocket error:", error);
        };
        // Handle WebSocket closure
        socket.onclose = () => {
            socketTimeout = setTimeout(() => createSocket(sync, config, owner), SocketTimeout);
        };
        socket.onopen = () => {
            socket.send(JSON.stringify({ message: "subscribe", channelId: owner.id }));
            clearTimeout(socketTimeout);
        };
        return socket;
    }
};


/***/ }),

/***/ "./node_modules/@evolu/common/dist/src/Sql.js":
/*!****************************************************!*\
  !*** ./node_modules/@evolu/common/dist/src/Sql.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createMessageTable: () => (/* binding */ createMessageTable),
/* harmony export */   createMessageTableIndex: () => (/* binding */ createMessageTableIndex),
/* harmony export */   createOwnerTable: () => (/* binding */ createOwnerTable),
/* harmony export */   insertIntoMessagesIfNew: () => (/* binding */ insertIntoMessagesIfNew),
/* harmony export */   insertOwner: () => (/* binding */ insertOwner),
/* harmony export */   selectLastTimestampForTableRowColumn: () => (/* binding */ selectLastTimestampForTableRowColumn),
/* harmony export */   selectMessagesToSync: () => (/* binding */ selectMessagesToSync),
/* harmony export */   selectOwner: () => (/* binding */ selectOwner),
/* harmony export */   selectOwnerTimestampAndMerkleTree: () => (/* binding */ selectOwnerTimestampAndMerkleTree),
/* harmony export */   updateOwnerTimestampAndMerkleTree: () => (/* binding */ updateOwnerTimestampAndMerkleTree)
/* harmony export */ });
const selectOwner = {
    sql: `select "id", "mnemonic", "encryptionKey" from "evolu_owner"`,
};
const createMessageTable = {
    sql: `create table "evolu_message" ("timestamp" blob primary key, "table" blob, "row" blob, "column" blob, "value" blob)`,
};
const createMessageTableIndex = {
    sql: `create index "index_evolu_message" on "evolu_message" ("table", "row", "column", "timestamp" desc)`,
};
const createOwnerTable = {
    sql: `create table "evolu_owner" ("id" blob, "mnemonic" blob, "encryptionKey" blob, "timestamp" blob, "merkleTree" blob)`,
};
const insertOwner = {
    sql: `insert into "evolu_owner" ("id", "mnemonic", "encryptionKey", "timestamp", "merkleTree") values (?, ?, ?, ?, ?)`,
};
const selectOwnerTimestampAndMerkleTree = {
    sql: `select "timestamp", "merkleTree" from "evolu_owner"`,
};
const selectLastTimestampForTableRowColumn = {
    sql: `select "timestamp" from "evolu_message" where "table" = ? and "row" = ? and "column" = ? order by "timestamp" desc limit ?`,
};
const insertIntoMessagesIfNew = {
    sql: `insert into "evolu_message" ("timestamp", "table", "row", "column", "value") values (?, ?, ?, ?, ?) on conflict do nothing`,
};
const updateOwnerTimestampAndMerkleTree = {
    sql: `update "evolu_owner" set "merkleTree" = ?, "timestamp" = ?`,
};
const selectMessagesToSync = {
    sql: `select * from "evolu_message" where "timestamp" >= ? order by "timestamp"`,
};


/***/ }),

/***/ "./node_modules/@evolu/common/dist/src/Sqlite.js":
/*!*******************************************************!*\
  !*** ./node_modules/@evolu/common/dist/src/Sqlite.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Sqlite: () => (/* binding */ Sqlite),
/* harmony export */   SqliteFactory: () => (/* binding */ SqliteFactory),
/* harmony export */   drawSqliteQueryPlan: () => (/* binding */ drawSqliteQueryPlan),
/* harmony export */   isJsonObjectOrArray: () => (/* binding */ isJsonObjectOrArray),
/* harmony export */   isSqlMutation: () => (/* binding */ isSqlMutation),
/* harmony export */   maybeJson: () => (/* binding */ maybeJson),
/* harmony export */   maybeLogSqliteQueryExecutionTime: () => (/* binding */ maybeLogSqliteQueryExecutionTime),
/* harmony export */   maybeParseJson: () => (/* binding */ maybeParseJson),
/* harmony export */   valuesToSqliteValues: () => (/* binding */ valuesToSqliteValues)
/* harmony export */ });
/* harmony import */ var effect_Console__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! effect/Console */ "./node_modules/effect/dist/esm/Console.js");
/* harmony import */ var effect_Context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! effect/Context */ "./node_modules/effect/dist/esm/Context.js");
/* harmony import */ var effect_Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! effect/Effect */ "./node_modules/effect/dist/esm/Effect.js");
/* harmony import */ var effect_Exit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! effect/Exit */ "./node_modules/effect/dist/esm/Exit.js");
/* harmony import */ var effect_Layer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! effect/Layer */ "./node_modules/effect/dist/esm/Layer.js");
/* harmony import */ var effect_Predicate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! effect/Predicate */ "./node_modules/effect/dist/esm/Predicate.js");






const Sqlite = effect_Context__WEBPACK_IMPORTED_MODULE_0__.GenericTag("Sqlite");
class SqliteFactory extends effect_Context__WEBPACK_IMPORTED_MODULE_0__.Tag("SqliteFactory")() {
}
SqliteFactory.Common = effect_Layer__WEBPACK_IMPORTED_MODULE_1__.effect(SqliteFactory, effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(SqliteFactory, (platformSqliteFactory) => ({
    createSqlite: effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logTrace("SqliteFactory createSqlite").pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.zipRight(platformSqliteFactory.createSqlite), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map((platformSqlite) => ({
        ...platformSqlite,
        exec: (query) => platformSqlite.exec(query).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap((result) => {
            maybeParseJson(result.rows);
        }), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap((result) => ["begin", "rollback", "commit"].includes(query.sql)
            ? effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logDebug(`SQLiteCommon ${query.sql} transaction`)
            : effect_Effect__WEBPACK_IMPORTED_MODULE_2__.logDebug(["SQLiteCommon exec", query, result]))),
        transaction: (mode) => (effect) => {
            // Shared is for readonly queries.
            if (mode === "shared")
                return platformSqlite.transaction(mode)(effect);
            return effect_Effect__WEBPACK_IMPORTED_MODULE_2__.flatMap(Sqlite, (sqlite) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.acquireUseRelease(sqlite.exec({ sql: "begin" }), () => effect, (_, exit) => effect_Exit__WEBPACK_IMPORTED_MODULE_3__.isFailure(exit)
                ? sqlite.exec({ sql: "rollback" })
                : sqlite.exec({ sql: "commit" }))).pipe(platformSqlite.transaction(mode));
        },
    }))),
})));
const isJsonObjectOrArray = (value) => value !== null && typeof value === "object" && !effect_Predicate__WEBPACK_IMPORTED_MODULE_4__.isUint8Array(value);
const valuesToSqliteValues = (values) => values.map((value) => isJsonObjectOrArray(value) ? JSON.stringify(value) : value);
/** This function mutates for better performance. */
const maybeParseJson = (rows) => {
    parseArray(rows);
};
const parseArray = (a) => {
    for (let i = 0; i < a.length; ++i)
        a[i] = parse(a[i]);
    return a;
};
const parse = (o) => {
    if (effect_Predicate__WEBPACK_IMPORTED_MODULE_4__.isString(o))
        return parseString(o);
    // eslint-disable-next-line @typescript-eslint/no-unsafe-return
    if (Array.isArray(o))
        return parseArray(o);
    if (typeof o === "object" && o !== null && !effect_Predicate__WEBPACK_IMPORTED_MODULE_4__.isUint8Array(o))
        return parseObject(o);
    return o;
};
const parseString = (s) => {
    if (maybeJson(s))
        try {
            return parse(JSON.parse(s));
        }
        catch (err) {
            // Nothing to do.
        }
    return s;
};
const maybeJson = (value) => value.match(/^[[{]/) != null;
const parseObject = (o) => {
    for (const key in o)
        o[key] = parse(o[key]);
    return o;
};
/** This is good enough detection because SQL strings in Evolu are predictable. */
const isSqlMutationRegEx = new RegExp(`\\b(${[
    "alter",
    "create",
    "delete",
    "drop",
    "insert",
    "replace",
    "update",
].join("|")})\\b`);
const isSqlMutation = (sql) => isSqlMutationRegEx.test(sql);
const maybeLogSqliteQueryExecutionTime = (query) => (effect) => {
    if (!query.options?.logQueryExecutionTime)
        return effect;
    return effect_Effect__WEBPACK_IMPORTED_MODULE_2__.Do.pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__["let"]("start", () => performance.now()), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.bind("result", () => effect), effect_Effect__WEBPACK_IMPORTED_MODULE_2__["let"]("elapsed", ({ start }) => performance.now() - start), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.tap(({ elapsed }) => effect_Console__WEBPACK_IMPORTED_MODULE_5__.log(`QueryExecutionTime: ${elapsed}ms`, query)), effect_Effect__WEBPACK_IMPORTED_MODULE_2__.map(({ result }) => result));
};
const drawSqliteQueryPlan = (rows) => rows
    .map((row) => {
    let parentId = row.parent;
    let indent = 0;
    do {
        const parent = rows.find((r) => r.id === parentId);
        if (!parent)
            break;
        parentId = parent.parent;
        indent++;
        // eslint-disable-next-line no-constant-condition
    } while (true);
    return `${"  ".repeat(indent)}${row.detail}`;
})
    .join("\n");


/***/ }),

/***/ "./node_modules/@evolu/common/dist/src/Store.js":
/*!******************************************************!*\
  !*** ./node_modules/@evolu/common/dist/src/Store.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   makeStore: () => (/* binding */ makeStore)
/* harmony export */ });
/* harmony import */ var effect_Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! effect/Effect */ "./node_modules/effect/dist/esm/Effect.js");

const makeStore = (initialState) => effect_Effect__WEBPACK_IMPORTED_MODULE_0__.sync(() => {
    const listeners = new Set();
    let currentState = initialState;
    const store = {
        subscribe(listener) {
            listeners.add(listener);
            return () => {
                listeners.delete(listener);
            };
        },
        getState() {
            return currentState;
        },
        setState: (state) => effect_Effect__WEBPACK_IMPORTED_MODULE_0__.sync(() => {
            if (state === currentState)
                return;
            currentState = state;
            listeners.forEach((listener) => listener());
        }),
    };
    return store;
});


/***/ }),

/***/ "./node_modules/@sqlite.org/sqlite-wasm/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@sqlite.org/sqlite-wasm/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   sqlite3Worker1Promiser: () => (/* binding */ sqlite3Worker1Promiser)
/* harmony export */ });
/* harmony import */ var _sqlite_wasm_jswasm_sqlite3_bundler_friendly_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs */ "./node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs");
/* harmony import */ var _sqlite_wasm_jswasm_sqlite3_worker1_promiser_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs */ "./node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs");



const sqlite3Worker1Promiser = self.sqlite3Worker1Promiser;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_sqlite_wasm_jswasm_sqlite3_bundler_friendly_mjs__WEBPACK_IMPORTED_MODULE_0__["default"]);



/***/ }),

/***/ "./node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-promiser.mjs ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*
  2022-08-24

  The author disclaims copyright to this source code.  In place of a
  legal notice, here is a blessing:

  *   May you do good and not evil.
  *   May you find forgiveness for yourself and forgive others.
  *   May you share freely, never taking more than you give.

  ***********************************************************************

  This file implements a Promise-based proxy for the sqlite3 Worker
  API #1. It is intended to be included either from the main thread or
  a Worker, but only if (A) the environment supports nested Workers
  and (B) it's _not_ a Worker which loads the sqlite3 WASM/JS
  module. This file's features will load that module and provide a
  slightly simpler client-side interface than the slightly-lower-level
  Worker API does.

  This script necessarily exposes one global symbol, but clients may
  freely `delete` that symbol after calling it.
*/


globalThis.sqlite3Worker1Promiser = function callee(
  config = callee.defaultConfig,
) {
  if (1 === arguments.length && 'function' === typeof arguments[0]) {
    const f = config;
    config = Object.assign(Object.create(null), callee.defaultConfig);
    config.onready = f;
  } else {
    config = Object.assign(Object.create(null), callee.defaultConfig, config);
  }
  const handlerMap = Object.create(null);
  const noop = function () {};
  const err = config.onerror || noop;
  const debug = config.debug || noop;
  const idTypeMap = config.generateMessageId ? undefined : Object.create(null);
  const genMsgId =
    config.generateMessageId ||
    function (msg) {
      return (
        msg.type + '#' + (idTypeMap[msg.type] = (idTypeMap[msg.type] || 0) + 1)
      );
    };
  const toss = (...args) => {
    throw new Error(args.join(' '));
  };
  if (!config.worker) config.worker = callee.defaultConfig.worker;
  if ('function' === typeof config.worker) config.worker = config.worker();
  let dbId;
  let promiserFunc;
  config.worker.onmessage = function (ev) {
    ev = ev.data;
    debug('worker1.onmessage', ev);
    let msgHandler = handlerMap[ev.messageId];
    if (!msgHandler) {
      if (ev && 'sqlite3-api' === ev.type && 'worker1-ready' === ev.result) {
        if (config.onready) config.onready(promiserFunc);
        return;
      }
      msgHandler = handlerMap[ev.type];
      if (msgHandler && msgHandler.onrow) {
        msgHandler.onrow(ev);
        return;
      }
      if (config.onunhandled) config.onunhandled(arguments[0]);
      else err('sqlite3Worker1Promiser() unhandled worker message:', ev);
      return;
    }
    delete handlerMap[ev.messageId];
    switch (ev.type) {
      case 'error':
        msgHandler.reject(ev);
        return;
      case 'open':
        if (!dbId) dbId = ev.dbId;
        break;
      case 'close':
        if (ev.dbId === dbId) dbId = undefined;
        break;
      default:
        break;
    }
    try {
      msgHandler.resolve(ev);
    } catch (e) {
      msgHandler.reject(e);
    }
  };
  return (promiserFunc = function () {
    let msg;
    if (1 === arguments.length) {
      msg = arguments[0];
    } else if (2 === arguments.length) {
      msg = Object.create(null);
      msg.type = arguments[0];
      msg.args = arguments[1];
      msg.dbId = msg.args.dbId;
    } else {
      toss('Invalid arguments for sqlite3Worker1Promiser()-created factory.');
    }
    if (!msg.dbId && msg.type !== 'open') msg.dbId = dbId;
    msg.messageId = genMsgId(msg);
    msg.departureTime = performance.now();
    const proxy = Object.create(null);
    proxy.message = msg;
    let rowCallbackId;
    if ('exec' === msg.type && msg.args) {
      if ('function' === typeof msg.args.callback) {
        rowCallbackId = msg.messageId + ':row';
        proxy.onrow = msg.args.callback;
        msg.args.callback = rowCallbackId;
        handlerMap[rowCallbackId] = proxy;
      } else if ('string' === typeof msg.args.callback) {
        toss(
          'exec callback may not be a string when using the Promise interface.',
        );
      }
    }

    let p = new Promise(function (resolve, reject) {
      proxy.resolve = resolve;
      proxy.reject = reject;
      handlerMap[msg.messageId] = proxy;
      debug(
        'Posting',
        msg.type,
        'message to Worker dbId=' + (dbId || 'default') + ':',
        msg,
      );
      config.worker.postMessage(msg);
    });
    if (rowCallbackId) p = p.finally(() => delete handlerMap[rowCallbackId]);
    return p;
  });
};

globalThis.sqlite3Worker1Promiser.defaultConfig = {
  worker: function () {
    return new Worker(
      new URL(/* worker import */ __webpack_require__.p + __webpack_require__.u("node_modules_sqlite_org_sqlite-wasm_sqlite-wasm_jswasm_sqlite3-worker1-bundler-friendly_mjs"), __webpack_require__.b),
      {
        type: undefined,
      },
    );
  },
  onerror: (...args) => console.error('worker1 promiser error', ...args),
};

sqlite3Worker1Promiser.v2 = function (config) {
  let oldFunc;
  if ('function' == typeof config) {
    oldFunc = config;
    config = {};
  } else if ('function' === typeof config?.onready) {
    oldFunc = config.onready;
    delete config.onready;
  }
  const promiseProxy = Object.create(null);
  config = Object.assign(config || Object.create(null), {
    onready: async function (func) {
      try {
        if (oldFunc) await oldFunc(func);
        promiseProxy.resolve(func);
      } catch (e) {
        promiseProxy.reject(e);
      }
    },
  });
  const p = new Promise(function (resolve, reject) {
    promiseProxy.resolve = resolve;
    promiseProxy.reject = reject;
  });
  try {
    this.original(config);
  } catch (e) {
    promiseProxy.reject(e);
  }
  return p;
}.bind({
  original: sqlite3Worker1Promiser,
});

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sqlite3Worker1Promiser.v2);


/***/ }),

/***/ "./node_modules/effect/dist/esm/Console.js":
/*!*************************************************!*\
  !*** ./node_modules/effect/dist/esm/Console.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Console: () => (/* binding */ Console),
/* harmony export */   TypeId: () => (/* binding */ TypeId),
/* harmony export */   assert: () => (/* binding */ assert),
/* harmony export */   clear: () => (/* binding */ clear),
/* harmony export */   consoleWith: () => (/* binding */ consoleWith),
/* harmony export */   count: () => (/* binding */ count),
/* harmony export */   countReset: () => (/* binding */ countReset),
/* harmony export */   debug: () => (/* binding */ debug),
/* harmony export */   dir: () => (/* binding */ dir),
/* harmony export */   dirxml: () => (/* binding */ dirxml),
/* harmony export */   error: () => (/* binding */ error),
/* harmony export */   group: () => (/* binding */ group),
/* harmony export */   info: () => (/* binding */ info),
/* harmony export */   log: () => (/* binding */ log),
/* harmony export */   setConsole: () => (/* binding */ setConsole),
/* harmony export */   table: () => (/* binding */ table),
/* harmony export */   time: () => (/* binding */ time),
/* harmony export */   timeLog: () => (/* binding */ timeLog),
/* harmony export */   trace: () => (/* binding */ trace),
/* harmony export */   warn: () => (/* binding */ warn),
/* harmony export */   withConsole: () => (/* binding */ withConsole),
/* harmony export */   withGroup: () => (/* binding */ withGroup),
/* harmony export */   withTime: () => (/* binding */ withTime)
/* harmony export */ });
/* harmony import */ var _internal_console_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/console.js */ "./node_modules/effect/dist/esm/internal/console.js");
/* harmony import */ var _internal_defaultServices_console_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/defaultServices/console.js */ "./node_modules/effect/dist/esm/internal/defaultServices/console.js");


/**
 * @since 2.0.0
 * @category type ids
 */
const TypeId = _internal_defaultServices_console_js__WEBPACK_IMPORTED_MODULE_0__.TypeId;
/**
 * @since 2.0.0
 * @category context
 */
const Console = _internal_defaultServices_console_js__WEBPACK_IMPORTED_MODULE_0__.consoleTag;
/**
 * @since 2.0.0
 * @category default services
 */
const withConsole = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.withConsole;
/**
 * @since 2.0.0
 * @category default services
 */
const setConsole = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.setConsole;
/**
 * @since 2.0.0
 * @category accessor
 */
const consoleWith = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.consoleWith;
/**
 * @since 2.0.0
 * @category accessor
 */
const assert = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.assert;
/**
 * @since 2.0.0
 * @category accessor
 */
const clear = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.clear;
/**
 * @since 2.0.0
 * @category accessor
 */
const count = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.count;
/**
 * @since 2.0.0
 * @category accessor
 */
const countReset = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.countReset;
/**
 * @since 2.0.0
 * @category accessor
 */
const debug = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.debug;
/**
 * @since 2.0.0
 * @category accessor
 */
const dir = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.dir;
/**
 * @since 2.0.0
 * @category accessor
 */
const dirxml = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.dirxml;
/**
 * @since 2.0.0
 * @category accessor
 */
const error = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.error;
/**
 * @since 2.0.0
 * @category accessor
 */
const group = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.group;
/**
 * @since 2.0.0
 * @category accessor
 */
const info = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.info;
/**
 * @since 2.0.0
 * @category accessor
 */
const log = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.log;
/**
 * @since 2.0.0
 * @category accessor
 */
const table = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.table;
/**
 * @since 2.0.0
 * @category accessor
 */
const time = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.time;
/**
 * @since 2.0.0
 * @category accessor
 */
const timeLog = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.timeLog;
/**
 * @since 2.0.0
 * @category accessor
 */
const trace = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.trace;
/**
 * @since 2.0.0
 * @category accessor
 */
const warn = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.warn;
/**
 * @since 2.0.0
 * @category accessor
 */
const withGroup = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.withGroup;
/**
 * @since 2.0.0
 * @category accessor
 */
const withTime = _internal_console_js__WEBPACK_IMPORTED_MODULE_1__.withTime;
//# sourceMappingURL=Console.js.map

/***/ }),

/***/ "./node_modules/effect/dist/esm/SynchronizedRef.js":
/*!*********************************************************!*\
  !*** ./node_modules/effect/dist/esm/SynchronizedRef.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SynchronizedRefTypeId: () => (/* binding */ SynchronizedRefTypeId),
/* harmony export */   get: () => (/* binding */ get),
/* harmony export */   getAndSet: () => (/* binding */ getAndSet),
/* harmony export */   getAndUpdate: () => (/* binding */ getAndUpdate),
/* harmony export */   getAndUpdateEffect: () => (/* binding */ getAndUpdateEffect),
/* harmony export */   getAndUpdateSome: () => (/* binding */ getAndUpdateSome),
/* harmony export */   getAndUpdateSomeEffect: () => (/* binding */ getAndUpdateSomeEffect),
/* harmony export */   make: () => (/* binding */ make),
/* harmony export */   modify: () => (/* binding */ modify),
/* harmony export */   modifyEffect: () => (/* binding */ modifyEffect),
/* harmony export */   modifySome: () => (/* binding */ modifySome),
/* harmony export */   modifySomeEffect: () => (/* binding */ modifySomeEffect),
/* harmony export */   set: () => (/* binding */ set),
/* harmony export */   setAndGet: () => (/* binding */ setAndGet),
/* harmony export */   unsafeMake: () => (/* binding */ unsafeMake),
/* harmony export */   update: () => (/* binding */ update),
/* harmony export */   updateAndGet: () => (/* binding */ updateAndGet),
/* harmony export */   updateAndGetEffect: () => (/* binding */ updateAndGetEffect),
/* harmony export */   updateEffect: () => (/* binding */ updateEffect),
/* harmony export */   updateSome: () => (/* binding */ updateSome),
/* harmony export */   updateSomeAndGet: () => (/* binding */ updateSomeAndGet),
/* harmony export */   updateSomeAndGetEffect: () => (/* binding */ updateSomeAndGetEffect),
/* harmony export */   updateSomeEffect: () => (/* binding */ updateSomeEffect)
/* harmony export */ });
/* harmony import */ var _internal_effect_circular_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/effect/circular.js */ "./node_modules/effect/dist/esm/internal/effect/circular.js");
/* harmony import */ var _internal_ref_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/ref.js */ "./node_modules/effect/dist/esm/internal/ref.js");
/* harmony import */ var _internal_synchronizedRef_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/synchronizedRef.js */ "./node_modules/effect/dist/esm/internal/synchronizedRef.js");



/**
 * @since 2.0.0
 * @category symbols
 */
const SynchronizedRefTypeId = _internal_effect_circular_js__WEBPACK_IMPORTED_MODULE_0__.SynchronizedTypeId;
/**
 * @since 2.0.0
 * @category constructors
 */
const make = _internal_effect_circular_js__WEBPACK_IMPORTED_MODULE_0__.makeSynchronized;
/**
 * @since 2.0.0
 * @category getters
 */
const get = _internal_ref_js__WEBPACK_IMPORTED_MODULE_1__.get;
/**
 * @since 2.0.0
 * @category utils
 */
const getAndSet = _internal_ref_js__WEBPACK_IMPORTED_MODULE_1__.getAndSet;
/**
 * @since 2.0.0
 * @category utils
 */
const getAndUpdate = _internal_ref_js__WEBPACK_IMPORTED_MODULE_1__.getAndUpdate;
/**
 * @since 2.0.0
 * @category utils
 */
const getAndUpdateEffect = _internal_synchronizedRef_js__WEBPACK_IMPORTED_MODULE_2__.getAndUpdateEffect;
/**
 * @since 2.0.0
 * @category utils
 */
const getAndUpdateSome = _internal_ref_js__WEBPACK_IMPORTED_MODULE_1__.getAndUpdateSome;
/**
 * @since 2.0.0
 * @category utils
 */
const getAndUpdateSomeEffect = _internal_synchronizedRef_js__WEBPACK_IMPORTED_MODULE_2__.getAndUpdateSomeEffect;
/**
 * @since 2.0.0
 * @category utils
 */
const modify = _internal_synchronizedRef_js__WEBPACK_IMPORTED_MODULE_2__.modify;
/**
 * @since 2.0.0
 * @category utils
 */
const modifyEffect = _internal_synchronizedRef_js__WEBPACK_IMPORTED_MODULE_2__.modifyEffect;
/**
 * @since 2.0.0
 * @category utils
 */
const modifySome = _internal_ref_js__WEBPACK_IMPORTED_MODULE_1__.modifySome;
/**
 * @since 2.0.0
 * @category utils
 */
const modifySomeEffect = _internal_synchronizedRef_js__WEBPACK_IMPORTED_MODULE_2__.modifySomeEffect;
/**
 * @since 2.0.0
 * @category utils
 */
const set = _internal_ref_js__WEBPACK_IMPORTED_MODULE_1__.set;
/**
 * @since 2.0.0
 * @category utils
 */
const setAndGet = _internal_ref_js__WEBPACK_IMPORTED_MODULE_1__.setAndGet;
/**
 * @since 2.0.0
 * @category utils
 */
const update = _internal_ref_js__WEBPACK_IMPORTED_MODULE_1__.update;
/**
 * @since 2.0.0
 * @category utils
 */
const updateEffect = _internal_synchronizedRef_js__WEBPACK_IMPORTED_MODULE_2__.updateEffect;
/**
 * @since 2.0.0
 * @category utils
 */
const updateAndGet = _internal_ref_js__WEBPACK_IMPORTED_MODULE_1__.updateAndGet;
/**
 * @since 2.0.0
 * @category utils
 */
const updateAndGetEffect = _internal_synchronizedRef_js__WEBPACK_IMPORTED_MODULE_2__.updateAndGetEffect;
/**
 * @since 2.0.0
 * @category utils
 */
const updateSome = _internal_ref_js__WEBPACK_IMPORTED_MODULE_1__.updateSome;
/**
 * @since 2.0.0
 * @category utils
 */
const updateSomeEffect = _internal_synchronizedRef_js__WEBPACK_IMPORTED_MODULE_2__.updateSomeEffect;
/**
 * @since 2.0.0
 * @category utils
 */
const updateSomeAndGet = _internal_ref_js__WEBPACK_IMPORTED_MODULE_1__.updateSomeAndGet;
/**
 * @since 2.0.0
 * @category utils
 */
const updateSomeAndGetEffect = _internal_effect_circular_js__WEBPACK_IMPORTED_MODULE_0__.updateSomeAndGetEffectSynchronized;
/**
 * @since 2.0.0
 * @category unsafe
 */
const unsafeMake = _internal_effect_circular_js__WEBPACK_IMPORTED_MODULE_0__.unsafeMakeSynchronized;
//# sourceMappingURL=SynchronizedRef.js.map

/***/ }),

/***/ "./node_modules/kysely/dist/esm/dialect/dialect-adapter-base.js":
/*!**********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/dialect/dialect-adapter-base.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DialectAdapterBase: () => (/* binding */ DialectAdapterBase)
/* harmony export */ });
/// <reference types="./dialect-adapter-base.d.ts" />
/**
 * A basic implementation of `DialectAdapter` with sensible default values.
 * 3rd party dialects can extend this instead of implementing the `DialectAdapter`
 * interface from scratch. That way all new settings will get default values when
 * they are added and there will be less breaking changes.
 */
class DialectAdapterBase {
    get supportsCreateIfNotExists() {
        return true;
    }
    get supportsTransactionalDdl() {
        return false;
    }
    get supportsReturning() {
        return false;
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/dialect/sqlite/sqlite-adapter.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/dialect/sqlite/sqlite-adapter.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SqliteAdapter: () => (/* binding */ SqliteAdapter)
/* harmony export */ });
/* harmony import */ var _dialect_adapter_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dialect-adapter-base.js */ "./node_modules/kysely/dist/esm/dialect/dialect-adapter-base.js");
/// <reference types="./sqlite-adapter.d.ts" />

class SqliteAdapter extends _dialect_adapter_base_js__WEBPACK_IMPORTED_MODULE_0__.DialectAdapterBase {
    get supportsTransactionalDdl() {
        return false;
    }
    get supportsReturning() {
        return true;
    }
    async acquireMigrationLock(_db, _opt) {
        // SQLite only has one connection that's reserved by the migration system
        // for the whole time between acquireMigrationLock and releaseMigrationLock.
        // We don't need to do anything here.
    }
    async releaseMigrationLock(_db, _opt) {
        // SQLite only has one connection that's reserved by the migration system
        // for the whole time between acquireMigrationLock and releaseMigrationLock.
        // We don't need to do anything here.
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/dialect/sqlite/sqlite-query-compiler.js":
/*!******************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/dialect/sqlite/sqlite-query-compiler.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SqliteQueryCompiler: () => (/* binding */ SqliteQueryCompiler)
/* harmony export */ });
/* harmony import */ var _query_compiler_default_query_compiler_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../query-compiler/default-query-compiler.js */ "./node_modules/kysely/dist/esm/query-compiler/default-query-compiler.js");
/// <reference types="./sqlite-query-compiler.d.ts" />

const ID_WRAP_REGEX = /"/g;
class SqliteQueryCompiler extends _query_compiler_default_query_compiler_js__WEBPACK_IMPORTED_MODULE_0__.DefaultQueryCompiler {
    getCurrentParameterPlaceholder() {
        return '?';
    }
    getLeftExplainOptionsWrapper() {
        return '';
    }
    getRightExplainOptionsWrapper() {
        return '';
    }
    getLeftIdentifierWrapper() {
        return '"';
    }
    getRightIdentifierWrapper() {
        return '"';
    }
    getAutoIncrement() {
        return 'autoincrement';
    }
    sanitizeIdentifier(identifier) {
        return identifier.replace(ID_WRAP_REGEX, '""');
    }
    visitDefaultInsertValue(_) {
        // sqlite doesn't support the `default` keyword in inserts.
        this.append('null');
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/driver/default-connection-provider.js":
/*!****************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/driver/default-connection-provider.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DefaultConnectionProvider: () => (/* binding */ DefaultConnectionProvider)
/* harmony export */ });
/// <reference types="./default-connection-provider.d.ts" />
class DefaultConnectionProvider {
    #driver;
    constructor(driver) {
        this.#driver = driver;
    }
    async provideConnection(consumer) {
        const connection = await this.#driver.acquireConnection();
        try {
            return await consumer(connection);
        }
        finally {
            await this.#driver.releaseConnection(connection);
        }
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/driver/driver.js":
/*!*******************************************************!*\
  !*** ./node_modules/kysely/dist/esm/driver/driver.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TRANSACTION_ISOLATION_LEVELS: () => (/* binding */ TRANSACTION_ISOLATION_LEVELS)
/* harmony export */ });
/// <reference types="./driver.d.ts" />
const TRANSACTION_ISOLATION_LEVELS = [
    'read uncommitted',
    'read committed',
    'repeatable read',
    'serializable',
    'snapshot',
];


/***/ }),

/***/ "./node_modules/kysely/dist/esm/driver/dummy-driver.js":
/*!*************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/driver/dummy-driver.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DummyDriver: () => (/* binding */ DummyDriver)
/* harmony export */ });
/// <reference types="./dummy-driver.d.ts" />
/**
 * A driver that does absolutely nothing.
 *
 * You can use this to create Kysely instances solely for building queries
 *
 * ### Examples
 *
 * This example creates a Kysely instance for building postgres queries:
 *
 * ```ts
 * const db = new Kysely<Database>({
 *   dialect: {
 *     createAdapter() {
 *       return new PostgresAdapter()
 *     },
 *     createDriver() {
 *       return new DummyDriver()
 *     },
 *     createIntrospector(db: Kysely<any>) {
 *       return new PostgresIntrospector(db)
 *     },
 *     createQueryCompiler() {
 *       return new PostgresQueryCompiler()
 *     },
 *   },
 * })
 * ```
 *
 * You can use it to build a query and compile it to SQL but trying to
 * execute the query will throw an error.
 *
 * ```ts
 * const { sql } = db.selectFrom('person').selectAll().compile()
 * console.log(sql) // select * from "person"
 * ```
 */
class DummyDriver {
    async init() {
        // Nothing to do here.
    }
    async acquireConnection() {
        return new DummyConnection();
    }
    async beginTransaction() {
        // Nothing to do here.
    }
    async commitTransaction() {
        // Nothing to do here.
    }
    async rollbackTransaction() {
        // Nothing to do here.
    }
    async releaseConnection() {
        // Nothing to do here.
    }
    async destroy() {
        // Nothing to do here.
    }
}
class DummyConnection {
    async executeQuery() {
        return {
            rows: [],
        };
    }
    async *streamQuery() {
        // Nothing to do here.
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/driver/runtime-driver.js":
/*!***************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/driver/runtime-driver.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RuntimeDriver: () => (/* binding */ RuntimeDriver)
/* harmony export */ });
/* harmony import */ var _util_performance_now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/performance-now.js */ "./node_modules/kysely/dist/esm/util/performance-now.js");
/// <reference types="./runtime-driver.d.ts" />

/**
 * A small wrapper around {@link Driver} that makes sure the driver is
 * initialized before it is used, only initialized and destroyed
 * once etc.
 */
class RuntimeDriver {
    #driver;
    #log;
    #initPromise;
    #initDone;
    #destroyPromise;
    #connections = new WeakSet();
    constructor(driver, log) {
        this.#initDone = false;
        this.#driver = driver;
        this.#log = log;
    }
    async init() {
        if (this.#destroyPromise) {
            throw new Error('driver has already been destroyed');
        }
        if (!this.#initPromise) {
            this.#initPromise = this.#driver
                .init()
                .then(() => {
                this.#initDone = true;
            })
                .catch((err) => {
                this.#initPromise = undefined;
                return Promise.reject(err);
            });
        }
        await this.#initPromise;
    }
    async acquireConnection() {
        if (this.#destroyPromise) {
            throw new Error('driver has already been destroyed');
        }
        if (!this.#initDone) {
            await this.init();
        }
        const connection = await this.#driver.acquireConnection();
        if (!this.#connections.has(connection)) {
            if (this.#needsLogging()) {
                this.#addLogging(connection);
            }
            this.#connections.add(connection);
        }
        return connection;
    }
    async releaseConnection(connection) {
        await this.#driver.releaseConnection(connection);
    }
    beginTransaction(connection, settings) {
        return this.#driver.beginTransaction(connection, settings);
    }
    commitTransaction(connection) {
        return this.#driver.commitTransaction(connection);
    }
    rollbackTransaction(connection) {
        return this.#driver.rollbackTransaction(connection);
    }
    async destroy() {
        if (!this.#initPromise) {
            return;
        }
        await this.#initPromise;
        if (!this.#destroyPromise) {
            this.#destroyPromise = this.#driver.destroy().catch((err) => {
                this.#destroyPromise = undefined;
                return Promise.reject(err);
            });
        }
        await this.#destroyPromise;
    }
    #needsLogging() {
        return (this.#log.isLevelEnabled('query') || this.#log.isLevelEnabled('error'));
    }
    // This method monkey patches the database connection's executeQuery method
    // by adding logging code around it. Monkey patching is not pretty, but it's
    // the best option in this case.
    #addLogging(connection) {
        const executeQuery = connection.executeQuery;
        connection.executeQuery = async (compiledQuery) => {
            let caughtError;
            const startTime = (0,_util_performance_now_js__WEBPACK_IMPORTED_MODULE_0__.performanceNow)();
            try {
                return await executeQuery.call(connection, compiledQuery);
            }
            catch (error) {
                caughtError = error;
                await this.#logError(error, compiledQuery, startTime);
                throw error;
            }
            finally {
                if (!caughtError) {
                    await this.#logQuery(compiledQuery, startTime);
                }
            }
        };
    }
    async #logError(error, compiledQuery, startTime) {
        await this.#log.error(() => ({
            level: 'error',
            error,
            query: compiledQuery,
            queryDurationMillis: this.#calculateDurationMillis(startTime),
        }));
    }
    async #logQuery(compiledQuery, startTime) {
        await this.#log.query(() => ({
            level: 'query',
            query: compiledQuery,
            queryDurationMillis: this.#calculateDurationMillis(startTime),
        }));
    }
    #calculateDurationMillis(startTime) {
        return (0,_util_performance_now_js__WEBPACK_IMPORTED_MODULE_0__.performanceNow)() - startTime;
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/driver/single-connection-provider.js":
/*!***************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/driver/single-connection-provider.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SingleConnectionProvider: () => (/* binding */ SingleConnectionProvider)
/* harmony export */ });
/// <reference types="./single-connection-provider.d.ts" />
const ignoreError = () => { };
class SingleConnectionProvider {
    #connection;
    #runningPromise;
    constructor(connection) {
        this.#connection = connection;
    }
    async provideConnection(consumer) {
        while (this.#runningPromise) {
            await this.#runningPromise.catch(ignoreError);
        }
        // `#runningPromise` must be set to undefined before it's
        // resolved or rejected. Otherwise the while loop above
        // will misbehave.
        this.#runningPromise = this.#run(consumer).finally(() => {
            this.#runningPromise = undefined;
        });
        return this.#runningPromise;
    }
    // Run the runner in an async function to make sure it doesn't
    // throw synchronous errors.
    async #run(runner) {
        return await runner(this.#connection);
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/dynamic/dynamic-reference-builder.js":
/*!***************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/dynamic/dynamic-reference-builder.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DynamicReferenceBuilder: () => (/* binding */ DynamicReferenceBuilder),
/* harmony export */   isDynamicReferenceBuilder: () => (/* binding */ isDynamicReferenceBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/operation-node-source.js */ "./node_modules/kysely/dist/esm/operation-node/operation-node-source.js");
/* harmony import */ var _parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../parser/reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./dynamic-reference-builder.d.ts" />



class DynamicReferenceBuilder {
    #dynamicReference;
    get dynamicReference() {
        return this.#dynamicReference;
    }
    /**
     * @private
     *
     * This needs to be here just so that the typings work. Without this
     * the generated .d.ts file contains no reference to the type param R
     * which causes this type to be equal to DynamicReferenceBuilder with
     * any R.
     */
    get refType() {
        return undefined;
    }
    constructor(reference) {
        this.#dynamicReference = reference;
    }
    toOperationNode() {
        return (0,_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_0__.parseSimpleReferenceExpression)(this.#dynamicReference);
    }
}
function isDynamicReferenceBuilder(obj) {
    return ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.isObject)(obj) &&
        (0,_operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_2__.isOperationNodeSource)(obj) &&
        (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.isString)(obj.dynamicReference));
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/dynamic/dynamic.js":
/*!*********************************************************!*\
  !*** ./node_modules/kysely/dist/esm/dynamic/dynamic.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DynamicModule: () => (/* binding */ DynamicModule)
/* harmony export */ });
/* harmony import */ var _dynamic_reference_builder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dynamic-reference-builder.js */ "./node_modules/kysely/dist/esm/dynamic/dynamic-reference-builder.js");
/// <reference types="./dynamic.d.ts" />

class DynamicModule {
    /**
     * Creates a dynamic reference to a column that is not know at compile time.
     *
     * Kysely is built in a way that by default you can't refer to tables or columns
     * that are not actually visible in the current query and context. This is all
     * done by typescript at compile time, which means that you need to know the
     * columns and tables at compile time. This is not always the case of course.
     *
     * This method is meant to be used in those cases where the column names
     * come from the user input or are not otherwise known at compile time.
     *
     * WARNING! Unlike values, column names are not escaped by the database engine
     * or Kysely and if you pass in unchecked column names using this method, you
     * create an SQL injection vulnerability. Always __always__ validate the user
     * input before passing it to this method.
     *
     * There are couple of examples below for some use cases, but you can pass
     * `ref` to other methods as well. If the types allow you to pass a `ref`
     * value to some place, it should work.
     *
     * ### Examples
     *
     * Filter by a column not know at compile time:
     *
     * ```ts
     * async function someQuery(filterColumn: string, filterValue: string) {
     *   const { ref } = db.dynamic
     *
     *   return await db
     *     .selectFrom('person')
     *     .selectAll()
     *     .where(ref(filterColumn), '=', filterValue)
     *     .execute()
     * }
     *
     * someQuery('first_name', 'Arnold')
     * someQuery('person.last_name', 'Aniston')
     * ```
     *
     * Order by a column not know at compile time:
     *
     * ```ts
     * async function someQuery(orderBy: string) {
     *   const { ref } = db.dynamic
     *
     *   return await db
     *     .selectFrom('person')
     *     .select('person.first_name as fn')
     *     .orderBy(ref(orderBy))
     *     .execute()
     * }
     *
     * someQuery('fn')
     * ```
     *
     * In this example we add selections dynamically:
     *
     * ```ts
     * const { ref } = db.dynamic
     *
     * // Some column name provided by the user. Value not known at compile time.
     * const columnFromUserInput = req.query.select;
     *
     * // A type that lists all possible values `columnFromUserInput` can have.
     * // You can use `keyof Person` if any column of an interface is allowed.
     * type PossibleColumns = 'last_name' | 'first_name' | 'birth_date'
     *
     * const [person] = await db.selectFrom('person')
     *   .select([
     *     ref<PossibleColumns>(columnFromUserInput),
     *     'id'
     *   ])
     *   .execute()
     *
     * // The resulting type contains all `PossibleColumns` as optional fields
     * // because we cannot know which field was actually selected before
     * // running the code.
     * const lastName: string | undefined = person.last_name
     * const firstName: string | undefined = person.first_name
     * const birthDate: string | undefined = person.birth_date
     *
     * // The result type also contains the compile time selection `id`.
     * person.id
     * ```
     */
    ref(reference) {
        return new _dynamic_reference_builder_js__WEBPACK_IMPORTED_MODULE_0__.DynamicReferenceBuilder(reference);
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/expression/expression-builder.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/expression/expression-builder.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createExpressionBuilder: () => (/* binding */ createExpressionBuilder),
/* harmony export */   expressionBuilder: () => (/* binding */ expressionBuilder)
/* harmony export */ });
/* harmony import */ var _query_builder_select_query_builder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../query-builder/select-query-builder.js */ "./node_modules/kysely/dist/esm/query-builder/select-query-builder.js");
/* harmony import */ var _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../operation-node/select-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/select-query-node.js");
/* harmony import */ var _parser_table_parser_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../parser/table-parser.js */ "./node_modules/kysely/dist/esm/parser/table-parser.js");
/* harmony import */ var _plugin_with_schema_with_schema_plugin_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../plugin/with-schema/with-schema-plugin.js */ "./node_modules/kysely/dist/esm/plugin/with-schema/with-schema-plugin.js");
/* harmony import */ var _util_query_id_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/query-id.js */ "./node_modules/kysely/dist/esm/util/query-id.js");
/* harmony import */ var _query_builder_function_module_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../query-builder/function-module.js */ "./node_modules/kysely/dist/esm/query-builder/function-module.js");
/* harmony import */ var _parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../parser/reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/* harmony import */ var _parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/binary-operation-parser.js */ "./node_modules/kysely/dist/esm/parser/binary-operation-parser.js");
/* harmony import */ var _operation_node_parens_node_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../operation-node/parens-node.js */ "./node_modules/kysely/dist/esm/operation-node/parens-node.js");
/* harmony import */ var _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./expression-wrapper.js */ "./node_modules/kysely/dist/esm/expression/expression-wrapper.js");
/* harmony import */ var _operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../operation-node/operator-node.js */ "./node_modules/kysely/dist/esm/operation-node/operator-node.js");
/* harmony import */ var _parser_unary_operation_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser/unary-operation-parser.js */ "./node_modules/kysely/dist/esm/parser/unary-operation-parser.js");
/* harmony import */ var _parser_value_parser_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../parser/value-parser.js */ "./node_modules/kysely/dist/esm/parser/value-parser.js");
/* harmony import */ var _query_executor_noop_query_executor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../query-executor/noop-query-executor.js */ "./node_modules/kysely/dist/esm/query-executor/noop-query-executor.js");
/* harmony import */ var _query_builder_case_builder_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../query-builder/case-builder.js */ "./node_modules/kysely/dist/esm/query-builder/case-builder.js");
/* harmony import */ var _operation_node_case_node_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../operation-node/case-node.js */ "./node_modules/kysely/dist/esm/operation-node/case-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _query_builder_json_path_builder_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../query-builder/json-path-builder.js */ "./node_modules/kysely/dist/esm/query-builder/json-path-builder.js");
/* harmony import */ var _operation_node_binary_operation_node_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../operation-node/binary-operation-node.js */ "./node_modules/kysely/dist/esm/operation-node/binary-operation-node.js");
/* harmony import */ var _operation_node_and_node_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../operation-node/and-node.js */ "./node_modules/kysely/dist/esm/operation-node/and-node.js");
/* harmony import */ var _operation_node_tuple_node_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../operation-node/tuple-node.js */ "./node_modules/kysely/dist/esm/operation-node/tuple-node.js");
/* harmony import */ var _operation_node_json_path_node_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../operation-node/json-path-node.js */ "./node_modules/kysely/dist/esm/operation-node/json-path-node.js");
/* harmony import */ var _parser_data_type_parser_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../parser/data-type-parser.js */ "./node_modules/kysely/dist/esm/parser/data-type-parser.js");
/* harmony import */ var _operation_node_cast_node_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../operation-node/cast-node.js */ "./node_modules/kysely/dist/esm/operation-node/cast-node.js");
/// <reference types="./expression-builder.d.ts" />
























function createExpressionBuilder(executor = _query_executor_noop_query_executor_js__WEBPACK_IMPORTED_MODULE_0__.NOOP_QUERY_EXECUTOR) {
    function binary(lhs, op, rhs) {
        return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper((0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseValueBinaryOperation)(lhs, op, rhs));
    }
    function unary(op, expr) {
        return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper((0,_parser_unary_operation_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseUnaryOperation)(op, expr));
    }
    const eb = Object.assign(binary, {
        fn: undefined,
        eb: undefined,
        selectFrom(table) {
            return (0,_query_builder_select_query_builder_js__WEBPACK_IMPORTED_MODULE_4__.createSelectQueryBuilder)({
                queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_5__.createQueryId)(),
                executor,
                queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_6__.SelectQueryNode.createFrom((0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_7__.parseTableExpressionOrList)(table)),
            });
        },
        case(reference) {
            return new _query_builder_case_builder_js__WEBPACK_IMPORTED_MODULE_8__.CaseBuilder({
                node: _operation_node_case_node_js__WEBPACK_IMPORTED_MODULE_9__.CaseNode.create((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_10__.isUndefined)(reference)
                    ? undefined
                    : (0,_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_11__.parseReferenceExpression)(reference)),
            });
        },
        ref(reference, op) {
            if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_10__.isUndefined)(op)) {
                return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper((0,_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_11__.parseStringReference)(reference));
            }
            return new _query_builder_json_path_builder_js__WEBPACK_IMPORTED_MODULE_12__.JSONPathBuilder((0,_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_11__.parseJSONReference)(reference, op));
        },
        jsonPath() {
            return new _query_builder_json_path_builder_js__WEBPACK_IMPORTED_MODULE_12__.JSONPathBuilder(_operation_node_json_path_node_js__WEBPACK_IMPORTED_MODULE_13__.JSONPathNode.create());
        },
        table(table) {
            return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper((0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_7__.parseTable)(table));
        },
        val(value) {
            return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper((0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_14__.parseValueExpression)(value));
        },
        refTuple(...values) {
            return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper(_operation_node_tuple_node_js__WEBPACK_IMPORTED_MODULE_15__.TupleNode.create(values.map(_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_11__.parseReferenceExpression)));
        },
        tuple(...values) {
            return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper(_operation_node_tuple_node_js__WEBPACK_IMPORTED_MODULE_15__.TupleNode.create(values.map(_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_14__.parseValueExpression)));
        },
        lit(value) {
            return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper((0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_14__.parseSafeImmediateValue)(value));
        },
        unary,
        not(expr) {
            return unary('not', expr);
        },
        exists(expr) {
            return unary('exists', expr);
        },
        neg(expr) {
            return unary('-', expr);
        },
        between(expr, start, end) {
            return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper(_operation_node_binary_operation_node_js__WEBPACK_IMPORTED_MODULE_16__.BinaryOperationNode.create((0,_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_11__.parseReferenceExpression)(expr), _operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_17__.OperatorNode.create('between'), _operation_node_and_node_js__WEBPACK_IMPORTED_MODULE_18__.AndNode.create((0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_14__.parseValueExpression)(start), (0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_14__.parseValueExpression)(end))));
        },
        betweenSymmetric(expr, start, end) {
            return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper(_operation_node_binary_operation_node_js__WEBPACK_IMPORTED_MODULE_16__.BinaryOperationNode.create((0,_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_11__.parseReferenceExpression)(expr), _operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_17__.OperatorNode.create('between symmetric'), _operation_node_and_node_js__WEBPACK_IMPORTED_MODULE_18__.AndNode.create((0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_14__.parseValueExpression)(start), (0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_14__.parseValueExpression)(end))));
        },
        and(exprs) {
            if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_10__.isReadonlyArray)(exprs)) {
                return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper((0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseFilterList)(exprs, 'and'));
            }
            return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper((0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseFilterObject)(exprs, 'and'));
        },
        or(exprs) {
            if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_10__.isReadonlyArray)(exprs)) {
                return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper((0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseFilterList)(exprs, 'or'));
            }
            return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper((0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseFilterObject)(exprs, 'or'));
        },
        parens(...args) {
            const node = (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseValueBinaryOperationOrExpression)(args);
            if (_operation_node_parens_node_js__WEBPACK_IMPORTED_MODULE_19__.ParensNode.is(node)) {
                // No double wrapping.
                return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper(node);
            }
            else {
                return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper(_operation_node_parens_node_js__WEBPACK_IMPORTED_MODULE_19__.ParensNode.create(node));
            }
        },
        cast(expr, dataType) {
            return new _expression_wrapper_js__WEBPACK_IMPORTED_MODULE_1__.ExpressionWrapper(_operation_node_cast_node_js__WEBPACK_IMPORTED_MODULE_20__.CastNode.create((0,_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_11__.parseReferenceExpression)(expr), (0,_parser_data_type_parser_js__WEBPACK_IMPORTED_MODULE_21__.parseDataTypeExpression)(dataType)));
        },
        withSchema(schema) {
            return createExpressionBuilder(executor.withPluginAtFront(new _plugin_with_schema_with_schema_plugin_js__WEBPACK_IMPORTED_MODULE_22__.WithSchemaPlugin(schema)));
        },
    });
    eb.fn = (0,_query_builder_function_module_js__WEBPACK_IMPORTED_MODULE_23__.createFunctionModule)();
    eb.eb = eb;
    return eb;
}
function expressionBuilder(_) {
    return createExpressionBuilder();
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/expression/expression-wrapper.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/expression/expression-wrapper.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AliasedExpressionWrapper: () => (/* binding */ AliasedExpressionWrapper),
/* harmony export */   AndWrapper: () => (/* binding */ AndWrapper),
/* harmony export */   ExpressionWrapper: () => (/* binding */ ExpressionWrapper),
/* harmony export */   OrWrapper: () => (/* binding */ OrWrapper)
/* harmony export */ });
/* harmony import */ var _operation_node_alias_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/alias-node.js */ "./node_modules/kysely/dist/esm/operation-node/alias-node.js");
/* harmony import */ var _operation_node_and_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/and-node.js */ "./node_modules/kysely/dist/esm/operation-node/and-node.js");
/* harmony import */ var _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation-node/identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/* harmony import */ var _operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/operation-node-source.js */ "./node_modules/kysely/dist/esm/operation-node/operation-node-source.js");
/* harmony import */ var _operation_node_or_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/or-node.js */ "./node_modules/kysely/dist/esm/operation-node/or-node.js");
/* harmony import */ var _operation_node_parens_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../operation-node/parens-node.js */ "./node_modules/kysely/dist/esm/operation-node/parens-node.js");
/* harmony import */ var _parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/binary-operation-parser.js */ "./node_modules/kysely/dist/esm/parser/binary-operation-parser.js");
/// <reference types="./expression-wrapper.d.ts" />







class ExpressionWrapper {
    #node;
    constructor(node) {
        this.#node = node;
    }
    /** @private */
    get expressionType() {
        return undefined;
    }
    as(alias) {
        return new AliasedExpressionWrapper(this, alias);
    }
    or(...args) {
        return new OrWrapper(_operation_node_or_node_js__WEBPACK_IMPORTED_MODULE_0__.OrNode.create(this.#node, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseValueBinaryOperationOrExpression)(args)));
    }
    and(...args) {
        return new AndWrapper(_operation_node_and_node_js__WEBPACK_IMPORTED_MODULE_2__.AndNode.create(this.#node, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseValueBinaryOperationOrExpression)(args)));
    }
    /**
     * Change the output type of the expression.
     *
     * This method call doesn't change the SQL in any way. This methods simply
     * returns a copy of this `ExpressionWrapper` with a new output type.
     */
    $castTo() {
        return new ExpressionWrapper(this.#node);
    }
    /**
     * Omit null from the expression's type.
     *
     * This function can be useful in cases where you know an expression can't be
     * null, but Kysely is unable to infer it.
     *
     * This method call doesn't change the SQL in any way. This methods simply
     * returns a copy of `this` with a new output type.
     */
    $notNull() {
        return new ExpressionWrapper(this.#node);
    }
    toOperationNode() {
        return this.#node;
    }
}
class AliasedExpressionWrapper {
    #expr;
    #alias;
    constructor(expr, alias) {
        this.#expr = expr;
        this.#alias = alias;
    }
    /** @private */
    get expression() {
        return this.#expr;
    }
    /** @private */
    get alias() {
        return this.#alias;
    }
    toOperationNode() {
        return _operation_node_alias_node_js__WEBPACK_IMPORTED_MODULE_3__.AliasNode.create(this.#expr.toOperationNode(), (0,_operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_4__.isOperationNodeSource)(this.#alias)
            ? this.#alias.toOperationNode()
            : _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_5__.IdentifierNode.create(this.#alias));
    }
}
class OrWrapper {
    #node;
    constructor(node) {
        this.#node = node;
    }
    /** @private */
    get expressionType() {
        return undefined;
    }
    as(alias) {
        return new AliasedExpressionWrapper(this, alias);
    }
    or(...args) {
        return new OrWrapper(_operation_node_or_node_js__WEBPACK_IMPORTED_MODULE_0__.OrNode.create(this.#node, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseValueBinaryOperationOrExpression)(args)));
    }
    /**
     * Change the output type of the expression.
     *
     * This method call doesn't change the SQL in any way. This methods simply
     * returns a copy of this `OrWrapper` with a new output type.
     */
    $castTo() {
        return new OrWrapper(this.#node);
    }
    toOperationNode() {
        return _operation_node_parens_node_js__WEBPACK_IMPORTED_MODULE_6__.ParensNode.create(this.#node);
    }
}
class AndWrapper {
    #node;
    constructor(node) {
        this.#node = node;
    }
    /** @private */
    get expressionType() {
        return undefined;
    }
    as(alias) {
        return new AliasedExpressionWrapper(this, alias);
    }
    and(...args) {
        return new AndWrapper(_operation_node_and_node_js__WEBPACK_IMPORTED_MODULE_2__.AndNode.create(this.#node, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseValueBinaryOperationOrExpression)(args)));
    }
    /**
     * Change the output type of the expression.
     *
     * This method call doesn't change the SQL in any way. This methods simply
     * returns a copy of this `AndWrapper` with a new output type.
     */
    $castTo() {
        return new AndWrapper(this.#node);
    }
    toOperationNode() {
        return _operation_node_parens_node_js__WEBPACK_IMPORTED_MODULE_6__.ParensNode.create(this.#node);
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/expression/expression.js":
/*!***************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/expression/expression.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isAliasedExpression: () => (/* binding */ isAliasedExpression),
/* harmony export */   isExpression: () => (/* binding */ isExpression)
/* harmony export */ });
/* harmony import */ var _operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/operation-node-source.js */ "./node_modules/kysely/dist/esm/operation-node/operation-node-source.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./expression.d.ts" />


function isExpression(obj) {
    return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(obj) && 'expressionType' in obj && (0,_operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_1__.isOperationNodeSource)(obj);
}
function isAliasedExpression(obj) {
    return ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(obj) &&
        'expression' in obj &&
        (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isString)(obj.alias) &&
        (0,_operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_1__.isOperationNodeSource)(obj));
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/kysely.js":
/*!************************************************!*\
  !*** ./node_modules/kysely/dist/esm/kysely.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ConnectionBuilder: () => (/* binding */ ConnectionBuilder),
/* harmony export */   Kysely: () => (/* binding */ Kysely),
/* harmony export */   Transaction: () => (/* binding */ Transaction),
/* harmony export */   TransactionBuilder: () => (/* binding */ TransactionBuilder),
/* harmony export */   isKyselyProps: () => (/* binding */ isKyselyProps)
/* harmony export */ });
/* harmony import */ var _schema_schema_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./schema/schema.js */ "./node_modules/kysely/dist/esm/schema/schema.js");
/* harmony import */ var _dynamic_dynamic_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dynamic/dynamic.js */ "./node_modules/kysely/dist/esm/dynamic/dynamic.js");
/* harmony import */ var _driver_default_connection_provider_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./driver/default-connection-provider.js */ "./node_modules/kysely/dist/esm/driver/default-connection-provider.js");
/* harmony import */ var _query_creator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query-creator.js */ "./node_modules/kysely/dist/esm/query-creator.js");
/* harmony import */ var _query_executor_default_query_executor_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./query-executor/default-query-executor.js */ "./node_modules/kysely/dist/esm/query-executor/default-query-executor.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _driver_runtime_driver_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./driver/runtime-driver.js */ "./node_modules/kysely/dist/esm/driver/runtime-driver.js");
/* harmony import */ var _driver_single_connection_provider_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./driver/single-connection-provider.js */ "./node_modules/kysely/dist/esm/driver/single-connection-provider.js");
/* harmony import */ var _driver_driver_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./driver/driver.js */ "./node_modules/kysely/dist/esm/driver/driver.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _query_builder_function_module_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./query-builder/function-module.js */ "./node_modules/kysely/dist/esm/query-builder/function-module.js");
/* harmony import */ var _util_log_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/log.js */ "./node_modules/kysely/dist/esm/util/log.js");
/* harmony import */ var _util_query_id_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./util/query-id.js */ "./node_modules/kysely/dist/esm/util/query-id.js");
/* harmony import */ var _util_compilable_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./util/compilable.js */ "./node_modules/kysely/dist/esm/util/compilable.js");
/* harmony import */ var _query_builder_case_builder_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./query-builder/case-builder.js */ "./node_modules/kysely/dist/esm/query-builder/case-builder.js");
/* harmony import */ var _operation_node_case_node_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./operation-node/case-node.js */ "./node_modules/kysely/dist/esm/operation-node/case-node.js");
/* harmony import */ var _parser_expression_parser_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./parser/expression-parser.js */ "./node_modules/kysely/dist/esm/parser/expression-parser.js");
/* harmony import */ var _plugin_with_schema_with_schema_plugin_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./plugin/with-schema/with-schema-plugin.js */ "./node_modules/kysely/dist/esm/plugin/with-schema/with-schema-plugin.js");
/// <reference types="./kysely.d.ts" />


















/**
 * The main Kysely class.
 *
 * You should create one instance of `Kysely` per database using the {@link Kysely}
 * constructor. Each `Kysely` instance maintains it's own connection pool.
 *
 * ### Examples
 *
 * This example assumes your database has tables `person` and `pet`:
 *
 * ```ts
 * import { Kysely, Generated, PostgresDialect } from 'kysely'
 *
 * interface PersonTable {
 *   id: Generated<number>
 *   first_name: string
 *   last_name: string
 * }
 *
 * interface PetTable {
 *   id: Generated<number>
 *   owner_id: number
 *   name: string
 *   species: 'cat' | 'dog'
 * }
 *
 * interface Database {
 *   person: PersonTable,
 *   pet: PetTable
 * }
 *
 * const db = new Kysely<Database>({
 *   dialect: new PostgresDialect({
 *     host: 'localhost',
 *     database: 'kysely_test',
 *   })
 * })
 * ```
 *
 * @typeParam DB - The database interface type. Keys of this type must be table names
 *    in the database and values must be interfaces that describe the rows in those
 *    tables. See the examples above.
 */
class Kysely extends _query_creator_js__WEBPACK_IMPORTED_MODULE_0__.QueryCreator {
    #props;
    constructor(args) {
        let superProps;
        let props;
        if (isKyselyProps(args)) {
            superProps = { executor: args.executor };
            props = { ...args };
        }
        else {
            const dialect = args.dialect;
            const driver = dialect.createDriver();
            const compiler = dialect.createQueryCompiler();
            const adapter = dialect.createAdapter();
            const log = new _util_log_js__WEBPACK_IMPORTED_MODULE_1__.Log(args.log ?? []);
            const runtimeDriver = new _driver_runtime_driver_js__WEBPACK_IMPORTED_MODULE_2__.RuntimeDriver(driver, log);
            const connectionProvider = new _driver_default_connection_provider_js__WEBPACK_IMPORTED_MODULE_3__.DefaultConnectionProvider(runtimeDriver);
            const executor = new _query_executor_default_query_executor_js__WEBPACK_IMPORTED_MODULE_4__.DefaultQueryExecutor(compiler, adapter, connectionProvider, args.plugins ?? []);
            superProps = { executor };
            props = {
                config: args,
                executor,
                dialect,
                driver: runtimeDriver,
            };
        }
        super(superProps);
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_5__.freeze)(props);
    }
    /**
     * Returns the {@link SchemaModule} module for building database schema.
     */
    get schema() {
        return new _schema_schema_js__WEBPACK_IMPORTED_MODULE_6__.SchemaModule(this.#props.executor);
    }
    /**
     * Returns a the {@link DynamicModule} module.
     *
     * The {@link DynamicModule} module can be used to bypass strict typing and
     * passing in dynamic values for the queries.
     */
    get dynamic() {
        return new _dynamic_dynamic_js__WEBPACK_IMPORTED_MODULE_7__.DynamicModule();
    }
    /**
     * Returns a {@link DatabaseIntrospector | database introspector}.
     */
    get introspection() {
        return this.#props.dialect.createIntrospector(this.withoutPlugins());
    }
    case(value) {
        return new _query_builder_case_builder_js__WEBPACK_IMPORTED_MODULE_8__.CaseBuilder({
            node: _operation_node_case_node_js__WEBPACK_IMPORTED_MODULE_9__.CaseNode.create((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(value) ? undefined : (0,_parser_expression_parser_js__WEBPACK_IMPORTED_MODULE_10__.parseExpression)(value)),
        });
    }
    /**
     * Returns a {@link FunctionModule} that can be used to write type safe function
     * calls.
     *
     * ```ts
     * await db.selectFrom('person')
     *   .innerJoin('pet', 'pet.owner_id', 'person.id')
     *   .select((eb) => [
     *     'person.id',
     *     eb.fn.count('pet.id').as('pet_count')
     *   ])
     *   .groupBy('person.id')
     *   .having((eb) => eb.fn.count('pet.id'), '>', 10)
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * select "person"."id", count("pet"."id") as "pet_count"
     * from "person"
     * inner join "pet" on "pet"."owner_id" = "person"."id"
     * group by "person"."id"
     * having count("pet"."id") > $1
     * ```
     */
    get fn() {
        return (0,_query_builder_function_module_js__WEBPACK_IMPORTED_MODULE_11__.createFunctionModule)();
    }
    /**
     * Creates a {@link TransactionBuilder} that can be used to run queries inside a transaction.
     *
     * The returned {@link TransactionBuilder} can be used to configure the transaction. The
     * {@link TransactionBuilder.execute} method can then be called to run the transaction.
     * {@link TransactionBuilder.execute} takes a function that is run inside the
     * transaction. If the function throws, the transaction is rolled back. Otherwise
     * the transaction is committed.
     *
     * The callback function passed to the {@link TransactionBuilder.execute | execute}
     * method gets the transaction object as its only argument. The transaction is
     * of type {@link Transaction} which inherits {@link Kysely}. Any query
     * started through the transaction object is executed inside the transaction.
     *
     * ### Examples
     *
     * <!-- siteExample("transactions", "Simple transaction", 10) -->
     *
     * This example inserts two rows in a transaction. If an error is thrown inside
     * the callback passed to the `execute` method, the transaction is rolled back.
     * Otherwise it's committed.
     *
     * ```ts
     * const catto = await db.transaction().execute(async (trx) => {
     *   const jennifer = await trx.insertInto('person')
     *     .values({
     *       first_name: 'Jennifer',
     *       last_name: 'Aniston',
     *       age: 40,
     *     })
     *     .returning('id')
     *     .executeTakeFirstOrThrow()
     *
     *   return await trx.insertInto('pet')
     *     .values({
     *       owner_id: jennifer.id,
     *       name: 'Catto',
     *       species: 'cat',
     *       is_favorite: false,
     *     })
     *     .returningAll()
     *     .executeTakeFirst()
     * })
     * ```
     *
     * Setting the isolation level:
     *
     * ```ts
     * await db
     *   .transaction()
     *   .setIsolationLevel('serializable')
     *   .execute(async (trx) => {
     *     await doStuff(trx)
     *   })
     * ```
     */
    transaction() {
        return new TransactionBuilder({ ...this.#props });
    }
    /**
     * Provides a kysely instance bound to a single database connection.
     *
     * ### Examples
     *
     * ```ts
     * await db
     *   .connection()
     *   .execute(async (db) => {
     *     // `db` is an instance of `Kysely` that's bound to a single
     *     // database connection. All queries executed through `db` use
     *     // the same connection.
     *     await doStuff(db)
     *   })
     * ```
     */
    connection() {
        return new ConnectionBuilder({ ...this.#props });
    }
    /**
     * Returns a copy of this Kysely instance with the given plugin installed.
     */
    withPlugin(plugin) {
        return new Kysely({
            ...this.#props,
            executor: this.#props.executor.withPlugin(plugin),
        });
    }
    /**
     * Returns a copy of this Kysely instance without any plugins.
     */
    withoutPlugins() {
        return new Kysely({
            ...this.#props,
            executor: this.#props.executor.withoutPlugins(),
        });
    }
    /**
     * @override
     */
    withSchema(schema) {
        return new Kysely({
            ...this.#props,
            executor: this.#props.executor.withPluginAtFront(new _plugin_with_schema_with_schema_plugin_js__WEBPACK_IMPORTED_MODULE_12__.WithSchemaPlugin(schema)),
        });
    }
    /**
     * Returns a copy of this Kysely instance with tables added to its
     * database type.
     *
     * This method only modifies the types and doesn't affect any of the
     * executed queries in any way.
     *
     * ### Examples
     *
     * The following example adds and uses a temporary table:
     *
     * @example
     * ```ts
     * await db.schema
     *   .createTable('temp_table')
     *   .temporary()
     *   .addColumn('some_column', 'integer')
     *   .execute()
     *
     * const tempDb = db.withTables<{
     *   temp_table: {
     *     some_column: number
     *   }
     * }>()
     *
     * await tempDb
     *   .insertInto('temp_table')
     *   .values({ some_column: 100 })
     *   .execute()
     * ```
     */
    withTables() {
        return new Kysely({ ...this.#props });
    }
    /**
     * Releases all resources and disconnects from the database.
     *
     * You need to call this when you are done using the `Kysely` instance.
     */
    async destroy() {
        await this.#props.driver.destroy();
    }
    /**
     * Returns true if this `Kysely` instance is a transaction.
     *
     * You can also use `db instanceof Transaction`.
     */
    get isTransaction() {
        return false;
    }
    /**
     * @internal
     * @private
     */
    getExecutor() {
        return this.#props.executor;
    }
    /**
     * Executes a given compiled query or query builder.
     *
     * See {@link https://github.com/koskimas/kysely/blob/master/site/docs/recipes/splitting-build-compile-and-execute-code.md#execute-compiled-queries splitting build, compile and execute code recipe} for more information.
     */
    executeQuery(query, queryId = (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_13__.createQueryId)()) {
        const compiledQuery = (0,_util_compilable_js__WEBPACK_IMPORTED_MODULE_14__.isCompilable)(query) ? query.compile() : query;
        return this.getExecutor().executeQuery(compiledQuery, queryId);
    }
}
class Transaction extends Kysely {
    #props;
    constructor(props) {
        super(props);
        this.#props = props;
    }
    // The return type is `true` instead of `boolean` to make Kysely<DB>
    // unassignable to Transaction<DB> while allowing assignment the
    // other way around.
    get isTransaction() {
        return true;
    }
    transaction() {
        throw new Error('calling the transaction method for a Transaction is not supported');
    }
    connection() {
        throw new Error('calling the connection method for a Transaction is not supported');
    }
    async destroy() {
        throw new Error('calling the destroy method for a Transaction is not supported');
    }
    withPlugin(plugin) {
        return new Transaction({
            ...this.#props,
            executor: this.#props.executor.withPlugin(plugin),
        });
    }
    withoutPlugins() {
        return new Transaction({
            ...this.#props,
            executor: this.#props.executor.withoutPlugins(),
        });
    }
    /**
     * @override
     */
    withSchema(schema) {
        return new Transaction({
            ...this.#props,
            executor: this.#props.executor.withPluginAtFront(new _plugin_with_schema_with_schema_plugin_js__WEBPACK_IMPORTED_MODULE_12__.WithSchemaPlugin(schema)),
        });
    }
    withTables() {
        return new Transaction({ ...this.#props });
    }
}
function isKyselyProps(obj) {
    return ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_5__.isObject)(obj) &&
        (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_5__.isObject)(obj.config) &&
        (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_5__.isObject)(obj.driver) &&
        (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_5__.isObject)(obj.executor) &&
        (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_5__.isObject)(obj.dialect));
}
class ConnectionBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_5__.freeze)(props);
    }
    async execute(callback) {
        return this.#props.executor.provideConnection(async (connection) => {
            const executor = this.#props.executor.withConnectionProvider(new _driver_single_connection_provider_js__WEBPACK_IMPORTED_MODULE_15__.SingleConnectionProvider(connection));
            const db = new Kysely({
                ...this.#props,
                executor,
            });
            return await callback(db);
        });
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_16__.preventAwait)(ConnectionBuilder, "don't await ConnectionBuilder instances directly. To execute the query you need to call the `execute` method");
class TransactionBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_5__.freeze)(props);
    }
    setIsolationLevel(isolationLevel) {
        return new TransactionBuilder({
            ...this.#props,
            isolationLevel,
        });
    }
    async execute(callback) {
        const { isolationLevel, ...kyselyProps } = this.#props;
        const settings = { isolationLevel };
        validateTransactionSettings(settings);
        return this.#props.executor.provideConnection(async (connection) => {
            const executor = this.#props.executor.withConnectionProvider(new _driver_single_connection_provider_js__WEBPACK_IMPORTED_MODULE_15__.SingleConnectionProvider(connection));
            const transaction = new Transaction({
                ...kyselyProps,
                executor,
            });
            try {
                await this.#props.driver.beginTransaction(connection, settings);
                const result = await callback(transaction);
                await this.#props.driver.commitTransaction(connection);
                return result;
            }
            catch (error) {
                await this.#props.driver.rollbackTransaction(connection);
                throw error;
            }
        });
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_16__.preventAwait)(TransactionBuilder, "don't await TransactionBuilder instances directly. To execute the transaction you need to call the `execute` method");
function validateTransactionSettings(settings) {
    if (settings.isolationLevel &&
        !_driver_driver_js__WEBPACK_IMPORTED_MODULE_17__.TRANSACTION_ISOLATION_LEVELS.includes(settings.isolationLevel)) {
        throw new Error(`invalid transaction isolation level ${settings.isolationLevel}`);
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/add-column-node.js":
/*!************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/add-column-node.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AddColumnNode: () => (/* binding */ AddColumnNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./add-column-node.d.ts" />

/**
 * @internal
 */
const AddColumnNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'AddColumnNode';
    },
    create(column) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'AddColumnNode',
            column,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/add-constraint-node.js":
/*!****************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/add-constraint-node.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AddConstraintNode: () => (/* binding */ AddConstraintNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./add-constraint-node.d.ts" />

/**
 * @internal
 */
const AddConstraintNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'AddConstraintNode';
    },
    create(constraint) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'AddConstraintNode',
            constraint,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/add-index-node.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/add-index-node.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AddIndexNode: () => (/* binding */ AddIndexNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/// <reference types="./add-index-node.d.ts" />


/**
 * @internal
 */
const AddIndexNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'AddIndexNode';
    },
    create(name) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'AddIndexNode',
            name: _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.IdentifierNode.create(name),
        });
    },
    cloneWith(node, props) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            ...props,
        });
    },
    cloneWithColumns(node, columns) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            columns: [...(node.columns || []), ...columns],
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/aggregate-function-node.js":
/*!********************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/aggregate-function-node.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AggregateFunctionNode: () => (/* binding */ AggregateFunctionNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _where_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./where-node.js */ "./node_modules/kysely/dist/esm/operation-node/where-node.js");
/// <reference types="./aggregate-function-node.d.ts" />


/**
 * @internal
 */
const AggregateFunctionNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'AggregateFunctionNode';
    },
    create(aggregateFunction, aggregated = []) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'AggregateFunctionNode',
            func: aggregateFunction,
            aggregated,
        });
    },
    cloneWithDistinct(aggregateFunctionNode) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...aggregateFunctionNode,
            distinct: true,
        });
    },
    cloneWithFilter(aggregateFunctionNode, filter) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...aggregateFunctionNode,
            filter: aggregateFunctionNode.filter
                ? _where_node_js__WEBPACK_IMPORTED_MODULE_1__.WhereNode.cloneWithOperation(aggregateFunctionNode.filter, 'And', filter)
                : _where_node_js__WEBPACK_IMPORTED_MODULE_1__.WhereNode.create(filter),
        });
    },
    cloneWithOrFilter(aggregateFunctionNode, filter) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...aggregateFunctionNode,
            filter: aggregateFunctionNode.filter
                ? _where_node_js__WEBPACK_IMPORTED_MODULE_1__.WhereNode.cloneWithOperation(aggregateFunctionNode.filter, 'Or', filter)
                : _where_node_js__WEBPACK_IMPORTED_MODULE_1__.WhereNode.create(filter),
        });
    },
    cloneWithOver(aggregateFunctionNode, over) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...aggregateFunctionNode,
            over,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/alias-node.js":
/*!*******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/alias-node.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AliasNode: () => (/* binding */ AliasNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./alias-node.d.ts" />

/**
 * @internal
 */
const AliasNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'AliasNode';
    },
    create(node, alias) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'AliasNode',
            node,
            alias,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/alter-column-node.js":
/*!**************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/alter-column-node.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AlterColumnNode: () => (/* binding */ AlterColumnNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _column_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./column-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-node.js");
/// <reference types="./alter-column-node.d.ts" />


/**
 * @internal
 */
const AlterColumnNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'AlterColumnNode';
    },
    create(column, prop, value) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'AlterColumnNode',
            column: _column_node_js__WEBPACK_IMPORTED_MODULE_1__.ColumnNode.create(column),
            [prop]: value,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/alter-table-node.js":
/*!*************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/alter-table-node.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AlterTableNode: () => (/* binding */ AlterTableNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./alter-table-node.d.ts" />

/**
 * @internal
 */
const AlterTableNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'AlterTableNode';
    },
    create(table) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'AlterTableNode',
            table,
        });
    },
    cloneWithTableProps(node, props) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            ...props,
        });
    },
    cloneWithColumnAlteration(node, columnAlteration) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            columnAlterations: node.columnAlterations
                ? [...node.columnAlterations, columnAlteration]
                : [columnAlteration],
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/and-node.js":
/*!*****************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/and-node.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AndNode: () => (/* binding */ AndNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./and-node.d.ts" />

/**
 * @internal
 */
const AndNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'AndNode';
    },
    create(left, right) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'AndNode',
            left,
            right,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/binary-operation-node.js":
/*!******************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/binary-operation-node.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BinaryOperationNode: () => (/* binding */ BinaryOperationNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./binary-operation-node.d.ts" />

/**
 * @internal
 */
const BinaryOperationNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'BinaryOperationNode';
    },
    create(leftOperand, operator, rightOperand) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'BinaryOperationNode',
            leftOperand,
            operator,
            rightOperand,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/case-node.js":
/*!******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/case-node.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CaseNode: () => (/* binding */ CaseNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _when_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./when-node.js */ "./node_modules/kysely/dist/esm/operation-node/when-node.js");
/// <reference types="./case-node.d.ts" />


/**
 * @internal
 */
const CaseNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'CaseNode';
    },
    create(value) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'CaseNode',
            value,
        });
    },
    cloneWithWhen(caseNode, when) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...caseNode,
            when: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(caseNode.when ? [...caseNode.when, when] : [when]),
        });
    },
    cloneWithThen(caseNode, then) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...caseNode,
            when: caseNode.when
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([
                    ...caseNode.when.slice(0, -1),
                    _when_node_js__WEBPACK_IMPORTED_MODULE_1__.WhenNode.cloneWithResult(caseNode.when[caseNode.when.length - 1], then),
                ])
                : undefined,
        });
    },
    cloneWith(caseNode, props) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...caseNode,
            ...props,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/cast-node.js":
/*!******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/cast-node.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CastNode: () => (/* binding */ CastNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./cast-node.d.ts" />

/**
 * @internal
 */
const CastNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'CastNode';
    },
    create(expression, dataType) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'CastNode',
            expression,
            dataType,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/check-constraint-node.js":
/*!******************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/check-constraint-node.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CheckConstraintNode: () => (/* binding */ CheckConstraintNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/// <reference types="./check-constraint-node.d.ts" />


/**
 * @internal
 */
const CheckConstraintNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'CheckConstraintNode';
    },
    create(expression, constraintName) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'CheckConstraintNode',
            expression,
            name: constraintName ? _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.IdentifierNode.create(constraintName) : undefined,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/column-definition-node.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/column-definition-node.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ColumnDefinitionNode: () => (/* binding */ ColumnDefinitionNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _column_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./column-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-node.js");
/// <reference types="./column-definition-node.d.ts" />


/**
 * @internal
 */
const ColumnDefinitionNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'ColumnDefinitionNode';
    },
    create(column, dataType) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ColumnDefinitionNode',
            column: _column_node_js__WEBPACK_IMPORTED_MODULE_1__.ColumnNode.create(column),
            dataType,
        });
    },
    cloneWithFrontModifier(node, modifier) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            frontModifiers: node.frontModifiers
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...node.frontModifiers, modifier])
                : [modifier],
        });
    },
    cloneWithEndModifier(node, modifier) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            endModifiers: node.endModifiers
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...node.endModifiers, modifier])
                : [modifier],
        });
    },
    cloneWith(node, props) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            ...props,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/column-node.js":
/*!********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/column-node.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ColumnNode: () => (/* binding */ ColumnNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/// <reference types="./column-node.d.ts" />


/**
 * @internal
 */
const ColumnNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'ColumnNode';
    },
    create(column) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ColumnNode',
            column: _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.IdentifierNode.create(column),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/column-update-node.js":
/*!***************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/column-update-node.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ColumnUpdateNode: () => (/* binding */ ColumnUpdateNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./column-update-node.d.ts" />

/**
 * @internal
 */
const ColumnUpdateNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'ColumnUpdateNode';
    },
    create(column, value) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ColumnUpdateNode',
            column,
            value,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/common-table-expression-name-node.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/common-table-expression-name-node.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CommonTableExpressionNameNode: () => (/* binding */ CommonTableExpressionNameNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _column_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./column-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-node.js");
/* harmony import */ var _table_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./table-node.js */ "./node_modules/kysely/dist/esm/operation-node/table-node.js");
/// <reference types="./common-table-expression-name-node.d.ts" />



/**
 * @internal
 */
const CommonTableExpressionNameNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'CommonTableExpressionNameNode';
    },
    create(tableName, columnNames) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'CommonTableExpressionNameNode',
            table: _table_node_js__WEBPACK_IMPORTED_MODULE_1__.TableNode.create(tableName),
            columns: columnNames
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(columnNames.map(_column_node_js__WEBPACK_IMPORTED_MODULE_2__.ColumnNode.create))
                : undefined,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/common-table-expression-node.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/common-table-expression-node.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CommonTableExpressionNode: () => (/* binding */ CommonTableExpressionNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./common-table-expression-node.d.ts" />

/**
 * @internal
 */
const CommonTableExpressionNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'CommonTableExpressionNode';
    },
    create(name, expression) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'CommonTableExpressionNode',
            name,
            expression,
        });
    },
    cloneWith(node, props) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            ...props,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/create-index-node.js":
/*!**************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/create-index-node.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CreateIndexNode: () => (/* binding */ CreateIndexNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/// <reference types="./create-index-node.d.ts" />


/**
 * @internal
 */
const CreateIndexNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'CreateIndexNode';
    },
    create(name) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'CreateIndexNode',
            name: _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.IdentifierNode.create(name),
        });
    },
    cloneWith(node, props) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            ...props,
        });
    },
    cloneWithColumns(node, columns) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            columns: [...(node.columns || []), ...columns],
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/create-schema-node.js":
/*!***************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/create-schema-node.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CreateSchemaNode: () => (/* binding */ CreateSchemaNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/// <reference types="./create-schema-node.d.ts" />


/**
 * @internal
 */
const CreateSchemaNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'CreateSchemaNode';
    },
    create(schema, params) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'CreateSchemaNode',
            schema: _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.IdentifierNode.create(schema),
            ...params,
        });
    },
    cloneWith(createSchema, params) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...createSchema,
            ...params,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/create-table-node.js":
/*!**************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/create-table-node.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CreateTableNode: () => (/* binding */ CreateTableNode),
/* harmony export */   ON_COMMIT_ACTIONS: () => (/* binding */ ON_COMMIT_ACTIONS)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./create-table-node.d.ts" />

const ON_COMMIT_ACTIONS = ['preserve rows', 'delete rows', 'drop'];
/**
 * @internal
 */
const CreateTableNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'CreateTableNode';
    },
    create(table) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'CreateTableNode',
            table,
            columns: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([]),
        });
    },
    cloneWithColumn(createTable, column) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...createTable,
            columns: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...createTable.columns, column]),
        });
    },
    cloneWithConstraint(createTable, constraint) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...createTable,
            constraints: createTable.constraints
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...createTable.constraints, constraint])
                : (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([constraint]),
        });
    },
    cloneWithFrontModifier(createTable, modifier) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...createTable,
            frontModifiers: createTable.frontModifiers
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...createTable.frontModifiers, modifier])
                : (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([modifier]),
        });
    },
    cloneWithEndModifier(createTable, modifier) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...createTable,
            endModifiers: createTable.endModifiers
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...createTable.endModifiers, modifier])
                : (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([modifier]),
        });
    },
    cloneWith(createTable, params) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...createTable,
            ...params,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/create-type-node.js":
/*!*************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/create-type-node.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CreateTypeNode: () => (/* binding */ CreateTypeNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _value_list_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./value-list-node.js */ "./node_modules/kysely/dist/esm/operation-node/value-list-node.js");
/* harmony import */ var _value_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./value-node.js */ "./node_modules/kysely/dist/esm/operation-node/value-node.js");
/// <reference types="./create-type-node.d.ts" />



/**
 * @internal
 */
const CreateTypeNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'CreateTypeNode';
    },
    create(name) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'CreateTypeNode',
            name,
        });
    },
    cloneWithEnum(createType, values) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...createType,
            enum: _value_list_node_js__WEBPACK_IMPORTED_MODULE_1__.ValueListNode.create(values.map((value) => _value_node_js__WEBPACK_IMPORTED_MODULE_2__.ValueNode.createImmediate(value))),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/create-view-node.js":
/*!*************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/create-view-node.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CreateViewNode: () => (/* binding */ CreateViewNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _schemable_identifier_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schemable-identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/schemable-identifier-node.js");
/// <reference types="./create-view-node.d.ts" />


/**
 * @internal
 */
const CreateViewNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'CreateViewNode';
    },
    create(name) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'CreateViewNode',
            name: _schemable_identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.SchemableIdentifierNode.create(name),
        });
    },
    cloneWith(createView, params) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...createView,
            ...params,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/data-type-node.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/data-type-node.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DataTypeNode: () => (/* binding */ DataTypeNode),
/* harmony export */   isColumnDataType: () => (/* binding */ isColumnDataType)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./data-type-node.d.ts" />

const SIMPLE_COLUMN_DATA_TYPES = [
    'varchar',
    'char',
    'text',
    'integer',
    'int2',
    'int4',
    'int8',
    'smallint',
    'bigint',
    'boolean',
    'real',
    'double precision',
    'float4',
    'float8',
    'decimal',
    'numeric',
    'binary',
    'bytea',
    'date',
    'datetime',
    'time',
    'timetz',
    'timestamp',
    'timestamptz',
    'serial',
    'bigserial',
    'uuid',
    'json',
    'jsonb',
    'blob',
];
const COLUMN_DATA_TYPE_REGEX = [
    /^varchar\(\d+\)$/,
    /^char\(\d+\)$/,
    /^decimal\(\d+, \d+\)$/,
    /^numeric\(\d+, \d+\)$/,
    /^binary\(\d+\)$/,
    /^datetime\(\d+\)$/,
    /^time\(\d+\)$/,
    /^timez\(\d+\)$/,
    /^timestamp\(\d+\)$/,
    /^timestamptz\(\d+\)$/,
];
/**
 * @internal
 */
const DataTypeNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'DataTypeNode';
    },
    create(dataType) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'DataTypeNode',
            dataType,
        });
    },
});
function isColumnDataType(dataType) {
    if (SIMPLE_COLUMN_DATA_TYPES.includes(dataType)) {
        return true;
    }
    if (COLUMN_DATA_TYPE_REGEX.some((r) => r.test(dataType))) {
        return true;
    }
    return false;
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/default-insert-value-node.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/default-insert-value-node.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DefaultInsertValueNode: () => (/* binding */ DefaultInsertValueNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./default-insert-value-node.d.ts" />

/**
 * @internal
 */
const DefaultInsertValueNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'DefaultInsertValueNode';
    },
    create() {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'DefaultInsertValueNode',
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/default-value-node.js":
/*!***************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/default-value-node.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DefaultValueNode: () => (/* binding */ DefaultValueNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./default-value-node.d.ts" />

/**
 * @internal
 */
const DefaultValueNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'DefaultValueNode';
    },
    create(defaultValue) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'DefaultValueNode',
            defaultValue,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/delete-query-node.js":
/*!**************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/delete-query-node.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DeleteQueryNode: () => (/* binding */ DeleteQueryNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _from_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from-node.js */ "./node_modules/kysely/dist/esm/operation-node/from-node.js");
/* harmony import */ var _order_by_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./order-by-node.js */ "./node_modules/kysely/dist/esm/operation-node/order-by-node.js");
/* harmony import */ var _using_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./using-node.js */ "./node_modules/kysely/dist/esm/operation-node/using-node.js");
/// <reference types="./delete-query-node.d.ts" />




/**
 * @internal
 */
const DeleteQueryNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'DeleteQueryNode';
    },
    create(fromItems, withNode) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'DeleteQueryNode',
            from: _from_node_js__WEBPACK_IMPORTED_MODULE_1__.FromNode.create(fromItems),
            ...(withNode && { with: withNode }),
        });
    },
    cloneWithOrderByItems(deleteNode, items) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...deleteNode,
            orderBy: deleteNode.orderBy
                ? _order_by_node_js__WEBPACK_IMPORTED_MODULE_2__.OrderByNode.cloneWithItems(deleteNode.orderBy, items)
                : _order_by_node_js__WEBPACK_IMPORTED_MODULE_2__.OrderByNode.create(items),
        });
    },
    cloneWithoutOrderBy(deleteNode) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...deleteNode,
            orderBy: undefined,
        });
    },
    cloneWithLimit(deleteNode, limit) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...deleteNode,
            limit,
        });
    },
    cloneWithoutLimit(deleteNode) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...deleteNode,
            limit: undefined,
        });
    },
    cloneWithUsing(deleteNode, tables) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...deleteNode,
            using: deleteNode.using !== undefined
                ? _using_node_js__WEBPACK_IMPORTED_MODULE_3__.UsingNode.cloneWithTables(deleteNode.using, tables)
                : _using_node_js__WEBPACK_IMPORTED_MODULE_3__.UsingNode.create(tables),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/drop-column-node.js":
/*!*************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/drop-column-node.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DropColumnNode: () => (/* binding */ DropColumnNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _column_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./column-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-node.js");
/// <reference types="./drop-column-node.d.ts" />


/**
 * @internal
 */
const DropColumnNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'DropColumnNode';
    },
    create(column) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'DropColumnNode',
            column: _column_node_js__WEBPACK_IMPORTED_MODULE_1__.ColumnNode.create(column),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/drop-constraint-node.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/drop-constraint-node.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DropConstraintNode: () => (/* binding */ DropConstraintNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/// <reference types="./drop-constraint-node.d.ts" />


/**
 * @internal
 */
const DropConstraintNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'DropConstraintNode';
    },
    create(constraintName) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'DropConstraintNode',
            constraintName: _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.IdentifierNode.create(constraintName),
        });
    },
    cloneWith(dropConstraint, props) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...dropConstraint,
            ...props,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/drop-index-node.js":
/*!************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/drop-index-node.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DropIndexNode: () => (/* binding */ DropIndexNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _schemable_identifier_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schemable-identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/schemable-identifier-node.js");
/// <reference types="./drop-index-node.d.ts" />


/**
 * @internal
 */
const DropIndexNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'DropIndexNode';
    },
    create(name, params) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'DropIndexNode',
            name: _schemable_identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.SchemableIdentifierNode.create(name),
            ...params,
        });
    },
    cloneWith(dropIndex, props) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...dropIndex,
            ...props,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/drop-schema-node.js":
/*!*************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/drop-schema-node.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DropSchemaNode: () => (/* binding */ DropSchemaNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/// <reference types="./drop-schema-node.d.ts" />


/**
 * @internal
 */
const DropSchemaNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'DropSchemaNode';
    },
    create(schema, params) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'DropSchemaNode',
            schema: _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.IdentifierNode.create(schema),
            ...params,
        });
    },
    cloneWith(dropSchema, params) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...dropSchema,
            ...params,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/drop-table-node.js":
/*!************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/drop-table-node.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DropTableNode: () => (/* binding */ DropTableNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./drop-table-node.d.ts" />

/**
 * @internal
 */
const DropTableNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'DropTableNode';
    },
    create(table, params) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'DropTableNode',
            table,
            ...params,
        });
    },
    cloneWith(dropIndex, params) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...dropIndex,
            ...params,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/drop-type-node.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/drop-type-node.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DropTypeNode: () => (/* binding */ DropTypeNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./drop-type-node.d.ts" />

/**
 * @internal
 */
const DropTypeNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'DropTypeNode';
    },
    create(name) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'DropTypeNode',
            name,
        });
    },
    cloneWith(dropType, params) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...dropType,
            ...params,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/drop-view-node.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/drop-view-node.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DropViewNode: () => (/* binding */ DropViewNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _schemable_identifier_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schemable-identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/schemable-identifier-node.js");
/// <reference types="./drop-view-node.d.ts" />


/**
 * @internal
 */
const DropViewNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'DropViewNode';
    },
    create(name) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'DropViewNode',
            name: _schemable_identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.SchemableIdentifierNode.create(name),
        });
    },
    cloneWith(dropView, params) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...dropView,
            ...params,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/explain-node.js":
/*!*********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/explain-node.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ExplainNode: () => (/* binding */ ExplainNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./explain-node.d.ts" />

/**
 * @internal
 */
const ExplainNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'ExplainNode';
    },
    create(format, options) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ExplainNode',
            format,
            options,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/fetch-node.js":
/*!*******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/fetch-node.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FetchNode: () => (/* binding */ FetchNode)
/* harmony export */ });
/* harmony import */ var _value_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value-node.js */ "./node_modules/kysely/dist/esm/operation-node/value-node.js");
/// <reference types="./fetch-node.d.ts" />

/**
 * @internal
 */
const FetchNode = {
    is(node) {
        return node.kind === 'FetchNode';
    },
    create(rowCount, modifier) {
        return {
            kind: 'FetchNode',
            rowCount: _value_node_js__WEBPACK_IMPORTED_MODULE_0__.ValueNode.create(rowCount),
            modifier,
        };
    },
};


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/foreign-key-constraint-node.js":
/*!************************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/foreign-key-constraint-node.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ForeignKeyConstraintNode: () => (/* binding */ ForeignKeyConstraintNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _identifier_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/* harmony import */ var _references_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./references-node.js */ "./node_modules/kysely/dist/esm/operation-node/references-node.js");
/// <reference types="./foreign-key-constraint-node.d.ts" />



/**
 * @internal
 */
const ForeignKeyConstraintNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'ForeignKeyConstraintNode';
    },
    create(sourceColumns, targetTable, targetColumns, constraintName) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ForeignKeyConstraintNode',
            columns: sourceColumns,
            references: _references_node_js__WEBPACK_IMPORTED_MODULE_1__.ReferencesNode.create(targetTable, targetColumns),
            name: constraintName ? _identifier_node_js__WEBPACK_IMPORTED_MODULE_2__.IdentifierNode.create(constraintName) : undefined,
        });
    },
    cloneWith(node, props) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            ...props,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/from-node.js":
/*!******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/from-node.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FromNode: () => (/* binding */ FromNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./from-node.d.ts" />

/**
 * @internal
 */
const FromNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'FromNode';
    },
    create(froms) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'FromNode',
            froms: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(froms),
        });
    },
    cloneWithFroms(from, froms) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...from,
            froms: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...from.froms, ...froms]),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/function-node.js":
/*!**********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/function-node.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FunctionNode: () => (/* binding */ FunctionNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./function-node.d.ts" />

/**
 * @internal
 */
const FunctionNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'FunctionNode';
    },
    create(func, args) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'FunctionNode',
            func,
            arguments: args,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/generated-node.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/generated-node.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GeneratedNode: () => (/* binding */ GeneratedNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./generated-node.d.ts" />

/**
 * @internal
 */
const GeneratedNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'GeneratedNode';
    },
    create(params) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'GeneratedNode',
            ...params,
        });
    },
    createWithExpression(expression) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'GeneratedNode',
            always: true,
            expression,
        });
    },
    cloneWith(node, params) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            ...params,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/group-by-item-node.js":
/*!***************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/group-by-item-node.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GroupByItemNode: () => (/* binding */ GroupByItemNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./group-by-item-node.d.ts" />

/**
 * @internal
 */
const GroupByItemNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'GroupByItemNode';
    },
    create(groupBy) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'GroupByItemNode',
            groupBy,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/group-by-node.js":
/*!**********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/group-by-node.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   GroupByNode: () => (/* binding */ GroupByNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./group-by-node.d.ts" />

/**
 * @internal
 */
const GroupByNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'GroupByNode';
    },
    create(items) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'GroupByNode',
            items: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(items),
        });
    },
    cloneWithItems(groupBy, items) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...groupBy,
            items: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...groupBy.items, ...items]),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/having-node.js":
/*!********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/having-node.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HavingNode: () => (/* binding */ HavingNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _and_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./and-node.js */ "./node_modules/kysely/dist/esm/operation-node/and-node.js");
/* harmony import */ var _or_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./or-node.js */ "./node_modules/kysely/dist/esm/operation-node/or-node.js");
/// <reference types="./having-node.d.ts" />



/**
 * @internal
 */
const HavingNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'HavingNode';
    },
    create(filter) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'HavingNode',
            having: filter,
        });
    },
    cloneWithOperation(havingNode, operator, operation) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...havingNode,
            having: operator === 'And'
                ? _and_node_js__WEBPACK_IMPORTED_MODULE_1__.AndNode.create(havingNode.having, operation)
                : _or_node_js__WEBPACK_IMPORTED_MODULE_2__.OrNode.create(havingNode.having, operation),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js":
/*!************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/identifier-node.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   IdentifierNode: () => (/* binding */ IdentifierNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./identifier-node.d.ts" />

/**
 * @internal
 */
const IdentifierNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'IdentifierNode';
    },
    create(name) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'IdentifierNode',
            name,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/insert-query-node.js":
/*!**************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/insert-query-node.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InsertQueryNode: () => (/* binding */ InsertQueryNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./insert-query-node.d.ts" />

/**
 * @internal
 */
const InsertQueryNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'InsertQueryNode';
    },
    create(into, withNode, replace) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'InsertQueryNode',
            into,
            ...(withNode && { with: withNode }),
            replace,
        });
    },
    createWithoutInto() {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'InsertQueryNode',
        });
    },
    cloneWith(insertQuery, props) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...insertQuery,
            ...props,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/join-node.js":
/*!******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/join-node.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JoinNode: () => (/* binding */ JoinNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _on_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./on-node.js */ "./node_modules/kysely/dist/esm/operation-node/on-node.js");
/// <reference types="./join-node.d.ts" />


/**
 * @internal
 */
const JoinNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'JoinNode';
    },
    create(joinType, table) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'JoinNode',
            joinType,
            table,
            on: undefined,
        });
    },
    createWithOn(joinType, table, on) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'JoinNode',
            joinType,
            table,
            on: _on_node_js__WEBPACK_IMPORTED_MODULE_1__.OnNode.create(on),
        });
    },
    cloneWithOn(joinNode, operation) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...joinNode,
            on: joinNode.on
                ? _on_node_js__WEBPACK_IMPORTED_MODULE_1__.OnNode.cloneWithOperation(joinNode.on, 'And', operation)
                : _on_node_js__WEBPACK_IMPORTED_MODULE_1__.OnNode.create(operation),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/json-operator-chain-node.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/json-operator-chain-node.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JSONOperatorChainNode: () => (/* binding */ JSONOperatorChainNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./json-operator-chain-node.d.ts" />

/**
 * @internal
 */
const JSONOperatorChainNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'JSONOperatorChainNode';
    },
    create(operator) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'JSONOperatorChainNode',
            operator,
            values: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([]),
        });
    },
    cloneWithValue(node, value) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            values: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...node.values, value]),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/json-path-leg-node.js":
/*!***************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/json-path-leg-node.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JSONPathLegNode: () => (/* binding */ JSONPathLegNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./json-path-leg-node.d.ts" />

/**
 * @internal
 */
const JSONPathLegNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'JSONPathLegNode';
    },
    create(type, value) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'JSONPathLegNode',
            type,
            value,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/json-path-node.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/json-path-node.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JSONPathNode: () => (/* binding */ JSONPathNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./json-path-node.d.ts" />

/**
 * @internal
 */
const JSONPathNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'JSONPathNode';
    },
    create(inOperator) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'JSONPathNode',
            inOperator,
            pathLegs: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([]),
        });
    },
    cloneWithLeg(jsonPathNode, pathLeg) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...jsonPathNode,
            pathLegs: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...jsonPathNode.pathLegs, pathLeg]),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/json-reference-node.js":
/*!****************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/json-reference-node.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JSONReferenceNode: () => (/* binding */ JSONReferenceNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./json-reference-node.d.ts" />

/**
 * @internal
 */
const JSONReferenceNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'JSONReferenceNode';
    },
    create(reference, traversal) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'JSONReferenceNode',
            reference,
            traversal,
        });
    },
    cloneWithTraversal(node, traversal) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            traversal,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/limit-node.js":
/*!*******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/limit-node.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LimitNode: () => (/* binding */ LimitNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./limit-node.d.ts" />

/**
 * @internal
 */
const LimitNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'LimitNode';
    },
    create(limit) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'LimitNode',
            limit,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/matched-node.js":
/*!*********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/matched-node.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MatchedNode: () => (/* binding */ MatchedNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./matched-node.d.ts" />

/**
 * @internal
 */
const MatchedNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'MatchedNode';
    },
    create(not, bySource = false) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'MatchedNode',
            not,
            bySource,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/merge-query-node.js":
/*!*************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/merge-query-node.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MergeQueryNode: () => (/* binding */ MergeQueryNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _when_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./when-node.js */ "./node_modules/kysely/dist/esm/operation-node/when-node.js");
/// <reference types="./merge-query-node.d.ts" />


/**
 * @internal
 */
const MergeQueryNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'MergeQueryNode';
    },
    create(into, withNode) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'MergeQueryNode',
            into,
            ...(withNode && { with: withNode }),
        });
    },
    cloneWithUsing(mergeNode, using) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...mergeNode,
            using,
        });
    },
    cloneWithWhen(mergeNode, when) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...mergeNode,
            whens: mergeNode.whens
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...mergeNode.whens, when])
                : (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([when]),
        });
    },
    cloneWithThen(mergeNode, then) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...mergeNode,
            whens: mergeNode.whens
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([
                    ...mergeNode.whens.slice(0, -1),
                    _when_node_js__WEBPACK_IMPORTED_MODULE_1__.WhenNode.cloneWithResult(mergeNode.whens[mergeNode.whens.length - 1], then),
                ])
                : undefined,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/modify-column-node.js":
/*!***************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/modify-column-node.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ModifyColumnNode: () => (/* binding */ ModifyColumnNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./modify-column-node.d.ts" />

/**
 * @internal
 */
const ModifyColumnNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'ModifyColumnNode';
    },
    create(column) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ModifyColumnNode',
            column,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/offset-node.js":
/*!********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/offset-node.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OffsetNode: () => (/* binding */ OffsetNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./offset-node.d.ts" />

/**
 * @internal
 */
const OffsetNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'OffsetNode';
    },
    create(offset) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'OffsetNode',
            offset,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/on-conflict-node.js":
/*!*************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/on-conflict-node.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OnConflictNode: () => (/* binding */ OnConflictNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _where_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./where-node.js */ "./node_modules/kysely/dist/esm/operation-node/where-node.js");
/// <reference types="./on-conflict-node.d.ts" />


/**
 * @internal
 */
const OnConflictNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'OnConflictNode';
    },
    create() {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'OnConflictNode',
        });
    },
    cloneWith(node, props) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            ...props,
        });
    },
    cloneWithIndexWhere(node, operation) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            indexWhere: node.indexWhere
                ? _where_node_js__WEBPACK_IMPORTED_MODULE_1__.WhereNode.cloneWithOperation(node.indexWhere, 'And', operation)
                : _where_node_js__WEBPACK_IMPORTED_MODULE_1__.WhereNode.create(operation),
        });
    },
    cloneWithIndexOrWhere(node, operation) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            indexWhere: node.indexWhere
                ? _where_node_js__WEBPACK_IMPORTED_MODULE_1__.WhereNode.cloneWithOperation(node.indexWhere, 'Or', operation)
                : _where_node_js__WEBPACK_IMPORTED_MODULE_1__.WhereNode.create(operation),
        });
    },
    cloneWithUpdateWhere(node, operation) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            updateWhere: node.updateWhere
                ? _where_node_js__WEBPACK_IMPORTED_MODULE_1__.WhereNode.cloneWithOperation(node.updateWhere, 'And', operation)
                : _where_node_js__WEBPACK_IMPORTED_MODULE_1__.WhereNode.create(operation),
        });
    },
    cloneWithUpdateOrWhere(node, operation) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            updateWhere: node.updateWhere
                ? _where_node_js__WEBPACK_IMPORTED_MODULE_1__.WhereNode.cloneWithOperation(node.updateWhere, 'Or', operation)
                : _where_node_js__WEBPACK_IMPORTED_MODULE_1__.WhereNode.create(operation),
        });
    },
    cloneWithoutIndexWhere(node) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            indexWhere: undefined,
        });
    },
    cloneWithoutUpdateWhere(node) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            updateWhere: undefined,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/on-duplicate-key-node.js":
/*!******************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/on-duplicate-key-node.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OnDuplicateKeyNode: () => (/* binding */ OnDuplicateKeyNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./on-duplicate-key-node.d.ts" />

/**
 * @internal
 */
const OnDuplicateKeyNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'OnDuplicateKeyNode';
    },
    create(updates) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'OnDuplicateKeyNode',
            updates,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/on-node.js":
/*!****************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/on-node.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OnNode: () => (/* binding */ OnNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _and_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./and-node.js */ "./node_modules/kysely/dist/esm/operation-node/and-node.js");
/* harmony import */ var _or_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./or-node.js */ "./node_modules/kysely/dist/esm/operation-node/or-node.js");
/// <reference types="./on-node.d.ts" />



/**
 * @internal
 */
const OnNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'OnNode';
    },
    create(filter) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'OnNode',
            on: filter,
        });
    },
    cloneWithOperation(onNode, operator, operation) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...onNode,
            on: operator === 'And'
                ? _and_node_js__WEBPACK_IMPORTED_MODULE_1__.AndNode.create(onNode.on, operation)
                : _or_node_js__WEBPACK_IMPORTED_MODULE_2__.OrNode.create(onNode.on, operation),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/operation-node-source.js":
/*!******************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/operation-node-source.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isOperationNodeSource: () => (/* binding */ isOperationNodeSource)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./operation-node-source.d.ts" />

function isOperationNodeSource(obj) {
    return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(obj) && (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(obj.toOperationNode);
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/operation-node-transformer.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/operation-node-transformer.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OperationNodeTransformer: () => (/* binding */ OperationNodeTransformer)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/require-all-props.js */ "./node_modules/kysely/dist/esm/util/require-all-props.js");
/// <reference types="./operation-node-transformer.d.ts" />


/**
 * Transforms an operation node tree into another one.
 *
 * Kysely queries are expressed internally as a tree of objects (operation nodes).
 * `OperationNodeTransformer` takes such a tree as its input and returns a
 * transformed deep copy of it. By default the `OperationNodeTransformer`
 * does nothing. You need to override one or more methods to make it do
 * something.
 *
 * There's a method for each node type. For example if you'd like to convert
 * each identifier (table name, column name, alias etc.) from camelCase to
 * snake_case, you'd do something like this:
 *
 * ```ts
 * class CamelCaseTransformer extends OperationNodeTransformer {
 *   transformIdentifier(node: IdentifierNode): IdentifierNode {
 *     node = super.transformIdentifier(node),
 *
 *     return {
 *       ...node,
 *       name: snakeCase(node.name),
 *     }
 *   }
 * }
 *
 * const transformer = new CamelCaseTransformer()
 * const tree = transformer.transformNode(tree)
 * ```
 */
class OperationNodeTransformer {
    nodeStack = [];
    #transformers = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
        AliasNode: this.transformAlias.bind(this),
        ColumnNode: this.transformColumn.bind(this),
        IdentifierNode: this.transformIdentifier.bind(this),
        SchemableIdentifierNode: this.transformSchemableIdentifier.bind(this),
        RawNode: this.transformRaw.bind(this),
        ReferenceNode: this.transformReference.bind(this),
        SelectQueryNode: this.transformSelectQuery.bind(this),
        SelectionNode: this.transformSelection.bind(this),
        TableNode: this.transformTable.bind(this),
        FromNode: this.transformFrom.bind(this),
        SelectAllNode: this.transformSelectAll.bind(this),
        AndNode: this.transformAnd.bind(this),
        OrNode: this.transformOr.bind(this),
        ValueNode: this.transformValue.bind(this),
        ValueListNode: this.transformValueList.bind(this),
        PrimitiveValueListNode: this.transformPrimitiveValueList.bind(this),
        ParensNode: this.transformParens.bind(this),
        JoinNode: this.transformJoin.bind(this),
        OperatorNode: this.transformOperator.bind(this),
        WhereNode: this.transformWhere.bind(this),
        InsertQueryNode: this.transformInsertQuery.bind(this),
        DeleteQueryNode: this.transformDeleteQuery.bind(this),
        ReturningNode: this.transformReturning.bind(this),
        CreateTableNode: this.transformCreateTable.bind(this),
        AddColumnNode: this.transformAddColumn.bind(this),
        ColumnDefinitionNode: this.transformColumnDefinition.bind(this),
        DropTableNode: this.transformDropTable.bind(this),
        DataTypeNode: this.transformDataType.bind(this),
        OrderByNode: this.transformOrderBy.bind(this),
        OrderByItemNode: this.transformOrderByItem.bind(this),
        GroupByNode: this.transformGroupBy.bind(this),
        GroupByItemNode: this.transformGroupByItem.bind(this),
        UpdateQueryNode: this.transformUpdateQuery.bind(this),
        ColumnUpdateNode: this.transformColumnUpdate.bind(this),
        LimitNode: this.transformLimit.bind(this),
        OffsetNode: this.transformOffset.bind(this),
        OnConflictNode: this.transformOnConflict.bind(this),
        OnDuplicateKeyNode: this.transformOnDuplicateKey.bind(this),
        CreateIndexNode: this.transformCreateIndex.bind(this),
        DropIndexNode: this.transformDropIndex.bind(this),
        ListNode: this.transformList.bind(this),
        PrimaryKeyConstraintNode: this.transformPrimaryKeyConstraint.bind(this),
        UniqueConstraintNode: this.transformUniqueConstraint.bind(this),
        ReferencesNode: this.transformReferences.bind(this),
        CheckConstraintNode: this.transformCheckConstraint.bind(this),
        WithNode: this.transformWith.bind(this),
        CommonTableExpressionNode: this.transformCommonTableExpression.bind(this),
        CommonTableExpressionNameNode: this.transformCommonTableExpressionName.bind(this),
        HavingNode: this.transformHaving.bind(this),
        CreateSchemaNode: this.transformCreateSchema.bind(this),
        DropSchemaNode: this.transformDropSchema.bind(this),
        AlterTableNode: this.transformAlterTable.bind(this),
        DropColumnNode: this.transformDropColumn.bind(this),
        RenameColumnNode: this.transformRenameColumn.bind(this),
        AlterColumnNode: this.transformAlterColumn.bind(this),
        ModifyColumnNode: this.transformModifyColumn.bind(this),
        AddConstraintNode: this.transformAddConstraint.bind(this),
        DropConstraintNode: this.transformDropConstraint.bind(this),
        ForeignKeyConstraintNode: this.transformForeignKeyConstraint.bind(this),
        CreateViewNode: this.transformCreateView.bind(this),
        DropViewNode: this.transformDropView.bind(this),
        GeneratedNode: this.transformGenerated.bind(this),
        DefaultValueNode: this.transformDefaultValue.bind(this),
        OnNode: this.transformOn.bind(this),
        ValuesNode: this.transformValues.bind(this),
        SelectModifierNode: this.transformSelectModifier.bind(this),
        CreateTypeNode: this.transformCreateType.bind(this),
        DropTypeNode: this.transformDropType.bind(this),
        ExplainNode: this.transformExplain.bind(this),
        DefaultInsertValueNode: this.transformDefaultInsertValue.bind(this),
        AggregateFunctionNode: this.transformAggregateFunction.bind(this),
        OverNode: this.transformOver.bind(this),
        PartitionByNode: this.transformPartitionBy.bind(this),
        PartitionByItemNode: this.transformPartitionByItem.bind(this),
        SetOperationNode: this.transformSetOperation.bind(this),
        BinaryOperationNode: this.transformBinaryOperation.bind(this),
        UnaryOperationNode: this.transformUnaryOperation.bind(this),
        UsingNode: this.transformUsing.bind(this),
        FunctionNode: this.transformFunction.bind(this),
        CaseNode: this.transformCase.bind(this),
        WhenNode: this.transformWhen.bind(this),
        JSONReferenceNode: this.transformJSONReference.bind(this),
        JSONPathNode: this.transformJSONPath.bind(this),
        JSONPathLegNode: this.transformJSONPathLeg.bind(this),
        JSONOperatorChainNode: this.transformJSONOperatorChain.bind(this),
        TupleNode: this.transformTuple.bind(this),
        MergeQueryNode: this.transformMergeQuery.bind(this),
        MatchedNode: this.transformMatched.bind(this),
        AddIndexNode: this.transformAddIndex.bind(this),
        CastNode: this.transformCast.bind(this),
        FetchNode: this.transformFetch.bind(this),
        TopNode: this.transformTop.bind(this),
    });
    transformNode(node) {
        if (!node) {
            return node;
        }
        this.nodeStack.push(node);
        const out = this.transformNodeImpl(node);
        this.nodeStack.pop();
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(out);
    }
    transformNodeImpl(node) {
        return this.#transformers[node.kind](node);
    }
    transformNodeList(list) {
        if (!list) {
            return list;
        }
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(list.map((node) => this.transformNode(node)));
    }
    transformSelectQuery(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'SelectQueryNode',
            from: this.transformNode(node.from),
            selections: this.transformNodeList(node.selections),
            distinctOn: this.transformNodeList(node.distinctOn),
            joins: this.transformNodeList(node.joins),
            groupBy: this.transformNode(node.groupBy),
            orderBy: this.transformNode(node.orderBy),
            where: this.transformNode(node.where),
            frontModifiers: this.transformNodeList(node.frontModifiers),
            endModifiers: this.transformNodeList(node.endModifiers),
            limit: this.transformNode(node.limit),
            offset: this.transformNode(node.offset),
            with: this.transformNode(node.with),
            having: this.transformNode(node.having),
            explain: this.transformNode(node.explain),
            setOperations: this.transformNodeList(node.setOperations),
            fetch: this.transformNode(node.fetch),
            top: this.transformNode(node.top),
        });
    }
    transformSelection(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'SelectionNode',
            selection: this.transformNode(node.selection),
        });
    }
    transformColumn(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'ColumnNode',
            column: this.transformNode(node.column),
        });
    }
    transformAlias(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'AliasNode',
            node: this.transformNode(node.node),
            alias: this.transformNode(node.alias),
        });
    }
    transformTable(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'TableNode',
            table: this.transformNode(node.table),
        });
    }
    transformFrom(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'FromNode',
            froms: this.transformNodeList(node.froms),
        });
    }
    transformReference(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'ReferenceNode',
            column: this.transformNode(node.column),
            table: this.transformNode(node.table),
        });
    }
    transformAnd(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'AndNode',
            left: this.transformNode(node.left),
            right: this.transformNode(node.right),
        });
    }
    transformOr(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'OrNode',
            left: this.transformNode(node.left),
            right: this.transformNode(node.right),
        });
    }
    transformValueList(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'ValueListNode',
            values: this.transformNodeList(node.values),
        });
    }
    transformParens(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'ParensNode',
            node: this.transformNode(node.node),
        });
    }
    transformJoin(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'JoinNode',
            joinType: node.joinType,
            table: this.transformNode(node.table),
            on: this.transformNode(node.on),
        });
    }
    transformRaw(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'RawNode',
            sqlFragments: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...node.sqlFragments]),
            parameters: this.transformNodeList(node.parameters),
        });
    }
    transformWhere(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'WhereNode',
            where: this.transformNode(node.where),
        });
    }
    transformInsertQuery(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'InsertQueryNode',
            into: this.transformNode(node.into),
            columns: this.transformNodeList(node.columns),
            values: this.transformNode(node.values),
            returning: this.transformNode(node.returning),
            onConflict: this.transformNode(node.onConflict),
            onDuplicateKey: this.transformNode(node.onDuplicateKey),
            with: this.transformNode(node.with),
            ignore: node.ignore,
            replace: node.replace,
            explain: this.transformNode(node.explain),
            defaultValues: node.defaultValues,
            top: this.transformNode(node.top),
        });
    }
    transformValues(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'ValuesNode',
            values: this.transformNodeList(node.values),
        });
    }
    transformDeleteQuery(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'DeleteQueryNode',
            from: this.transformNode(node.from),
            using: this.transformNode(node.using),
            joins: this.transformNodeList(node.joins),
            where: this.transformNode(node.where),
            returning: this.transformNode(node.returning),
            with: this.transformNode(node.with),
            orderBy: this.transformNode(node.orderBy),
            limit: this.transformNode(node.limit),
            explain: this.transformNode(node.explain),
            top: this.transformNode(node.top),
        });
    }
    transformReturning(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'ReturningNode',
            selections: this.transformNodeList(node.selections),
        });
    }
    transformCreateTable(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'CreateTableNode',
            table: this.transformNode(node.table),
            columns: this.transformNodeList(node.columns),
            constraints: this.transformNodeList(node.constraints),
            temporary: node.temporary,
            ifNotExists: node.ifNotExists,
            onCommit: node.onCommit,
            frontModifiers: this.transformNodeList(node.frontModifiers),
            endModifiers: this.transformNodeList(node.endModifiers),
            selectQuery: this.transformNode(node.selectQuery),
        });
    }
    transformColumnDefinition(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'ColumnDefinitionNode',
            column: this.transformNode(node.column),
            dataType: this.transformNode(node.dataType),
            references: this.transformNode(node.references),
            primaryKey: node.primaryKey,
            autoIncrement: node.autoIncrement,
            unique: node.unique,
            notNull: node.notNull,
            unsigned: node.unsigned,
            defaultTo: this.transformNode(node.defaultTo),
            check: this.transformNode(node.check),
            generated: this.transformNode(node.generated),
            frontModifiers: this.transformNodeList(node.frontModifiers),
            endModifiers: this.transformNodeList(node.endModifiers),
            nullsNotDistinct: node.nullsNotDistinct,
            identity: node.identity,
        });
    }
    transformAddColumn(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'AddColumnNode',
            column: this.transformNode(node.column),
        });
    }
    transformDropTable(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'DropTableNode',
            table: this.transformNode(node.table),
            ifExists: node.ifExists,
            cascade: node.cascade,
        });
    }
    transformOrderBy(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'OrderByNode',
            items: this.transformNodeList(node.items),
        });
    }
    transformOrderByItem(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'OrderByItemNode',
            orderBy: this.transformNode(node.orderBy),
            direction: this.transformNode(node.direction),
        });
    }
    transformGroupBy(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'GroupByNode',
            items: this.transformNodeList(node.items),
        });
    }
    transformGroupByItem(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'GroupByItemNode',
            groupBy: this.transformNode(node.groupBy),
        });
    }
    transformUpdateQuery(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'UpdateQueryNode',
            table: this.transformNode(node.table),
            from: this.transformNode(node.from),
            joins: this.transformNodeList(node.joins),
            where: this.transformNode(node.where),
            updates: this.transformNodeList(node.updates),
            returning: this.transformNode(node.returning),
            with: this.transformNode(node.with),
            explain: this.transformNode(node.explain),
            limit: this.transformNode(node.limit),
            top: this.transformNode(node.top),
        });
    }
    transformColumnUpdate(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'ColumnUpdateNode',
            column: this.transformNode(node.column),
            value: this.transformNode(node.value),
        });
    }
    transformLimit(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'LimitNode',
            limit: this.transformNode(node.limit),
        });
    }
    transformOffset(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'OffsetNode',
            offset: this.transformNode(node.offset),
        });
    }
    transformOnConflict(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'OnConflictNode',
            columns: this.transformNodeList(node.columns),
            constraint: this.transformNode(node.constraint),
            indexExpression: this.transformNode(node.indexExpression),
            indexWhere: this.transformNode(node.indexWhere),
            updates: this.transformNodeList(node.updates),
            updateWhere: this.transformNode(node.updateWhere),
            doNothing: node.doNothing,
        });
    }
    transformOnDuplicateKey(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'OnDuplicateKeyNode',
            updates: this.transformNodeList(node.updates),
        });
    }
    transformCreateIndex(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'CreateIndexNode',
            name: this.transformNode(node.name),
            table: this.transformNode(node.table),
            columns: this.transformNodeList(node.columns),
            unique: node.unique,
            using: this.transformNode(node.using),
            ifNotExists: node.ifNotExists,
            where: this.transformNode(node.where),
            nullsNotDistinct: node.nullsNotDistinct,
        });
    }
    transformList(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'ListNode',
            items: this.transformNodeList(node.items),
        });
    }
    transformDropIndex(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'DropIndexNode',
            name: this.transformNode(node.name),
            table: this.transformNode(node.table),
            ifExists: node.ifExists,
            cascade: node.cascade,
        });
    }
    transformPrimaryKeyConstraint(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'PrimaryKeyConstraintNode',
            columns: this.transformNodeList(node.columns),
            name: this.transformNode(node.name),
        });
    }
    transformUniqueConstraint(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'UniqueConstraintNode',
            columns: this.transformNodeList(node.columns),
            name: this.transformNode(node.name),
            nullsNotDistinct: node.nullsNotDistinct,
        });
    }
    transformForeignKeyConstraint(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'ForeignKeyConstraintNode',
            columns: this.transformNodeList(node.columns),
            references: this.transformNode(node.references),
            name: this.transformNode(node.name),
            onDelete: node.onDelete,
            onUpdate: node.onUpdate,
        });
    }
    transformSetOperation(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'SetOperationNode',
            operator: node.operator,
            expression: this.transformNode(node.expression),
            all: node.all,
        });
    }
    transformReferences(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'ReferencesNode',
            table: this.transformNode(node.table),
            columns: this.transformNodeList(node.columns),
            onDelete: node.onDelete,
            onUpdate: node.onUpdate,
        });
    }
    transformCheckConstraint(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'CheckConstraintNode',
            expression: this.transformNode(node.expression),
            name: this.transformNode(node.name),
        });
    }
    transformWith(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'WithNode',
            expressions: this.transformNodeList(node.expressions),
            recursive: node.recursive,
        });
    }
    transformCommonTableExpression(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'CommonTableExpressionNode',
            name: this.transformNode(node.name),
            materialized: node.materialized,
            expression: this.transformNode(node.expression),
        });
    }
    transformCommonTableExpressionName(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'CommonTableExpressionNameNode',
            table: this.transformNode(node.table),
            columns: this.transformNodeList(node.columns),
        });
    }
    transformHaving(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'HavingNode',
            having: this.transformNode(node.having),
        });
    }
    transformCreateSchema(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'CreateSchemaNode',
            schema: this.transformNode(node.schema),
            ifNotExists: node.ifNotExists,
        });
    }
    transformDropSchema(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'DropSchemaNode',
            schema: this.transformNode(node.schema),
            ifExists: node.ifExists,
            cascade: node.cascade,
        });
    }
    transformAlterTable(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'AlterTableNode',
            table: this.transformNode(node.table),
            renameTo: this.transformNode(node.renameTo),
            setSchema: this.transformNode(node.setSchema),
            columnAlterations: this.transformNodeList(node.columnAlterations),
            addConstraint: this.transformNode(node.addConstraint),
            dropConstraint: this.transformNode(node.dropConstraint),
            addIndex: this.transformNode(node.addIndex),
            dropIndex: this.transformNode(node.dropIndex),
        });
    }
    transformDropColumn(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'DropColumnNode',
            column: this.transformNode(node.column),
        });
    }
    transformRenameColumn(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'RenameColumnNode',
            column: this.transformNode(node.column),
            renameTo: this.transformNode(node.renameTo),
        });
    }
    transformAlterColumn(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'AlterColumnNode',
            column: this.transformNode(node.column),
            dataType: this.transformNode(node.dataType),
            dataTypeExpression: this.transformNode(node.dataTypeExpression),
            setDefault: this.transformNode(node.setDefault),
            dropDefault: node.dropDefault,
            setNotNull: node.setNotNull,
            dropNotNull: node.dropNotNull,
        });
    }
    transformModifyColumn(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'ModifyColumnNode',
            column: this.transformNode(node.column),
        });
    }
    transformAddConstraint(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'AddConstraintNode',
            constraint: this.transformNode(node.constraint),
        });
    }
    transformDropConstraint(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'DropConstraintNode',
            constraintName: this.transformNode(node.constraintName),
            ifExists: node.ifExists,
            modifier: node.modifier,
        });
    }
    transformCreateView(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'CreateViewNode',
            name: this.transformNode(node.name),
            temporary: node.temporary,
            orReplace: node.orReplace,
            ifNotExists: node.ifNotExists,
            materialized: node.materialized,
            columns: this.transformNodeList(node.columns),
            as: this.transformNode(node.as),
        });
    }
    transformDropView(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'DropViewNode',
            name: this.transformNode(node.name),
            ifExists: node.ifExists,
            materialized: node.materialized,
            cascade: node.cascade,
        });
    }
    transformGenerated(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'GeneratedNode',
            byDefault: node.byDefault,
            always: node.always,
            identity: node.identity,
            stored: node.stored,
            expression: this.transformNode(node.expression),
        });
    }
    transformDefaultValue(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'DefaultValueNode',
            defaultValue: this.transformNode(node.defaultValue),
        });
    }
    transformOn(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'OnNode',
            on: this.transformNode(node.on),
        });
    }
    transformSelectModifier(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'SelectModifierNode',
            modifier: node.modifier,
            rawModifier: this.transformNode(node.rawModifier),
            of: this.transformNodeList(node.of),
        });
    }
    transformCreateType(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'CreateTypeNode',
            name: this.transformNode(node.name),
            enum: this.transformNode(node.enum),
        });
    }
    transformDropType(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'DropTypeNode',
            name: this.transformNode(node.name),
            ifExists: node.ifExists,
        });
    }
    transformExplain(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'ExplainNode',
            format: node.format,
            options: this.transformNode(node.options),
        });
    }
    transformSchemableIdentifier(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'SchemableIdentifierNode',
            schema: this.transformNode(node.schema),
            identifier: this.transformNode(node.identifier),
        });
    }
    transformAggregateFunction(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'AggregateFunctionNode',
            aggregated: this.transformNodeList(node.aggregated),
            distinct: node.distinct,
            filter: this.transformNode(node.filter),
            func: node.func,
            over: this.transformNode(node.over),
        });
    }
    transformOver(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'OverNode',
            orderBy: this.transformNode(node.orderBy),
            partitionBy: this.transformNode(node.partitionBy),
        });
    }
    transformPartitionBy(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'PartitionByNode',
            items: this.transformNodeList(node.items),
        });
    }
    transformPartitionByItem(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'PartitionByItemNode',
            partitionBy: this.transformNode(node.partitionBy),
        });
    }
    transformBinaryOperation(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'BinaryOperationNode',
            leftOperand: this.transformNode(node.leftOperand),
            operator: this.transformNode(node.operator),
            rightOperand: this.transformNode(node.rightOperand),
        });
    }
    transformUnaryOperation(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'UnaryOperationNode',
            operator: this.transformNode(node.operator),
            operand: this.transformNode(node.operand),
        });
    }
    transformUsing(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'UsingNode',
            tables: this.transformNodeList(node.tables),
        });
    }
    transformFunction(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'FunctionNode',
            func: node.func,
            arguments: this.transformNodeList(node.arguments),
        });
    }
    transformCase(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'CaseNode',
            value: this.transformNode(node.value),
            when: this.transformNodeList(node.when),
            else: this.transformNode(node.else),
            isStatement: node.isStatement,
        });
    }
    transformWhen(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'WhenNode',
            condition: this.transformNode(node.condition),
            result: this.transformNode(node.result),
        });
    }
    transformJSONReference(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'JSONReferenceNode',
            reference: this.transformNode(node.reference),
            traversal: this.transformNode(node.traversal),
        });
    }
    transformJSONPath(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'JSONPathNode',
            inOperator: this.transformNode(node.inOperator),
            pathLegs: this.transformNodeList(node.pathLegs),
        });
    }
    transformJSONPathLeg(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'JSONPathLegNode',
            type: node.type,
            value: node.value,
        });
    }
    transformJSONOperatorChain(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'JSONOperatorChainNode',
            operator: this.transformNode(node.operator),
            values: this.transformNodeList(node.values),
        });
    }
    transformTuple(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'TupleNode',
            values: this.transformNodeList(node.values),
        });
    }
    transformMergeQuery(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'MergeQueryNode',
            into: this.transformNode(node.into),
            using: this.transformNode(node.using),
            whens: this.transformNodeList(node.whens),
            with: this.transformNode(node.with),
            top: this.transformNode(node.top),
        });
    }
    transformMatched(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'MatchedNode',
            not: node.not,
            bySource: node.bySource,
        });
    }
    transformAddIndex(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'AddIndexNode',
            name: this.transformNode(node.name),
            columns: this.transformNodeList(node.columns),
            unique: node.unique,
            using: this.transformNode(node.using),
            ifNotExists: node.ifNotExists,
        });
    }
    transformCast(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'CastNode',
            expression: this.transformNode(node.expression),
            dataType: this.transformNode(node.dataType),
        });
    }
    transformFetch(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'FetchNode',
            rowCount: this.transformNode(node.rowCount),
            modifier: node.modifier,
        });
    }
    transformTop(node) {
        return (0,_util_require_all_props_js__WEBPACK_IMPORTED_MODULE_1__.requireAllProps)({
            kind: 'TopNode',
            expression: node.expression,
            modifiers: node.modifiers,
        });
    }
    transformDataType(node) {
        // An Object.freezed leaf node. No need to clone.
        return node;
    }
    transformSelectAll(node) {
        // An Object.freezed leaf node. No need to clone.
        return node;
    }
    transformIdentifier(node) {
        // An Object.freezed leaf node. No need to clone.
        return node;
    }
    transformValue(node) {
        // An Object.freezed leaf node. No need to clone.
        return node;
    }
    transformPrimitiveValueList(node) {
        // An Object.freezed leaf node. No need to clone.
        return node;
    }
    transformOperator(node) {
        // An Object.freezed leaf node. No need to clone.
        return node;
    }
    transformDefaultInsertValue(node) {
        // An Object.freezed leaf node. No need to clone.
        return node;
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/operation-node-visitor.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/operation-node-visitor.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OperationNodeVisitor: () => (/* binding */ OperationNodeVisitor)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./operation-node-visitor.d.ts" />

class OperationNodeVisitor {
    nodeStack = [];
    get parentNode() {
        return this.nodeStack[this.nodeStack.length - 2];
    }
    #visitors = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
        AliasNode: this.visitAlias.bind(this),
        ColumnNode: this.visitColumn.bind(this),
        IdentifierNode: this.visitIdentifier.bind(this),
        SchemableIdentifierNode: this.visitSchemableIdentifier.bind(this),
        RawNode: this.visitRaw.bind(this),
        ReferenceNode: this.visitReference.bind(this),
        SelectQueryNode: this.visitSelectQuery.bind(this),
        SelectionNode: this.visitSelection.bind(this),
        TableNode: this.visitTable.bind(this),
        FromNode: this.visitFrom.bind(this),
        SelectAllNode: this.visitSelectAll.bind(this),
        AndNode: this.visitAnd.bind(this),
        OrNode: this.visitOr.bind(this),
        ValueNode: this.visitValue.bind(this),
        ValueListNode: this.visitValueList.bind(this),
        PrimitiveValueListNode: this.visitPrimitiveValueList.bind(this),
        ParensNode: this.visitParens.bind(this),
        JoinNode: this.visitJoin.bind(this),
        OperatorNode: this.visitOperator.bind(this),
        WhereNode: this.visitWhere.bind(this),
        InsertQueryNode: this.visitInsertQuery.bind(this),
        DeleteQueryNode: this.visitDeleteQuery.bind(this),
        ReturningNode: this.visitReturning.bind(this),
        CreateTableNode: this.visitCreateTable.bind(this),
        AddColumnNode: this.visitAddColumn.bind(this),
        ColumnDefinitionNode: this.visitColumnDefinition.bind(this),
        DropTableNode: this.visitDropTable.bind(this),
        DataTypeNode: this.visitDataType.bind(this),
        OrderByNode: this.visitOrderBy.bind(this),
        OrderByItemNode: this.visitOrderByItem.bind(this),
        GroupByNode: this.visitGroupBy.bind(this),
        GroupByItemNode: this.visitGroupByItem.bind(this),
        UpdateQueryNode: this.visitUpdateQuery.bind(this),
        ColumnUpdateNode: this.visitColumnUpdate.bind(this),
        LimitNode: this.visitLimit.bind(this),
        OffsetNode: this.visitOffset.bind(this),
        OnConflictNode: this.visitOnConflict.bind(this),
        OnDuplicateKeyNode: this.visitOnDuplicateKey.bind(this),
        CreateIndexNode: this.visitCreateIndex.bind(this),
        DropIndexNode: this.visitDropIndex.bind(this),
        ListNode: this.visitList.bind(this),
        PrimaryKeyConstraintNode: this.visitPrimaryKeyConstraint.bind(this),
        UniqueConstraintNode: this.visitUniqueConstraint.bind(this),
        ReferencesNode: this.visitReferences.bind(this),
        CheckConstraintNode: this.visitCheckConstraint.bind(this),
        WithNode: this.visitWith.bind(this),
        CommonTableExpressionNode: this.visitCommonTableExpression.bind(this),
        CommonTableExpressionNameNode: this.visitCommonTableExpressionName.bind(this),
        HavingNode: this.visitHaving.bind(this),
        CreateSchemaNode: this.visitCreateSchema.bind(this),
        DropSchemaNode: this.visitDropSchema.bind(this),
        AlterTableNode: this.visitAlterTable.bind(this),
        DropColumnNode: this.visitDropColumn.bind(this),
        RenameColumnNode: this.visitRenameColumn.bind(this),
        AlterColumnNode: this.visitAlterColumn.bind(this),
        ModifyColumnNode: this.visitModifyColumn.bind(this),
        AddConstraintNode: this.visitAddConstraint.bind(this),
        DropConstraintNode: this.visitDropConstraint.bind(this),
        ForeignKeyConstraintNode: this.visitForeignKeyConstraint.bind(this),
        CreateViewNode: this.visitCreateView.bind(this),
        DropViewNode: this.visitDropView.bind(this),
        GeneratedNode: this.visitGenerated.bind(this),
        DefaultValueNode: this.visitDefaultValue.bind(this),
        OnNode: this.visitOn.bind(this),
        ValuesNode: this.visitValues.bind(this),
        SelectModifierNode: this.visitSelectModifier.bind(this),
        CreateTypeNode: this.visitCreateType.bind(this),
        DropTypeNode: this.visitDropType.bind(this),
        ExplainNode: this.visitExplain.bind(this),
        DefaultInsertValueNode: this.visitDefaultInsertValue.bind(this),
        AggregateFunctionNode: this.visitAggregateFunction.bind(this),
        OverNode: this.visitOver.bind(this),
        PartitionByNode: this.visitPartitionBy.bind(this),
        PartitionByItemNode: this.visitPartitionByItem.bind(this),
        SetOperationNode: this.visitSetOperation.bind(this),
        BinaryOperationNode: this.visitBinaryOperation.bind(this),
        UnaryOperationNode: this.visitUnaryOperation.bind(this),
        UsingNode: this.visitUsing.bind(this),
        FunctionNode: this.visitFunction.bind(this),
        CaseNode: this.visitCase.bind(this),
        WhenNode: this.visitWhen.bind(this),
        JSONReferenceNode: this.visitJSONReference.bind(this),
        JSONPathNode: this.visitJSONPath.bind(this),
        JSONPathLegNode: this.visitJSONPathLeg.bind(this),
        JSONOperatorChainNode: this.visitJSONOperatorChain.bind(this),
        TupleNode: this.visitTuple.bind(this),
        MergeQueryNode: this.visitMergeQuery.bind(this),
        MatchedNode: this.visitMatched.bind(this),
        AddIndexNode: this.visitAddIndex.bind(this),
        CastNode: this.visitCast.bind(this),
        FetchNode: this.visitFetch.bind(this),
        TopNode: this.visitTop.bind(this),
    });
    visitNode = (node) => {
        this.nodeStack.push(node);
        this.#visitors[node.kind](node);
        this.nodeStack.pop();
    };
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/operator-node.js":
/*!**********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/operator-node.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ARITHMETIC_OPERATORS: () => (/* binding */ ARITHMETIC_OPERATORS),
/* harmony export */   BINARY_OPERATORS: () => (/* binding */ BINARY_OPERATORS),
/* harmony export */   COMPARISON_OPERATORS: () => (/* binding */ COMPARISON_OPERATORS),
/* harmony export */   JSON_OPERATORS: () => (/* binding */ JSON_OPERATORS),
/* harmony export */   OPERATORS: () => (/* binding */ OPERATORS),
/* harmony export */   OperatorNode: () => (/* binding */ OperatorNode),
/* harmony export */   UNARY_FILTER_OPERATORS: () => (/* binding */ UNARY_FILTER_OPERATORS),
/* harmony export */   UNARY_OPERATORS: () => (/* binding */ UNARY_OPERATORS),
/* harmony export */   isArithmeticOperator: () => (/* binding */ isArithmeticOperator),
/* harmony export */   isBinaryOperator: () => (/* binding */ isBinaryOperator),
/* harmony export */   isComparisonOperator: () => (/* binding */ isComparisonOperator),
/* harmony export */   isJSONOperator: () => (/* binding */ isJSONOperator),
/* harmony export */   isOperator: () => (/* binding */ isOperator)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./operator-node.d.ts" />

const COMPARISON_OPERATORS = [
    '=',
    '==',
    '!=',
    '<>',
    '>',
    '>=',
    '<',
    '<=',
    'in',
    'not in',
    'is',
    'is not',
    'like',
    'not like',
    'match',
    'ilike',
    'not ilike',
    '@>',
    '<@',
    '&&',
    '?',
    '?&',
    '!<',
    '!>',
    '<=>',
    '!~',
    '~',
    '~*',
    '!~*',
    '@@',
    '@@@',
    '!!',
    '<->',
    'regexp',
    'is distinct from',
    'is not distinct from',
];
const ARITHMETIC_OPERATORS = [
    '+',
    '-',
    '*',
    '/',
    '%',
    '^',
    '&',
    '|',
    '#',
    '<<',
    '>>',
];
const JSON_OPERATORS = ['->', '->>'];
const BINARY_OPERATORS = [
    ...COMPARISON_OPERATORS,
    ...ARITHMETIC_OPERATORS,
    '&&',
    '||',
];
const UNARY_FILTER_OPERATORS = ['exists', 'not exists'];
const UNARY_OPERATORS = ['not', '-', ...UNARY_FILTER_OPERATORS];
const OPERATORS = [
    ...BINARY_OPERATORS,
    ...JSON_OPERATORS,
    ...UNARY_OPERATORS,
    'between',
    'between symmetric',
];
/**
 * @internal
 */
const OperatorNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'OperatorNode';
    },
    create(operator) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'OperatorNode',
            operator,
        });
    },
});
function isOperator(op) {
    return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isString)(op) && OPERATORS.includes(op);
}
function isBinaryOperator(op) {
    return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isString)(op) && BINARY_OPERATORS.includes(op);
}
function isComparisonOperator(op) {
    return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isString)(op) && COMPARISON_OPERATORS.includes(op);
}
function isArithmeticOperator(op) {
    return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isString)(op) && ARITHMETIC_OPERATORS.includes(op);
}
function isJSONOperator(op) {
    return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isString)(op) && JSON_OPERATORS.includes(op);
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/or-node.js":
/*!****************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/or-node.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrNode: () => (/* binding */ OrNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./or-node.d.ts" />

/**
 * @internal
 */
const OrNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'OrNode';
    },
    create(left, right) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'OrNode',
            left,
            right,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/order-by-item-node.js":
/*!***************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/order-by-item-node.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrderByItemNode: () => (/* binding */ OrderByItemNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./order-by-item-node.d.ts" />

/**
 * @internal
 */
const OrderByItemNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'OrderByItemNode';
    },
    create(orderBy, direction) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'OrderByItemNode',
            orderBy,
            direction,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/order-by-node.js":
/*!**********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/order-by-node.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OrderByNode: () => (/* binding */ OrderByNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./order-by-node.d.ts" />

/**
 * @internal
 */
const OrderByNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'OrderByNode';
    },
    create(items) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'OrderByNode',
            items: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...items]),
        });
    },
    cloneWithItems(orderBy, items) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...orderBy,
            items: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...orderBy.items, ...items]),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/over-node.js":
/*!******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/over-node.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OverNode: () => (/* binding */ OverNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _order_by_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./order-by-node.js */ "./node_modules/kysely/dist/esm/operation-node/order-by-node.js");
/* harmony import */ var _partition_by_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./partition-by-node.js */ "./node_modules/kysely/dist/esm/operation-node/partition-by-node.js");
/// <reference types="./over-node.d.ts" />



/**
 * @internal
 */
const OverNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'OverNode';
    },
    create() {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'OverNode',
        });
    },
    cloneWithOrderByItems(overNode, items) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...overNode,
            orderBy: overNode.orderBy
                ? _order_by_node_js__WEBPACK_IMPORTED_MODULE_1__.OrderByNode.cloneWithItems(overNode.orderBy, items)
                : _order_by_node_js__WEBPACK_IMPORTED_MODULE_1__.OrderByNode.create(items),
        });
    },
    cloneWithPartitionByItems(overNode, items) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...overNode,
            partitionBy: overNode.partitionBy
                ? _partition_by_node_js__WEBPACK_IMPORTED_MODULE_2__.PartitionByNode.cloneWithItems(overNode.partitionBy, items)
                : _partition_by_node_js__WEBPACK_IMPORTED_MODULE_2__.PartitionByNode.create(items),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/parens-node.js":
/*!********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/parens-node.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ParensNode: () => (/* binding */ ParensNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./parens-node.d.ts" />

/**
 * @internal
 */
const ParensNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'ParensNode';
    },
    create(node) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ParensNode',
            node,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/partition-by-item-node.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/partition-by-item-node.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PartitionByItemNode: () => (/* binding */ PartitionByItemNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./partition-by-item-node.d.ts" />

/**
 * @internal
 */
const PartitionByItemNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'PartitionByItemNode';
    },
    create(partitionBy) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'PartitionByItemNode',
            partitionBy,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/partition-by-node.js":
/*!**************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/partition-by-node.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PartitionByNode: () => (/* binding */ PartitionByNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./partition-by-node.d.ts" />

/**
 * @internal
 */
const PartitionByNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'PartitionByNode';
    },
    create(items) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'PartitionByNode',
            items: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(items),
        });
    },
    cloneWithItems(partitionBy, items) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...partitionBy,
            items: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...partitionBy.items, ...items]),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/primary-constraint-node.js":
/*!********************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/primary-constraint-node.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PrimaryConstraintNode: () => (/* binding */ PrimaryConstraintNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _column_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./column-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-node.js");
/* harmony import */ var _identifier_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/// <reference types="./primary-constraint-node.d.ts" />



/**
 * @internal
 */
const PrimaryConstraintNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'PrimaryKeyConstraintNode';
    },
    create(columns, constraintName) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'PrimaryKeyConstraintNode',
            columns: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(columns.map(_column_node_js__WEBPACK_IMPORTED_MODULE_1__.ColumnNode.create)),
            name: constraintName ? _identifier_node_js__WEBPACK_IMPORTED_MODULE_2__.IdentifierNode.create(constraintName) : undefined,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/primitive-value-list-node.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/primitive-value-list-node.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PrimitiveValueListNode: () => (/* binding */ PrimitiveValueListNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./primitive-value-list-node.d.ts" />

/**
 * @internal
 */
const PrimitiveValueListNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'PrimitiveValueListNode';
    },
    create(values) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'PrimitiveValueListNode',
            values: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...values]),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/query-node.js":
/*!*******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/query-node.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QueryNode: () => (/* binding */ QueryNode)
/* harmony export */ });
/* harmony import */ var _insert_query_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./insert-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/insert-query-node.js");
/* harmony import */ var _select_query_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./select-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/select-query-node.js");
/* harmony import */ var _update_query_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./update-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/update-query-node.js");
/* harmony import */ var _delete_query_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./delete-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/delete-query-node.js");
/* harmony import */ var _where_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./where-node.js */ "./node_modules/kysely/dist/esm/operation-node/where-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _returning_node_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./returning-node.js */ "./node_modules/kysely/dist/esm/operation-node/returning-node.js");
/* harmony import */ var _explain_node_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./explain-node.js */ "./node_modules/kysely/dist/esm/operation-node/explain-node.js");
/* harmony import */ var _merge_query_node_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./merge-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/merge-query-node.js");
/// <reference types="./query-node.d.ts" />









/**
 * @internal
 */
const QueryNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return (_select_query_node_js__WEBPACK_IMPORTED_MODULE_1__.SelectQueryNode.is(node) ||
            _insert_query_node_js__WEBPACK_IMPORTED_MODULE_2__.InsertQueryNode.is(node) ||
            _update_query_node_js__WEBPACK_IMPORTED_MODULE_3__.UpdateQueryNode.is(node) ||
            _delete_query_node_js__WEBPACK_IMPORTED_MODULE_4__.DeleteQueryNode.is(node) ||
            _merge_query_node_js__WEBPACK_IMPORTED_MODULE_5__.MergeQueryNode.is(node));
    },
    cloneWithWhere(node, operation) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            where: node.where
                ? _where_node_js__WEBPACK_IMPORTED_MODULE_6__.WhereNode.cloneWithOperation(node.where, 'And', operation)
                : _where_node_js__WEBPACK_IMPORTED_MODULE_6__.WhereNode.create(operation),
        });
    },
    cloneWithJoin(node, join) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            joins: node.joins ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...node.joins, join]) : (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([join]),
        });
    },
    cloneWithReturning(node, selections) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            returning: node.returning
                ? _returning_node_js__WEBPACK_IMPORTED_MODULE_7__.ReturningNode.cloneWithSelections(node.returning, selections)
                : _returning_node_js__WEBPACK_IMPORTED_MODULE_7__.ReturningNode.create(selections),
        });
    },
    cloneWithoutReturning(node) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            returning: undefined,
        });
    },
    cloneWithoutWhere(node) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            where: undefined,
        });
    },
    cloneWithExplain(node, format, options) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            explain: _explain_node_js__WEBPACK_IMPORTED_MODULE_8__.ExplainNode.create(format, options?.toOperationNode()),
        });
    },
    cloneWithTop(node, top) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            top,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/raw-node.js":
/*!*****************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/raw-node.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RawNode: () => (/* binding */ RawNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./raw-node.d.ts" />

/**
 * @internal
 */
const RawNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'RawNode';
    },
    create(sqlFragments, parameters) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'RawNode',
            sqlFragments: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(sqlFragments),
            parameters: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(parameters),
        });
    },
    createWithSql(sql) {
        return RawNode.create([sql], []);
    },
    createWithChild(child) {
        return RawNode.create(['', ''], [child]);
    },
    createWithChildren(children) {
        return RawNode.create(new Array(children.length + 1).fill(''), children);
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/reference-node.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/reference-node.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ReferenceNode: () => (/* binding */ ReferenceNode)
/* harmony export */ });
/* harmony import */ var _select_all_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./select-all-node.js */ "./node_modules/kysely/dist/esm/operation-node/select-all-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./reference-node.d.ts" />


/**
 * @internal
 */
const ReferenceNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'ReferenceNode';
    },
    create(column, table) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ReferenceNode',
            table,
            column,
        });
    },
    createSelectAll(table) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ReferenceNode',
            table,
            column: _select_all_node_js__WEBPACK_IMPORTED_MODULE_1__.SelectAllNode.create(),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/references-node.js":
/*!************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/references-node.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ON_MODIFY_FOREIGN_ACTIONS: () => (/* binding */ ON_MODIFY_FOREIGN_ACTIONS),
/* harmony export */   ReferencesNode: () => (/* binding */ ReferencesNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./references-node.d.ts" />

const ON_MODIFY_FOREIGN_ACTIONS = [
    'no action',
    'restrict',
    'cascade',
    'set null',
    'set default',
];
/**
 * @internal
 */
const ReferencesNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'ReferencesNode';
    },
    create(table, columns) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ReferencesNode',
            table,
            columns: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...columns]),
        });
    },
    cloneWithOnDelete(references, onDelete) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...references,
            onDelete,
        });
    },
    cloneWithOnUpdate(references, onUpdate) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...references,
            onUpdate,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/rename-column-node.js":
/*!***************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/rename-column-node.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   RenameColumnNode: () => (/* binding */ RenameColumnNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _column_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./column-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-node.js");
/// <reference types="./rename-column-node.d.ts" />


/**
 * @internal
 */
const RenameColumnNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'RenameColumnNode';
    },
    create(column, newColumn) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'RenameColumnNode',
            column: _column_node_js__WEBPACK_IMPORTED_MODULE_1__.ColumnNode.create(column),
            renameTo: _column_node_js__WEBPACK_IMPORTED_MODULE_1__.ColumnNode.create(newColumn),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/returning-node.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/returning-node.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ReturningNode: () => (/* binding */ ReturningNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./returning-node.d.ts" />

/**
 * @internal
 */
const ReturningNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'ReturningNode';
    },
    create(selections) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ReturningNode',
            selections: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(selections),
        });
    },
    cloneWithSelections(returning, selections) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...returning,
            selections: returning.selections
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...returning.selections, ...selections])
                : (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(selections),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/schemable-identifier-node.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/schemable-identifier-node.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SchemableIdentifierNode: () => (/* binding */ SchemableIdentifierNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/// <reference types="./schemable-identifier-node.d.ts" />


/**
 * @internal
 */
const SchemableIdentifierNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'SchemableIdentifierNode';
    },
    create(identifier) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'SchemableIdentifierNode',
            identifier: _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.IdentifierNode.create(identifier),
        });
    },
    createWithSchema(schema, identifier) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'SchemableIdentifierNode',
            schema: _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.IdentifierNode.create(schema),
            identifier: _identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.IdentifierNode.create(identifier),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/select-all-node.js":
/*!************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/select-all-node.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SelectAllNode: () => (/* binding */ SelectAllNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./select-all-node.d.ts" />

/**
 * @internal
 */
const SelectAllNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'SelectAllNode';
    },
    create() {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'SelectAllNode',
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/select-modifier-node.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/select-modifier-node.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SelectModifierNode: () => (/* binding */ SelectModifierNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./select-modifier-node.d.ts" />

/**
 * @internal
 */
const SelectModifierNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'SelectModifierNode';
    },
    create(modifier, of) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'SelectModifierNode',
            modifier,
            of,
        });
    },
    createWithExpression(modifier) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'SelectModifierNode',
            rawModifier: modifier,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/select-query-node.js":
/*!**************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/select-query-node.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SelectQueryNode: () => (/* binding */ SelectQueryNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _from_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from-node.js */ "./node_modules/kysely/dist/esm/operation-node/from-node.js");
/* harmony import */ var _group_by_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./group-by-node.js */ "./node_modules/kysely/dist/esm/operation-node/group-by-node.js");
/* harmony import */ var _having_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./having-node.js */ "./node_modules/kysely/dist/esm/operation-node/having-node.js");
/* harmony import */ var _order_by_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./order-by-node.js */ "./node_modules/kysely/dist/esm/operation-node/order-by-node.js");
/// <reference types="./select-query-node.d.ts" />





/**
 * @internal
 */
const SelectQueryNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'SelectQueryNode';
    },
    create(withNode) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'SelectQueryNode',
            ...(withNode && { with: withNode }),
        });
    },
    createFrom(fromItems, withNode) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'SelectQueryNode',
            from: _from_node_js__WEBPACK_IMPORTED_MODULE_1__.FromNode.create(fromItems),
            ...(withNode && { with: withNode }),
        });
    },
    cloneWithSelections(select, selections) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...select,
            selections: select.selections
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...select.selections, ...selections])
                : (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(selections),
        });
    },
    cloneWithDistinctOn(select, expressions) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...select,
            distinctOn: select.distinctOn
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...select.distinctOn, ...expressions])
                : (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(expressions),
        });
    },
    cloneWithFrontModifier(select, modifier) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...select,
            frontModifiers: select.frontModifiers
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...select.frontModifiers, modifier])
                : (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([modifier]),
        });
    },
    cloneWithEndModifier(select, modifier) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...select,
            endModifiers: select.endModifiers
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...select.endModifiers, modifier])
                : (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([modifier]),
        });
    },
    cloneWithOrderByItems(selectNode, items) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...selectNode,
            orderBy: selectNode.orderBy
                ? _order_by_node_js__WEBPACK_IMPORTED_MODULE_2__.OrderByNode.cloneWithItems(selectNode.orderBy, items)
                : _order_by_node_js__WEBPACK_IMPORTED_MODULE_2__.OrderByNode.create(items),
        });
    },
    cloneWithGroupByItems(selectNode, items) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...selectNode,
            groupBy: selectNode.groupBy
                ? _group_by_node_js__WEBPACK_IMPORTED_MODULE_3__.GroupByNode.cloneWithItems(selectNode.groupBy, items)
                : _group_by_node_js__WEBPACK_IMPORTED_MODULE_3__.GroupByNode.create(items),
        });
    },
    cloneWithLimit(selectNode, limit) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...selectNode,
            limit,
        });
    },
    cloneWithOffset(selectNode, offset) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...selectNode,
            offset,
        });
    },
    cloneWithFetch(selectNode, fetch) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...selectNode,
            fetch,
        });
    },
    cloneWithHaving(selectNode, operation) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...selectNode,
            having: selectNode.having
                ? _having_node_js__WEBPACK_IMPORTED_MODULE_4__.HavingNode.cloneWithOperation(selectNode.having, 'And', operation)
                : _having_node_js__WEBPACK_IMPORTED_MODULE_4__.HavingNode.create(operation),
        });
    },
    cloneWithSetOperations(selectNode, setOperations) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...selectNode,
            setOperations: selectNode.setOperations
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...selectNode.setOperations, ...setOperations])
                : (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...setOperations]),
        });
    },
    cloneWithoutSelections(select) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...select,
            selections: [],
        });
    },
    cloneWithoutLimit(select) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...select,
            limit: undefined,
        });
    },
    cloneWithoutOffset(select) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...select,
            offset: undefined,
        });
    },
    cloneWithoutOrderBy(select) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...select,
            orderBy: undefined,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/selection-node.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/selection-node.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SelectionNode: () => (/* binding */ SelectionNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _reference_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reference-node.js */ "./node_modules/kysely/dist/esm/operation-node/reference-node.js");
/* harmony import */ var _select_all_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./select-all-node.js */ "./node_modules/kysely/dist/esm/operation-node/select-all-node.js");
/// <reference types="./selection-node.d.ts" />



/**
 * @internal
 */
const SelectionNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'SelectionNode';
    },
    create(selection) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'SelectionNode',
            selection: selection,
        });
    },
    createSelectAll() {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'SelectionNode',
            selection: _select_all_node_js__WEBPACK_IMPORTED_MODULE_1__.SelectAllNode.create(),
        });
    },
    createSelectAllFromTable(table) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'SelectionNode',
            selection: _reference_node_js__WEBPACK_IMPORTED_MODULE_2__.ReferenceNode.createSelectAll(table),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/set-operation-node.js":
/*!***************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/set-operation-node.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SetOperationNode: () => (/* binding */ SetOperationNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./set-operation-node.d.ts" />

/**
 * @internal
 */
const SetOperationNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'SetOperationNode';
    },
    create(operator, expression, all) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'SetOperationNode',
            operator,
            expression,
            all,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/table-node.js":
/*!*******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/table-node.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TableNode: () => (/* binding */ TableNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _schemable_identifier_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./schemable-identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/schemable-identifier-node.js");
/// <reference types="./table-node.d.ts" />


/**
 * @internal
 */
const TableNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'TableNode';
    },
    create(table) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'TableNode',
            table: _schemable_identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.SchemableIdentifierNode.create(table),
        });
    },
    createWithSchema(schema, table) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'TableNode',
            table: _schemable_identifier_node_js__WEBPACK_IMPORTED_MODULE_1__.SchemableIdentifierNode.createWithSchema(schema, table),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/top-node.js":
/*!*****************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/top-node.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TopNode: () => (/* binding */ TopNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./top-node.d.ts" />

/**
 * @internal
 */
const TopNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'TopNode';
    },
    create(expression, modifiers) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'TopNode',
            expression,
            modifiers,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/tuple-node.js":
/*!*******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/tuple-node.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TupleNode: () => (/* binding */ TupleNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./tuple-node.d.ts" />

/**
 * @internal
 */
const TupleNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'TupleNode';
    },
    create(values) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'TupleNode',
            values: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(values),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/unary-operation-node.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/unary-operation-node.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UnaryOperationNode: () => (/* binding */ UnaryOperationNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./unary-operation-node.d.ts" />

/**
 * @internal
 */
const UnaryOperationNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'UnaryOperationNode';
    },
    create(operator, operand) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'UnaryOperationNode',
            operator,
            operand,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/unique-constraint-node.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/unique-constraint-node.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UniqueConstraintNode: () => (/* binding */ UniqueConstraintNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _column_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./column-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-node.js");
/* harmony import */ var _identifier_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/// <reference types="./unique-constraint-node.d.ts" />



/**
 * @internal
 */
const UniqueConstraintNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'UniqueConstraintNode';
    },
    create(columns, constraintName, nullsNotDistinct) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'UniqueConstraintNode',
            columns: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(columns.map(_column_node_js__WEBPACK_IMPORTED_MODULE_1__.ColumnNode.create)),
            name: constraintName ? _identifier_node_js__WEBPACK_IMPORTED_MODULE_2__.IdentifierNode.create(constraintName) : undefined,
            nullsNotDistinct,
        });
    },
    cloneWith(node, props) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...node,
            ...props,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/update-query-node.js":
/*!**************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/update-query-node.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UpdateQueryNode: () => (/* binding */ UpdateQueryNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _from_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./from-node.js */ "./node_modules/kysely/dist/esm/operation-node/from-node.js");
/// <reference types="./update-query-node.d.ts" />


/**
 * @internal
 */
const UpdateQueryNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'UpdateQueryNode';
    },
    create(table, withNode) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'UpdateQueryNode',
            table,
            ...(withNode && { with: withNode }),
        });
    },
    createWithoutTable() {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'UpdateQueryNode',
        });
    },
    cloneWithFromItems(updateQuery, fromItems) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...updateQuery,
            from: updateQuery.from
                ? _from_node_js__WEBPACK_IMPORTED_MODULE_1__.FromNode.cloneWithFroms(updateQuery.from, fromItems)
                : _from_node_js__WEBPACK_IMPORTED_MODULE_1__.FromNode.create(fromItems),
        });
    },
    cloneWithUpdates(updateQuery, updates) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...updateQuery,
            updates: updateQuery.updates
                ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...updateQuery.updates, ...updates])
                : updates,
        });
    },
    cloneWithLimit(updateQuery, limit) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...updateQuery,
            limit,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/using-node.js":
/*!*******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/using-node.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UsingNode: () => (/* binding */ UsingNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./using-node.d.ts" />

/**
 * @internal
 */
const UsingNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'UsingNode';
    },
    create(tables) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'UsingNode',
            tables: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(tables),
        });
    },
    cloneWithTables(using, tables) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...using,
            tables: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...using.tables, ...tables]),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/value-list-node.js":
/*!************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/value-list-node.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ValueListNode: () => (/* binding */ ValueListNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./value-list-node.d.ts" />

/**
 * @internal
 */
const ValueListNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'ValueListNode';
    },
    create(values) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ValueListNode',
            values: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(values),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/value-node.js":
/*!*******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/value-node.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ValueNode: () => (/* binding */ ValueNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./value-node.d.ts" />

/**
 * @internal
 */
const ValueNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'ValueNode';
    },
    create(value) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ValueNode',
            value,
        });
    },
    createImmediate(value) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ValueNode',
            value,
            immediate: true,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/values-node.js":
/*!********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/values-node.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ValuesNode: () => (/* binding */ ValuesNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./values-node.d.ts" />

/**
 * @internal
 */
const ValuesNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'ValuesNode';
    },
    create(values) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'ValuesNode',
            values: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(values),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/when-node.js":
/*!******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/when-node.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WhenNode: () => (/* binding */ WhenNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./when-node.d.ts" />

/**
 * @internal
 */
const WhenNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'WhenNode';
    },
    create(condition) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'WhenNode',
            condition,
        });
    },
    cloneWithResult(whenNode, result) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...whenNode,
            result,
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/where-node.js":
/*!*******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/where-node.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WhereNode: () => (/* binding */ WhereNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _and_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./and-node.js */ "./node_modules/kysely/dist/esm/operation-node/and-node.js");
/* harmony import */ var _or_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./or-node.js */ "./node_modules/kysely/dist/esm/operation-node/or-node.js");
/// <reference types="./where-node.d.ts" />



/**
 * @internal
 */
const WhereNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'WhereNode';
    },
    create(filter) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'WhereNode',
            where: filter,
        });
    },
    cloneWithOperation(whereNode, operator, operation) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...whereNode,
            where: operator === 'And'
                ? _and_node_js__WEBPACK_IMPORTED_MODULE_1__.AndNode.create(whereNode.where, operation)
                : _or_node_js__WEBPACK_IMPORTED_MODULE_2__.OrNode.create(whereNode.where, operation),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/operation-node/with-node.js":
/*!******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/operation-node/with-node.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WithNode: () => (/* binding */ WithNode)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./with-node.d.ts" />

/**
 * @internal
 */
const WithNode = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    is(node) {
        return node.kind === 'WithNode';
    },
    create(expression, params) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            kind: 'WithNode',
            expressions: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([expression]),
            ...params,
        });
    },
    cloneWithExpression(withNode, expression) {
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
            ...withNode,
            expressions: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...withNode.expressions, expression]),
        });
    },
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/binary-operation-parser.js":
/*!************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/binary-operation-parser.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseFilterList: () => (/* binding */ parseFilterList),
/* harmony export */   parseFilterObject: () => (/* binding */ parseFilterObject),
/* harmony export */   parseReferentialBinaryOperation: () => (/* binding */ parseReferentialBinaryOperation),
/* harmony export */   parseValueBinaryOperation: () => (/* binding */ parseValueBinaryOperation),
/* harmony export */   parseValueBinaryOperationOrExpression: () => (/* binding */ parseValueBinaryOperationOrExpression)
/* harmony export */ });
/* harmony import */ var _operation_node_binary_operation_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/binary-operation-node.js */ "./node_modules/kysely/dist/esm/operation-node/binary-operation-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../operation-node/operation-node-source.js */ "./node_modules/kysely/dist/esm/operation-node/operation-node-source.js");
/* harmony import */ var _operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../operation-node/operator-node.js */ "./node_modules/kysely/dist/esm/operation-node/operator-node.js");
/* harmony import */ var _reference_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/* harmony import */ var _value_parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value-parser.js */ "./node_modules/kysely/dist/esm/parser/value-parser.js");
/* harmony import */ var _operation_node_value_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/value-node.js */ "./node_modules/kysely/dist/esm/operation-node/value-node.js");
/* harmony import */ var _operation_node_and_node_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation-node/and-node.js */ "./node_modules/kysely/dist/esm/operation-node/and-node.js");
/* harmony import */ var _operation_node_parens_node_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../operation-node/parens-node.js */ "./node_modules/kysely/dist/esm/operation-node/parens-node.js");
/* harmony import */ var _operation_node_or_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../operation-node/or-node.js */ "./node_modules/kysely/dist/esm/operation-node/or-node.js");
/// <reference types="./binary-operation-parser.d.ts" />










function parseValueBinaryOperationOrExpression(args) {
    if (args.length === 3) {
        return parseValueBinaryOperation(args[0], args[1], args[2]);
    }
    else if (args.length === 1) {
        return (0,_value_parser_js__WEBPACK_IMPORTED_MODULE_0__.parseValueExpression)(args[0]);
    }
    throw new Error(`invalid arguments: ${JSON.stringify(args)}`);
}
function parseValueBinaryOperation(left, operator, right) {
    if (isIsOperator(operator) && needsIsOperator(right)) {
        return _operation_node_binary_operation_node_js__WEBPACK_IMPORTED_MODULE_1__.BinaryOperationNode.create((0,_reference_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseReferenceExpression)(left), parseOperator(operator), _operation_node_value_node_js__WEBPACK_IMPORTED_MODULE_3__.ValueNode.createImmediate(right));
    }
    return _operation_node_binary_operation_node_js__WEBPACK_IMPORTED_MODULE_1__.BinaryOperationNode.create((0,_reference_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseReferenceExpression)(left), parseOperator(operator), (0,_value_parser_js__WEBPACK_IMPORTED_MODULE_0__.parseValueExpressionOrList)(right));
}
function parseReferentialBinaryOperation(left, operator, right) {
    return _operation_node_binary_operation_node_js__WEBPACK_IMPORTED_MODULE_1__.BinaryOperationNode.create((0,_reference_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseReferenceExpression)(left), parseOperator(operator), (0,_reference_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseReferenceExpression)(right));
}
function parseFilterObject(obj, combinator) {
    return parseFilterList(Object.entries(obj)
        .filter(([, v]) => !(0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_4__.isUndefined)(v))
        .map(([k, v]) => parseValueBinaryOperation(k, needsIsOperator(v) ? 'is' : '=', v)), combinator);
}
function parseFilterList(list, combinator, withParens = true) {
    const combine = combinator === 'and' ? _operation_node_and_node_js__WEBPACK_IMPORTED_MODULE_5__.AndNode.create : _operation_node_or_node_js__WEBPACK_IMPORTED_MODULE_6__.OrNode.create;
    if (list.length === 0) {
        return _operation_node_binary_operation_node_js__WEBPACK_IMPORTED_MODULE_1__.BinaryOperationNode.create(_operation_node_value_node_js__WEBPACK_IMPORTED_MODULE_3__.ValueNode.createImmediate(1), _operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_7__.OperatorNode.create('='), _operation_node_value_node_js__WEBPACK_IMPORTED_MODULE_3__.ValueNode.createImmediate(combinator === 'and' ? 1 : 0));
    }
    let node = toOperationNode(list[0]);
    for (let i = 1; i < list.length; ++i) {
        node = combine(node, toOperationNode(list[i]));
    }
    if (list.length > 1 && withParens) {
        return _operation_node_parens_node_js__WEBPACK_IMPORTED_MODULE_8__.ParensNode.create(node);
    }
    return node;
}
function isIsOperator(operator) {
    return operator === 'is' || operator === 'is not';
}
function needsIsOperator(value) {
    return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_4__.isNull)(value) || (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_4__.isBoolean)(value);
}
function parseOperator(operator) {
    if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_4__.isString)(operator) && _operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_7__.OPERATORS.includes(operator)) {
        return _operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_7__.OperatorNode.create(operator);
    }
    if ((0,_operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_9__.isOperationNodeSource)(operator)) {
        return operator.toOperationNode();
    }
    throw new Error(`invalid operator ${JSON.stringify(operator)}`);
}
function toOperationNode(nodeOrSource) {
    return (0,_operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_9__.isOperationNodeSource)(nodeOrSource)
        ? nodeOrSource.toOperationNode()
        : nodeOrSource;
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/data-type-parser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/data-type-parser.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseDataTypeExpression: () => (/* binding */ parseDataTypeExpression)
/* harmony export */ });
/* harmony import */ var _operation_node_data_type_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/data-type-node.js */ "./node_modules/kysely/dist/esm/operation-node/data-type-node.js");
/* harmony import */ var _operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/operation-node-source.js */ "./node_modules/kysely/dist/esm/operation-node/operation-node-source.js");
/// <reference types="./data-type-parser.d.ts" />


function parseDataTypeExpression(dataType) {
    if ((0,_operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_0__.isOperationNodeSource)(dataType)) {
        return dataType.toOperationNode();
    }
    if ((0,_operation_node_data_type_node_js__WEBPACK_IMPORTED_MODULE_1__.isColumnDataType)(dataType)) {
        return _operation_node_data_type_node_js__WEBPACK_IMPORTED_MODULE_1__.DataTypeNode.create(dataType);
    }
    throw new Error(`invalid column data type ${JSON.stringify(dataType)}`);
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/default-value-parser.js":
/*!*********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/default-value-parser.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseDefaultValueExpression: () => (/* binding */ parseDefaultValueExpression)
/* harmony export */ });
/* harmony import */ var _operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/operation-node-source.js */ "./node_modules/kysely/dist/esm/operation-node/operation-node-source.js");
/* harmony import */ var _operation_node_value_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/value-node.js */ "./node_modules/kysely/dist/esm/operation-node/value-node.js");
/// <reference types="./default-value-parser.d.ts" />


function parseDefaultValueExpression(value) {
    return (0,_operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_0__.isOperationNodeSource)(value)
        ? value.toOperationNode()
        : _operation_node_value_node_js__WEBPACK_IMPORTED_MODULE_1__.ValueNode.createImmediate(value);
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/expression-parser.js":
/*!******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/expression-parser.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isExpressionOrFactory: () => (/* binding */ isExpressionOrFactory),
/* harmony export */   parseAliasedExpression: () => (/* binding */ parseAliasedExpression),
/* harmony export */   parseExpression: () => (/* binding */ parseExpression)
/* harmony export */ });
/* harmony import */ var _expression_expression_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../expression/expression.js */ "./node_modules/kysely/dist/esm/expression/expression.js");
/* harmony import */ var _operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/operation-node-source.js */ "./node_modules/kysely/dist/esm/operation-node/operation-node-source.js");
/* harmony import */ var _expression_expression_builder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../expression/expression-builder.js */ "./node_modules/kysely/dist/esm/expression/expression-builder.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./expression-parser.d.ts" />




function parseExpression(exp) {
    if ((0,_operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_0__.isOperationNodeSource)(exp)) {
        return exp.toOperationNode();
    }
    else if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(exp)) {
        return exp((0,_expression_expression_builder_js__WEBPACK_IMPORTED_MODULE_2__.expressionBuilder)()).toOperationNode();
    }
    throw new Error(`invalid expression: ${JSON.stringify(exp)}`);
}
function parseAliasedExpression(exp) {
    if ((0,_operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_0__.isOperationNodeSource)(exp)) {
        return exp.toOperationNode();
    }
    else if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(exp)) {
        return exp((0,_expression_expression_builder_js__WEBPACK_IMPORTED_MODULE_2__.expressionBuilder)()).toOperationNode();
    }
    throw new Error(`invalid aliased expression: ${JSON.stringify(exp)}`);
}
function isExpressionOrFactory(obj) {
    return (0,_expression_expression_js__WEBPACK_IMPORTED_MODULE_3__.isExpression)(obj) || (0,_expression_expression_js__WEBPACK_IMPORTED_MODULE_3__.isAliasedExpression)(obj) || (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(obj);
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/fetch-parser.js":
/*!*************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/fetch-parser.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseFetch: () => (/* binding */ parseFetch)
/* harmony export */ });
/* harmony import */ var _operation_node_fetch_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/fetch-node.js */ "./node_modules/kysely/dist/esm/operation-node/fetch-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./fetch-parser.d.ts" />


function parseFetch(rowCount, modifier) {
    if (!(0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isNumber)(rowCount) && !(0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isBigInt)(rowCount)) {
        throw new Error(`Invalid fetch row count: ${rowCount}`);
    }
    if (!isFetchModifier(modifier)) {
        throw new Error(`Invalid fetch modifier: ${modifier}`);
    }
    return _operation_node_fetch_node_js__WEBPACK_IMPORTED_MODULE_1__.FetchNode.create(rowCount, modifier);
}
function isFetchModifier(value) {
    return value === 'only' || value === 'with ties';
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/group-by-parser.js":
/*!****************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/group-by-parser.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseGroupBy: () => (/* binding */ parseGroupBy)
/* harmony export */ });
/* harmony import */ var _operation_node_group_by_item_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/group-by-item-node.js */ "./node_modules/kysely/dist/esm/operation-node/group-by-item-node.js");
/* harmony import */ var _expression_expression_builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../expression/expression-builder.js */ "./node_modules/kysely/dist/esm/expression/expression-builder.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _reference_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/// <reference types="./group-by-parser.d.ts" />




function parseGroupBy(groupBy) {
    groupBy = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(groupBy) ? groupBy((0,_expression_expression_builder_js__WEBPACK_IMPORTED_MODULE_1__.expressionBuilder)()) : groupBy;
    return (0,_reference_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseReferenceExpressionOrList)(groupBy).map(_operation_node_group_by_item_node_js__WEBPACK_IMPORTED_MODULE_3__.GroupByItemNode.create);
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/identifier-parser.js":
/*!******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/identifier-parser.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseSchemableIdentifier: () => (/* binding */ parseSchemableIdentifier)
/* harmony export */ });
/* harmony import */ var _operation_node_schemable_identifier_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/schemable-identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/schemable-identifier-node.js");
/// <reference types="./identifier-parser.d.ts" />

function parseSchemableIdentifier(id) {
    const SCHEMA_SEPARATOR = '.';
    if (id.includes(SCHEMA_SEPARATOR)) {
        const parts = id.split(SCHEMA_SEPARATOR).map(trim);
        if (parts.length === 2) {
            return _operation_node_schemable_identifier_node_js__WEBPACK_IMPORTED_MODULE_0__.SchemableIdentifierNode.createWithSchema(parts[0], parts[1]);
        }
        else {
            throw new Error(`invalid schemable identifier ${id}`);
        }
    }
    else {
        return _operation_node_schemable_identifier_node_js__WEBPACK_IMPORTED_MODULE_0__.SchemableIdentifierNode.create(id);
    }
}
function trim(str) {
    return str.trim();
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/insert-values-parser.js":
/*!*********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/insert-values-parser.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseInsertExpression: () => (/* binding */ parseInsertExpression)
/* harmony export */ });
/* harmony import */ var _operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/column-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-node.js");
/* harmony import */ var _operation_node_primitive_value_list_node_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../operation-node/primitive-value-list-node.js */ "./node_modules/kysely/dist/esm/operation-node/primitive-value-list-node.js");
/* harmony import */ var _operation_node_value_list_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../operation-node/value-list-node.js */ "./node_modules/kysely/dist/esm/operation-node/value-list-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _value_parser_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./value-parser.js */ "./node_modules/kysely/dist/esm/parser/value-parser.js");
/* harmony import */ var _operation_node_values_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/values-node.js */ "./node_modules/kysely/dist/esm/operation-node/values-node.js");
/* harmony import */ var _expression_parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./expression-parser.js */ "./node_modules/kysely/dist/esm/parser/expression-parser.js");
/* harmony import */ var _operation_node_default_insert_value_node_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation-node/default-insert-value-node.js */ "./node_modules/kysely/dist/esm/operation-node/default-insert-value-node.js");
/* harmony import */ var _expression_expression_builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../expression/expression-builder.js */ "./node_modules/kysely/dist/esm/expression/expression-builder.js");
/// <reference types="./insert-values-parser.d.ts" />









function parseInsertExpression(arg) {
    const objectOrList = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(arg) ? arg((0,_expression_expression_builder_js__WEBPACK_IMPORTED_MODULE_1__.expressionBuilder)()) : arg;
    const list = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isReadonlyArray)(objectOrList)
        ? objectOrList
        : (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([objectOrList]);
    return parseInsertColumnsAndValues(list);
}
function parseInsertColumnsAndValues(rows) {
    const columns = parseColumnNamesAndIndexes(rows);
    return [
        (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...columns.keys()].map(_operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_2__.ColumnNode.create)),
        _operation_node_values_node_js__WEBPACK_IMPORTED_MODULE_3__.ValuesNode.create(rows.map((row) => parseRowValues(row, columns))),
    ];
}
function parseColumnNamesAndIndexes(rows) {
    const columns = new Map();
    for (const row of rows) {
        const cols = Object.keys(row);
        for (const col of cols) {
            if (!columns.has(col) && row[col] !== undefined) {
                columns.set(col, columns.size);
            }
        }
    }
    return columns;
}
function parseRowValues(row, columns) {
    const rowColumns = Object.keys(row);
    const rowValues = Array.from({
        length: columns.size,
    });
    let hasUndefinedOrComplexColumns = false;
    for (const col of rowColumns) {
        const columnIdx = columns.get(col);
        if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(columnIdx)) {
            continue;
        }
        const value = row[col];
        if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(value) || (0,_expression_parser_js__WEBPACK_IMPORTED_MODULE_4__.isExpressionOrFactory)(value)) {
            hasUndefinedOrComplexColumns = true;
        }
        rowValues[columnIdx] = value;
    }
    const hasMissingColumns = rowColumns.length < columns.size;
    if (hasMissingColumns || hasUndefinedOrComplexColumns) {
        const defaultValue = _operation_node_default_insert_value_node_js__WEBPACK_IMPORTED_MODULE_5__.DefaultInsertValueNode.create();
        return _operation_node_value_list_node_js__WEBPACK_IMPORTED_MODULE_6__.ValueListNode.create(rowValues.map((it) => (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(it) ? defaultValue : (0,_value_parser_js__WEBPACK_IMPORTED_MODULE_7__.parseValueExpression)(it)));
    }
    return _operation_node_primitive_value_list_node_js__WEBPACK_IMPORTED_MODULE_8__.PrimitiveValueListNode.create(rowValues);
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/join-parser.js":
/*!************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/join-parser.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseJoin: () => (/* binding */ parseJoin)
/* harmony export */ });
/* harmony import */ var _operation_node_join_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/join-node.js */ "./node_modules/kysely/dist/esm/operation-node/join-node.js");
/* harmony import */ var _table_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./table-parser.js */ "./node_modules/kysely/dist/esm/parser/table-parser.js");
/* harmony import */ var _binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./binary-operation-parser.js */ "./node_modules/kysely/dist/esm/parser/binary-operation-parser.js");
/* harmony import */ var _parse_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-utils.js */ "./node_modules/kysely/dist/esm/parser/parse-utils.js");
/// <reference types="./join-parser.d.ts" />




function parseJoin(joinType, args) {
    if (args.length === 3) {
        return parseSingleOnJoin(joinType, args[0], args[1], args[2]);
    }
    else if (args.length === 2) {
        return parseCallbackJoin(joinType, args[0], args[1]);
    }
    else {
        throw new Error('not implemented');
    }
}
function parseCallbackJoin(joinType, from, callback) {
    return callback((0,_parse_utils_js__WEBPACK_IMPORTED_MODULE_0__.createJoinBuilder)(joinType, from)).toOperationNode();
}
function parseSingleOnJoin(joinType, from, lhsColumn, rhsColumn) {
    return _operation_node_join_node_js__WEBPACK_IMPORTED_MODULE_1__.JoinNode.createWithOn(joinType, (0,_table_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseTableExpression)(from), (0,_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseReferentialBinaryOperation)(lhsColumn, '=', rhsColumn));
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/merge-parser.js":
/*!*************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/merge-parser.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseMergeThen: () => (/* binding */ parseMergeThen),
/* harmony export */   parseMergeWhen: () => (/* binding */ parseMergeWhen)
/* harmony export */ });
/* harmony import */ var _operation_node_matched_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/matched-node.js */ "./node_modules/kysely/dist/esm/operation-node/matched-node.js");
/* harmony import */ var _operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation-node/operation-node-source.js */ "./node_modules/kysely/dist/esm/operation-node/operation-node-source.js");
/* harmony import */ var _operation_node_raw_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/raw-node.js */ "./node_modules/kysely/dist/esm/operation-node/raw-node.js");
/* harmony import */ var _operation_node_when_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/when-node.js */ "./node_modules/kysely/dist/esm/operation-node/when-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binary-operation-parser.js */ "./node_modules/kysely/dist/esm/parser/binary-operation-parser.js");
/// <reference types="./merge-parser.d.ts" />






function parseMergeWhen(type, args, refRight) {
    return _operation_node_when_node_js__WEBPACK_IMPORTED_MODULE_0__.WhenNode.create((0,_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseFilterList)([
        _operation_node_matched_node_js__WEBPACK_IMPORTED_MODULE_2__.MatchedNode.create(!type.isMatched, type.bySource),
        ...(args && args.length > 0
            ? [
                args.length === 3 && refRight
                    ? (0,_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseReferentialBinaryOperation)(args[0], args[1], args[2])
                    : (0,_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseValueBinaryOperationOrExpression)(args),
            ]
            : []),
    ], 'and', false));
}
function parseMergeThen(result) {
    if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_3__.isString)(result)) {
        return _operation_node_raw_node_js__WEBPACK_IMPORTED_MODULE_4__.RawNode.create([result], []);
    }
    if ((0,_operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_5__.isOperationNodeSource)(result)) {
        return result.toOperationNode();
    }
    return result;
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/on-commit-action-parse.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/on-commit-action-parse.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseOnCommitAction: () => (/* binding */ parseOnCommitAction)
/* harmony export */ });
/* harmony import */ var _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/create-table-node.js */ "./node_modules/kysely/dist/esm/operation-node/create-table-node.js");
/// <reference types="./on-commit-action-parse.d.ts" />

function parseOnCommitAction(action) {
    if (_operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_0__.ON_COMMIT_ACTIONS.includes(action)) {
        return action;
    }
    throw new Error(`invalid OnCommitAction ${action}`);
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/on-modify-action-parser.js":
/*!************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/on-modify-action-parser.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseOnModifyForeignAction: () => (/* binding */ parseOnModifyForeignAction)
/* harmony export */ });
/* harmony import */ var _operation_node_references_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/references-node.js */ "./node_modules/kysely/dist/esm/operation-node/references-node.js");
/// <reference types="./on-modify-action-parser.d.ts" />

function parseOnModifyForeignAction(action) {
    if (_operation_node_references_node_js__WEBPACK_IMPORTED_MODULE_0__.ON_MODIFY_FOREIGN_ACTIONS.includes(action)) {
        return action;
    }
    throw new Error(`invalid OnModifyForeignAction ${action}`);
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/order-by-parser.js":
/*!****************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/order-by-parser.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isOrderByDirection: () => (/* binding */ isOrderByDirection),
/* harmony export */   parseOrderBy: () => (/* binding */ parseOrderBy),
/* harmony export */   parseOrderByItem: () => (/* binding */ parseOrderByItem)
/* harmony export */ });
/* harmony import */ var _dynamic_dynamic_reference_builder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dynamic/dynamic-reference-builder.js */ "./node_modules/kysely/dist/esm/dynamic/dynamic-reference-builder.js");
/* harmony import */ var _operation_node_order_by_item_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/order-by-item-node.js */ "./node_modules/kysely/dist/esm/operation-node/order-by-item-node.js");
/* harmony import */ var _operation_node_raw_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/raw-node.js */ "./node_modules/kysely/dist/esm/operation-node/raw-node.js");
/* harmony import */ var _expression_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./expression-parser.js */ "./node_modules/kysely/dist/esm/parser/expression-parser.js");
/* harmony import */ var _reference_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/// <reference types="./order-by-parser.d.ts" />





function isOrderByDirection(thing) {
    return thing === 'asc' || thing === 'desc';
}
function parseOrderBy(args) {
    if (args.length === 2) {
        return [parseOrderByItem(args[0], args[1])];
    }
    if (args.length === 1) {
        const [orderBy] = args;
        if (Array.isArray(orderBy)) {
            return orderBy.map((item) => parseOrderByItem(item));
        }
        return [parseOrderByItem(orderBy)];
    }
    throw new Error(`Invalid number of arguments at order by! expected 1-2, received ${args.length}`);
}
function parseOrderByItem(ref, direction) {
    const parsedRef = parseOrderByExpression(ref);
    if (_operation_node_order_by_item_node_js__WEBPACK_IMPORTED_MODULE_0__.OrderByItemNode.is(parsedRef)) {
        if (direction) {
            throw new Error('Cannot specify direction twice!');
        }
        return parsedRef;
    }
    return _operation_node_order_by_item_node_js__WEBPACK_IMPORTED_MODULE_0__.OrderByItemNode.create(parsedRef, parseOrderByDirectionExpression(direction));
}
function parseOrderByExpression(expr) {
    if ((0,_expression_parser_js__WEBPACK_IMPORTED_MODULE_1__.isExpressionOrFactory)(expr)) {
        return (0,_expression_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseExpression)(expr);
    }
    if ((0,_dynamic_dynamic_reference_builder_js__WEBPACK_IMPORTED_MODULE_2__.isDynamicReferenceBuilder)(expr)) {
        return expr.toOperationNode();
    }
    const [ref, direction] = expr.split(' ');
    if (direction) {
        if (!isOrderByDirection(direction)) {
            throw new Error(`Invalid order by direction: ${direction}`);
        }
        return _operation_node_order_by_item_node_js__WEBPACK_IMPORTED_MODULE_0__.OrderByItemNode.create((0,_reference_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseStringReference)(ref), parseOrderByDirectionExpression(direction));
    }
    return (0,_reference_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseStringReference)(expr);
}
function parseOrderByDirectionExpression(expr) {
    if (!expr) {
        return undefined;
    }
    if (expr === 'asc' || expr === 'desc') {
        return _operation_node_raw_node_js__WEBPACK_IMPORTED_MODULE_4__.RawNode.createWithSql(expr);
    }
    return expr.toOperationNode();
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/parse-utils.js":
/*!************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/parse-utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createJoinBuilder: () => (/* binding */ createJoinBuilder),
/* harmony export */   createOverBuilder: () => (/* binding */ createOverBuilder),
/* harmony export */   createQueryCreator: () => (/* binding */ createQueryCreator),
/* harmony export */   createSelectQueryBuilder: () => (/* binding */ createSelectQueryBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_join_node_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../operation-node/join-node.js */ "./node_modules/kysely/dist/esm/operation-node/join-node.js");
/* harmony import */ var _operation_node_over_node_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../operation-node/over-node.js */ "./node_modules/kysely/dist/esm/operation-node/over-node.js");
/* harmony import */ var _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/select-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/select-query-node.js");
/* harmony import */ var _query_builder_join_builder_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../query-builder/join-builder.js */ "./node_modules/kysely/dist/esm/query-builder/join-builder.js");
/* harmony import */ var _query_builder_over_builder_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../query-builder/over-builder.js */ "./node_modules/kysely/dist/esm/query-builder/over-builder.js");
/* harmony import */ var _query_builder_select_query_builder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../query-builder/select-query-builder.js */ "./node_modules/kysely/dist/esm/query-builder/select-query-builder.js");
/* harmony import */ var _query_creator_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../query-creator.js */ "./node_modules/kysely/dist/esm/query-creator.js");
/* harmony import */ var _query_executor_noop_query_executor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../query-executor/noop-query-executor.js */ "./node_modules/kysely/dist/esm/query-executor/noop-query-executor.js");
/* harmony import */ var _util_query_id_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/query-id.js */ "./node_modules/kysely/dist/esm/util/query-id.js");
/* harmony import */ var _table_parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./table-parser.js */ "./node_modules/kysely/dist/esm/parser/table-parser.js");
/// <reference types="./parse-utils.d.ts" />










function createSelectQueryBuilder() {
    return (0,_query_builder_select_query_builder_js__WEBPACK_IMPORTED_MODULE_0__.createSelectQueryBuilder)({
        queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_1__.createQueryId)(),
        executor: _query_executor_noop_query_executor_js__WEBPACK_IMPORTED_MODULE_2__.NOOP_QUERY_EXECUTOR,
        queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.createFrom((0,_table_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseTableExpressionOrList)([])),
    });
}
function createQueryCreator() {
    return new _query_creator_js__WEBPACK_IMPORTED_MODULE_5__.QueryCreator({
        executor: _query_executor_noop_query_executor_js__WEBPACK_IMPORTED_MODULE_2__.NOOP_QUERY_EXECUTOR,
    });
}
function createJoinBuilder(joinType, table) {
    return new _query_builder_join_builder_js__WEBPACK_IMPORTED_MODULE_6__.JoinBuilder({
        joinNode: _operation_node_join_node_js__WEBPACK_IMPORTED_MODULE_7__.JoinNode.create(joinType, (0,_table_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseTableExpression)(table)),
    });
}
function createOverBuilder() {
    return new _query_builder_over_builder_js__WEBPACK_IMPORTED_MODULE_8__.OverBuilder({
        overNode: _operation_node_over_node_js__WEBPACK_IMPORTED_MODULE_9__.OverNode.create(),
    });
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/partition-by-parser.js":
/*!********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/partition-by-parser.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parsePartitionBy: () => (/* binding */ parsePartitionBy)
/* harmony export */ });
/* harmony import */ var _operation_node_partition_by_item_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/partition-by-item-node.js */ "./node_modules/kysely/dist/esm/operation-node/partition-by-item-node.js");
/* harmony import */ var _reference_parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/// <reference types="./partition-by-parser.d.ts" />


function parsePartitionBy(partitionBy) {
    return (0,_reference_parser_js__WEBPACK_IMPORTED_MODULE_0__.parseReferenceExpressionOrList)(partitionBy).map(_operation_node_partition_by_item_node_js__WEBPACK_IMPORTED_MODULE_1__.PartitionByItemNode.create);
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/reference-parser.js":
/*!*****************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/reference-parser.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseAliasedStringReference: () => (/* binding */ parseAliasedStringReference),
/* harmony export */   parseColumnName: () => (/* binding */ parseColumnName),
/* harmony export */   parseJSONReference: () => (/* binding */ parseJSONReference),
/* harmony export */   parseOrderedColumnName: () => (/* binding */ parseOrderedColumnName),
/* harmony export */   parseReferenceExpression: () => (/* binding */ parseReferenceExpression),
/* harmony export */   parseReferenceExpressionOrList: () => (/* binding */ parseReferenceExpressionOrList),
/* harmony export */   parseSimpleReferenceExpression: () => (/* binding */ parseSimpleReferenceExpression),
/* harmony export */   parseStringReference: () => (/* binding */ parseStringReference)
/* harmony export */ });
/* harmony import */ var _operation_node_alias_node_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../operation-node/alias-node.js */ "./node_modules/kysely/dist/esm/operation-node/alias-node.js");
/* harmony import */ var _operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../operation-node/column-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-node.js");
/* harmony import */ var _operation_node_reference_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../operation-node/reference-node.js */ "./node_modules/kysely/dist/esm/operation-node/reference-node.js");
/* harmony import */ var _operation_node_table_node_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../operation-node/table-node.js */ "./node_modules/kysely/dist/esm/operation-node/table-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _expression_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./expression-parser.js */ "./node_modules/kysely/dist/esm/parser/expression-parser.js");
/* harmony import */ var _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../operation-node/identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/* harmony import */ var _order_by_parser_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./order-by-parser.js */ "./node_modules/kysely/dist/esm/parser/order-by-parser.js");
/* harmony import */ var _operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/operator-node.js */ "./node_modules/kysely/dist/esm/operation-node/operator-node.js");
/* harmony import */ var _operation_node_json_reference_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/json-reference-node.js */ "./node_modules/kysely/dist/esm/operation-node/json-reference-node.js");
/* harmony import */ var _operation_node_json_operator_chain_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/json-operator-chain-node.js */ "./node_modules/kysely/dist/esm/operation-node/json-operator-chain-node.js");
/* harmony import */ var _operation_node_json_path_node_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation-node/json-path-node.js */ "./node_modules/kysely/dist/esm/operation-node/json-path-node.js");
/// <reference types="./reference-parser.d.ts" />












function parseSimpleReferenceExpression(exp) {
    if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isString)(exp)) {
        return parseStringReference(exp);
    }
    return exp.toOperationNode();
}
function parseReferenceExpressionOrList(arg) {
    if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isReadonlyArray)(arg)) {
        return arg.map((it) => parseReferenceExpression(it));
    }
    else {
        return [parseReferenceExpression(arg)];
    }
}
function parseReferenceExpression(exp) {
    if ((0,_expression_parser_js__WEBPACK_IMPORTED_MODULE_1__.isExpressionOrFactory)(exp)) {
        return (0,_expression_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseExpression)(exp);
    }
    return parseSimpleReferenceExpression(exp);
}
function parseJSONReference(ref, op) {
    const referenceNode = parseStringReference(ref);
    if ((0,_operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_2__.isJSONOperator)(op)) {
        return _operation_node_json_reference_node_js__WEBPACK_IMPORTED_MODULE_3__.JSONReferenceNode.create(referenceNode, _operation_node_json_operator_chain_node_js__WEBPACK_IMPORTED_MODULE_4__.JSONOperatorChainNode.create(_operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_2__.OperatorNode.create(op)));
    }
    const opWithoutLastChar = op.slice(0, -1);
    if ((0,_operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_2__.isJSONOperator)(opWithoutLastChar)) {
        return _operation_node_json_reference_node_js__WEBPACK_IMPORTED_MODULE_3__.JSONReferenceNode.create(referenceNode, _operation_node_json_path_node_js__WEBPACK_IMPORTED_MODULE_5__.JSONPathNode.create(_operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_2__.OperatorNode.create(opWithoutLastChar)));
    }
    throw new Error(`Invalid JSON operator: ${op}`);
}
function parseStringReference(ref) {
    const COLUMN_SEPARATOR = '.';
    if (!ref.includes(COLUMN_SEPARATOR)) {
        return _operation_node_reference_node_js__WEBPACK_IMPORTED_MODULE_6__.ReferenceNode.create(_operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_7__.ColumnNode.create(ref));
    }
    const parts = ref.split(COLUMN_SEPARATOR).map(trim);
    if (parts.length === 3) {
        return parseStringReferenceWithTableAndSchema(parts);
    }
    if (parts.length === 2) {
        return parseStringReferenceWithTable(parts);
    }
    throw new Error(`invalid column reference ${ref}`);
}
function parseAliasedStringReference(ref) {
    const ALIAS_SEPARATOR = ' as ';
    if (ref.includes(ALIAS_SEPARATOR)) {
        const [columnRef, alias] = ref.split(ALIAS_SEPARATOR).map(trim);
        return _operation_node_alias_node_js__WEBPACK_IMPORTED_MODULE_8__.AliasNode.create(parseStringReference(columnRef), _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_9__.IdentifierNode.create(alias));
    }
    else {
        return parseStringReference(ref);
    }
}
function parseColumnName(column) {
    return _operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_7__.ColumnNode.create(column);
}
function parseOrderedColumnName(column) {
    const ORDER_SEPARATOR = ' ';
    if (column.includes(ORDER_SEPARATOR)) {
        const [columnName, order] = column.split(ORDER_SEPARATOR).map(trim);
        if (!(0,_order_by_parser_js__WEBPACK_IMPORTED_MODULE_10__.isOrderByDirection)(order)) {
            throw new Error(`invalid order direction "${order}" next to "${columnName}"`);
        }
        return (0,_order_by_parser_js__WEBPACK_IMPORTED_MODULE_10__.parseOrderBy)([columnName, order])[0];
    }
    else {
        return parseColumnName(column);
    }
}
function parseStringReferenceWithTableAndSchema(parts) {
    const [schema, table, column] = parts;
    return _operation_node_reference_node_js__WEBPACK_IMPORTED_MODULE_6__.ReferenceNode.create(_operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_7__.ColumnNode.create(column), _operation_node_table_node_js__WEBPACK_IMPORTED_MODULE_11__.TableNode.createWithSchema(schema, table));
}
function parseStringReferenceWithTable(parts) {
    const [table, column] = parts;
    return _operation_node_reference_node_js__WEBPACK_IMPORTED_MODULE_6__.ReferenceNode.create(_operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_7__.ColumnNode.create(column), _operation_node_table_node_js__WEBPACK_IMPORTED_MODULE_11__.TableNode.create(table));
}
function trim(str) {
    return str.trim();
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/select-parser.js":
/*!**************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/select-parser.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseSelectAll: () => (/* binding */ parseSelectAll),
/* harmony export */   parseSelectArg: () => (/* binding */ parseSelectArg)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _operation_node_selection_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/selection-node.js */ "./node_modules/kysely/dist/esm/operation-node/selection-node.js");
/* harmony import */ var _reference_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/* harmony import */ var _dynamic_dynamic_reference_builder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dynamic/dynamic-reference-builder.js */ "./node_modules/kysely/dist/esm/dynamic/dynamic-reference-builder.js");
/* harmony import */ var _expression_parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./expression-parser.js */ "./node_modules/kysely/dist/esm/parser/expression-parser.js");
/* harmony import */ var _table_parser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./table-parser.js */ "./node_modules/kysely/dist/esm/parser/table-parser.js");
/* harmony import */ var _expression_expression_builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../expression/expression-builder.js */ "./node_modules/kysely/dist/esm/expression/expression-builder.js");
/// <reference types="./select-parser.d.ts" />







function parseSelectArg(selection) {
    if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(selection)) {
        return parseSelectArg(selection((0,_expression_expression_builder_js__WEBPACK_IMPORTED_MODULE_1__.expressionBuilder)()));
    }
    else if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isReadonlyArray)(selection)) {
        return selection.map((it) => parseSelectExpression(it));
    }
    else {
        return [parseSelectExpression(selection)];
    }
}
function parseSelectExpression(selection) {
    if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isString)(selection)) {
        return _operation_node_selection_node_js__WEBPACK_IMPORTED_MODULE_2__.SelectionNode.create((0,_reference_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseAliasedStringReference)(selection));
    }
    else if ((0,_dynamic_dynamic_reference_builder_js__WEBPACK_IMPORTED_MODULE_4__.isDynamicReferenceBuilder)(selection)) {
        return _operation_node_selection_node_js__WEBPACK_IMPORTED_MODULE_2__.SelectionNode.create(selection.toOperationNode());
    }
    else {
        return _operation_node_selection_node_js__WEBPACK_IMPORTED_MODULE_2__.SelectionNode.create((0,_expression_parser_js__WEBPACK_IMPORTED_MODULE_5__.parseAliasedExpression)(selection));
    }
}
function parseSelectAll(table) {
    if (!table) {
        return [_operation_node_selection_node_js__WEBPACK_IMPORTED_MODULE_2__.SelectionNode.createSelectAll()];
    }
    else if (Array.isArray(table)) {
        return table.map(parseSelectAllArg);
    }
    else {
        return [parseSelectAllArg(table)];
    }
}
function parseSelectAllArg(table) {
    if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isString)(table)) {
        return _operation_node_selection_node_js__WEBPACK_IMPORTED_MODULE_2__.SelectionNode.createSelectAllFromTable((0,_table_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseTable)(table));
    }
    throw new Error(`invalid value selectAll expression: ${JSON.stringify(table)}`);
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/set-operation-parser.js":
/*!*********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/set-operation-parser.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseSetOperations: () => (/* binding */ parseSetOperations)
/* harmony export */ });
/* harmony import */ var _expression_expression_builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../expression/expression-builder.js */ "./node_modules/kysely/dist/esm/expression/expression-builder.js");
/* harmony import */ var _operation_node_set_operation_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/set-operation-node.js */ "./node_modules/kysely/dist/esm/operation-node/set-operation-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _expression_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./expression-parser.js */ "./node_modules/kysely/dist/esm/parser/expression-parser.js");
/// <reference types="./set-operation-parser.d.ts" />




function parseSetOperations(operator, expression, all) {
    if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(expression)) {
        expression = expression((0,_expression_expression_builder_js__WEBPACK_IMPORTED_MODULE_1__.createExpressionBuilder)());
    }
    if (!(0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isReadonlyArray)(expression)) {
        expression = [expression];
    }
    return expression.map((expr) => _operation_node_set_operation_node_js__WEBPACK_IMPORTED_MODULE_2__.SetOperationNode.create(operator, (0,_expression_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseExpression)(expr), all));
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/table-parser.js":
/*!*************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/table-parser.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseAliasedTable: () => (/* binding */ parseAliasedTable),
/* harmony export */   parseTable: () => (/* binding */ parseTable),
/* harmony export */   parseTableExpression: () => (/* binding */ parseTableExpression),
/* harmony export */   parseTableExpressionOrList: () => (/* binding */ parseTableExpressionOrList)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _operation_node_alias_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/alias-node.js */ "./node_modules/kysely/dist/esm/operation-node/alias-node.js");
/* harmony import */ var _operation_node_table_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/table-node.js */ "./node_modules/kysely/dist/esm/operation-node/table-node.js");
/* harmony import */ var _expression_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./expression-parser.js */ "./node_modules/kysely/dist/esm/parser/expression-parser.js");
/* harmony import */ var _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/// <reference types="./table-parser.d.ts" />





function parseTableExpressionOrList(table) {
    if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isReadonlyArray)(table)) {
        return table.map((it) => parseTableExpression(it));
    }
    else {
        return [parseTableExpression(table)];
    }
}
function parseTableExpression(table) {
    if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isString)(table)) {
        return parseAliasedTable(table);
    }
    else {
        return (0,_expression_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseAliasedExpression)(table);
    }
}
function parseAliasedTable(from) {
    const ALIAS_SEPARATOR = ' as ';
    if (from.includes(ALIAS_SEPARATOR)) {
        const [table, alias] = from.split(ALIAS_SEPARATOR).map(trim);
        return _operation_node_alias_node_js__WEBPACK_IMPORTED_MODULE_2__.AliasNode.create(parseTable(table), _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_3__.IdentifierNode.create(alias));
    }
    else {
        return parseTable(from);
    }
}
function parseTable(from) {
    const SCHEMA_SEPARATOR = '.';
    if (from.includes(SCHEMA_SEPARATOR)) {
        const [schema, table] = from.split(SCHEMA_SEPARATOR).map(trim);
        return _operation_node_table_node_js__WEBPACK_IMPORTED_MODULE_4__.TableNode.createWithSchema(schema, table);
    }
    else {
        return _operation_node_table_node_js__WEBPACK_IMPORTED_MODULE_4__.TableNode.create(from);
    }
}
function trim(str) {
    return str.trim();
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/top-parser.js":
/*!***********************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/top-parser.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseTop: () => (/* binding */ parseTop)
/* harmony export */ });
/* harmony import */ var _operation_node_top_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/top-node.js */ "./node_modules/kysely/dist/esm/operation-node/top-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./top-parser.d.ts" />


function parseTop(expression, modifiers) {
    if (!(0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isNumber)(expression) && !(0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isBigInt)(expression)) {
        throw new Error(`Invalid top expression: ${expression}`);
    }
    if (!(0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isUndefined)(modifiers) && !isTopModifiers(modifiers)) {
        throw new Error(`Invalid top modifiers: ${modifiers}`);
    }
    return _operation_node_top_node_js__WEBPACK_IMPORTED_MODULE_1__.TopNode.create(expression, modifiers);
}
function isTopModifiers(modifiers) {
    return (modifiers === 'percent' ||
        modifiers === 'with ties' ||
        modifiers === 'percent with ties');
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/unary-operation-parser.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/unary-operation-parser.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseExists: () => (/* binding */ parseExists),
/* harmony export */   parseNotExists: () => (/* binding */ parseNotExists),
/* harmony export */   parseUnaryOperation: () => (/* binding */ parseUnaryOperation)
/* harmony export */ });
/* harmony import */ var _operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/operator-node.js */ "./node_modules/kysely/dist/esm/operation-node/operator-node.js");
/* harmony import */ var _operation_node_unary_operation_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/unary-operation-node.js */ "./node_modules/kysely/dist/esm/operation-node/unary-operation-node.js");
/* harmony import */ var _reference_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/// <reference types="./unary-operation-parser.d.ts" />



function parseExists(operand) {
    return parseUnaryOperation('exists', operand);
}
function parseNotExists(operand) {
    return parseUnaryOperation('not exists', operand);
}
function parseUnaryOperation(operator, operand) {
    return _operation_node_unary_operation_node_js__WEBPACK_IMPORTED_MODULE_0__.UnaryOperationNode.create(_operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_1__.OperatorNode.create(operator), (0,_reference_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseReferenceExpression)(operand));
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/update-set-parser.js":
/*!******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/update-set-parser.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseUpdate: () => (/* binding */ parseUpdate),
/* harmony export */   parseUpdateObjectExpression: () => (/* binding */ parseUpdateObjectExpression)
/* harmony export */ });
/* harmony import */ var _operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation-node/column-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-node.js");
/* harmony import */ var _operation_node_column_update_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/column-update-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-update-node.js");
/* harmony import */ var _expression_expression_builder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../expression/expression-builder.js */ "./node_modules/kysely/dist/esm/expression/expression-builder.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _value_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./value-parser.js */ "./node_modules/kysely/dist/esm/parser/value-parser.js");
/* harmony import */ var _reference_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/// <reference types="./update-set-parser.d.ts" />






function parseUpdate(...args) {
    if (args.length === 2) {
        return [
            _operation_node_column_update_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnUpdateNode.create((0,_reference_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseReferenceExpression)(args[0]), (0,_value_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseValueExpression)(args[1])),
        ];
    }
    return parseUpdateObjectExpression(args[0]);
}
function parseUpdateObjectExpression(update) {
    const updateObj = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_3__.isFunction)(update) ? update((0,_expression_expression_builder_js__WEBPACK_IMPORTED_MODULE_4__.expressionBuilder)()) : update;
    return Object.entries(updateObj)
        .filter(([_, value]) => value !== undefined)
        .map(([key, value]) => {
        return _operation_node_column_update_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnUpdateNode.create(_operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_5__.ColumnNode.create(key), (0,_value_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseValueExpression)(value));
    });
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/value-parser.js":
/*!*************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/value-parser.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isSafeImmediateValue: () => (/* binding */ isSafeImmediateValue),
/* harmony export */   parseSafeImmediateValue: () => (/* binding */ parseSafeImmediateValue),
/* harmony export */   parseValueExpression: () => (/* binding */ parseValueExpression),
/* harmony export */   parseValueExpressionOrList: () => (/* binding */ parseValueExpressionOrList)
/* harmony export */ });
/* harmony import */ var _operation_node_primitive_value_list_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/primitive-value-list-node.js */ "./node_modules/kysely/dist/esm/operation-node/primitive-value-list-node.js");
/* harmony import */ var _operation_node_value_list_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/value-list-node.js */ "./node_modules/kysely/dist/esm/operation-node/value-list-node.js");
/* harmony import */ var _operation_node_value_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/value-node.js */ "./node_modules/kysely/dist/esm/operation-node/value-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _expression_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./expression-parser.js */ "./node_modules/kysely/dist/esm/parser/expression-parser.js");
/// <reference types="./value-parser.d.ts" />





function parseValueExpressionOrList(arg) {
    if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isReadonlyArray)(arg)) {
        return parseValueExpressionList(arg);
    }
    return parseValueExpression(arg);
}
function parseValueExpression(exp) {
    if ((0,_expression_parser_js__WEBPACK_IMPORTED_MODULE_1__.isExpressionOrFactory)(exp)) {
        return (0,_expression_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseExpression)(exp);
    }
    return _operation_node_value_node_js__WEBPACK_IMPORTED_MODULE_2__.ValueNode.create(exp);
}
function isSafeImmediateValue(value) {
    return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isNumber)(value) || (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isBoolean)(value) || (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isNull)(value);
}
function parseSafeImmediateValue(value) {
    if (!isSafeImmediateValue(value)) {
        throw new Error(`unsafe immediate value ${JSON.stringify(value)}`);
    }
    return _operation_node_value_node_js__WEBPACK_IMPORTED_MODULE_2__.ValueNode.createImmediate(value);
}
function parseValueExpressionList(arg) {
    if (arg.some(_expression_parser_js__WEBPACK_IMPORTED_MODULE_1__.isExpressionOrFactory)) {
        return _operation_node_value_list_node_js__WEBPACK_IMPORTED_MODULE_3__.ValueListNode.create(arg.map((it) => parseValueExpression(it)));
    }
    return _operation_node_primitive_value_list_node_js__WEBPACK_IMPORTED_MODULE_4__.PrimitiveValueListNode.create(arg);
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/parser/with-parser.js":
/*!************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/parser/with-parser.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parseCommonTableExpression: () => (/* binding */ parseCommonTableExpression)
/* harmony export */ });
/* harmony import */ var _operation_node_common_table_expression_name_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/common-table-expression-name-node.js */ "./node_modules/kysely/dist/esm/operation-node/common-table-expression-name-node.js");
/* harmony import */ var _parse_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-utils.js */ "./node_modules/kysely/dist/esm/parser/parse-utils.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _query_builder_cte_builder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../query-builder/cte-builder.js */ "./node_modules/kysely/dist/esm/query-builder/cte-builder.js");
/* harmony import */ var _operation_node_common_table_expression_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/common-table-expression-node.js */ "./node_modules/kysely/dist/esm/operation-node/common-table-expression-node.js");
/// <reference types="./with-parser.d.ts" />





function parseCommonTableExpression(nameOrBuilderCallback, expression) {
    const expressionNode = expression((0,_parse_utils_js__WEBPACK_IMPORTED_MODULE_0__.createQueryCreator)()).toOperationNode();
    if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.isFunction)(nameOrBuilderCallback)) {
        return nameOrBuilderCallback(cteBuilderFactory(expressionNode)).toOperationNode();
    }
    return _operation_node_common_table_expression_node_js__WEBPACK_IMPORTED_MODULE_2__.CommonTableExpressionNode.create(parseCommonTableExpressionName(nameOrBuilderCallback), expressionNode);
}
function cteBuilderFactory(expressionNode) {
    return (name) => {
        return new _query_builder_cte_builder_js__WEBPACK_IMPORTED_MODULE_3__.CTEBuilder({
            node: _operation_node_common_table_expression_node_js__WEBPACK_IMPORTED_MODULE_2__.CommonTableExpressionNode.create(parseCommonTableExpressionName(name), expressionNode),
        });
    };
}
function parseCommonTableExpressionName(name) {
    if (name.includes('(')) {
        const parts = name.split(/[\(\)]/);
        const table = parts[0];
        const columns = parts[1].split(',').map((it) => it.trim());
        return _operation_node_common_table_expression_name_node_js__WEBPACK_IMPORTED_MODULE_4__.CommonTableExpressionNameNode.create(table, columns);
    }
    else {
        return _operation_node_common_table_expression_name_node_js__WEBPACK_IMPORTED_MODULE_4__.CommonTableExpressionNameNode.create(name);
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/plugin/immediate-value/immediate-value-plugin.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/plugin/immediate-value/immediate-value-plugin.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ImmediateValuePlugin: () => (/* binding */ ImmediateValuePlugin)
/* harmony export */ });
/* harmony import */ var _immediate_value_transformer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./immediate-value-transformer.js */ "./node_modules/kysely/dist/esm/plugin/immediate-value/immediate-value-transformer.js");
/// <reference types="./immediate-value-plugin.d.ts" />

/**
 * Transforms all ValueNodes to immediate.
 *
 * WARNING! This should never be part of the public API. Users should never use this.
 * This is an internal helper.
 *
 * @internal
 */
class ImmediateValuePlugin {
    #transformer = new _immediate_value_transformer_js__WEBPACK_IMPORTED_MODULE_0__.ImmediateValueTransformer();
    transformQuery(args) {
        return this.#transformer.transformNode(args.node);
    }
    transformResult(args) {
        return Promise.resolve(args.result);
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/plugin/immediate-value/immediate-value-transformer.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/plugin/immediate-value/immediate-value-transformer.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ImmediateValueTransformer: () => (/* binding */ ImmediateValueTransformer)
/* harmony export */ });
/* harmony import */ var _operation_node_operation_node_transformer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../operation-node/operation-node-transformer.js */ "./node_modules/kysely/dist/esm/operation-node/operation-node-transformer.js");
/// <reference types="./immediate-value-transformer.d.ts" />

/**
 * Transforms all ValueNodes to immediate.
 *
 * WARNING! This should never be part of the public API. Users should never use this.
 * This is an internal helper.
 *
 * @internal
 */
class ImmediateValueTransformer extends _operation_node_operation_node_transformer_js__WEBPACK_IMPORTED_MODULE_0__.OperationNodeTransformer {
    transformValue(node) {
        return {
            ...super.transformValue(node),
            immediate: true,
        };
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/plugin/with-schema/with-schema-plugin.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/plugin/with-schema/with-schema-plugin.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WithSchemaPlugin: () => (/* binding */ WithSchemaPlugin)
/* harmony export */ });
/* harmony import */ var _with_schema_transformer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./with-schema-transformer.js */ "./node_modules/kysely/dist/esm/plugin/with-schema/with-schema-transformer.js");
/// <reference types="./with-schema-plugin.d.ts" />

class WithSchemaPlugin {
    #transformer;
    constructor(schema) {
        this.#transformer = new _with_schema_transformer_js__WEBPACK_IMPORTED_MODULE_0__.WithSchemaTransformer(schema);
    }
    transformQuery(args) {
        return this.#transformer.transformNode(args.node);
    }
    async transformResult(args) {
        return args.result;
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/plugin/with-schema/with-schema-transformer.js":
/*!************************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/plugin/with-schema/with-schema-transformer.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WithSchemaTransformer: () => (/* binding */ WithSchemaTransformer)
/* harmony export */ });
/* harmony import */ var _operation_node_alias_node_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../operation-node/alias-node.js */ "./node_modules/kysely/dist/esm/operation-node/alias-node.js");
/* harmony import */ var _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../operation-node/identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/* harmony import */ var _operation_node_operation_node_transformer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../operation-node/operation-node-transformer.js */ "./node_modules/kysely/dist/esm/operation-node/operation-node-transformer.js");
/* harmony import */ var _operation_node_schemable_identifier_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../operation-node/schemable-identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/schemable-identifier-node.js");
/* harmony import */ var _operation_node_table_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../operation-node/table-node.js */ "./node_modules/kysely/dist/esm/operation-node/table-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./with-schema-transformer.d.ts" />






// This object exist only so that we get a type error when a new RootOperationNode
// is added. If you get a type error here, make sure to add the new root node and
// handle it correctly in the transformer.
//
// DO NOT REFACTOR THIS EVEN IF IT SEEMS USELESS TO YOU!
const ROOT_OPERATION_NODES = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
    AlterTableNode: true,
    CreateIndexNode: true,
    CreateSchemaNode: true,
    CreateTableNode: true,
    CreateTypeNode: true,
    CreateViewNode: true,
    DeleteQueryNode: true,
    DropIndexNode: true,
    DropSchemaNode: true,
    DropTableNode: true,
    DropTypeNode: true,
    DropViewNode: true,
    InsertQueryNode: true,
    RawNode: true,
    SelectQueryNode: true,
    UpdateQueryNode: true,
    MergeQueryNode: true,
});
class WithSchemaTransformer extends _operation_node_operation_node_transformer_js__WEBPACK_IMPORTED_MODULE_1__.OperationNodeTransformer {
    #schema;
    #schemableIds = new Set();
    #ctes = new Set();
    constructor(schema) {
        super();
        this.#schema = schema;
    }
    transformNodeImpl(node) {
        if (!this.#isRootOperationNode(node)) {
            return super.transformNodeImpl(node);
        }
        const ctes = this.#collectCTEs(node);
        for (const cte of ctes) {
            this.#ctes.add(cte);
        }
        const tables = this.#collectSchemableIds(node);
        for (const table of tables) {
            this.#schemableIds.add(table);
        }
        const transformed = super.transformNodeImpl(node);
        for (const table of tables) {
            this.#schemableIds.delete(table);
        }
        for (const cte of ctes) {
            this.#ctes.delete(cte);
        }
        return transformed;
    }
    transformSchemableIdentifier(node) {
        const transformed = super.transformSchemableIdentifier(node);
        if (transformed.schema || !this.#schemableIds.has(node.identifier.name)) {
            return transformed;
        }
        return {
            ...transformed,
            schema: _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_2__.IdentifierNode.create(this.#schema),
        };
    }
    transformReferences(node) {
        const transformed = super.transformReferences(node);
        if (transformed.table.table.schema) {
            return transformed;
        }
        return {
            ...transformed,
            table: _operation_node_table_node_js__WEBPACK_IMPORTED_MODULE_3__.TableNode.createWithSchema(this.#schema, transformed.table.table.identifier.name),
        };
    }
    #isRootOperationNode(node) {
        return node.kind in ROOT_OPERATION_NODES;
    }
    #collectSchemableIds(node) {
        const schemableIds = new Set();
        if ('name' in node && node.name && _operation_node_schemable_identifier_node_js__WEBPACK_IMPORTED_MODULE_4__.SchemableIdentifierNode.is(node.name)) {
            this.#collectSchemableId(node.name, schemableIds);
        }
        if ('from' in node && node.from) {
            for (const from of node.from.froms) {
                this.#collectSchemableIdsFromTableExpr(from, schemableIds);
            }
        }
        if ('into' in node && node.into) {
            this.#collectSchemableIdsFromTableExpr(node.into, schemableIds);
        }
        if ('table' in node && node.table) {
            this.#collectSchemableIdsFromTableExpr(node.table, schemableIds);
        }
        if ('joins' in node && node.joins) {
            for (const join of node.joins) {
                this.#collectSchemableIdsFromTableExpr(join.table, schemableIds);
            }
        }
        if ('using' in node && node.using) {
            this.#collectSchemableIdsFromTableExpr(node.using, schemableIds);
        }
        return schemableIds;
    }
    #collectCTEs(node) {
        const ctes = new Set();
        if ('with' in node && node.with) {
            this.#collectCTEIds(node.with, ctes);
        }
        return ctes;
    }
    #collectSchemableIdsFromTableExpr(node, schemableIds) {
        const table = _operation_node_table_node_js__WEBPACK_IMPORTED_MODULE_3__.TableNode.is(node)
            ? node
            : _operation_node_alias_node_js__WEBPACK_IMPORTED_MODULE_5__.AliasNode.is(node) && _operation_node_table_node_js__WEBPACK_IMPORTED_MODULE_3__.TableNode.is(node.node)
                ? node.node
                : null;
        if (table) {
            this.#collectSchemableId(table.table, schemableIds);
        }
    }
    #collectSchemableId(node, schemableIds) {
        const id = node.identifier.name;
        if (!this.#schemableIds.has(id) && !this.#ctes.has(id)) {
            schemableIds.add(id);
        }
    }
    #collectCTEIds(node, ctes) {
        for (const expr of node.expressions) {
            const cteId = expr.name.table.table.identifier.name;
            if (!this.#ctes.has(cteId)) {
                ctes.add(cteId);
            }
        }
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/aggregate-function-builder.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/aggregate-function-builder.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AggregateFunctionBuilder: () => (/* binding */ AggregateFunctionBuilder),
/* harmony export */   AliasedAggregateFunctionBuilder: () => (/* binding */ AliasedAggregateFunctionBuilder)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _operation_node_aggregate_function_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/aggregate-function-node.js */ "./node_modules/kysely/dist/esm/operation-node/aggregate-function-node.js");
/* harmony import */ var _operation_node_alias_node_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation-node/alias-node.js */ "./node_modules/kysely/dist/esm/operation-node/alias-node.js");
/* harmony import */ var _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../operation-node/identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _parser_parse_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser/parse-utils.js */ "./node_modules/kysely/dist/esm/parser/parse-utils.js");
/* harmony import */ var _parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/binary-operation-parser.js */ "./node_modules/kysely/dist/esm/parser/binary-operation-parser.js");
/// <reference types="./aggregate-function-builder.d.ts" />







class AggregateFunctionBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    /** @private */
    get expressionType() {
        return undefined;
    }
    /**
     * Returns an aliased version of the function.
     *
     * In addition to slapping `as "the_alias"` to the end of the SQL,
     * this method also provides strict typing:
     *
     * ```ts
     * const result = await db
     *   .selectFrom('person')
     *   .select(
     *     (eb) => eb.fn.count<number>('id').as('person_count')
     *   )
     *   .executeTakeFirstOrThrow()
     *
     * // `person_count: number` field exists in the result type.
     * console.log(result.person_count)
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * select count("id") as "person_count"
     * from "person"
     * ```
     */
    as(alias) {
        return new AliasedAggregateFunctionBuilder(this, alias);
    }
    /**
     * Adds a `distinct` clause inside the function.
     *
     * ### Examples
     *
     * ```ts
     * const result = await db
     *   .selectFrom('person')
     *   .select((eb) =>
     *     eb.fn.count<number>('first_name').distinct().as('first_name_count')
     *   )
     *   .executeTakeFirstOrThrow()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * select count(distinct "first_name") as "first_name_count"
     * from "person"
     * ```
     */
    distinct() {
        return new AggregateFunctionBuilder({
            ...this.#props,
            aggregateFunctionNode: _operation_node_aggregate_function_node_js__WEBPACK_IMPORTED_MODULE_1__.AggregateFunctionNode.cloneWithDistinct(this.#props.aggregateFunctionNode),
        });
    }
    filterWhere(...args) {
        return new AggregateFunctionBuilder({
            ...this.#props,
            aggregateFunctionNode: _operation_node_aggregate_function_node_js__WEBPACK_IMPORTED_MODULE_1__.AggregateFunctionNode.cloneWithFilter(this.#props.aggregateFunctionNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseValueBinaryOperationOrExpression)(args)),
        });
    }
    /**
     * Adds a `filter` clause with a nested `where` clause after the function, where
     * both sides of the operator are references to columns.
     *
     * Similar to {@link WhereInterface}'s `whereRef` method.
     *
     * ### Examples
     *
     * Count people with same first and last names versus general public:
     *
     * ```ts
     * const result = await db
     *   .selectFrom('person')
     *   .select((eb) => [
     *     eb.fn
     *       .count<number>('id')
     *       .filterWhereRef('first_name', '=', 'last_name')
     *       .as('repeat_name_count'),
     *     eb.fn.count<number>('id').as('total_count'),
     *   ])
     *   .executeTakeFirstOrThrow()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * select
     *   count("id") filter(where "first_name" = "last_name") as "repeat_name_count",
     *   count("id") as "total_count"
     * from "person"
     * ```
     */
    filterWhereRef(lhs, op, rhs) {
        return new AggregateFunctionBuilder({
            ...this.#props,
            aggregateFunctionNode: _operation_node_aggregate_function_node_js__WEBPACK_IMPORTED_MODULE_1__.AggregateFunctionNode.cloneWithFilter(this.#props.aggregateFunctionNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseReferentialBinaryOperation)(lhs, op, rhs)),
        });
    }
    /**
     * Adds an `over` clause (window functions) after the function.
     *
     * ### Examples
     *
     * ```ts
     * const result = await db
     *   .selectFrom('person')
     *   .select(
     *     (eb) => eb.fn.avg<number>('age').over().as('average_age')
     *   )
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * select avg("age") over() as "average_age"
     * from "person"
     * ```
     *
     * Also supports passing a callback that returns an over builder,
     * allowing to add partition by and sort by clauses inside over.
     *
     * ```ts
     * const result = await db
     *   .selectFrom('person')
     *   .select(
     *     (eb) => eb.fn.avg<number>('age').over(
     *       ob => ob.partitionBy('last_name').orderBy('first_name', 'asc')
     *     ).as('average_age')
     *   )
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * select avg("age") over(partition by "last_name" order by "first_name" asc) as "average_age"
     * from "person"
     * ```
     */
    over(over) {
        const builder = (0,_parser_parse_utils_js__WEBPACK_IMPORTED_MODULE_3__.createOverBuilder)();
        return new AggregateFunctionBuilder({
            ...this.#props,
            aggregateFunctionNode: _operation_node_aggregate_function_node_js__WEBPACK_IMPORTED_MODULE_1__.AggregateFunctionNode.cloneWithOver(this.#props.aggregateFunctionNode, (over ? over(builder) : builder).toOperationNode()),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    /**
     * Casts the expression to the given type.
     *
     * This method call doesn't change the SQL in any way. This methods simply
     * returns a copy of this `AggregateFunctionBuilder` with a new output type.
     */
    $castTo() {
        return new AggregateFunctionBuilder(this.#props);
    }
    /**
     * Omit null from the expression's type.
     *
     * This function can be useful in cases where you know an expression can't be
     * null, but Kysely is unable to infer it.
     *
     * This method call doesn't change the SQL in any way. This methods simply
     * returns a copy of `this` with a new output type.
     */
    $notNull() {
        return new AggregateFunctionBuilder(this.#props);
    }
    toOperationNode() {
        return this.#props.aggregateFunctionNode;
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_4__.preventAwait)(AggregateFunctionBuilder, "don't await AggregateFunctionBuilder instances. They are never executed directly and are always just a part of a query.");
/**
 * {@link AggregateFunctionBuilder} with an alias. The result of calling {@link AggregateFunctionBuilder.as}.
 */
class AliasedAggregateFunctionBuilder {
    #aggregateFunctionBuilder;
    #alias;
    constructor(aggregateFunctionBuilder, alias) {
        this.#aggregateFunctionBuilder = aggregateFunctionBuilder;
        this.#alias = alias;
    }
    /** @private */
    get expression() {
        return this.#aggregateFunctionBuilder;
    }
    /** @private */
    get alias() {
        return this.#alias;
    }
    toOperationNode() {
        return _operation_node_alias_node_js__WEBPACK_IMPORTED_MODULE_5__.AliasNode.create(this.#aggregateFunctionBuilder.toOperationNode(), _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_6__.IdentifierNode.create(this.#alias));
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/case-builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/case-builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CaseBuilder: () => (/* binding */ CaseBuilder),
/* harmony export */   CaseEndBuilder: () => (/* binding */ CaseEndBuilder),
/* harmony export */   CaseThenBuilder: () => (/* binding */ CaseThenBuilder),
/* harmony export */   CaseWhenBuilder: () => (/* binding */ CaseWhenBuilder)
/* harmony export */ });
/* harmony import */ var _expression_expression_wrapper_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../expression/expression-wrapper.js */ "./node_modules/kysely/dist/esm/expression/expression-wrapper.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _operation_node_case_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/case-node.js */ "./node_modules/kysely/dist/esm/operation-node/case-node.js");
/* harmony import */ var _operation_node_when_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/when-node.js */ "./node_modules/kysely/dist/esm/operation-node/when-node.js");
/* harmony import */ var _parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser/binary-operation-parser.js */ "./node_modules/kysely/dist/esm/parser/binary-operation-parser.js");
/* harmony import */ var _parser_value_parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../parser/value-parser.js */ "./node_modules/kysely/dist/esm/parser/value-parser.js");
/// <reference types="./case-builder.d.ts" />






class CaseBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    when(...args) {
        return new CaseThenBuilder({
            ...this.#props,
            node: _operation_node_case_node_js__WEBPACK_IMPORTED_MODULE_1__.CaseNode.cloneWithWhen(this.#props.node, _operation_node_when_node_js__WEBPACK_IMPORTED_MODULE_2__.WhenNode.create((0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseValueBinaryOperationOrExpression)(args))),
        });
    }
}
class CaseThenBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    then(valueExpression) {
        return new CaseWhenBuilder({
            ...this.#props,
            node: _operation_node_case_node_js__WEBPACK_IMPORTED_MODULE_1__.CaseNode.cloneWithThen(this.#props.node, (0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_4__.isSafeImmediateValue)(valueExpression)
                ? (0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseSafeImmediateValue)(valueExpression)
                : (0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseValueExpression)(valueExpression)),
        });
    }
}
class CaseWhenBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    when(...args) {
        return new CaseThenBuilder({
            ...this.#props,
            node: _operation_node_case_node_js__WEBPACK_IMPORTED_MODULE_1__.CaseNode.cloneWithWhen(this.#props.node, _operation_node_when_node_js__WEBPACK_IMPORTED_MODULE_2__.WhenNode.create((0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseValueBinaryOperationOrExpression)(args))),
        });
    }
    else(valueExpression) {
        return new CaseEndBuilder({
            ...this.#props,
            node: _operation_node_case_node_js__WEBPACK_IMPORTED_MODULE_1__.CaseNode.cloneWith(this.#props.node, {
                else: (0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_4__.isSafeImmediateValue)(valueExpression)
                    ? (0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseSafeImmediateValue)(valueExpression)
                    : (0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseValueExpression)(valueExpression),
            }),
        });
    }
    end() {
        return new _expression_expression_wrapper_js__WEBPACK_IMPORTED_MODULE_5__.ExpressionWrapper(_operation_node_case_node_js__WEBPACK_IMPORTED_MODULE_1__.CaseNode.cloneWith(this.#props.node, { isStatement: false }));
    }
    endCase() {
        return new _expression_expression_wrapper_js__WEBPACK_IMPORTED_MODULE_5__.ExpressionWrapper(_operation_node_case_node_js__WEBPACK_IMPORTED_MODULE_1__.CaseNode.cloneWith(this.#props.node, { isStatement: true }));
    }
}
class CaseEndBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    end() {
        return new _expression_expression_wrapper_js__WEBPACK_IMPORTED_MODULE_5__.ExpressionWrapper(_operation_node_case_node_js__WEBPACK_IMPORTED_MODULE_1__.CaseNode.cloneWith(this.#props.node, { isStatement: false }));
    }
    endCase() {
        return new _expression_expression_wrapper_js__WEBPACK_IMPORTED_MODULE_5__.ExpressionWrapper(_operation_node_case_node_js__WEBPACK_IMPORTED_MODULE_1__.CaseNode.cloneWith(this.#props.node, { isStatement: true }));
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/cte-builder.js":
/*!*******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/cte-builder.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CTEBuilder: () => (/* binding */ CTEBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_common_table_expression_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/common-table-expression-node.js */ "./node_modules/kysely/dist/esm/operation-node/common-table-expression-node.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./cte-builder.d.ts" />



class CTEBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    /**
     * Makes the common table expression materialized.
     */
    materialized() {
        return new CTEBuilder({
            ...this.#props,
            node: _operation_node_common_table_expression_node_js__WEBPACK_IMPORTED_MODULE_1__.CommonTableExpressionNode.cloneWith(this.#props.node, {
                materialized: true,
            }),
        });
    }
    /**
     * Makes the common table expression not materialized.
     */
    notMaterialized() {
        return new CTEBuilder({
            ...this.#props,
            node: _operation_node_common_table_expression_node_js__WEBPACK_IMPORTED_MODULE_1__.CommonTableExpressionNode.cloneWith(this.#props.node, {
                materialized: false,
            }),
        });
    }
    toOperationNode() {
        return this.#props.node;
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__.preventAwait)(CTEBuilder, "don't await CTEBuilder instances. They are never executed directly and are always just a part of a query.");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/delete-query-builder.js":
/*!****************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/delete-query-builder.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DeleteQueryBuilder: () => (/* binding */ DeleteQueryBuilder)
/* harmony export */ });
/* harmony import */ var _parser_join_parser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../parser/join-parser.js */ "./node_modules/kysely/dist/esm/parser/join-parser.js");
/* harmony import */ var _parser_table_parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../parser/table-parser.js */ "./node_modules/kysely/dist/esm/parser/table-parser.js");
/* harmony import */ var _parser_select_parser_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../parser/select-parser.js */ "./node_modules/kysely/dist/esm/parser/select-parser.js");
/* harmony import */ var _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/query-node.js */ "./node_modules/kysely/dist/esm/operation-node/query-node.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _no_result_error_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./no-result-error.js */ "./node_modules/kysely/dist/esm/query-builder/no-result-error.js");
/* harmony import */ var _delete_result_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./delete-result.js */ "./node_modules/kysely/dist/esm/query-builder/delete-result.js");
/* harmony import */ var _operation_node_delete_query_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/delete-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/delete-query-node.js");
/* harmony import */ var _operation_node_limit_node_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../operation-node/limit-node.js */ "./node_modules/kysely/dist/esm/operation-node/limit-node.js");
/* harmony import */ var _parser_order_by_parser_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../parser/order-by-parser.js */ "./node_modules/kysely/dist/esm/parser/order-by-parser.js");
/* harmony import */ var _parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/binary-operation-parser.js */ "./node_modules/kysely/dist/esm/parser/binary-operation-parser.js");
/* harmony import */ var _parser_value_parser_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../parser/value-parser.js */ "./node_modules/kysely/dist/esm/parser/value-parser.js");
/* harmony import */ var _parser_top_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser/top-parser.js */ "./node_modules/kysely/dist/esm/parser/top-parser.js");
/// <reference types="./delete-query-builder.d.ts" />














class DeleteQueryBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    where(...args) {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithWhere(this.#props.queryNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseValueBinaryOperationOrExpression)(args)),
        });
    }
    whereRef(lhs, op, rhs) {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithWhere(this.#props.queryNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseReferentialBinaryOperation)(lhs, op, rhs)),
        });
    }
    clearWhere() {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithoutWhere(this.#props.queryNode),
        });
    }
    /**
     * Changes a `delete from` query into a `delete top from` query.
     *
     * `top` clause is only supported by some dialects like MS SQL Server.
     *
     * ### Examples
     *
     * Delete the first 5 rows:
     *
     * ```ts
     * await db
     *   .deleteFrom('person')
     *   .top(5)
     *   .where('age', '>', 18)
     *   .executeTakeFirstOrThrow()
     * ```
     *
     * The generated SQL (MS SQL Server):
     *
     * ```sql
     * delete top(5) from "person" where "age" > @1
     * ```
     *
     * Delete the first 50% of rows:
     *
     * ```ts
     * await db
     *   .deleteFrom('person')
     *   .top(50, 'percent')
     *   .where('age', '>', 18)
     *   .executeTakeFirstOrThrow()
     * ```
     *
     * The generated SQL (MS SQL Server):
     *
     * ```sql
     * delete top(50) percent from "person" where "age" > @1
     * ```
     */
    top(expression, modifiers) {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithTop(this.#props.queryNode, (0,_parser_top_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseTop)(expression, modifiers)),
        });
    }
    using(tables) {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_delete_query_node_js__WEBPACK_IMPORTED_MODULE_4__.DeleteQueryNode.cloneWithUsing(this.#props.queryNode, (0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_5__.parseTableExpressionOrList)(tables)),
        });
    }
    innerJoin(...args) {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithJoin(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseJoin)('InnerJoin', args)),
        });
    }
    leftJoin(...args) {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithJoin(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseJoin)('LeftJoin', args)),
        });
    }
    rightJoin(...args) {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithJoin(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseJoin)('RightJoin', args)),
        });
    }
    fullJoin(...args) {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithJoin(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseJoin)('FullJoin', args)),
        });
    }
    returning(selection) {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithReturning(this.#props.queryNode, (0,_parser_select_parser_js__WEBPACK_IMPORTED_MODULE_7__.parseSelectArg)(selection)),
        });
    }
    returningAll(table) {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithReturning(this.#props.queryNode, (0,_parser_select_parser_js__WEBPACK_IMPORTED_MODULE_7__.parseSelectAll)(table)),
        });
    }
    /**
     * Clears all `returning` clauses from the query.
     *
     * ### Examples
     *
     * ```ts
     * db.deleteFrom('pet')
     *   .returningAll()
     *   .where('name', '=', 'Max')
     *   .clearReturning()
     * ```
     *
     * The generated SQL(PostgreSQL):
     *
     * ```sql
     * delete from "pet" where "name" = "Max"
     * ```
     */
    clearReturning() {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithoutReturning(this.#props.queryNode),
        });
    }
    /**
     * Clears the `limit` clause from the query.
     *
     * ### Examples
     *
     * ```ts
     * db.deleteFrom('pet')
     *   .returningAll()
     *   .where('name', '=', 'Max')
     *   .limit(5)
     *   .clearLimit()
     * ```
     *
     * The generated SQL(PostgreSQL):
     *
     * ```sql
     * delete from "pet" where "name" = "Max" returning *
     * ```
     */
    clearLimit() {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_delete_query_node_js__WEBPACK_IMPORTED_MODULE_4__.DeleteQueryNode.cloneWithoutLimit(this.#props.queryNode),
        });
    }
    /**
     * Clears the `order by` clause from the query.
     *
     * ### Examples
     *
     * ```ts
     * db.deleteFrom('pet')
     *   .returningAll()
     *   .where('name', '=', 'Max')
     *   .orderBy('id')
     *   .clearOrderBy()
     * ```
     *
     * The generated SQL(PostgreSQL):
     *
     * ```sql
     * delete from "pet" where "name" = "Max" returning *
     * ```
     */
    clearOrderBy() {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_delete_query_node_js__WEBPACK_IMPORTED_MODULE_4__.DeleteQueryNode.cloneWithoutOrderBy(this.#props.queryNode),
        });
    }
    /**
     * Adds an `order by` clause to the query.
     *
     * `orderBy` calls are additive. To order by multiple columns, call `orderBy`
     * multiple times.
     *
     * The first argument is the expression to order by and the second is the
     * order (`asc` or `desc`).
     *
     * An `order by` clause in a delete query is only supported by some dialects
     * like MySQL.
     *
     * See {@link SelectQueryBuilder.orderBy} for more examples.
     *
     * ### Examples
     *
     * Delete 5 oldest items in a table:
     *
     * ```ts
     * await db
     *   .deleteFrom('pet')
     *   .orderBy('created_at')
     *   .limit(5)
     *   .execute()
     * ```
     *
     * The generated SQL (MySQL):
     *
     * ```sql
     * delete from `pet`
     * order by `created_at`
     * limit ?
     * ```
     */
    orderBy(orderBy, direction) {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_delete_query_node_js__WEBPACK_IMPORTED_MODULE_4__.DeleteQueryNode.cloneWithOrderByItems(this.#props.queryNode, (0,_parser_order_by_parser_js__WEBPACK_IMPORTED_MODULE_8__.parseOrderBy)([orderBy, direction])),
        });
    }
    /**
     * Adds a limit clause to the query.
     *
     * A limit clause in a delete query is only supported by some dialects
     * like MySQL.
     *
     * ### Examples
     *
     * Delete 5 oldest items in a table:
     *
     * ```ts
     * await db
     *   .deleteFrom('pet')
     *   .orderBy('created_at')
     *   .limit(5)
     *   .execute()
     * ```
     */
    limit(limit) {
        return new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_delete_query_node_js__WEBPACK_IMPORTED_MODULE_4__.DeleteQueryNode.cloneWithLimit(this.#props.queryNode, _operation_node_limit_node_js__WEBPACK_IMPORTED_MODULE_9__.LimitNode.create((0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_10__.parseValueExpression)(limit))),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     *
     * If you want to conditionally call a method on `this`, see
     * the {@link $if} method.
     *
     * ### Examples
     *
     * The next example uses a helper function `log` to log a query:
     *
     * ```ts
     * function log<T extends Compilable>(qb: T): T {
     *   console.log(qb.compile())
     *   return qb
     * }
     *
     * db.deleteFrom('person')
     *   .$call(log)
     *   .execute()
     * ```
     */
    $call(func) {
        return func(this);
    }
    /**
     * Call `func(this)` if `condition` is true.
     *
     * This method is especially handy with optional selects. Any `returning` or `returningAll`
     * method calls add columns as optional fields to the output type when called inside
     * the `func` callback. This is because we can't know if those selections were actually
     * made before running the code.
     *
     * You can also call any other methods inside the callback.
     *
     * ### Examples
     *
     * ```ts
     * async function deletePerson(id: number, returnLastName: boolean) {
     *   return await db
     *     .deleteFrom('person')
     *     .where('id', '=', id)
     *     .returning(['id', 'first_name'])
     *     .$if(returnLastName, (qb) => qb.returning('last_name'))
     *     .executeTakeFirstOrThrow()
     * }
     * ```
     *
     * Any selections added inside the `if` callback will be added as optional fields to the
     * output type since we can't know if the selections were actually made before running
     * the code. In the example above the return type of the `deletePerson` function is:
     *
     * ```ts
     * {
     *   id: number
     *   first_name: string
     *   last_name?: string
     * }
     * ```
     */
    $if(condition, func) {
        if (condition) {
            return func(this);
        }
        return new DeleteQueryBuilder({
            ...this.#props,
        });
    }
    /**
     * Change the output type of the query.
     *
     * This method call doesn't change the SQL in any way. This methods simply
     * returns a copy of this `DeleteQueryBuilder` with a new output type.
     */
    $castTo() {
        return new DeleteQueryBuilder(this.#props);
    }
    /**
     * Narrows (parts of) the output type of the query.
     *
     * Kysely tries to be as type-safe as possible, but in some cases we have to make
     * compromises for better maintainability and compilation performance. At present,
     * Kysely doesn't narrow the output type of the query when using {@link where} and {@link returning} or {@link returningAll}.
     *
     * This utility method is very useful for these situations, as it removes unncessary
     * runtime assertion/guard code. Its input type is limited to the output type
     * of the query, so you can't add a column that doesn't exist, or change a column's
     * type to something that doesn't exist in its union type.
     *
     * ### Examples
     *
     * Turn this code:
     *
     * ```ts
     * const person = await db.deleteFrom('person')
     *   .where('id', '=', id)
     *   .where('nullable_column', 'is not', null)
     *   .returningAll()
     *   .executeTakeFirstOrThrow()
     *
     * if (person.nullable_column) {
     *   functionThatExpectsPersonWithNonNullValue(person)
     * }
     * ```
     *
     * Into this:
     *
     * ```ts
     * const person = await db.deleteFrom('person')
     *   .where('id', '=', id)
     *   .where('nullable_column', 'is not', null)
     *   .returningAll()
     *   .$narrowType<{ nullable_column: string }>()
     *   .executeTakeFirstOrThrow()
     *
     * functionThatExpectsPersonWithNonNullValue(person)
     * ```
     */
    $narrowType() {
        return new DeleteQueryBuilder(this.#props);
    }
    /**
     * Asserts that query's output row type equals the given type `T`.
     *
     * This method can be used to simplify excessively complex types to make typescript happy
     * and much faster.
     *
     * Kysely uses complex type magic to achieve its type safety. This complexity is sometimes too much
     * for typescript and you get errors like this:
     *
     * ```
     * error TS2589: Type instantiation is excessively deep and possibly infinite.
     * ```
     *
     * In these case you can often use this method to help typescript a little bit. When you use this
     * method to assert the output type of a query, Kysely can drop the complex output type that
     * consists of multiple nested helper types and replace it with the simple asserted type.
     *
     * Using this method doesn't reduce type safety at all. You have to pass in a type that is
     * structurally equal to the current type.
     *
     * ### Examples
     *
     * ```ts
     * const result = await db
     *   .with('deleted_person', (qb) => qb
     *     .deleteFrom('person')
     *     .where('id', '=', person.id)
     *     .returning('first_name')
     *     .$assertType<{ first_name: string }>()
     *   )
     *   .with('deleted_pet', (qb) => qb
     *     .deleteFrom('pet')
     *     .where('owner_id', '=', person.id)
     *     .returning(['name as pet_name', 'species'])
     *     .$assertType<{ pet_name: string, species: Species }>()
     *   )
     *   .selectFrom(['deleted_person', 'deleted_pet'])
     *   .selectAll()
     *   .executeTakeFirstOrThrow()
     * ```
     */
    $assertType() {
        return new DeleteQueryBuilder(this.#props);
    }
    /**
     * Returns a copy of this DeleteQueryBuilder instance with the given plugin installed.
     */
    withPlugin(plugin) {
        return new DeleteQueryBuilder({
            ...this.#props,
            executor: this.#props.executor.withPlugin(plugin),
        });
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.queryNode, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    /**
     * Executes the query and returns an array of rows.
     *
     * Also see the {@link executeTakeFirst} and {@link executeTakeFirstOrThrow} methods.
     */
    async execute() {
        const compiledQuery = this.compile();
        const query = compiledQuery.query;
        const result = await this.#props.executor.executeQuery(compiledQuery, this.#props.queryId);
        if (this.#props.executor.adapter.supportsReturning && query.returning) {
            return result.rows;
        }
        return [
            new _delete_result_js__WEBPACK_IMPORTED_MODULE_11__.DeleteResult(
            // TODO: remove numUpdatedOrDeletedRows.
            result.numAffectedRows ?? result.numUpdatedOrDeletedRows ?? BigInt(0)),
        ];
    }
    /**
     * Executes the query and returns the first result or undefined if
     * the query returned no result.
     */
    async executeTakeFirst() {
        const [result] = await this.execute();
        return result;
    }
    /**
     * Executes the query and returns the first result or throws if
     * the query returned no result.
     *
     * By default an instance of {@link NoResultError} is thrown, but you can
     * provide a custom error class, or callback as the only argument to throw a different
     * error.
     */
    async executeTakeFirstOrThrow(errorConstructor = _no_result_error_js__WEBPACK_IMPORTED_MODULE_12__.NoResultError) {
        const result = await this.executeTakeFirst();
        if (result === undefined) {
            const error = (0,_no_result_error_js__WEBPACK_IMPORTED_MODULE_12__.isNoResultErrorConstructor)(errorConstructor)
                ? new errorConstructor(this.toOperationNode())
                : errorConstructor(this.toOperationNode());
            throw error;
        }
        return result;
    }
    async *stream(chunkSize = 100) {
        const compiledQuery = this.compile();
        const stream = this.#props.executor.stream(compiledQuery, chunkSize, this.#props.queryId);
        for await (const item of stream) {
            yield* item.rows;
        }
    }
    async explain(format, options) {
        const builder = new DeleteQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithExplain(this.#props.queryNode, format, options),
        });
        return await builder.execute();
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_13__.preventAwait)(DeleteQueryBuilder, "don't await DeleteQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/delete-result.js":
/*!*********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/delete-result.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DeleteResult: () => (/* binding */ DeleteResult)
/* harmony export */ });
/// <reference types="./delete-result.d.ts" />
class DeleteResult {
    numDeletedRows;
    constructor(numDeletedRows) {
        this.numDeletedRows = numDeletedRows;
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/function-module.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/function-module.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createFunctionModule: () => (/* binding */ createFunctionModule)
/* harmony export */ });
/* harmony import */ var _expression_expression_wrapper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../expression/expression-wrapper.js */ "./node_modules/kysely/dist/esm/expression/expression-wrapper.js");
/* harmony import */ var _operation_node_aggregate_function_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/aggregate-function-node.js */ "./node_modules/kysely/dist/esm/operation-node/aggregate-function-node.js");
/* harmony import */ var _operation_node_function_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/function-node.js */ "./node_modules/kysely/dist/esm/operation-node/function-node.js");
/* harmony import */ var _parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/* harmony import */ var _parser_select_parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../parser/select-parser.js */ "./node_modules/kysely/dist/esm/parser/select-parser.js");
/* harmony import */ var _aggregate_function_builder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./aggregate-function-builder.js */ "./node_modules/kysely/dist/esm/query-builder/aggregate-function-builder.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _parser_table_parser_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../parser/table-parser.js */ "./node_modules/kysely/dist/esm/parser/table-parser.js");
/// <reference types="./function-module.d.ts" />








function createFunctionModule() {
    const fn = (name, args) => {
        return new _expression_expression_wrapper_js__WEBPACK_IMPORTED_MODULE_0__.ExpressionWrapper(_operation_node_function_node_js__WEBPACK_IMPORTED_MODULE_1__.FunctionNode.create(name, (0,_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseReferenceExpressionOrList)(args ?? [])));
    };
    const agg = (name, args) => {
        return new _aggregate_function_builder_js__WEBPACK_IMPORTED_MODULE_3__.AggregateFunctionBuilder({
            aggregateFunctionNode: _operation_node_aggregate_function_node_js__WEBPACK_IMPORTED_MODULE_4__.AggregateFunctionNode.create(name, args ? (0,_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseReferenceExpressionOrList)(args) : undefined),
        });
    };
    return Object.assign(fn, {
        agg,
        avg(column) {
            return agg('avg', [column]);
        },
        coalesce(...values) {
            return fn('coalesce', values);
        },
        count(column) {
            return agg('count', [column]);
        },
        countAll(table) {
            return new _aggregate_function_builder_js__WEBPACK_IMPORTED_MODULE_3__.AggregateFunctionBuilder({
                aggregateFunctionNode: _operation_node_aggregate_function_node_js__WEBPACK_IMPORTED_MODULE_4__.AggregateFunctionNode.create('count', (0,_parser_select_parser_js__WEBPACK_IMPORTED_MODULE_5__.parseSelectAll)(table)),
            });
        },
        max(column) {
            return agg('max', [column]);
        },
        min(column) {
            return agg('min', [column]);
        },
        sum(column) {
            return agg('sum', [column]);
        },
        any(column) {
            return fn('any', [column]);
        },
        jsonAgg(table) {
            return new _aggregate_function_builder_js__WEBPACK_IMPORTED_MODULE_3__.AggregateFunctionBuilder({
                aggregateFunctionNode: _operation_node_aggregate_function_node_js__WEBPACK_IMPORTED_MODULE_4__.AggregateFunctionNode.create('json_agg', [
                    (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_6__.isString)(table) ? (0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_7__.parseTable)(table) : table.toOperationNode(),
                ]),
            });
        },
        toJson(table) {
            return new _expression_expression_wrapper_js__WEBPACK_IMPORTED_MODULE_0__.ExpressionWrapper(_operation_node_function_node_js__WEBPACK_IMPORTED_MODULE_1__.FunctionNode.create('to_json', [
                (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_6__.isString)(table) ? (0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_7__.parseTable)(table) : table.toOperationNode(),
            ]));
        },
    });
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/insert-query-builder.js":
/*!****************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/insert-query-builder.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InsertQueryBuilder: () => (/* binding */ InsertQueryBuilder)
/* harmony export */ });
/* harmony import */ var _parser_select_parser_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../parser/select-parser.js */ "./node_modules/kysely/dist/esm/parser/select-parser.js");
/* harmony import */ var _parser_insert_values_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/insert-values-parser.js */ "./node_modules/kysely/dist/esm/parser/insert-values-parser.js");
/* harmony import */ var _operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/insert-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/insert-query-node.js");
/* harmony import */ var _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation-node/query-node.js */ "./node_modules/kysely/dist/esm/operation-node/query-node.js");
/* harmony import */ var _parser_update_set_parser_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../parser/update-set-parser.js */ "./node_modules/kysely/dist/esm/parser/update-set-parser.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _operation_node_on_duplicate_key_node_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../operation-node/on-duplicate-key-node.js */ "./node_modules/kysely/dist/esm/operation-node/on-duplicate-key-node.js");
/* harmony import */ var _insert_result_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./insert-result.js */ "./node_modules/kysely/dist/esm/query-builder/insert-result.js");
/* harmony import */ var _no_result_error_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./no-result-error.js */ "./node_modules/kysely/dist/esm/query-builder/no-result-error.js");
/* harmony import */ var _parser_expression_parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../parser/expression-parser.js */ "./node_modules/kysely/dist/esm/parser/expression-parser.js");
/* harmony import */ var _operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/column-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-node.js");
/* harmony import */ var _on_conflict_builder_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./on-conflict-builder.js */ "./node_modules/kysely/dist/esm/query-builder/on-conflict-builder.js");
/* harmony import */ var _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../operation-node/on-conflict-node.js */ "./node_modules/kysely/dist/esm/operation-node/on-conflict-node.js");
/* harmony import */ var _parser_top_parser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../parser/top-parser.js */ "./node_modules/kysely/dist/esm/parser/top-parser.js");
/// <reference types="./insert-query-builder.d.ts" />















class InsertQueryBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    /**
     * Sets the values to insert for an {@link Kysely.insertInto | insert} query.
     *
     * This method takes an object whose keys are column names and values are
     * values to insert. In addition to the column's type, the values can be
     * raw {@link sql} snippets or select queries.
     *
     * You must provide all fields you haven't explicitly marked as nullable
     * or optional using {@link Generated} or {@link ColumnType}.
     *
     * The return value of an `insert` query is an instance of {@link InsertResult}. The
     * {@link InsertResult.insertId | insertId} field holds the auto incremented primary
     * key if the database returned one.
     *
     * On PostgreSQL and some other dialects, you need to call `returning` to get
     * something out of the query.
     *
     * Also see the {@link expression} method for inserting the result of a select
     * query or any other expression.
     *
     * ### Examples
     *
     * <!-- siteExample("insert", "Single row", 10) -->
     *
     * Insert a single row:
     *
     * ```ts
     * const result = await db
     *   .insertInto('person')
     *   .values({
     *     first_name: 'Jennifer',
     *     last_name: 'Aniston',
     *     age: 40
     *   })
     *   .executeTakeFirst()
     *
     * // `insertId` is only available on dialects that
     * // automatically return the id of the inserted row
     * // such as MySQL and SQLite. On PostgreSQL, for example,
     * // you need to add a `returning` clause to the query to
     * // get anything out. See the "returning data" example.
     * console.log(result.insertId)
     * ```
     *
     * The generated SQL (MySQL):
     *
     * ```sql
     * insert into `person` (`first_name`, `last_name`, `age`) values (?, ?, ?)
     * ```
     *
     * <!-- siteExample("insert", "Multiple rows", 20) -->
     *
     * On dialects that support it (for example PostgreSQL) you can insert multiple
     * rows by providing an array. Note that the return value is once again very
     * dialect-specific. Some databases may only return the id of the *last* inserted
     * row and some return nothing at all unless you call `returning`.
     *
     * ```ts
     * await db
     *   .insertInto('person')
     *   .values([{
     *     first_name: 'Jennifer',
     *     last_name: 'Aniston',
     *     age: 40,
     *   }, {
     *     first_name: 'Arnold',
     *     last_name: 'Schwarzenegger',
     *     age: 70,
     *   }])
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * insert into "person" ("first_name", "last_name", "age") values (($1, $2, $3), ($4, $5, $6))
     * ```
     *
     * <!-- siteExample("insert", "Returning data", 30) -->
     *
     * On supported dialects like PostgreSQL you need to chain `returning` to the query to get
     * the inserted row's columns (or any other expression) as the return value. `returning`
     * works just like `select`. Refer to `select` method's examples and documentation for
     * more info.
     *
     * ```ts
     * const result = await db
     *   .insertInto('person')
     *   .values({
     *     first_name: 'Jennifer',
     *     last_name: 'Aniston',
     *     age: 40,
     *   })
     *   .returning(['id', 'first_name as name'])
     *   .executeTakeFirstOrThrow()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * insert into "person" ("first_name", "last_name", "age") values ($1, $2, $3) returning "id", "first_name" as "name"
     * ```
     *
     * <!-- siteExample("insert", "Complex values", 40) -->
     *
     * In addition to primitives, the values can also be arbitrary expressions.
     * You can build the expressions by using a callback and calling the methods
     * on the expression builder passed to it:
     *
     * ```ts
     * import { sql } from 'kysely'
     *
     * const ani = "Ani"
     * const ston = "ston"
     *
     * const result = await db
     *   .insertInto('person')
     *   .values(({ ref, selectFrom, fn }) => ({
     *     first_name: 'Jennifer',
     *     last_name: sql`concat(${ani}, ${ston})`,
     *     middle_name: ref('first_name'),
     *     age: selectFrom('person')
     *       .select(fn.avg<number>('age')
     *       .as('avg_age')),
     *   }))
     *   .executeTakeFirst()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * insert into "person" (
     *   "first_name",
     *   "last_name",
     *   "middle_name",
     *   "age"
     * )
     * values (
     *   $1,
     *   concat($2, $3),
     *   "first_name",
     *   (select avg("age") as "avg_age" from "person")
     * )
     * ```
     *
     * You can also use the callback version of subqueries or raw expressions:
     *
     * ```ts
     * db.with('jennifer', (db) => db
     *   .selectFrom('person')
     *   .where('first_name', '=', 'Jennifer')
     *   .select(['id', 'first_name', 'gender'])
     *   .limit(1)
     * ).insertInto('pet').values((eb) => ({
     *   owner_id: eb.selectFrom('jennifer').select('id'),
     *   name: eb.selectFrom('jennifer').select('first_name'),
     *   species: 'cat',
     * }))
     * ```
     */
    values(insert) {
        const [columns, values] = (0,_parser_insert_values_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseInsertExpression)(insert);
        return new InsertQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_2__.InsertQueryNode.cloneWith(this.#props.queryNode, {
                columns,
                values,
            }),
        });
    }
    /**
     * Sets the columns to insert.
     *
     * The {@link values} method sets both the columns and the values and this method
     * is not needed. But if you are using the {@link expression} method, you can use
     * this method to set the columns to insert.
     *
     * ### Examples
     *
     * ```ts
     * db.insertInto('person')
     *   .columns(['first_name'])
     *   .expression((eb) => eb.selectFrom('pet').select('pet.name'))
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * insert into "person" ("first_name")
     * select "pet"."name" from "pet"
     * ```
     */
    columns(columns) {
        return new InsertQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_2__.InsertQueryNode.cloneWith(this.#props.queryNode, {
                columns: (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(columns.map(_operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_3__.ColumnNode.create)),
            }),
        });
    }
    /**
     * Insert an arbitrary expression. For example the result of a select query.
     *
     * ### Examples
     *
     * <!-- siteExample("insert", "Insert subquery", 50) -->
     *
     * You can create an `INSERT INTO SELECT FROM` query using the `expression` method:
     *
     * ```ts
     * const result = await db.insertInto('person')
     *   .columns(['first_name', 'last_name', 'age'])
     *   .expression((eb) => eb
     *     .selectFrom('pet')
     *     .select((eb) => [
     *       'pet.name',
     *       eb.val('Petson').as('last_name'),
     *       eb.lit(7).as('age'),
     *     ])
     *   )
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * insert into "person" ("first_name", "last_name", "age")
     * select "pet"."name", $1 as "last_name", 7 as "age from "pet"
     * ```
     */
    expression(expression) {
        return new InsertQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_2__.InsertQueryNode.cloneWith(this.#props.queryNode, {
                values: (0,_parser_expression_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseExpression)(expression),
            }),
        });
    }
    /**
     * Creates an `insert into "person" default values` query.
     *
     * ### Examples
     *
     * ```ts
     * await db.insertInto('person')
     *   .defaultValues()
     *   .execute()
     * ```
     */
    defaultValues() {
        return new InsertQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_2__.InsertQueryNode.cloneWith(this.#props.queryNode, {
                defaultValues: true,
            }),
        });
    }
    /**
     * Changes an `insert into` query to an `insert ignore into` query.
     *
     * If you use the ignore modifier, ignorable errors that occur while executing the
     * insert statement are ignored. For example, without ignore, a row that duplicates
     * an existing unique index or primary key value in the table causes a duplicate-key
     * error and the statement is aborted. With ignore, the row is discarded and no error
     * occurs.
     *
     * This is only supported on some dialects like MySQL. On most dialects you should
     * use the {@link onConflict} method.
     *
     * ### Examples
     *
     * ```ts
     * await db.insertInto('person')
     *   .ignore()
     *   .values(values)
     *   .execute()
     * ```
     */
    ignore() {
        return new InsertQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_2__.InsertQueryNode.cloneWith(this.#props.queryNode, {
                ignore: true,
            }),
        });
    }
    /**
     * Changes an `insert into` query to an `insert top into` query.
     *
     * `top` clause is only supported by some dialects like MS SQL Server.
     *
     * ### Examples
     *
     * Insert the first 5 rows:
     *
     * ```ts
     * await db.insertInto('person')
     *   .top(5)
     *   .columns(['first_name', 'gender'])
     *   .expression(
     *     (eb) => eb.selectFrom('pet').select(['name', sql.lit('other').as('gender')])
     *   )
     *   .execute()
     * ```
     *
     * The generated SQL (MS SQL Server):
     *
     * ```sql
     * insert top(5) into "person" ("first_name", "gender") select "name", 'other' as "gender" from "pet"
     * ```
     *
     * Insert the first 50 percent of rows:
     *
     * ```ts
     * await db.insertInto('person')
     *   .top(50, 'percent')
     *   .columns(['first_name', 'gender'])
     *   .expression(
     *     (eb) => eb.selectFrom('pet').select(['name', sql.lit('other').as('gender')])
     *   )
     *   .execute()
     * ```
     *
     * The generated SQL (MS SQL Server):
     *
     * ```sql
     * insert top(50) percent into "person" ("first_name", "gender") select "name", 'other' as "gender" from "pet"
     * ```
     */
    top(expression, modifiers) {
        return new InsertQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_5__.QueryNode.cloneWithTop(this.#props.queryNode, (0,_parser_top_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseTop)(expression, modifiers)),
        });
    }
    /**
     * Adds an `on conflict` clause to the query.
     *
     * `on conflict` is only supported by some dialects like PostgreSQL and SQLite. On MySQL
     * you can use {@link ignore} and {@link onDuplicateKeyUpdate} to achieve similar results.
     *
     * ### Examples
     *
     * ```ts
     * await db
     *   .insertInto('pet')
     *   .values({
     *     name: 'Catto',
     *     species: 'cat',
     *   })
     *   .onConflict((oc) => oc
     *     .column('name')
     *     .doUpdateSet({ species: 'hamster' })
     *   )
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * insert into "pet" ("name", "species")
     * values ($1, $2)
     * on conflict ("name")
     * do update set "species" = $3
     * ```
     *
     * You can provide the name of the constraint instead of a column name:
     *
     * ```ts
     * await db
     *   .insertInto('pet')
     *   .values({
     *     name: 'Catto',
     *     species: 'cat',
     *   })
     *   .onConflict((oc) => oc
     *     .constraint('pet_name_key')
     *     .doUpdateSet({ species: 'hamster' })
     *   )
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * insert into "pet" ("name", "species")
     * values ($1, $2)
     * on conflict on constraint "pet_name_key"
     * do update set "species" = $3
     * ```
     *
     * You can also specify an expression as the conflict target in case
     * the unique index is an expression index:
     *
     * ```ts
     * import { sql } from 'kysely'
     *
     * await db
     *   .insertInto('pet')
     *   .values({
     *     name: 'Catto',
     *     species: 'cat',
     *   })
     *   .onConflict((oc) => oc
     *     .expression(sql`lower(name)`)
     *     .doUpdateSet({ species: 'hamster' })
     *   )
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * insert into "pet" ("name", "species")
     * values ($1, $2)
     * on conflict (lower(name))
     * do update set "species" = $3
     * ```
     *
     * You can add a filter for the update statement like this:
     *
     * ```ts
     * await db
     *   .insertInto('pet')
     *   .values({
     *     name: 'Catto',
     *     species: 'cat',
     *   })
     *   .onConflict((oc) => oc
     *     .column('name')
     *     .doUpdateSet({ species: 'hamster' })
     *     .where('excluded.name', '!=', 'Catto'')
     *   )
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * insert into "pet" ("name", "species")
     * values ($1, $2)
     * on conflict ("name")
     * do update set "species" = $3
     * where "excluded"."name" != $4
     * ```
     *
     * You can create an `on conflict do nothing` clauses like this:
     *
     * ```ts
     * await db
     *   .insertInto('pet')
     *   .values({
     *     name: 'Catto',
     *     species: 'cat',
     *   })
     *   .onConflict((oc) => oc
     *     .column('name')
     *     .doNothing()
     *   )
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * insert into "pet" ("name", "species")
     * values ($1, $2)
     * on conflict ("name") do nothing
     * ```
     *
     * You can refer to the columns of the virtual `excluded` table
     * in a type-safe way using a callback and the `ref` method of
     * `ExpressionBuilder`:
     *
     * ```ts
     * db.insertInto('person')
     *   .values(person)
     *   .onConflict(oc => oc
     *     .column('id')
     *     .doUpdateSet({
     *       first_name: (eb) => eb.ref('excluded.first_name'),
     *       last_name: (eb) => eb.ref('excluded.last_name')
     *     })
     *   )
     * ```
     */
    onConflict(callback) {
        return new InsertQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_2__.InsertQueryNode.cloneWith(this.#props.queryNode, {
                onConflict: callback(new _on_conflict_builder_js__WEBPACK_IMPORTED_MODULE_7__.OnConflictBuilder({
                    onConflictNode: _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_8__.OnConflictNode.create(),
                })).toOperationNode(),
            }),
        });
    }
    /**
     * Adds `on duplicate key update` to the query.
     *
     * If you specify `on duplicate key update`, and a row is inserted that would cause
     * a duplicate value in a unique index or primary key, an update of the old row occurs.
     *
     * This is only implemented by some dialects like MySQL. On most dialects you should
     * use {@link onConflict} instead.
     *
     * ### Examples
     *
     * ```ts
     * await db
     *   .insertInto('person')
     *   .values(values)
     *   .onDuplicateKeyUpdate({ species: 'hamster' })
     * ```
     */
    onDuplicateKeyUpdate(update) {
        return new InsertQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_2__.InsertQueryNode.cloneWith(this.#props.queryNode, {
                onDuplicateKey: _operation_node_on_duplicate_key_node_js__WEBPACK_IMPORTED_MODULE_9__.OnDuplicateKeyNode.create((0,_parser_update_set_parser_js__WEBPACK_IMPORTED_MODULE_10__.parseUpdateObjectExpression)(update)),
            }),
        });
    }
    returning(selection) {
        return new InsertQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_5__.QueryNode.cloneWithReturning(this.#props.queryNode, (0,_parser_select_parser_js__WEBPACK_IMPORTED_MODULE_11__.parseSelectArg)(selection)),
        });
    }
    returningAll() {
        return new InsertQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_5__.QueryNode.cloneWithReturning(this.#props.queryNode, (0,_parser_select_parser_js__WEBPACK_IMPORTED_MODULE_11__.parseSelectAll)()),
        });
    }
    /**
     * Clears all `returning` clauses from the query.
     *
     * ### Examples
     *
     * ```ts
     * db.insertInto('person')
     *   .values({ first_name: 'James', last_name: 'Smith', age: 42 })
     *   .returning(['first_name'])
     *   .clearReturning()
     * ```
     *
     * The generated SQL(PostgreSQL):
     *
     * ```sql
     * insert into "person" ("James", "Smith", 42)
     * ```
     */
    clearReturning() {
        return new InsertQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_5__.QueryNode.cloneWithoutReturning(this.#props.queryNode),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     *
     * If you want to conditionally call a method on `this`, see
     * the {@link $if} method.
     *
     * ### Examples
     *
     * The next example uses a helper function `log` to log a query:
     *
     * ```ts
     * function log<T extends Compilable>(qb: T): T {
     *   console.log(qb.compile())
     *   return qb
     * }
     *
     * db.updateTable('person')
     *   .set(values)
     *   .$call(log)
     *   .execute()
     * ```
     */
    $call(func) {
        return func(this);
    }
    /**
     * Call `func(this)` if `condition` is true.
     *
     * This method is especially handy with optional selects. Any `returning` or `returningAll`
     * method calls add columns as optional fields to the output type when called inside
     * the `func` callback. This is because we can't know if those selections were actually
     * made before running the code.
     *
     * You can also call any other methods inside the callback.
     *
     * ### Examples
     *
     * ```ts
     * async function insertPerson(values: InsertablePerson, returnLastName: boolean) {
     *   return await db
     *     .insertInto('person')
     *     .values(values)
     *     .returning(['id', 'first_name'])
     *     .$if(returnLastName, (qb) => qb.returning('last_name'))
     *     .executeTakeFirstOrThrow()
     * }
     * ```
     *
     * Any selections added inside the `if` callback will be added as optional fields to the
     * output type since we can't know if the selections were actually made before running
     * the code. In the example above the return type of the `insertPerson` function is:
     *
     * ```ts
     * {
     *   id: number
     *   first_name: string
     *   last_name?: string
     * }
     * ```
     */
    $if(condition, func) {
        if (condition) {
            return func(this);
        }
        return new InsertQueryBuilder({
            ...this.#props,
        });
    }
    /**
     * Change the output type of the query.
     *
     * This method call doesn't change the SQL in any way. This methods simply
     * returns a copy of this `InsertQueryBuilder` with a new output type.
     */
    $castTo() {
        return new InsertQueryBuilder(this.#props);
    }
    /**
     * Narrows (parts of) the output type of the query.
     *
     * Kysely tries to be as type-safe as possible, but in some cases we have to make
     * compromises for better maintainability and compilation performance. At present,
     * Kysely doesn't narrow the output type of the query based on {@link values} input
     * when using {@link returning} or {@link returningAll}.
     *
     * This utility method is very useful for these situations, as it removes unncessary
     * runtime assertion/guard code. Its input type is limited to the output type
     * of the query, so you can't add a column that doesn't exist, or change a column's
     * type to something that doesn't exist in its union type.
     *
     * ### Examples
     *
     * Turn this code:
     *
     * ```ts
     * const person = await db.insertInto('person')
     *   .values({ ...inputPerson, nullable_column: 'hell yeah!' })
     *   .returningAll()
     *   .executeTakeFirstOrThrow()
     *
     * if (nullable_column) {
     *   functionThatExpectsPersonWithNonNullValue(person)
     * }
     * ```
     *
     * Into this:
     *
     * ```ts
     * const person = await db.insertInto('person')
     *   .values({ ...inputPerson, nullable_column: 'hell yeah!' })
     *   .returningAll()
     *   .$narrowType<{ nullable_column: string }>()
     *   .executeTakeFirstOrThrow()
     *
     * functionThatExpectsPersonWithNonNullValue(person)
     * ```
     */
    $narrowType() {
        return new InsertQueryBuilder(this.#props);
    }
    /**
     * Asserts that query's output row type equals the given type `T`.
     *
     * This method can be used to simplify excessively complex types to make typescript happy
     * and much faster.
     *
     * Kysely uses complex type magic to achieve its type safety. This complexity is sometimes too much
     * for typescript and you get errors like this:
     *
     * ```
     * error TS2589: Type instantiation is excessively deep and possibly infinite.
     * ```
     *
     * In these case you can often use this method to help typescript a little bit. When you use this
     * method to assert the output type of a query, Kysely can drop the complex output type that
     * consists of multiple nested helper types and replace it with the simple asserted type.
     *
     * Using this method doesn't reduce type safety at all. You have to pass in a type that is
     * structurally equal to the current type.
     *
     * ### Examples
     *
     * ```ts
     * const result = await db
     *   .with('new_person', (qb) => qb
     *     .insertInto('person')
     *     .values(person)
     *     .returning('id')
     *     .$assertType<{ id: string }>()
     *   )
     *   .with('new_pet', (qb) => qb
     *     .insertInto('pet')
     *     .values((eb) => ({ owner_id: eb.selectFrom('new_person').select('id'), ...pet }))
     *     .returning(['name as pet_name', 'species'])
     *     .$assertType<{ pet_name: string, species: Species }>()
     *   )
     *   .selectFrom(['new_person', 'new_pet'])
     *   .selectAll()
     *   .executeTakeFirstOrThrow()
     * ```
     */
    $assertType() {
        return new InsertQueryBuilder(this.#props);
    }
    /**
     * Returns a copy of this InsertQueryBuilder instance with the given plugin installed.
     */
    withPlugin(plugin) {
        return new InsertQueryBuilder({
            ...this.#props,
            executor: this.#props.executor.withPlugin(plugin),
        });
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.queryNode, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    /**
     * Executes the query and returns an array of rows.
     *
     * Also see the {@link executeTakeFirst} and {@link executeTakeFirstOrThrow} methods.
     */
    async execute() {
        const compiledQuery = this.compile();
        const query = compiledQuery.query;
        const result = await this.#props.executor.executeQuery(compiledQuery, this.#props.queryId);
        if (this.#props.executor.adapter.supportsReturning && query.returning) {
            return result.rows;
        }
        return [
            new _insert_result_js__WEBPACK_IMPORTED_MODULE_12__.InsertResult(result.insertId, 
            // TODO: remove numUpdatedOrDeletedRows.
            result.numAffectedRows ?? result.numUpdatedOrDeletedRows),
        ];
    }
    /**
     * Executes the query and returns the first result or undefined if
     * the query returned no result.
     */
    async executeTakeFirst() {
        const [result] = await this.execute();
        return result;
    }
    /**
     * Executes the query and returns the first result or throws if
     * the query returned no result.
     *
     * By default an instance of {@link NoResultError} is thrown, but you can
     * provide a custom error class, or callback as the only argument to throw a different
     * error.
     */
    async executeTakeFirstOrThrow(errorConstructor = _no_result_error_js__WEBPACK_IMPORTED_MODULE_13__.NoResultError) {
        const result = await this.executeTakeFirst();
        if (result === undefined) {
            const error = (0,_no_result_error_js__WEBPACK_IMPORTED_MODULE_13__.isNoResultErrorConstructor)(errorConstructor)
                ? new errorConstructor(this.toOperationNode())
                : errorConstructor(this.toOperationNode());
            throw error;
        }
        return result;
    }
    async *stream(chunkSize = 100) {
        const compiledQuery = this.compile();
        const stream = this.#props.executor.stream(compiledQuery, chunkSize, this.#props.queryId);
        for await (const item of stream) {
            yield* item.rows;
        }
    }
    async explain(format, options) {
        const builder = new InsertQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_5__.QueryNode.cloneWithExplain(this.#props.queryNode, format, options),
        });
        return await builder.execute();
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_14__.preventAwait)(InsertQueryBuilder, "don't await InsertQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/insert-result.js":
/*!*********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/insert-result.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   InsertResult: () => (/* binding */ InsertResult)
/* harmony export */ });
/// <reference types="./insert-result.d.ts" />
/**
 * The result of an insert query.
 *
 * If the table has an auto incrementing primary key {@link insertId} will hold
 * the generated id on dialects that support it. For example PostgreSQL doesn't
 * return the id by default and {@link insertId} is undefined. On PostgreSQL you
 * need to use {@link ReturningInterface.returning} or {@link ReturningInterface.returningAll}
 * to get out the inserted id.
 *
 * {@link numInsertedOrUpdatedRows} holds the number of (actually) inserted rows.
 * On MySQL, updated rows are counted twice when using `on duplicate key update`.
 *
 * ### Examples
 *
 * ```ts
 * const result = await db
 *   .insertInto('person')
 *   .values(person)
 *   .executeTakeFirst()
 *
 * console.log(result.insertId)
 * ```
 */
class InsertResult {
    /**
     * The auto incrementing primary key of the inserted row.
     *
     * This property can be undefined when the query contains an `on conflict`
     * clause that makes the query succeed even when nothing gets inserted.
     *
     * This property is always undefined on dialects like PostgreSQL that
     * don't return the inserted id by default. On those dialects you need
     * to use the {@link ReturningInterface.returning | returning} method.
     */
    insertId;
    /**
     * Affected rows count.
     */
    numInsertedOrUpdatedRows;
    constructor(insertId, numInsertedOrUpdatedRows) {
        this.insertId = insertId;
        this.numInsertedOrUpdatedRows = numInsertedOrUpdatedRows;
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/join-builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/join-builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   JoinBuilder: () => (/* binding */ JoinBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_join_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/join-node.js */ "./node_modules/kysely/dist/esm/operation-node/join-node.js");
/* harmony import */ var _operation_node_raw_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/raw-node.js */ "./node_modules/kysely/dist/esm/operation-node/raw-node.js");
/* harmony import */ var _parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/binary-operation-parser.js */ "./node_modules/kysely/dist/esm/parser/binary-operation-parser.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/// <reference types="./join-builder.d.ts" />





class JoinBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    on(...args) {
        return new JoinBuilder({
            ...this.#props,
            joinNode: _operation_node_join_node_js__WEBPACK_IMPORTED_MODULE_1__.JoinNode.cloneWithOn(this.#props.joinNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseValueBinaryOperationOrExpression)(args)),
        });
    }
    /**
     * Just like {@link WhereInterface.whereRef} but adds an item to the join's
     * `on` clause instead.
     *
     * See {@link WhereInterface.whereRef} for documentation and examples.
     */
    onRef(lhs, op, rhs) {
        return new JoinBuilder({
            ...this.#props,
            joinNode: _operation_node_join_node_js__WEBPACK_IMPORTED_MODULE_1__.JoinNode.cloneWithOn(this.#props.joinNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseReferentialBinaryOperation)(lhs, op, rhs)),
        });
    }
    /**
     * Adds `on true`.
     */
    onTrue() {
        return new JoinBuilder({
            ...this.#props,
            joinNode: _operation_node_join_node_js__WEBPACK_IMPORTED_MODULE_1__.JoinNode.cloneWithOn(this.#props.joinNode, _operation_node_raw_node_js__WEBPACK_IMPORTED_MODULE_3__.RawNode.createWithSql('true')),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.joinNode;
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_4__.preventAwait)(JoinBuilder, "don't await JoinBuilder instances. They are never executed directly and are always just a part of a query.");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/json-path-builder.js":
/*!*************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/json-path-builder.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AliasedJSONPathBuilder: () => (/* binding */ AliasedJSONPathBuilder),
/* harmony export */   JSONPathBuilder: () => (/* binding */ JSONPathBuilder),
/* harmony export */   TraversedJSONPathBuilder: () => (/* binding */ TraversedJSONPathBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_alias_node_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation-node/alias-node.js */ "./node_modules/kysely/dist/esm/operation-node/alias-node.js");
/* harmony import */ var _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../operation-node/identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/* harmony import */ var _operation_node_json_operator_chain_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/json-operator-chain-node.js */ "./node_modules/kysely/dist/esm/operation-node/json-operator-chain-node.js");
/* harmony import */ var _operation_node_json_path_leg_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/json-path-leg-node.js */ "./node_modules/kysely/dist/esm/operation-node/json-path-leg-node.js");
/* harmony import */ var _operation_node_json_path_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/json-path-node.js */ "./node_modules/kysely/dist/esm/operation-node/json-path-node.js");
/* harmony import */ var _operation_node_json_reference_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/json-reference-node.js */ "./node_modules/kysely/dist/esm/operation-node/json-reference-node.js");
/* harmony import */ var _operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../operation-node/operation-node-source.js */ "./node_modules/kysely/dist/esm/operation-node/operation-node-source.js");
/* harmony import */ var _operation_node_value_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/value-node.js */ "./node_modules/kysely/dist/esm/operation-node/value-node.js");
/// <reference types="./json-path-builder.d.ts" />








class JSONPathBuilder {
    #node;
    constructor(node) {
        this.#node = node;
    }
    /**
     * Access an element of a JSON array in a specific location.
     *
     * Since there's no guarantee an element exists in the given array location, the
     * resulting type is always nullable. If you're sure the element exists, you
     * should use {@link SelectQueryBuilder.$assertType} to narrow the type safely.
     *
     * See also {@link key} to access properties of JSON objects.
     *
     * ### Examples
     *
     * ```ts
     * db.selectFrom('person').select(eb =>
     *   eb.ref('nicknames', '->').at(0).as('primary_nickname')
     * )
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * select "nicknames"->0 as "primary_nickname" from "person"
     *```
     *
     * Combined with {@link key}:
     *
     * ```ts
     * db.selectFrom('person').select(eb =>
     *   eb.ref('experience', '->').at(0).key('role').as('first_role')
     * )
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * select "experience"->0->'role' as "first_role" from "person"
     * ```
     *
     * You can use `'last'` to access the last element of the array in MySQL:
     *
     * ```ts
     * db.selectFrom('person').select(eb =>
     *   eb.ref('nicknames', '->$').at('last').as('last_nickname')
     * )
     * ```
     *
     * The generated SQL (MySQL):
     *
     * ```sql
     * select `nicknames`->'$[last]' as `last_nickname` from `person`
     * ```
     *
     * Or `'#-1'` in SQLite:
     *
     * ```ts
     * db.selectFrom('person').select(eb =>
     *   eb.ref('nicknames', '->>$').at('#-1').as('last_nickname')
     * )
     * ```
     *
     * The generated SQL (SQLite):
     *
     * ```sql
     * select "nicknames"->>'$[#-1]' as `last_nickname` from `person`
     * ```
     */
    at(index) {
        return this.#createBuilderWithPathLeg('ArrayLocation', index);
    }
    /**
     * Access a property of a JSON object.
     *
     * If a field is optional, the resulting type will be nullable.
     *
     * See also {@link at} to access elements of JSON arrays.
     *
     * ### Examples
     *
     * ```ts
     * db.selectFrom('person').select(eb =>
     *   eb.ref('address', '->').key('city').as('city')
     * )
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * select "address"->'city' as "city" from "person"
     * ```
     *
     * Going deeper:
     *
     * ```ts
     * db.selectFrom('person').select(eb =>
     *   eb.ref('profile', '->$').key('website').key('url').as('website_url')
     * )
     * ```
     *
     * The generated SQL (MySQL):
     *
     * ```sql
     * select `profile`->'$.website.url' as `website_url` from `person`
     * ```
     *
     * Combined with {@link at}:
     *
     * ```ts
     * db.selectFrom('person').select(eb =>
     *   eb.ref('profile', '->').key('addresses').at(0).key('city').as('city')
     * )
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * select "profile"->'addresses'->0->'city' as "city" from "person"
     * ```
     */
    key(key) {
        return this.#createBuilderWithPathLeg('Member', key);
    }
    #createBuilderWithPathLeg(legType, value) {
        if (_operation_node_json_reference_node_js__WEBPACK_IMPORTED_MODULE_0__.JSONReferenceNode.is(this.#node)) {
            return new TraversedJSONPathBuilder(_operation_node_json_reference_node_js__WEBPACK_IMPORTED_MODULE_0__.JSONReferenceNode.cloneWithTraversal(this.#node, _operation_node_json_path_node_js__WEBPACK_IMPORTED_MODULE_1__.JSONPathNode.is(this.#node.traversal)
                ? _operation_node_json_path_node_js__WEBPACK_IMPORTED_MODULE_1__.JSONPathNode.cloneWithLeg(this.#node.traversal, _operation_node_json_path_leg_node_js__WEBPACK_IMPORTED_MODULE_2__.JSONPathLegNode.create(legType, value))
                : _operation_node_json_operator_chain_node_js__WEBPACK_IMPORTED_MODULE_3__.JSONOperatorChainNode.cloneWithValue(this.#node.traversal, _operation_node_value_node_js__WEBPACK_IMPORTED_MODULE_4__.ValueNode.createImmediate(value))));
        }
        return new TraversedJSONPathBuilder(_operation_node_json_path_node_js__WEBPACK_IMPORTED_MODULE_1__.JSONPathNode.cloneWithLeg(this.#node, _operation_node_json_path_leg_node_js__WEBPACK_IMPORTED_MODULE_2__.JSONPathLegNode.create(legType, value)));
    }
}
class TraversedJSONPathBuilder extends JSONPathBuilder {
    #node;
    constructor(node) {
        super(node);
        this.#node = node;
    }
    /** @private */
    get expressionType() {
        return undefined;
    }
    as(alias) {
        return new AliasedJSONPathBuilder(this, alias);
    }
    /**
     * Change the output type of the json path.
     *
     * This method call doesn't change the SQL in any way. This methods simply
     * returns a copy of this `JSONPathBuilder` with a new output type.
     */
    $castTo() {
        return new JSONPathBuilder(this.#node);
    }
    $notNull() {
        return new JSONPathBuilder(this.#node);
    }
    toOperationNode() {
        return this.#node;
    }
}
class AliasedJSONPathBuilder {
    #jsonPath;
    #alias;
    constructor(jsonPath, alias) {
        this.#jsonPath = jsonPath;
        this.#alias = alias;
    }
    /** @private */
    get expression() {
        return this.#jsonPath;
    }
    /** @private */
    get alias() {
        return this.#alias;
    }
    toOperationNode() {
        return _operation_node_alias_node_js__WEBPACK_IMPORTED_MODULE_5__.AliasNode.create(this.#jsonPath.toOperationNode(), (0,_operation_node_operation_node_source_js__WEBPACK_IMPORTED_MODULE_6__.isOperationNodeSource)(this.#alias)
            ? this.#alias.toOperationNode()
            : _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_7__.IdentifierNode.create(this.#alias));
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/merge-query-builder.js":
/*!***************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/merge-query-builder.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MatchedThenableMergeQueryBuilder: () => (/* binding */ MatchedThenableMergeQueryBuilder),
/* harmony export */   MergeQueryBuilder: () => (/* binding */ MergeQueryBuilder),
/* harmony export */   NotMatchedThenableMergeQueryBuilder: () => (/* binding */ NotMatchedThenableMergeQueryBuilder),
/* harmony export */   WheneableMergeQueryBuilder: () => (/* binding */ WheneableMergeQueryBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../operation-node/insert-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/insert-query-node.js");
/* harmony import */ var _operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/merge-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/merge-query-node.js");
/* harmony import */ var _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/query-node.js */ "./node_modules/kysely/dist/esm/operation-node/query-node.js");
/* harmony import */ var _operation_node_update_query_node_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../operation-node/update-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/update-query-node.js");
/* harmony import */ var _parser_insert_values_parser_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../parser/insert-values-parser.js */ "./node_modules/kysely/dist/esm/parser/insert-values-parser.js");
/* harmony import */ var _parser_join_parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../parser/join-parser.js */ "./node_modules/kysely/dist/esm/parser/join-parser.js");
/* harmony import */ var _parser_merge_parser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../parser/merge-parser.js */ "./node_modules/kysely/dist/esm/parser/merge-parser.js");
/* harmony import */ var _parser_top_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/top-parser.js */ "./node_modules/kysely/dist/esm/parser/top-parser.js");
/* harmony import */ var _query_executor_noop_query_executor_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../query-executor/noop-query-executor.js */ "./node_modules/kysely/dist/esm/query-executor/noop-query-executor.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _merge_result_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./merge-result.js */ "./node_modules/kysely/dist/esm/query-builder/merge-result.js");
/* harmony import */ var _no_result_error_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./no-result-error.js */ "./node_modules/kysely/dist/esm/query-builder/no-result-error.js");
/* harmony import */ var _update_query_builder_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./update-query-builder.js */ "./node_modules/kysely/dist/esm/query-builder/update-query-builder.js");
/// <reference types="./merge-query-builder.d.ts" />














class MergeQueryBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    /**
     * Changes a `merge into` query to an `merge top into` query.
     *
     * `top` clause is only supported by some dialects like MS SQL Server.
     *
     * ### Examples
     *
     * Affect 5 matched rows at most:
     *
     * ```ts
     * await db.mergeInto('person')
     *   .top(5)
     *   .using('pet', 'person.id', 'pet.owner_id')
     *   .whenMatched()
     *   .thenDelete()
     *   .execute()
     * ```
     *
     * The generated SQL (MS SQL Server):
     *
     * ```sql
     * merge top(5) into "person"
     * using "pet" on "person"."id" = "pet"."owner_id"
     * when matched then
     *   delete
     * ```
     *
     * Affect 50% of matched rows:
     *
     * ```ts
     * await db.mergeInto('person')
     *   .top(50, 'percent')
     *   .using('pet', 'person.id', 'pet.owner_id')
     *   .whenMatched()
     *   .thenDelete()
     *   .execute()
     * ```
     *
     * The generated SQL (MS SQL Server):
     *
     * ```sql
     * merge top(50) percent into "person"
     * using "pet" on "person"."id" = "pet"."owner_id"
     * when matched then
     *   delete
     * ```
     */
    top(expression, modifiers) {
        return new MergeQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithTop(this.#props.queryNode, (0,_parser_top_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseTop)(expression, modifiers)),
        });
    }
    using(...args) {
        return new WheneableMergeQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_3__.MergeQueryNode.cloneWithUsing(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseJoin)('Using', args)),
        });
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_5__.preventAwait)(MergeQueryBuilder, "don't await MergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");
class WheneableMergeQueryBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    /**
     * See {@link MergeQueryBuilder.top}.
     */
    top(expression, modifiers) {
        return new WheneableMergeQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithTop(this.#props.queryNode, (0,_parser_top_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseTop)(expression, modifiers)),
        });
    }
    /**
     * Adds a simple `when matched` clause to the query.
     *
     * For a `when matched` clause with an `and` condition, see {@link whenMatchedAnd}.
     *
     * For a simple `when not matched` clause, see {@link whenNotMatched}.
     *
     * For a `when not matched` clause with an `and` condition, see {@link whenNotMatchedAnd}.
     *
     * ### Examples
     *
     * ```ts
     * const result = await db.mergeInto('person')
     *   .using('pet', 'person.id', 'pet.owner_id')
     *   .whenMatched()
     *   .thenDelete()
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * merge into "person"
     * using "pet" on "person"."id" = "pet"."owner_id"
     * when matched then
     *   delete
     * ```
     */
    whenMatched() {
        return this.#whenMatched([]);
    }
    whenMatchedAnd(...args) {
        return this.#whenMatched(args);
    }
    /**
     * Adds the `when matched` clause to the query with an `and` condition. But unlike
     * {@link whenMatchedAnd}, this method accepts a column reference as the 3rd argument.
     *
     * This method is similar to {@link SelectQueryBuilder.whereRef}, so see the documentation
     * for that method for more examples.
     */
    whenMatchedAndRef(lhs, op, rhs) {
        return this.#whenMatched([lhs, op, rhs], true);
    }
    #whenMatched(args, refRight) {
        return new MatchedThenableMergeQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_3__.MergeQueryNode.cloneWithWhen(this.#props.queryNode, (0,_parser_merge_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseMergeWhen)({ isMatched: true }, args, refRight)),
        });
    }
    /**
     * Adds a simple `when not matched` clause to the query.
     *
     * For a `when not matched` clause with an `and` condition, see {@link whenNotMatchedAnd}.
     *
     * For a simple `when matched` clause, see {@link whenMatched}.
     *
     * For a `when matched` clause with an `and` condition, see {@link whenMatchedAnd}.
     *
     * ### Examples
     *
     * ```ts
     * const result = await db.mergeInto('person')
     *   .using('pet', 'person.id', 'pet.owner_id')
     *   .whenNotMatched()
     *   .thenInsertValues({
     *     first_name: 'John',
     *     last_name: 'Doe',
     *   })
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * merge into "person"
     * using "pet" on "person"."id" = "pet"."owner_id"
     * when not matched then
     *   insert ("first_name", "last_name") values ($1, $2)
     * ```
     */
    whenNotMatched() {
        return this.#whenNotMatched([]);
    }
    whenNotMatchedAnd(...args) {
        return this.#whenNotMatched(args);
    }
    /**
     * Adds the `when not matched` clause to the query with an `and` condition. But unlike
     * {@link whenNotMatchedAnd}, this method accepts a column reference as the 3rd argument.
     *
     * Unlike {@link whenMatchedAndRef}, you cannot reference columns from the target table.
     *
     * This method is similar to {@link SelectQueryBuilder.whereRef}, so see the documentation
     * for that method for more examples.
     */
    whenNotMatchedAndRef(lhs, op, rhs) {
        return this.#whenNotMatched([lhs, op, rhs], true);
    }
    /**
     * Adds a simple `when not matched by source` clause to the query.
     *
     * Supported in MS SQL Server.
     *
     * Similar to {@link whenNotMatched}, but returns a {@link MatchedThenableMergeQueryBuilder}.
     */
    whenNotMatchedBySource() {
        return this.#whenNotMatched([], false, true);
    }
    whenNotMatchedBySourceAnd(...args) {
        return this.#whenNotMatched(args, false, true);
    }
    /**
     * Adds the `when not matched by source` clause to the query with an `and` condition.
     *
     * Similar to {@link whenNotMatchedAndRef}, but you can reference columns from
     * the target table, and not from source table and returns a {@link MatchedThenableMergeQueryBuilder}.
     */
    whenNotMatchedBySourceAndRef(lhs, op, rhs) {
        return this.#whenNotMatched([lhs, op, rhs], true, true);
    }
    #whenNotMatched(args, refRight = false, bySource = false) {
        const props = {
            ...this.#props,
            queryNode: _operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_3__.MergeQueryNode.cloneWithWhen(this.#props.queryNode, (0,_parser_merge_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseMergeWhen)({ isMatched: false, bySource }, args, refRight)),
        };
        const Builder = bySource
            ? MatchedThenableMergeQueryBuilder
            : NotMatchedThenableMergeQueryBuilder;
        return new Builder(props);
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     *
     * If you want to conditionally call a method on `this`, see
     * the {@link $if} method.
     *
     * ### Examples
     *
     * The next example uses a helper function `log` to log a query:
     *
     * ```ts
     * function log<T extends Compilable>(qb: T): T {
     *   console.log(qb.compile())
     *   return qb
     * }
     *
     * db.updateTable('person')
     *   .set(values)
     *   .$call(log)
     *   .execute()
     * ```
     */
    $call(func) {
        return func(this);
    }
    /**
     * Call `func(this)` if `condition` is true.
     *
     * This method is especially handy with optional selects. Any `returning` or `returningAll`
     * method calls add columns as optional fields to the output type when called inside
     * the `func` callback. This is because we can't know if those selections were actually
     * made before running the code.
     *
     * You can also call any other methods inside the callback.
     *
     * ### Examples
     *
     * ```ts
     * async function updatePerson(id: number, updates: UpdateablePerson, returnLastName: boolean) {
     *   return await db
     *     .updateTable('person')
     *     .set(updates)
     *     .where('id', '=', id)
     *     .returning(['id', 'first_name'])
     *     .$if(returnLastName, (qb) => qb.returning('last_name'))
     *     .executeTakeFirstOrThrow()
     * }
     * ```
     *
     * Any selections added inside the `if` callback will be added as optional fields to the
     * output type since we can't know if the selections were actually made before running
     * the code. In the example above the return type of the `updatePerson` function is:
     *
     * ```ts
     * {
     *   id: number
     *   first_name: string
     *   last_name?: string
     * }
     * ```
     */
    $if(condition, func) {
        if (condition) {
            return func(this);
        }
        return new WheneableMergeQueryBuilder({
            ...this.#props,
        });
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.queryNode, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.#props.queryNode, this.#props.queryId);
    }
    /**
     * Executes the query and returns an array of rows.
     *
     * Also see the {@link executeTakeFirst} and {@link executeTakeFirstOrThrow} methods.
     */
    async execute() {
        const compiledQuery = this.compile();
        const result = await this.#props.executor.executeQuery(compiledQuery, this.#props.queryId);
        return [new _merge_result_js__WEBPACK_IMPORTED_MODULE_7__.MergeResult(result.numAffectedRows)];
    }
    /**
     * Executes the query and returns the first result or undefined if
     * the query returned no result.
     */
    async executeTakeFirst() {
        const [result] = await this.execute();
        return result;
    }
    /**
     * Executes the query and returns the first result or throws if
     * the query returned no result.
     *
     * By default an instance of {@link NoResultError} is thrown, but you can
     * provide a custom error class, or callback as the only argument to throw a different
     * error.
     */
    async executeTakeFirstOrThrow(errorConstructor = _no_result_error_js__WEBPACK_IMPORTED_MODULE_8__.NoResultError) {
        const result = await this.executeTakeFirst();
        if (result === undefined) {
            const error = (0,_no_result_error_js__WEBPACK_IMPORTED_MODULE_8__.isNoResultErrorConstructor)(errorConstructor)
                ? new errorConstructor(this.toOperationNode())
                : errorConstructor(this.toOperationNode());
            throw error;
        }
        return result;
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_5__.preventAwait)(WheneableMergeQueryBuilder, "don't await WheneableMergeQueryBuilder instances directly. To execute the query you need to call `execute`.");
class MatchedThenableMergeQueryBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    /**
     * Performs the `delete` action.
     *
     * To perform the `do nothing` action, see {@link thenDoNothing}.
     *
     * To perform the `update` action, see {@link thenUpdate} or {@link thenUpdateSet}.
     *
     * ### Examples
     *
     * ```ts
     * const result = await db.mergeInto('person')
     *   .using('pet', 'person.id', 'pet.owner_id')
     *   .whenMatched()
     *   .thenDelete()
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * merge into "person"
     * using "pet" on "person"."id" = "pet"."owner_id"
     * when matched then
     *   delete
     * ```
     */
    thenDelete() {
        return new WheneableMergeQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_3__.MergeQueryNode.cloneWithThen(this.#props.queryNode, (0,_parser_merge_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseMergeThen)('delete')),
        });
    }
    /**
     * Performs the `do nothing` action.
     *
     * This is supported in PostgreSQL.
     *
     * To perform the `delete` action, see {@link thenDelete}.
     *
     * To perform the `update` action, see {@link thenUpdate} or {@link thenUpdateSet}.
     *
     * ### Examples
     *
     * ```ts
     * const result = await db.mergeInto('person')
     *   .using('pet', 'person.id', 'pet.owner_id')
     *   .whenMatched()
     *   .thenDoNothing()
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * merge into "person"
     * using "pet" on "person"."id" = "pet"."owner_id"
     * when matched then
     *   do nothing
     * ```
     */
    thenDoNothing() {
        return new WheneableMergeQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_3__.MergeQueryNode.cloneWithThen(this.#props.queryNode, (0,_parser_merge_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseMergeThen)('do nothing')),
        });
    }
    /**
     * Perform an `update` operation with a full-fledged {@link UpdateQueryBuilder}.
     * This is handy when multiple `set` invocations are needed.
     *
     * For a shorthand version of this method, see {@link thenUpdateSet}.
     *
     * To perform the `delete` action, see {@link thenDelete}.
     *
     * To perform the `do nothing` action, see {@link thenDoNothing}.
     *
     * ### Examples
     *
     * ```ts
     * import { sql } from 'kysely'
     *
     * const result = await db.mergeInto('person')
     *   .using('pet', 'person.id', 'pet.owner_id')
     *   .whenMatched()
     *   .thenUpdate((ub) => ub
     *     .set(sql`metadata['has_pets']`, 'Y')
     *     .set({
     *       updated_at: Date.now(),
     *     })
     *   )
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * merge into "person"
     * using "pet" on "person"."id" = "pet"."owner_id"
     * when matched then
     *   update set metadata['has_pets'] = $1, "updated_at" = $2
     * ```
     */
    thenUpdate(set) {
        return new WheneableMergeQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_3__.MergeQueryNode.cloneWithThen(this.#props.queryNode, (0,_parser_merge_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseMergeThen)(set(new _update_query_builder_js__WEBPACK_IMPORTED_MODULE_9__.UpdateQueryBuilder({
                queryId: this.#props.queryId,
                executor: _query_executor_noop_query_executor_js__WEBPACK_IMPORTED_MODULE_10__.NOOP_QUERY_EXECUTOR,
                queryNode: _operation_node_update_query_node_js__WEBPACK_IMPORTED_MODULE_11__.UpdateQueryNode.createWithoutTable(),
            })))),
        });
    }
    thenUpdateSet(...args) {
        // @ts-ignore not sure how to type this so it won't complain about set(...args).
        return this.thenUpdate((ub) => ub.set(...args));
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_5__.preventAwait)(MatchedThenableMergeQueryBuilder, "don't await MatchedThenableMergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");
class NotMatchedThenableMergeQueryBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    /**
     * Performs the `do nothing` action.
     *
     * This is supported in PostgreSQL.
     *
     * To perform the `insert` action, see {@link thenInsertValues}.
     *
     * ### Examples
     *
     * ```ts
     * const result = await db.mergeInto('person')
     *   .using('pet', 'person.id', 'pet.owner_id')
     *   .whenNotMatched()
     *   .thenDoNothing()
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * merge into "person"
     * using "pet" on "person"."id" = "pet"."owner_id"
     * when not matched then
     *   do nothing
     * ```
     */
    thenDoNothing() {
        return new WheneableMergeQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_3__.MergeQueryNode.cloneWithThen(this.#props.queryNode, (0,_parser_merge_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseMergeThen)('do nothing')),
        });
    }
    thenInsertValues(insert) {
        const [columns, values] = (0,_parser_insert_values_parser_js__WEBPACK_IMPORTED_MODULE_12__.parseInsertExpression)(insert);
        return new WheneableMergeQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_3__.MergeQueryNode.cloneWithThen(this.#props.queryNode, (0,_parser_merge_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseMergeThen)(_operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_13__.InsertQueryNode.cloneWith(_operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_13__.InsertQueryNode.createWithoutInto(), {
                columns,
                values,
            }))),
        });
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_5__.preventAwait)(NotMatchedThenableMergeQueryBuilder, "don't await NotMatchedThenableMergeQueryBuilder instances directly. To execute the query you need to call `execute` when available.");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/merge-result.js":
/*!********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/merge-result.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   MergeResult: () => (/* binding */ MergeResult)
/* harmony export */ });
/// <reference types="./merge-result.d.ts" />
class MergeResult {
    numChangedRows;
    constructor(numChangedRows) {
        this.numChangedRows = numChangedRows;
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/no-result-error.js":
/*!***********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/no-result-error.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NoResultError: () => (/* binding */ NoResultError),
/* harmony export */   isNoResultErrorConstructor: () => (/* binding */ isNoResultErrorConstructor)
/* harmony export */ });
/// <reference types="./no-result-error.d.ts" />
class NoResultError extends Error {
    /**
     * The operation node tree of the query that was executed.
     */
    node;
    constructor(node) {
        super('no result');
        this.node = node;
    }
}
function isNoResultErrorConstructor(fn) {
    return Object.prototype.hasOwnProperty.call(fn, 'prototype');
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/on-conflict-builder.js":
/*!***************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/on-conflict-builder.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OnConflictBuilder: () => (/* binding */ OnConflictBuilder),
/* harmony export */   OnConflictDoNothingBuilder: () => (/* binding */ OnConflictDoNothingBuilder),
/* harmony export */   OnConflictUpdateBuilder: () => (/* binding */ OnConflictUpdateBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/column-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-node.js");
/* harmony import */ var _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/* harmony import */ var _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/on-conflict-node.js */ "./node_modules/kysely/dist/esm/operation-node/on-conflict-node.js");
/* harmony import */ var _parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../parser/binary-operation-parser.js */ "./node_modules/kysely/dist/esm/parser/binary-operation-parser.js");
/* harmony import */ var _parser_update_set_parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../parser/update-set-parser.js */ "./node_modules/kysely/dist/esm/parser/update-set-parser.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/// <reference types="./on-conflict-builder.d.ts" />







class OnConflictBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    /**
     * Specify a single column as the conflict target.
     *
     * Also see the {@link columns}, {@link constraint} and {@link expression}
     * methods for alternative ways to specify the conflict target.
     */
    column(column) {
        const columnNode = _operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_1__.ColumnNode.create(column);
        return new OnConflictBuilder({
            ...this.#props,
            onConflictNode: _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_2__.OnConflictNode.cloneWith(this.#props.onConflictNode, {
                columns: this.#props.onConflictNode.columns
                    ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...this.#props.onConflictNode.columns, columnNode])
                    : (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([columnNode]),
            }),
        });
    }
    /**
     * Specify a list of columns as the conflict target.
     *
     * Also see the {@link column}, {@link constraint} and {@link expression}
     * methods for alternative ways to specify the conflict target.
     */
    columns(columns) {
        const columnNodes = columns.map(_operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_1__.ColumnNode.create);
        return new OnConflictBuilder({
            ...this.#props,
            onConflictNode: _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_2__.OnConflictNode.cloneWith(this.#props.onConflictNode, {
                columns: this.#props.onConflictNode.columns
                    ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([...this.#props.onConflictNode.columns, ...columnNodes])
                    : (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(columnNodes),
            }),
        });
    }
    /**
     * Specify a specific constraint by name as the conflict target.
     *
     * Also see the {@link column}, {@link columns} and {@link expression}
     * methods for alternative ways to specify the conflict target.
     */
    constraint(constraintName) {
        return new OnConflictBuilder({
            ...this.#props,
            onConflictNode: _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_2__.OnConflictNode.cloneWith(this.#props.onConflictNode, {
                constraint: _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_3__.IdentifierNode.create(constraintName),
            }),
        });
    }
    /**
     * Specify an expression as the conflict target.
     *
     * This can be used if the unique index is an expression index.
     *
     * Also see the {@link column}, {@link columns} and {@link constraint}
     * methods for alternative ways to specify the conflict target.
     */
    expression(expression) {
        return new OnConflictBuilder({
            ...this.#props,
            onConflictNode: _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_2__.OnConflictNode.cloneWith(this.#props.onConflictNode, {
                indexExpression: expression.toOperationNode(),
            }),
        });
    }
    where(...args) {
        return new OnConflictBuilder({
            ...this.#props,
            onConflictNode: _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_2__.OnConflictNode.cloneWithIndexWhere(this.#props.onConflictNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseValueBinaryOperationOrExpression)(args)),
        });
    }
    whereRef(lhs, op, rhs) {
        return new OnConflictBuilder({
            ...this.#props,
            onConflictNode: _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_2__.OnConflictNode.cloneWithIndexWhere(this.#props.onConflictNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseReferentialBinaryOperation)(lhs, op, rhs)),
        });
    }
    clearWhere() {
        return new OnConflictBuilder({
            ...this.#props,
            onConflictNode: _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_2__.OnConflictNode.cloneWithoutIndexWhere(this.#props.onConflictNode),
        });
    }
    /**
     * Adds the "do nothing" conflict action.
     *
     * ### Examples
     *
     * ```ts
     * await db
     *   .insertInto('person')
     *   .values({ first_name, pic })
     *   .onConflict((oc) => oc
     *     .column('pic')
     *     .doNothing()
     *   )
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * insert into "person" ("first_name", "pic")
     * values ($1, $2)
     * on conflict ("pic") do nothing
     * ```
     */
    doNothing() {
        return new OnConflictDoNothingBuilder({
            ...this.#props,
            onConflictNode: _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_2__.OnConflictNode.cloneWith(this.#props.onConflictNode, {
                doNothing: true,
            }),
        });
    }
    /**
     * Adds the "do update set" conflict action.
     *
     * ### Examples
     *
     * ```ts
     * await db
     *   .insertInto('person')
     *   .values({ first_name, pic })
     *   .onConflict((oc) => oc
     *     .column('pic')
     *     .doUpdateSet({ first_name })
     *   )
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * insert into "person" ("first_name", "pic")
     * values ($1, $2)
     * on conflict ("pic")
     * do update set "first_name" = $3
     * ```
     *
     * In the next example we use the `ref` method to reference
     * columns of the virtual table `excluded` in a type-safe way
     * to create an upsert operation:
     *
     * ```ts
     * db.insertInto('person')
     *   .values(person)
     *   .onConflict((oc) => oc
     *     .column('id')
     *     .doUpdateSet((eb) => ({
     *       first_name: eb.ref('excluded.first_name'),
     *       last_name: eb.ref('excluded.last_name')
     *     }))
     *   )
     * ```
     */
    doUpdateSet(update) {
        return new OnConflictUpdateBuilder({
            ...this.#props,
            onConflictNode: _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_2__.OnConflictNode.cloneWith(this.#props.onConflictNode, {
                updates: (0,_parser_update_set_parser_js__WEBPACK_IMPORTED_MODULE_5__.parseUpdateObjectExpression)(update),
            }),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_6__.preventAwait)(OnConflictBuilder, "don't await OnConflictBuilder instances.");
class OnConflictDoNothingBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    toOperationNode() {
        return this.#props.onConflictNode;
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_6__.preventAwait)(OnConflictDoNothingBuilder, "don't await OnConflictDoNothingBuilder instances.");
class OnConflictUpdateBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    where(...args) {
        return new OnConflictUpdateBuilder({
            ...this.#props,
            onConflictNode: _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_2__.OnConflictNode.cloneWithUpdateWhere(this.#props.onConflictNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseValueBinaryOperationOrExpression)(args)),
        });
    }
    /**
     * Specify a where condition for the update operation.
     *
     * See {@link WhereInterface.whereRef} for more info.
     */
    whereRef(lhs, op, rhs) {
        return new OnConflictUpdateBuilder({
            ...this.#props,
            onConflictNode: _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_2__.OnConflictNode.cloneWithUpdateWhere(this.#props.onConflictNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseReferentialBinaryOperation)(lhs, op, rhs)),
        });
    }
    clearWhere() {
        return new OnConflictUpdateBuilder({
            ...this.#props,
            onConflictNode: _operation_node_on_conflict_node_js__WEBPACK_IMPORTED_MODULE_2__.OnConflictNode.cloneWithoutUpdateWhere(this.#props.onConflictNode),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.onConflictNode;
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_6__.preventAwait)(OnConflictUpdateBuilder, "don't await OnConflictUpdateBuilder instances.");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/over-builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/over-builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   OverBuilder: () => (/* binding */ OverBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_over_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/over-node.js */ "./node_modules/kysely/dist/esm/operation-node/over-node.js");
/* harmony import */ var _parser_order_by_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/order-by-parser.js */ "./node_modules/kysely/dist/esm/parser/order-by-parser.js");
/* harmony import */ var _parser_partition_by_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser/partition-by-parser.js */ "./node_modules/kysely/dist/esm/parser/partition-by-parser.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/// <reference types="./over-builder.d.ts" />





class OverBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    /**
     * Adds an order by clause item inside the over function.
     *
     * ```ts
     * const result = await db
     *   .selectFrom('person')
     *   .select(
     *     (eb) => eb.fn.avg<number>('age').over(
     *       ob => ob.orderBy('first_name', 'asc').orderBy('last_name', 'asc')
     *     ).as('average_age')
     *   )
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * select avg("age") over(order by "first_name" asc, "last_name" asc) as "average_age"
     * from "person"
     * ```
     */
    orderBy(orderBy, direction) {
        return new OverBuilder({
            overNode: _operation_node_over_node_js__WEBPACK_IMPORTED_MODULE_1__.OverNode.cloneWithOrderByItems(this.#props.overNode, (0,_parser_order_by_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseOrderBy)([orderBy, direction])),
        });
    }
    partitionBy(partitionBy) {
        return new OverBuilder({
            overNode: _operation_node_over_node_js__WEBPACK_IMPORTED_MODULE_1__.OverNode.cloneWithPartitionByItems(this.#props.overNode, (0,_parser_partition_by_parser_js__WEBPACK_IMPORTED_MODULE_3__.parsePartitionBy)(partitionBy)),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.overNode;
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_4__.preventAwait)(OverBuilder, "don't await OverBuilder instances. They are never executed directly and are always just a part of a query.");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/select-query-builder.js":
/*!****************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/select-query-builder.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createSelectQueryBuilder: () => (/* binding */ createSelectQueryBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_alias_node_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../operation-node/alias-node.js */ "./node_modules/kysely/dist/esm/operation-node/alias-node.js");
/* harmony import */ var _operation_node_select_modifier_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../operation-node/select-modifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/select-modifier-node.js");
/* harmony import */ var _parser_join_parser_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../parser/join-parser.js */ "./node_modules/kysely/dist/esm/parser/join-parser.js");
/* harmony import */ var _parser_table_parser_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../parser/table-parser.js */ "./node_modules/kysely/dist/esm/parser/table-parser.js");
/* harmony import */ var _parser_select_parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../parser/select-parser.js */ "./node_modules/kysely/dist/esm/parser/select-parser.js");
/* harmony import */ var _parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../parser/reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/* harmony import */ var _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/select-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/select-query-node.js");
/* harmony import */ var _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/query-node.js */ "./node_modules/kysely/dist/esm/operation-node/query-node.js");
/* harmony import */ var _parser_order_by_parser_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../parser/order-by-parser.js */ "./node_modules/kysely/dist/esm/parser/order-by-parser.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _operation_node_limit_node_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../operation-node/limit-node.js */ "./node_modules/kysely/dist/esm/operation-node/limit-node.js");
/* harmony import */ var _operation_node_offset_node_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../operation-node/offset-node.js */ "./node_modules/kysely/dist/esm/operation-node/offset-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _parser_group_by_parser_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../parser/group-by-parser.js */ "./node_modules/kysely/dist/esm/parser/group-by-parser.js");
/* harmony import */ var _no_result_error_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./no-result-error.js */ "./node_modules/kysely/dist/esm/query-builder/no-result-error.js");
/* harmony import */ var _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../operation-node/identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/* harmony import */ var _parser_set_operation_parser_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../parser/set-operation-parser.js */ "./node_modules/kysely/dist/esm/parser/set-operation-parser.js");
/* harmony import */ var _parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/binary-operation-parser.js */ "./node_modules/kysely/dist/esm/parser/binary-operation-parser.js");
/* harmony import */ var _expression_expression_wrapper_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../expression/expression-wrapper.js */ "./node_modules/kysely/dist/esm/expression/expression-wrapper.js");
/* harmony import */ var _parser_value_parser_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../parser/value-parser.js */ "./node_modules/kysely/dist/esm/parser/value-parser.js");
/* harmony import */ var _parser_fetch_parser_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../parser/fetch-parser.js */ "./node_modules/kysely/dist/esm/parser/fetch-parser.js");
/* harmony import */ var _parser_top_parser_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../parser/top-parser.js */ "./node_modules/kysely/dist/esm/parser/top-parser.js");
/// <reference types="./select-query-builder.d.ts" />






















class SelectQueryBuilderImpl {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    get expressionType() {
        return undefined;
    }
    get isSelectQueryBuilder() {
        return true;
    }
    where(...args) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithWhere(this.#props.queryNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseValueBinaryOperationOrExpression)(args)),
        });
    }
    whereRef(lhs, op, rhs) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithWhere(this.#props.queryNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseReferentialBinaryOperation)(lhs, op, rhs)),
        });
    }
    having(...args) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithHaving(this.#props.queryNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseValueBinaryOperationOrExpression)(args)),
        });
    }
    havingRef(lhs, op, rhs) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithHaving(this.#props.queryNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseReferentialBinaryOperation)(lhs, op, rhs)),
        });
    }
    select(selection) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithSelections(this.#props.queryNode, (0,_parser_select_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseSelectArg)(selection)),
        });
    }
    distinctOn(selection) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithDistinctOn(this.#props.queryNode, (0,_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_5__.parseReferenceExpressionOrList)(selection)),
        });
    }
    modifyFront(modifier) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithFrontModifier(this.#props.queryNode, _operation_node_select_modifier_node_js__WEBPACK_IMPORTED_MODULE_6__.SelectModifierNode.createWithExpression(modifier.toOperationNode())),
        });
    }
    modifyEnd(modifier) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithEndModifier(this.#props.queryNode, _operation_node_select_modifier_node_js__WEBPACK_IMPORTED_MODULE_6__.SelectModifierNode.createWithExpression(modifier.toOperationNode())),
        });
    }
    distinct() {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithFrontModifier(this.#props.queryNode, _operation_node_select_modifier_node_js__WEBPACK_IMPORTED_MODULE_6__.SelectModifierNode.create('Distinct')),
        });
    }
    forUpdate(of) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithEndModifier(this.#props.queryNode, _operation_node_select_modifier_node_js__WEBPACK_IMPORTED_MODULE_6__.SelectModifierNode.create('ForUpdate', of ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.asArray)(of).map(_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_7__.parseTable) : undefined)),
        });
    }
    forShare(of) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithEndModifier(this.#props.queryNode, _operation_node_select_modifier_node_js__WEBPACK_IMPORTED_MODULE_6__.SelectModifierNode.create('ForShare', of ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.asArray)(of).map(_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_7__.parseTable) : undefined)),
        });
    }
    forKeyShare(of) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithEndModifier(this.#props.queryNode, _operation_node_select_modifier_node_js__WEBPACK_IMPORTED_MODULE_6__.SelectModifierNode.create('ForKeyShare', of ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.asArray)(of).map(_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_7__.parseTable) : undefined)),
        });
    }
    forNoKeyUpdate(of) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithEndModifier(this.#props.queryNode, _operation_node_select_modifier_node_js__WEBPACK_IMPORTED_MODULE_6__.SelectModifierNode.create('ForNoKeyUpdate', of ? (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.asArray)(of).map(_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_7__.parseTable) : undefined)),
        });
    }
    skipLocked() {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithEndModifier(this.#props.queryNode, _operation_node_select_modifier_node_js__WEBPACK_IMPORTED_MODULE_6__.SelectModifierNode.create('SkipLocked')),
        });
    }
    noWait() {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithEndModifier(this.#props.queryNode, _operation_node_select_modifier_node_js__WEBPACK_IMPORTED_MODULE_6__.SelectModifierNode.create('NoWait')),
        });
    }
    selectAll(table) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithSelections(this.#props.queryNode, (0,_parser_select_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseSelectAll)(table)),
        });
    }
    innerJoin(...args) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithJoin(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_8__.parseJoin)('InnerJoin', args)),
        });
    }
    leftJoin(...args) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithJoin(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_8__.parseJoin)('LeftJoin', args)),
        });
    }
    rightJoin(...args) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithJoin(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_8__.parseJoin)('RightJoin', args)),
        });
    }
    fullJoin(...args) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithJoin(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_8__.parseJoin)('FullJoin', args)),
        });
    }
    innerJoinLateral(...args) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithJoin(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_8__.parseJoin)('LateralInnerJoin', args)),
        });
    }
    leftJoinLateral(...args) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithJoin(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_8__.parseJoin)('LateralLeftJoin', args)),
        });
    }
    orderBy(...args) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithOrderByItems(this.#props.queryNode, (0,_parser_order_by_parser_js__WEBPACK_IMPORTED_MODULE_9__.parseOrderBy)(args)),
        });
    }
    groupBy(groupBy) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithGroupByItems(this.#props.queryNode, (0,_parser_group_by_parser_js__WEBPACK_IMPORTED_MODULE_10__.parseGroupBy)(groupBy)),
        });
    }
    limit(limit) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithLimit(this.#props.queryNode, _operation_node_limit_node_js__WEBPACK_IMPORTED_MODULE_11__.LimitNode.create((0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_12__.parseValueExpression)(limit))),
        });
    }
    offset(offset) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithOffset(this.#props.queryNode, _operation_node_offset_node_js__WEBPACK_IMPORTED_MODULE_13__.OffsetNode.create((0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_12__.parseValueExpression)(offset))),
        });
    }
    fetch(rowCount, modifier = 'only') {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithFetch(this.#props.queryNode, (0,_parser_fetch_parser_js__WEBPACK_IMPORTED_MODULE_14__.parseFetch)(rowCount, modifier)),
        });
    }
    top(expression, modifiers) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithTop(this.#props.queryNode, (0,_parser_top_parser_js__WEBPACK_IMPORTED_MODULE_15__.parseTop)(expression, modifiers)),
        });
    }
    union(expression) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithSetOperations(this.#props.queryNode, (0,_parser_set_operation_parser_js__WEBPACK_IMPORTED_MODULE_16__.parseSetOperations)('union', expression, false)),
        });
    }
    unionAll(expression) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithSetOperations(this.#props.queryNode, (0,_parser_set_operation_parser_js__WEBPACK_IMPORTED_MODULE_16__.parseSetOperations)('union', expression, true)),
        });
    }
    intersect(expression) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithSetOperations(this.#props.queryNode, (0,_parser_set_operation_parser_js__WEBPACK_IMPORTED_MODULE_16__.parseSetOperations)('intersect', expression, false)),
        });
    }
    intersectAll(expression) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithSetOperations(this.#props.queryNode, (0,_parser_set_operation_parser_js__WEBPACK_IMPORTED_MODULE_16__.parseSetOperations)('intersect', expression, true)),
        });
    }
    except(expression) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithSetOperations(this.#props.queryNode, (0,_parser_set_operation_parser_js__WEBPACK_IMPORTED_MODULE_16__.parseSetOperations)('except', expression, false)),
        });
    }
    exceptAll(expression) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithSetOperations(this.#props.queryNode, (0,_parser_set_operation_parser_js__WEBPACK_IMPORTED_MODULE_16__.parseSetOperations)('except', expression, true)),
        });
    }
    as(alias) {
        return new AliasedSelectQueryBuilderImpl(this, alias);
    }
    clearSelect() {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithoutSelections(this.#props.queryNode),
        });
    }
    clearWhere() {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithoutWhere(this.#props.queryNode),
        });
    }
    clearLimit() {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithoutLimit(this.#props.queryNode),
        });
    }
    clearOffset() {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithoutOffset(this.#props.queryNode),
        });
    }
    clearOrderBy() {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithoutOrderBy(this.#props.queryNode),
        });
    }
    $call(func) {
        return func(this);
    }
    $if(condition, func) {
        if (condition) {
            return func(this);
        }
        return new SelectQueryBuilderImpl({
            ...this.#props,
        });
    }
    $castTo() {
        return new SelectQueryBuilderImpl(this.#props);
    }
    $narrowType() {
        return new SelectQueryBuilderImpl(this.#props);
    }
    $assertType() {
        return new SelectQueryBuilderImpl(this.#props);
    }
    $asTuple() {
        return new _expression_expression_wrapper_js__WEBPACK_IMPORTED_MODULE_17__.ExpressionWrapper(this.toOperationNode());
    }
    withPlugin(plugin) {
        return new SelectQueryBuilderImpl({
            ...this.#props,
            executor: this.#props.executor.withPlugin(plugin),
        });
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.queryNode, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        const compiledQuery = this.compile();
        const result = await this.#props.executor.executeQuery(compiledQuery, this.#props.queryId);
        return result.rows;
    }
    async executeTakeFirst() {
        const [result] = await this.execute();
        return result;
    }
    async executeTakeFirstOrThrow(errorConstructor = _no_result_error_js__WEBPACK_IMPORTED_MODULE_18__.NoResultError) {
        const result = await this.executeTakeFirst();
        if (result === undefined) {
            const error = (0,_no_result_error_js__WEBPACK_IMPORTED_MODULE_18__.isNoResultErrorConstructor)(errorConstructor)
                ? new errorConstructor(this.toOperationNode())
                : errorConstructor(this.toOperationNode());
            throw error;
        }
        return result;
    }
    async *stream(chunkSize = 100) {
        const compiledQuery = this.compile();
        const stream = this.#props.executor.stream(compiledQuery, chunkSize, this.#props.queryId);
        for await (const item of stream) {
            yield* item.rows;
        }
    }
    async explain(format, options) {
        const builder = new SelectQueryBuilderImpl({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithExplain(this.#props.queryNode, format, options),
        });
        return await builder.execute();
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_19__.preventAwait)(SelectQueryBuilderImpl, "don't await SelectQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");
function createSelectQueryBuilder(props) {
    return new SelectQueryBuilderImpl(props);
}
/**
 * {@link SelectQueryBuilder} with an alias. The result of calling {@link SelectQueryBuilder.as}.
 */
class AliasedSelectQueryBuilderImpl {
    #queryBuilder;
    #alias;
    constructor(queryBuilder, alias) {
        this.#queryBuilder = queryBuilder;
        this.#alias = alias;
    }
    get expression() {
        return this.#queryBuilder;
    }
    get alias() {
        return this.#alias;
    }
    get isAliasedSelectQueryBuilder() {
        return true;
    }
    toOperationNode() {
        return _operation_node_alias_node_js__WEBPACK_IMPORTED_MODULE_20__.AliasNode.create(this.#queryBuilder.toOperationNode(), _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_21__.IdentifierNode.create(this.#alias));
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_19__.preventAwait)(AliasedSelectQueryBuilderImpl, "don't await AliasedSelectQueryBuilder instances directly. AliasedSelectQueryBuilder should never be executed directly since it's always a part of another query.");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/update-query-builder.js":
/*!****************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/update-query-builder.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UpdateQueryBuilder: () => (/* binding */ UpdateQueryBuilder)
/* harmony export */ });
/* harmony import */ var _parser_join_parser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../parser/join-parser.js */ "./node_modules/kysely/dist/esm/parser/join-parser.js");
/* harmony import */ var _parser_table_parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../parser/table-parser.js */ "./node_modules/kysely/dist/esm/parser/table-parser.js");
/* harmony import */ var _parser_select_parser_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../parser/select-parser.js */ "./node_modules/kysely/dist/esm/parser/select-parser.js");
/* harmony import */ var _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/query-node.js */ "./node_modules/kysely/dist/esm/operation-node/query-node.js");
/* harmony import */ var _operation_node_update_query_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/update-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/update-query-node.js");
/* harmony import */ var _parser_update_set_parser_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../parser/update-set-parser.js */ "./node_modules/kysely/dist/esm/parser/update-set-parser.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _update_result_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./update-result.js */ "./node_modules/kysely/dist/esm/query-builder/update-result.js");
/* harmony import */ var _no_result_error_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./no-result-error.js */ "./node_modules/kysely/dist/esm/query-builder/no-result-error.js");
/* harmony import */ var _parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/binary-operation-parser.js */ "./node_modules/kysely/dist/esm/parser/binary-operation-parser.js");
/* harmony import */ var _parser_value_parser_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../parser/value-parser.js */ "./node_modules/kysely/dist/esm/parser/value-parser.js");
/* harmony import */ var _operation_node_limit_node_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../operation-node/limit-node.js */ "./node_modules/kysely/dist/esm/operation-node/limit-node.js");
/* harmony import */ var _parser_top_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser/top-parser.js */ "./node_modules/kysely/dist/esm/parser/top-parser.js");
/// <reference types="./update-query-builder.d.ts" />














class UpdateQueryBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    where(...args) {
        return new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithWhere(this.#props.queryNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseValueBinaryOperationOrExpression)(args)),
        });
    }
    whereRef(lhs, op, rhs) {
        return new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithWhere(this.#props.queryNode, (0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseReferentialBinaryOperation)(lhs, op, rhs)),
        });
    }
    clearWhere() {
        return new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithoutWhere(this.#props.queryNode),
        });
    }
    /**
     * Changes an `update` query into a `update top` query.
     *
     * `top` clause is only supported by some dialects like MS SQL Server.
     *
     * ### Examples
     *
     * Update the first row:
     *
     * ```ts
     * await db.updateTable('person')
     *   .top(1)
     *   .set({ first_name: 'Foo' })
     *   .where('age', '>', 18)
     *   .executeTakeFirstOrThrow()
     * ```
     *
     * The generated SQL (MS SQL Server):
     *
     * ```sql
     * update top(1) "person" set "first_name" = @1 where "age" > @2
     * ```
     *
     * Update the 50% first rows:
     *
     * ```ts
     * await db.updateTable('person')
     *   .top(50, 'percent')
     *   .set({ first_name: 'Foo' })
     *   .where('age', '>', 18)
     *   .executeTakeFirstOrThrow()
     * ```
     *
     * The generated SQL (MS SQL Server):
     *
     * ```sql
     * update top(50) percent "person" set "first_name" = @1 where "age" > @2
     * ```
     */
    top(expression, modifiers) {
        return new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithTop(this.#props.queryNode, (0,_parser_top_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseTop)(expression, modifiers)),
        });
    }
    from(from) {
        return new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_update_query_node_js__WEBPACK_IMPORTED_MODULE_4__.UpdateQueryNode.cloneWithFromItems(this.#props.queryNode, (0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_5__.parseTableExpressionOrList)(from)),
        });
    }
    innerJoin(...args) {
        return new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithJoin(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseJoin)('InnerJoin', args)),
        });
    }
    leftJoin(...args) {
        return new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithJoin(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseJoin)('LeftJoin', args)),
        });
    }
    rightJoin(...args) {
        return new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithJoin(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseJoin)('RightJoin', args)),
        });
    }
    fullJoin(...args) {
        return new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithJoin(this.#props.queryNode, (0,_parser_join_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseJoin)('FullJoin', args)),
        });
    }
    /**
     * Adds a limit clause to the update query for supported databases, such as MySQL.
     *
     * ### Examples
     *
     * Update the first 2 rows in the 'person' table:
     *
     * ```ts
     * return await db
     *   .updateTable('person')
     *   .set({ first_name: 'Foo' })
     *   .limit(2);
     * ```
     *
     * The generated SQL (MySQL):
     * ```sql
     * update `person` set `first_name` = 'Foo' limit 2
     * ```
     */
    limit(limit) {
        return new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_update_query_node_js__WEBPACK_IMPORTED_MODULE_4__.UpdateQueryNode.cloneWithLimit(this.#props.queryNode, _operation_node_limit_node_js__WEBPACK_IMPORTED_MODULE_7__.LimitNode.create((0,_parser_value_parser_js__WEBPACK_IMPORTED_MODULE_8__.parseValueExpression)(limit))),
        });
    }
    set(...args) {
        return new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_update_query_node_js__WEBPACK_IMPORTED_MODULE_4__.UpdateQueryNode.cloneWithUpdates(this.#props.queryNode, (0,_parser_update_set_parser_js__WEBPACK_IMPORTED_MODULE_9__.parseUpdate)(...args)),
        });
    }
    returning(selection) {
        return new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithReturning(this.#props.queryNode, (0,_parser_select_parser_js__WEBPACK_IMPORTED_MODULE_10__.parseSelectArg)(selection)),
        });
    }
    returningAll() {
        return new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithReturning(this.#props.queryNode, (0,_parser_select_parser_js__WEBPACK_IMPORTED_MODULE_10__.parseSelectAll)()),
        });
    }
    /**
     * Clears all `returning` clauses from the query.
     *
     * ### Examples
     *
     * ```ts
     * db.updateTable('person')
     *   .returningAll()
     *   .set({ age: 39 })
     *   .where('first_name', '=', 'John')
     *   .clearReturning()
     * ```
     *
     * The generated SQL(PostgreSQL):
     *
     * ```sql
     * update "person" set "age" = 39 where "first_name" = "John"
     * ```
     */
    clearReturning() {
        return new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithoutReturning(this.#props.queryNode),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     *
     * If you want to conditionally call a method on `this`, see
     * the {@link $if} method.
     *
     * ### Examples
     *
     * The next example uses a helper function `log` to log a query:
     *
     * ```ts
     * function log<T extends Compilable>(qb: T): T {
     *   console.log(qb.compile())
     *   return qb
     * }
     *
     * db.updateTable('person')
     *   .set(values)
     *   .$call(log)
     *   .execute()
     * ```
     */
    $call(func) {
        return func(this);
    }
    /**
     * Call `func(this)` if `condition` is true.
     *
     * This method is especially handy with optional selects. Any `returning` or `returningAll`
     * method calls add columns as optional fields to the output type when called inside
     * the `func` callback. This is because we can't know if those selections were actually
     * made before running the code.
     *
     * You can also call any other methods inside the callback.
     *
     * ### Examples
     *
     * ```ts
     * async function updatePerson(id: number, updates: UpdateablePerson, returnLastName: boolean) {
     *   return await db
     *     .updateTable('person')
     *     .set(updates)
     *     .where('id', '=', id)
     *     .returning(['id', 'first_name'])
     *     .$if(returnLastName, (qb) => qb.returning('last_name'))
     *     .executeTakeFirstOrThrow()
     * }
     * ```
     *
     * Any selections added inside the `if` callback will be added as optional fields to the
     * output type since we can't know if the selections were actually made before running
     * the code. In the example above the return type of the `updatePerson` function is:
     *
     * ```ts
     * {
     *   id: number
     *   first_name: string
     *   last_name?: string
     * }
     * ```
     */
    $if(condition, func) {
        if (condition) {
            return func(this);
        }
        return new UpdateQueryBuilder({
            ...this.#props,
        });
    }
    /**
     * Change the output type of the query.
     *
     * This method call doesn't change the SQL in any way. This methods simply
     * returns a copy of this `UpdateQueryBuilder` with a new output type.
     */
    $castTo() {
        return new UpdateQueryBuilder(this.#props);
    }
    /**
     * Narrows (parts of) the output type of the query.
     *
     * Kysely tries to be as type-safe as possible, but in some cases we have to make
     * compromises for better maintainability and compilation performance. At present,
     * Kysely doesn't narrow the output type of the query based on {@link set} input
     * when using {@link where} and/or {@link returning} or {@link returningAll}.
     *
     * This utility method is very useful for these situations, as it removes unncessary
     * runtime assertion/guard code. Its input type is limited to the output type
     * of the query, so you can't add a column that doesn't exist, or change a column's
     * type to something that doesn't exist in its union type.
     *
     * ### Examples
     *
     * Turn this code:
     *
     * ```ts
     * const person = await db.updateTable('person')
     *   .set({ deletedAt: now })
     *   .where('id', '=', id)
     *   .where('nullable_column', 'is not', null)
     *   .returningAll()
     *   .executeTakeFirstOrThrow()
     *
     * if (person.nullable_column) {
     *   functionThatExpectsPersonWithNonNullValue(person)
     * }
     * ```
     *
     * Into this:
     *
     * ```ts
     * const person = await db.updateTable('person')
     *   .set({ deletedAt: now })
     *   .where('id', '=', id)
     *   .where('nullable_column', 'is not', null)
     *   .returningAll()
     *   .$narrowType<{ deletedAt: Date; nullable_column: string }>()
     *   .executeTakeFirstOrThrow()
     *
     * functionThatExpectsPersonWithNonNullValue(person)
     * ```
     */
    $narrowType() {
        return new UpdateQueryBuilder(this.#props);
    }
    /**
     * Asserts that query's output row type equals the given type `T`.
     *
     * This method can be used to simplify excessively complex types to make typescript happy
     * and much faster.
     *
     * Kysely uses complex type magic to achieve its type safety. This complexity is sometimes too much
     * for typescript and you get errors like this:
     *
     * ```
     * error TS2589: Type instantiation is excessively deep and possibly infinite.
     * ```
     *
     * In these case you can often use this method to help typescript a little bit. When you use this
     * method to assert the output type of a query, Kysely can drop the complex output type that
     * consists of multiple nested helper types and replace it with the simple asserted type.
     *
     * Using this method doesn't reduce type safety at all. You have to pass in a type that is
     * structurally equal to the current type.
     *
     * ### Examples
     *
     * ```ts
     * const result = await db
     *   .with('updated_person', (qb) => qb
     *     .updateTable('person')
     *     .set(person)
     *     .where('id', '=', person.id)
     *     .returning('first_name')
     *     .$assertType<{ first_name: string }>()
     *   )
     *   .with('updated_pet', (qb) => qb
     *     .updateTable('pet')
     *     .set(pet)
     *     .where('owner_id', '=', person.id)
     *     .returning(['name as pet_name', 'species'])
     *     .$assertType<{ pet_name: string, species: Species }>()
     *   )
     *   .selectFrom(['updated_person', 'updated_pet'])
     *   .selectAll()
     *   .executeTakeFirstOrThrow()
     * ```
     */
    $assertType() {
        return new UpdateQueryBuilder(this.#props);
    }
    /**
     * Returns a copy of this UpdateQueryBuilder instance with the given plugin installed.
     */
    withPlugin(plugin) {
        return new UpdateQueryBuilder({
            ...this.#props,
            executor: this.#props.executor.withPlugin(plugin),
        });
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.queryNode, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    /**
     * Executes the query and returns an array of rows.
     *
     * Also see the {@link executeTakeFirst} and {@link executeTakeFirstOrThrow} methods.
     */
    async execute() {
        const compiledQuery = this.compile();
        const query = compiledQuery.query;
        const result = await this.#props.executor.executeQuery(compiledQuery, this.#props.queryId);
        if (this.#props.executor.adapter.supportsReturning && query.returning) {
            return result.rows;
        }
        return [
            new _update_result_js__WEBPACK_IMPORTED_MODULE_11__.UpdateResult(
            // TODO: remove numUpdatedOrDeletedRows.
            // TODO: https://github.com/kysely-org/kysely/pull/431#discussion_r1172330899
            result.numAffectedRows ?? result.numUpdatedOrDeletedRows ?? BigInt(0), result.numChangedRows),
        ];
    }
    /**
     * Executes the query and returns the first result or undefined if
     * the query returned no result.
     */
    async executeTakeFirst() {
        const [result] = await this.execute();
        return result;
    }
    /**
     * Executes the query and returns the first result or throws if
     * the query returned no result.
     *
     * By default an instance of {@link NoResultError} is thrown, but you can
     * provide a custom error class, or callback as the only argument to throw a different
     * error.
     */
    async executeTakeFirstOrThrow(errorConstructor = _no_result_error_js__WEBPACK_IMPORTED_MODULE_12__.NoResultError) {
        const result = await this.executeTakeFirst();
        if (result === undefined) {
            const error = (0,_no_result_error_js__WEBPACK_IMPORTED_MODULE_12__.isNoResultErrorConstructor)(errorConstructor)
                ? new errorConstructor(this.toOperationNode())
                : errorConstructor(this.toOperationNode());
            throw error;
        }
        return result;
    }
    async *stream(chunkSize = 100) {
        const compiledQuery = this.compile();
        const stream = this.#props.executor.stream(compiledQuery, chunkSize, this.#props.queryId);
        for await (const item of stream) {
            yield* item.rows;
        }
    }
    async explain(format, options) {
        const builder = new UpdateQueryBuilder({
            ...this.#props,
            queryNode: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_1__.QueryNode.cloneWithExplain(this.#props.queryNode, format, options),
        });
        return await builder.execute();
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_13__.preventAwait)(UpdateQueryBuilder, "don't await UpdateQueryBuilder instances directly. To execute the query you need to call `execute` or `executeTakeFirst`.");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-builder/update-result.js":
/*!*********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-builder/update-result.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UpdateResult: () => (/* binding */ UpdateResult)
/* harmony export */ });
/// <reference types="./update-result.d.ts" />
class UpdateResult {
    numUpdatedRows;
    numChangedRows;
    constructor(numUpdatedRows, numChangedRows) {
        this.numUpdatedRows = numUpdatedRows;
        this.numChangedRows = numChangedRows;
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-compiler/default-query-compiler.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-compiler/default-query-compiler.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DefaultQueryCompiler: () => (/* binding */ DefaultQueryCompiler)
/* harmony export */ });
/* harmony import */ var _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/create-table-node.js */ "./node_modules/kysely/dist/esm/operation-node/create-table-node.js");
/* harmony import */ var _operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/insert-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/insert-query-node.js");
/* harmony import */ var _operation_node_operation_node_visitor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/operation-node-visitor.js */ "./node_modules/kysely/dist/esm/operation-node/operation-node-visitor.js");
/* harmony import */ var _operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../operation-node/operator-node.js */ "./node_modules/kysely/dist/esm/operation-node/operator-node.js");
/* harmony import */ var _operation_node_parens_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/parens-node.js */ "./node_modules/kysely/dist/esm/operation-node/parens-node.js");
/* harmony import */ var _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../operation-node/query-node.js */ "./node_modules/kysely/dist/esm/operation-node/query-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _operation_node_create_view_node_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation-node/create-view-node.js */ "./node_modules/kysely/dist/esm/operation-node/create-view-node.js");
/* harmony import */ var _operation_node_set_operation_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../operation-node/set-operation-node.js */ "./node_modules/kysely/dist/esm/operation-node/set-operation-node.js");
/* harmony import */ var _operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../operation-node/merge-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/merge-query-node.js");
/// <reference types="./default-query-compiler.d.ts" />










class DefaultQueryCompiler extends _operation_node_operation_node_visitor_js__WEBPACK_IMPORTED_MODULE_0__.OperationNodeVisitor {
    #sql = '';
    #parameters = [];
    get numParameters() {
        return this.#parameters.length;
    }
    compileQuery(node) {
        this.#sql = '';
        this.#parameters = [];
        this.visitNode(node);
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.freeze)({
            query: node,
            sql: this.getSql(),
            parameters: [...this.#parameters],
        });
    }
    getSql() {
        return this.#sql;
    }
    visitSelectQuery(node) {
        const wrapInParens = this.parentNode !== undefined &&
            !_operation_node_parens_node_js__WEBPACK_IMPORTED_MODULE_2__.ParensNode.is(this.parentNode) &&
            !_operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_3__.InsertQueryNode.is(this.parentNode) &&
            !_operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_4__.CreateTableNode.is(this.parentNode) &&
            !_operation_node_create_view_node_js__WEBPACK_IMPORTED_MODULE_5__.CreateViewNode.is(this.parentNode) &&
            !_operation_node_set_operation_node_js__WEBPACK_IMPORTED_MODULE_6__.SetOperationNode.is(this.parentNode);
        if (this.parentNode === undefined && node.explain) {
            this.visitNode(node.explain);
            this.append(' ');
        }
        if (wrapInParens) {
            this.append('(');
        }
        if (node.with) {
            this.visitNode(node.with);
            this.append(' ');
        }
        this.append('select');
        if (node.distinctOn) {
            this.append(' ');
            this.compileDistinctOn(node.distinctOn);
        }
        if (node.frontModifiers?.length) {
            this.append(' ');
            this.compileList(node.frontModifiers, ' ');
        }
        if (node.top) {
            this.append(' ');
            this.visitNode(node.top);
        }
        if (node.selections) {
            this.append(' ');
            this.compileList(node.selections);
        }
        if (node.from) {
            this.append(' ');
            this.visitNode(node.from);
        }
        if (node.joins) {
            this.append(' ');
            this.compileList(node.joins, ' ');
        }
        if (node.where) {
            this.append(' ');
            this.visitNode(node.where);
        }
        if (node.groupBy) {
            this.append(' ');
            this.visitNode(node.groupBy);
        }
        if (node.having) {
            this.append(' ');
            this.visitNode(node.having);
        }
        if (node.setOperations) {
            this.append(' ');
            this.compileList(node.setOperations, ' ');
        }
        if (node.orderBy) {
            this.append(' ');
            this.visitNode(node.orderBy);
        }
        if (node.limit) {
            this.append(' ');
            this.visitNode(node.limit);
        }
        if (node.offset) {
            this.append(' ');
            this.visitNode(node.offset);
        }
        if (node.fetch) {
            this.append(' ');
            this.visitNode(node.fetch);
        }
        if (node.endModifiers?.length) {
            this.append(' ');
            this.compileList(this.sortSelectModifiers([...node.endModifiers]), ' ');
        }
        if (wrapInParens) {
            this.append(')');
        }
    }
    visitFrom(node) {
        this.append('from ');
        this.compileList(node.froms);
    }
    visitSelection(node) {
        this.visitNode(node.selection);
    }
    visitColumn(node) {
        this.visitNode(node.column);
    }
    compileDistinctOn(expressions) {
        this.append('distinct on (');
        this.compileList(expressions);
        this.append(')');
    }
    compileList(nodes, separator = ', ') {
        const lastIndex = nodes.length - 1;
        for (let i = 0; i <= lastIndex; i++) {
            this.visitNode(nodes[i]);
            if (i < lastIndex) {
                this.append(separator);
            }
        }
    }
    visitWhere(node) {
        this.append('where ');
        this.visitNode(node.where);
    }
    visitHaving(node) {
        this.append('having ');
        this.visitNode(node.having);
    }
    visitInsertQuery(node) {
        const rootQueryNode = this.nodeStack.find(_operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_7__.QueryNode.is);
        const isSubQuery = rootQueryNode !== node;
        if (!isSubQuery && node.explain) {
            this.visitNode(node.explain);
            this.append(' ');
        }
        if (isSubQuery && !_operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_8__.MergeQueryNode.is(rootQueryNode)) {
            this.append('(');
        }
        if (node.with) {
            this.visitNode(node.with);
            this.append(' ');
        }
        this.append(node.replace ? 'replace' : 'insert');
        if (node.ignore) {
            this.append(' ignore');
        }
        if (node.top) {
            this.append(' ');
            this.visitNode(node.top);
        }
        if (node.into) {
            this.append(' into ');
            this.visitNode(node.into);
        }
        if (node.columns) {
            this.append(' (');
            this.compileList(node.columns);
            this.append(')');
        }
        if (node.values) {
            this.append(' ');
            this.visitNode(node.values);
        }
        if (node.defaultValues) {
            this.append(' ');
            this.append('default values');
        }
        if (node.onConflict) {
            this.append(' ');
            this.visitNode(node.onConflict);
        }
        if (node.onDuplicateKey) {
            this.append(' ');
            this.visitNode(node.onDuplicateKey);
        }
        if (node.returning) {
            this.append(' ');
            this.visitNode(node.returning);
        }
        if (isSubQuery && !_operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_8__.MergeQueryNode.is(rootQueryNode)) {
            this.append(')');
        }
    }
    visitValues(node) {
        this.append('values ');
        this.compileList(node.values);
    }
    visitDeleteQuery(node) {
        const isSubQuery = this.nodeStack.find(_operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_7__.QueryNode.is) !== node;
        if (!isSubQuery && node.explain) {
            this.visitNode(node.explain);
            this.append(' ');
        }
        if (isSubQuery) {
            this.append('(');
        }
        if (node.with) {
            this.visitNode(node.with);
            this.append(' ');
        }
        this.append('delete ');
        if (node.top) {
            this.visitNode(node.top);
            this.append(' ');
        }
        this.visitNode(node.from);
        if (node.using) {
            this.append(' ');
            this.visitNode(node.using);
        }
        if (node.joins) {
            this.append(' ');
            this.compileList(node.joins, ' ');
        }
        if (node.where) {
            this.append(' ');
            this.visitNode(node.where);
        }
        if (node.orderBy) {
            this.append(' ');
            this.visitNode(node.orderBy);
        }
        if (node.limit) {
            this.append(' ');
            this.visitNode(node.limit);
        }
        if (node.returning) {
            this.append(' ');
            this.visitNode(node.returning);
        }
        if (isSubQuery) {
            this.append(')');
        }
    }
    visitReturning(node) {
        this.append('returning ');
        this.compileList(node.selections);
    }
    visitAlias(node) {
        this.visitNode(node.node);
        this.append(' as ');
        this.visitNode(node.alias);
    }
    visitReference(node) {
        if (node.table) {
            this.visitNode(node.table);
            this.append('.');
        }
        this.visitNode(node.column);
    }
    visitSelectAll(_) {
        this.append('*');
    }
    visitIdentifier(node) {
        this.append(this.getLeftIdentifierWrapper());
        this.compileUnwrappedIdentifier(node);
        this.append(this.getRightIdentifierWrapper());
    }
    compileUnwrappedIdentifier(node) {
        if (!(0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.isString)(node.name)) {
            throw new Error('a non-string identifier was passed to compileUnwrappedIdentifier.');
        }
        this.append(this.sanitizeIdentifier(node.name));
    }
    visitAnd(node) {
        this.visitNode(node.left);
        this.append(' and ');
        this.visitNode(node.right);
    }
    visitOr(node) {
        this.visitNode(node.left);
        this.append(' or ');
        this.visitNode(node.right);
    }
    visitValue(node) {
        if (node.immediate) {
            this.appendImmediateValue(node.value);
        }
        else {
            this.appendValue(node.value);
        }
    }
    visitValueList(node) {
        this.append('(');
        this.compileList(node.values);
        this.append(')');
    }
    visitTuple(node) {
        this.append('(');
        this.compileList(node.values);
        this.append(')');
    }
    visitPrimitiveValueList(node) {
        this.append('(');
        const { values } = node;
        for (let i = 0; i < values.length; ++i) {
            this.appendValue(values[i]);
            if (i !== values.length - 1) {
                this.append(', ');
            }
        }
        this.append(')');
    }
    visitParens(node) {
        this.append('(');
        this.visitNode(node.node);
        this.append(')');
    }
    visitJoin(node) {
        this.append(JOIN_TYPE_SQL[node.joinType]);
        this.append(' ');
        this.visitNode(node.table);
        if (node.on) {
            this.append(' ');
            this.visitNode(node.on);
        }
    }
    visitOn(node) {
        this.append('on ');
        this.visitNode(node.on);
    }
    visitRaw(node) {
        const { sqlFragments, parameters: params } = node;
        for (let i = 0; i < sqlFragments.length; ++i) {
            this.append(sqlFragments[i]);
            if (params.length > i) {
                this.visitNode(params[i]);
            }
        }
    }
    visitOperator(node) {
        this.append(node.operator);
    }
    visitTable(node) {
        this.visitNode(node.table);
    }
    visitSchemableIdentifier(node) {
        if (node.schema) {
            this.visitNode(node.schema);
            this.append('.');
        }
        this.visitNode(node.identifier);
    }
    visitCreateTable(node) {
        this.append('create ');
        if (node.frontModifiers && node.frontModifiers.length > 0) {
            this.compileList(node.frontModifiers, ' ');
            this.append(' ');
        }
        if (node.temporary) {
            this.append('temporary ');
        }
        this.append('table ');
        if (node.ifNotExists) {
            this.append('if not exists ');
        }
        this.visitNode(node.table);
        if (node.selectQuery) {
            this.append(' as ');
            this.visitNode(node.selectQuery);
        }
        else {
            this.append(' (');
            this.compileList([...node.columns, ...(node.constraints ?? [])]);
            this.append(')');
            if (node.onCommit) {
                this.append(' on commit ');
                this.append(node.onCommit);
            }
            if (node.endModifiers && node.endModifiers.length > 0) {
                this.append(' ');
                this.compileList(node.endModifiers, ' ');
            }
        }
    }
    visitColumnDefinition(node) {
        this.visitNode(node.column);
        this.append(' ');
        this.visitNode(node.dataType);
        if (node.unsigned) {
            this.append(' unsigned');
        }
        if (node.frontModifiers && node.frontModifiers.length > 0) {
            this.append(' ');
            this.compileList(node.frontModifiers, ' ');
        }
        if (node.generated) {
            this.append(' ');
            this.visitNode(node.generated);
        }
        if (node.identity) {
            this.append(' identity');
        }
        if (node.defaultTo) {
            this.append(' ');
            this.visitNode(node.defaultTo);
        }
        if (node.notNull) {
            this.append(' not null');
        }
        if (node.unique) {
            this.append(' unique');
        }
        if (node.nullsNotDistinct) {
            this.append(' nulls not distinct');
        }
        if (node.primaryKey) {
            this.append(' primary key');
        }
        if (node.autoIncrement) {
            this.append(' ');
            this.append(this.getAutoIncrement());
        }
        if (node.references) {
            this.append(' ');
            this.visitNode(node.references);
        }
        if (node.check) {
            this.append(' ');
            this.visitNode(node.check);
        }
        if (node.endModifiers && node.endModifiers.length > 0) {
            this.append(' ');
            this.compileList(node.endModifiers, ' ');
        }
    }
    getAutoIncrement() {
        return 'auto_increment';
    }
    visitReferences(node) {
        this.append('references ');
        this.visitNode(node.table);
        this.append(' (');
        this.compileList(node.columns);
        this.append(')');
        if (node.onDelete) {
            this.append(' on delete ');
            this.append(node.onDelete);
        }
        if (node.onUpdate) {
            this.append(' on update ');
            this.append(node.onUpdate);
        }
    }
    visitDropTable(node) {
        this.append('drop table ');
        if (node.ifExists) {
            this.append('if exists ');
        }
        this.visitNode(node.table);
        if (node.cascade) {
            this.append(' cascade');
        }
    }
    visitDataType(node) {
        this.append(node.dataType);
    }
    visitOrderBy(node) {
        this.append('order by ');
        this.compileList(node.items);
    }
    visitOrderByItem(node) {
        this.visitNode(node.orderBy);
        if (node.direction) {
            this.append(' ');
            this.visitNode(node.direction);
        }
    }
    visitGroupBy(node) {
        this.append('group by ');
        this.compileList(node.items);
    }
    visitGroupByItem(node) {
        this.visitNode(node.groupBy);
    }
    visitUpdateQuery(node) {
        const rootQueryNode = this.nodeStack.find(_operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_7__.QueryNode.is);
        const isSubQuery = rootQueryNode !== node;
        if (!isSubQuery && node.explain) {
            this.visitNode(node.explain);
            this.append(' ');
        }
        if (isSubQuery && !_operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_8__.MergeQueryNode.is(rootQueryNode)) {
            this.append('(');
        }
        if (node.with) {
            this.visitNode(node.with);
            this.append(' ');
        }
        this.append('update ');
        if (node.top) {
            this.visitNode(node.top);
            this.append(' ');
        }
        if (node.table) {
            this.visitNode(node.table);
            this.append(' ');
        }
        this.append('set ');
        if (node.updates) {
            this.compileList(node.updates);
        }
        if (node.from) {
            this.append(' ');
            this.visitNode(node.from);
        }
        if (node.joins) {
            this.append(' ');
            this.compileList(node.joins, ' ');
        }
        if (node.where) {
            this.append(' ');
            this.visitNode(node.where);
        }
        if (node.limit) {
            this.append(' ');
            this.visitNode(node.limit);
        }
        if (node.returning) {
            this.append(' ');
            this.visitNode(node.returning);
        }
        if (isSubQuery && !_operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_8__.MergeQueryNode.is(rootQueryNode)) {
            this.append(')');
        }
    }
    visitColumnUpdate(node) {
        this.visitNode(node.column);
        this.append(' = ');
        this.visitNode(node.value);
    }
    visitLimit(node) {
        this.append('limit ');
        this.visitNode(node.limit);
    }
    visitOffset(node) {
        this.append('offset ');
        this.visitNode(node.offset);
    }
    visitOnConflict(node) {
        this.append('on conflict');
        if (node.columns) {
            this.append(' (');
            this.compileList(node.columns);
            this.append(')');
        }
        else if (node.constraint) {
            this.append(' on constraint ');
            this.visitNode(node.constraint);
        }
        else if (node.indexExpression) {
            this.append(' (');
            this.visitNode(node.indexExpression);
            this.append(')');
        }
        if (node.indexWhere) {
            this.append(' ');
            this.visitNode(node.indexWhere);
        }
        if (node.doNothing === true) {
            this.append(' do nothing');
        }
        else if (node.updates) {
            this.append(' do update set ');
            this.compileList(node.updates);
            if (node.updateWhere) {
                this.append(' ');
                this.visitNode(node.updateWhere);
            }
        }
    }
    visitOnDuplicateKey(node) {
        this.append('on duplicate key update ');
        this.compileList(node.updates);
    }
    visitCreateIndex(node) {
        this.append('create ');
        if (node.unique) {
            this.append('unique ');
        }
        this.append('index ');
        if (node.ifNotExists) {
            this.append('if not exists ');
        }
        this.visitNode(node.name);
        if (node.table) {
            this.append(' on ');
            this.visitNode(node.table);
        }
        if (node.using) {
            this.append(' using ');
            this.visitNode(node.using);
        }
        if (node.columns) {
            this.append(' (');
            this.compileList(node.columns);
            this.append(')');
        }
        if (node.nullsNotDistinct) {
            this.append(' nulls not distinct');
        }
        if (node.where) {
            this.append(' ');
            this.visitNode(node.where);
        }
    }
    visitDropIndex(node) {
        this.append('drop index ');
        if (node.ifExists) {
            this.append('if exists ');
        }
        this.visitNode(node.name);
        if (node.table) {
            this.append(' on ');
            this.visitNode(node.table);
        }
        if (node.cascade) {
            this.append(' cascade');
        }
    }
    visitCreateSchema(node) {
        this.append('create schema ');
        if (node.ifNotExists) {
            this.append('if not exists ');
        }
        this.visitNode(node.schema);
    }
    visitDropSchema(node) {
        this.append('drop schema ');
        if (node.ifExists) {
            this.append('if exists ');
        }
        this.visitNode(node.schema);
        if (node.cascade) {
            this.append(' cascade');
        }
    }
    visitPrimaryKeyConstraint(node) {
        if (node.name) {
            this.append('constraint ');
            this.visitNode(node.name);
            this.append(' ');
        }
        this.append('primary key (');
        this.compileList(node.columns);
        this.append(')');
    }
    visitUniqueConstraint(node) {
        if (node.name) {
            this.append('constraint ');
            this.visitNode(node.name);
            this.append(' ');
        }
        this.append('unique');
        if (node.nullsNotDistinct) {
            this.append(' nulls not distinct');
        }
        this.append(' (');
        this.compileList(node.columns);
        this.append(')');
    }
    visitCheckConstraint(node) {
        if (node.name) {
            this.append('constraint ');
            this.visitNode(node.name);
            this.append(' ');
        }
        this.append('check (');
        this.visitNode(node.expression);
        this.append(')');
    }
    visitForeignKeyConstraint(node) {
        if (node.name) {
            this.append('constraint ');
            this.visitNode(node.name);
            this.append(' ');
        }
        this.append('foreign key (');
        this.compileList(node.columns);
        this.append(') ');
        this.visitNode(node.references);
        if (node.onDelete) {
            this.append(' on delete ');
            this.append(node.onDelete);
        }
        if (node.onUpdate) {
            this.append(' on update ');
            this.append(node.onUpdate);
        }
    }
    visitList(node) {
        this.compileList(node.items);
    }
    visitWith(node) {
        this.append('with ');
        if (node.recursive) {
            this.append('recursive ');
        }
        this.compileList(node.expressions);
    }
    visitCommonTableExpression(node) {
        this.visitNode(node.name);
        this.append(' as ');
        if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.isBoolean)(node.materialized)) {
            if (!node.materialized) {
                this.append('not ');
            }
            this.append('materialized ');
        }
        this.visitNode(node.expression);
    }
    visitCommonTableExpressionName(node) {
        this.visitNode(node.table);
        if (node.columns) {
            this.append('(');
            this.compileList(node.columns);
            this.append(')');
        }
    }
    visitAlterTable(node) {
        this.append('alter table ');
        this.visitNode(node.table);
        this.append(' ');
        if (node.renameTo) {
            this.append('rename to ');
            this.visitNode(node.renameTo);
        }
        if (node.setSchema) {
            this.append('set schema ');
            this.visitNode(node.setSchema);
        }
        if (node.addConstraint) {
            this.visitNode(node.addConstraint);
        }
        if (node.dropConstraint) {
            this.visitNode(node.dropConstraint);
        }
        if (node.columnAlterations) {
            this.compileColumnAlterations(node.columnAlterations);
        }
        if (node.addIndex) {
            this.visitNode(node.addIndex);
        }
        if (node.dropIndex) {
            this.visitNode(node.dropIndex);
        }
    }
    visitAddColumn(node) {
        this.append('add column ');
        this.visitNode(node.column);
    }
    visitRenameColumn(node) {
        this.append('rename column ');
        this.visitNode(node.column);
        this.append(' to ');
        this.visitNode(node.renameTo);
    }
    visitDropColumn(node) {
        this.append('drop column ');
        this.visitNode(node.column);
    }
    visitAlterColumn(node) {
        this.append('alter column ');
        this.visitNode(node.column);
        this.append(' ');
        if (node.dataType) {
            if (this.announcesNewColumnDataType()) {
                this.append('type ');
            }
            this.visitNode(node.dataType);
            if (node.dataTypeExpression) {
                this.append('using ');
                this.visitNode(node.dataTypeExpression);
            }
        }
        if (node.setDefault) {
            this.append('set default ');
            this.visitNode(node.setDefault);
        }
        if (node.dropDefault) {
            this.append('drop default');
        }
        if (node.setNotNull) {
            this.append('set not null');
        }
        if (node.dropNotNull) {
            this.append('drop not null');
        }
    }
    visitModifyColumn(node) {
        this.append('modify column ');
        this.visitNode(node.column);
    }
    visitAddConstraint(node) {
        this.append('add ');
        this.visitNode(node.constraint);
    }
    visitDropConstraint(node) {
        this.append('drop constraint ');
        if (node.ifExists) {
            this.append('if exists ');
        }
        this.visitNode(node.constraintName);
        if (node.modifier === 'cascade') {
            this.append(' cascade');
        }
        else if (node.modifier === 'restrict') {
            this.append(' restrict');
        }
    }
    visitSetOperation(node) {
        this.append(node.operator);
        this.append(' ');
        if (node.all) {
            this.append('all ');
        }
        this.visitNode(node.expression);
    }
    visitCreateView(node) {
        this.append('create ');
        if (node.orReplace) {
            this.append('or replace ');
        }
        if (node.materialized) {
            this.append('materialized ');
        }
        if (node.temporary) {
            this.append('temporary ');
        }
        this.append('view ');
        if (node.ifNotExists) {
            this.append('if not exists ');
        }
        this.visitNode(node.name);
        this.append(' ');
        if (node.columns) {
            this.append('(');
            this.compileList(node.columns);
            this.append(') ');
        }
        if (node.as) {
            this.append('as ');
            this.visitNode(node.as);
        }
    }
    visitDropView(node) {
        this.append('drop ');
        if (node.materialized) {
            this.append('materialized ');
        }
        this.append('view ');
        if (node.ifExists) {
            this.append('if exists ');
        }
        this.visitNode(node.name);
        if (node.cascade) {
            this.append(' cascade');
        }
    }
    visitGenerated(node) {
        this.append('generated ');
        if (node.always) {
            this.append('always ');
        }
        if (node.byDefault) {
            this.append('by default ');
        }
        this.append('as ');
        if (node.identity) {
            this.append('identity');
        }
        if (node.expression) {
            this.append('(');
            this.visitNode(node.expression);
            this.append(')');
        }
        if (node.stored) {
            this.append(' stored');
        }
    }
    visitDefaultValue(node) {
        this.append('default ');
        this.visitNode(node.defaultValue);
    }
    visitSelectModifier(node) {
        if (node.rawModifier) {
            this.visitNode(node.rawModifier);
        }
        else {
            this.append(SELECT_MODIFIER_SQL[node.modifier]);
        }
        if (node.of) {
            this.append(' of ');
            this.compileList(node.of, ', ');
        }
    }
    visitCreateType(node) {
        this.append('create type ');
        this.visitNode(node.name);
        if (node.enum) {
            this.append(' as enum ');
            this.visitNode(node.enum);
        }
    }
    visitDropType(node) {
        this.append('drop type ');
        if (node.ifExists) {
            this.append('if exists ');
        }
        this.visitNode(node.name);
    }
    visitExplain(node) {
        this.append('explain');
        if (node.options || node.format) {
            this.append(' ');
            this.append(this.getLeftExplainOptionsWrapper());
            if (node.options) {
                this.visitNode(node.options);
                if (node.format) {
                    this.append(this.getExplainOptionsDelimiter());
                }
            }
            if (node.format) {
                this.append('format');
                this.append(this.getExplainOptionAssignment());
                this.append(node.format);
            }
            this.append(this.getRightExplainOptionsWrapper());
        }
    }
    visitDefaultInsertValue(_) {
        this.append('default');
    }
    visitAggregateFunction(node) {
        this.append(node.func);
        this.append('(');
        if (node.distinct) {
            this.append('distinct ');
        }
        this.compileList(node.aggregated);
        this.append(')');
        if (node.filter) {
            this.append(' filter(');
            this.visitNode(node.filter);
            this.append(')');
        }
        if (node.over) {
            this.append(' ');
            this.visitNode(node.over);
        }
    }
    visitOver(node) {
        this.append('over(');
        if (node.partitionBy) {
            this.visitNode(node.partitionBy);
            if (node.orderBy) {
                this.append(' ');
            }
        }
        if (node.orderBy) {
            this.visitNode(node.orderBy);
        }
        this.append(')');
    }
    visitPartitionBy(node) {
        this.append('partition by ');
        this.compileList(node.items);
    }
    visitPartitionByItem(node) {
        this.visitNode(node.partitionBy);
    }
    visitBinaryOperation(node) {
        this.visitNode(node.leftOperand);
        this.append(' ');
        this.visitNode(node.operator);
        this.append(' ');
        this.visitNode(node.rightOperand);
    }
    visitUnaryOperation(node) {
        this.visitNode(node.operator);
        if (!this.isMinusOperator(node.operator)) {
            this.append(' ');
        }
        this.visitNode(node.operand);
    }
    isMinusOperator(node) {
        return _operation_node_operator_node_js__WEBPACK_IMPORTED_MODULE_9__.OperatorNode.is(node) && node.operator === '-';
    }
    visitUsing(node) {
        this.append('using ');
        this.compileList(node.tables);
    }
    visitFunction(node) {
        this.append(node.func);
        this.append('(');
        this.compileList(node.arguments);
        this.append(')');
    }
    visitCase(node) {
        this.append('case');
        if (node.value) {
            this.append(' ');
            this.visitNode(node.value);
        }
        if (node.when) {
            this.append(' ');
            this.compileList(node.when, ' ');
        }
        if (node.else) {
            this.append(' else ');
            this.visitNode(node.else);
        }
        this.append(' end');
        if (node.isStatement) {
            this.append(' case');
        }
    }
    visitWhen(node) {
        this.append('when ');
        this.visitNode(node.condition);
        if (node.result) {
            this.append(' then ');
            this.visitNode(node.result);
        }
    }
    visitJSONReference(node) {
        this.visitNode(node.reference);
        this.visitNode(node.traversal);
    }
    visitJSONPath(node) {
        if (node.inOperator) {
            this.visitNode(node.inOperator);
        }
        this.append("'$");
        for (const pathLeg of node.pathLegs) {
            this.visitNode(pathLeg);
        }
        this.append("'");
    }
    visitJSONPathLeg(node) {
        const isArrayLocation = node.type === 'ArrayLocation';
        this.append(isArrayLocation ? '[' : '.');
        this.append(String(node.value));
        if (isArrayLocation) {
            this.append(']');
        }
    }
    visitJSONOperatorChain(node) {
        for (let i = 0, len = node.values.length; i < len; i++) {
            if (i === len - 1) {
                this.visitNode(node.operator);
            }
            else {
                this.append('->');
            }
            this.visitNode(node.values[i]);
        }
    }
    visitMergeQuery(node) {
        if (node.with) {
            this.visitNode(node.with);
            this.append(' ');
        }
        this.append('merge ');
        if (node.top) {
            this.visitNode(node.top);
            this.append(' ');
        }
        this.append('into ');
        this.visitNode(node.into);
        if (node.using) {
            this.append(' ');
            this.visitNode(node.using);
        }
        if (node.whens) {
            this.append(' ');
            this.compileList(node.whens);
        }
    }
    visitMatched(node) {
        if (node.not) {
            this.append('not ');
        }
        this.append('matched');
        if (node.bySource) {
            this.append(' by source');
        }
    }
    visitAddIndex(node) {
        this.append('add ');
        if (node.unique) {
            this.append('unique ');
        }
        this.append('index ');
        this.visitNode(node.name);
        if (node.columns) {
            this.append(' (');
            this.compileList(node.columns);
            this.append(')');
        }
        if (node.using) {
            this.append(' using ');
            this.visitNode(node.using);
        }
    }
    visitCast(node) {
        this.append('cast(');
        this.visitNode(node.expression);
        this.append(' as ');
        this.visitNode(node.dataType);
        this.append(')');
    }
    visitFetch(node) {
        this.append('fetch next ');
        this.visitNode(node.rowCount);
        this.append(` rows ${node.modifier}`);
    }
    visitTop(node) {
        this.append(`top(${node.expression})`);
        if (node.modifiers) {
            this.append(` ${node.modifiers}`);
        }
    }
    append(str) {
        this.#sql += str;
    }
    appendValue(parameter) {
        this.addParameter(parameter);
        this.append(this.getCurrentParameterPlaceholder());
    }
    getLeftIdentifierWrapper() {
        return '"';
    }
    getRightIdentifierWrapper() {
        return '"';
    }
    getCurrentParameterPlaceholder() {
        return '$' + this.numParameters;
    }
    getLeftExplainOptionsWrapper() {
        return '(';
    }
    getExplainOptionAssignment() {
        return ' ';
    }
    getExplainOptionsDelimiter() {
        return ', ';
    }
    getRightExplainOptionsWrapper() {
        return ')';
    }
    sanitizeIdentifier(identifier) {
        const leftWrap = this.getLeftIdentifierWrapper();
        const rightWrap = this.getRightIdentifierWrapper();
        let sanitized = '';
        for (const c of identifier) {
            sanitized += c;
            if (c === leftWrap) {
                sanitized += leftWrap;
            }
            else if (c === rightWrap) {
                sanitized += rightWrap;
            }
        }
        return sanitized;
    }
    addParameter(parameter) {
        this.#parameters.push(parameter);
    }
    appendImmediateValue(value) {
        if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.isString)(value)) {
            this.append(`'${value}'`);
        }
        else if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.isNumber)(value) || (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.isBoolean)(value)) {
            this.append(value.toString());
        }
        else if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.isNull)(value)) {
            this.append('null');
        }
        else if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.isDate)(value)) {
            this.appendImmediateValue(value.toISOString());
        }
        else if ((0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.isBigInt)(value)) {
            this.appendImmediateValue(value.toString());
        }
        else {
            throw new Error(`invalid immediate value ${value}`);
        }
    }
    sortSelectModifiers(arr) {
        arr.sort((left, right) => left.modifier && right.modifier
            ? SELECT_MODIFIER_PRIORITY[left.modifier] -
                SELECT_MODIFIER_PRIORITY[right.modifier]
            : 1);
        return (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.freeze)(arr);
    }
    compileColumnAlterations(columnAlterations) {
        this.compileList(columnAlterations);
    }
    /**
     * controls whether the dialect adds a "type" keyword before a column's new data
     * type in an ALTER TABLE statement.
     */
    announcesNewColumnDataType() {
        return true;
    }
}
const SELECT_MODIFIER_SQL = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.freeze)({
    ForKeyShare: 'for key share',
    ForNoKeyUpdate: 'for no key update',
    ForUpdate: 'for update',
    ForShare: 'for share',
    NoWait: 'nowait',
    SkipLocked: 'skip locked',
    Distinct: 'distinct',
});
const SELECT_MODIFIER_PRIORITY = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.freeze)({
    ForKeyShare: 1,
    ForNoKeyUpdate: 1,
    ForUpdate: 1,
    ForShare: 1,
    NoWait: 2,
    SkipLocked: 2,
    Distinct: 0,
});
const JOIN_TYPE_SQL = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_1__.freeze)({
    InnerJoin: 'inner join',
    LeftJoin: 'left join',
    RightJoin: 'right join',
    FullJoin: 'full join',
    LateralInnerJoin: 'inner join lateral',
    LateralLeftJoin: 'left join lateral',
    Using: 'using',
});


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-creator.js":
/*!*******************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-creator.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QueryCreator: () => (/* binding */ QueryCreator)
/* harmony export */ });
/* harmony import */ var _query_builder_select_query_builder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./query-builder/select-query-builder.js */ "./node_modules/kysely/dist/esm/query-builder/select-query-builder.js");
/* harmony import */ var _query_builder_insert_query_builder_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./query-builder/insert-query-builder.js */ "./node_modules/kysely/dist/esm/query-builder/insert-query-builder.js");
/* harmony import */ var _query_builder_delete_query_builder_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./query-builder/delete-query-builder.js */ "./node_modules/kysely/dist/esm/query-builder/delete-query-builder.js");
/* harmony import */ var _query_builder_update_query_builder_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./query-builder/update-query-builder.js */ "./node_modules/kysely/dist/esm/query-builder/update-query-builder.js");
/* harmony import */ var _operation_node_delete_query_node_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./operation-node/delete-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/delete-query-node.js");
/* harmony import */ var _operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./operation-node/insert-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/insert-query-node.js");
/* harmony import */ var _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./operation-node/select-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/select-query-node.js");
/* harmony import */ var _operation_node_update_query_node_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./operation-node/update-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/update-query-node.js");
/* harmony import */ var _parser_table_parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parser/table-parser.js */ "./node_modules/kysely/dist/esm/parser/table-parser.js");
/* harmony import */ var _parser_with_parser_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./parser/with-parser.js */ "./node_modules/kysely/dist/esm/parser/with-parser.js");
/* harmony import */ var _operation_node_with_node_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./operation-node/with-node.js */ "./node_modules/kysely/dist/esm/operation-node/with-node.js");
/* harmony import */ var _util_query_id_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/query-id.js */ "./node_modules/kysely/dist/esm/util/query-id.js");
/* harmony import */ var _plugin_with_schema_with_schema_plugin_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./plugin/with-schema/with-schema-plugin.js */ "./node_modules/kysely/dist/esm/plugin/with-schema/with-schema-plugin.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _parser_select_parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parser/select-parser.js */ "./node_modules/kysely/dist/esm/parser/select-parser.js");
/* harmony import */ var _query_builder_merge_query_builder_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./query-builder/merge-query-builder.js */ "./node_modules/kysely/dist/esm/query-builder/merge-query-builder.js");
/* harmony import */ var _operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./operation-node/merge-query-node.js */ "./node_modules/kysely/dist/esm/operation-node/merge-query-node.js");
/// <reference types="./query-creator.d.ts" />

















class QueryCreator {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    selectFrom(from) {
        return (0,_query_builder_select_query_builder_js__WEBPACK_IMPORTED_MODULE_1__.createSelectQueryBuilder)({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_2__.createQueryId)(),
            executor: this.#props.executor,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.createFrom((0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseTableExpressionOrList)(from), this.#props.withNode),
        });
    }
    selectNoFrom(selection) {
        return (0,_query_builder_select_query_builder_js__WEBPACK_IMPORTED_MODULE_1__.createSelectQueryBuilder)({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_2__.createQueryId)(),
            executor: this.#props.executor,
            queryNode: _operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.cloneWithSelections(_operation_node_select_query_node_js__WEBPACK_IMPORTED_MODULE_3__.SelectQueryNode.create(this.#props.withNode), (0,_parser_select_parser_js__WEBPACK_IMPORTED_MODULE_5__.parseSelectArg)(selection)),
        });
    }
    /**
     * Creates an insert query.
     *
     * The return value of this query is an instance of {@link InsertResult}. {@link InsertResult}
     * has the {@link InsertResult.insertId | insertId} field that holds the auto incremented id of
     * the inserted row if the db returned one.
     *
     * See the {@link InsertQueryBuilder.values | values} method for more info and examples. Also see
     * the {@link ReturningInterface.returning | returning} method for a way to return columns
     * on supported databases like PostgreSQL.
     *
     * ### Examples
     *
     * ```ts
     * const result = await db
     *   .insertInto('person')
     *   .values({
     *     first_name: 'Jennifer',
     *     last_name: 'Aniston'
     *   })
     *   .executeTakeFirst()
     *
     * console.log(result.insertId)
     * ```
     *
     * Some databases like PostgreSQL support the `returning` method:
     *
     * ```ts
     * const { id } = await db
     *   .insertInto('person')
     *   .values({
     *     first_name: 'Jennifer',
     *     last_name: 'Aniston'
     *   })
     *   .returning('id')
     *   .executeTakeFirst()
     * ```
     */
    insertInto(table) {
        return new _query_builder_insert_query_builder_js__WEBPACK_IMPORTED_MODULE_6__.InsertQueryBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_2__.createQueryId)(),
            executor: this.#props.executor,
            queryNode: _operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_7__.InsertQueryNode.create((0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseTable)(table), this.#props.withNode),
        });
    }
    /**
     * Creates a replace query.
     *
     * A MySQL-only statement similar to {@link InsertQueryBuilder.onDuplicateKeyUpdate}
     * that deletes and inserts values on collision instead of updating existing rows.
     *
     * The return value of this query is an instance of {@link InsertResult}. {@link InsertResult}
     * has the {@link InsertResult.insertId | insertId} field that holds the auto incremented id of
     * the inserted row if the db returned one.
     *
     * See the {@link InsertQueryBuilder.values | values} method for more info and examples.
     *
     * ### Examples
     *
     * ```ts
     * const result = await db
     *   .replaceInto('person')
     *   .values({
     *     first_name: 'Jennifer',
     *     last_name: 'Aniston'
     *   })
     *   .executeTakeFirst()
     *
     * console.log(result.insertId)
     * ```
     */
    replaceInto(table) {
        return new _query_builder_insert_query_builder_js__WEBPACK_IMPORTED_MODULE_6__.InsertQueryBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_2__.createQueryId)(),
            executor: this.#props.executor,
            queryNode: _operation_node_insert_query_node_js__WEBPACK_IMPORTED_MODULE_7__.InsertQueryNode.create((0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseTable)(table), this.#props.withNode, true),
        });
    }
    deleteFrom(tables) {
        return new _query_builder_delete_query_builder_js__WEBPACK_IMPORTED_MODULE_8__.DeleteQueryBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_2__.createQueryId)(),
            executor: this.#props.executor,
            queryNode: _operation_node_delete_query_node_js__WEBPACK_IMPORTED_MODULE_9__.DeleteQueryNode.create((0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseTableExpressionOrList)(tables), this.#props.withNode),
        });
    }
    updateTable(table) {
        return new _query_builder_update_query_builder_js__WEBPACK_IMPORTED_MODULE_10__.UpdateQueryBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_2__.createQueryId)(),
            executor: this.#props.executor,
            queryNode: _operation_node_update_query_node_js__WEBPACK_IMPORTED_MODULE_11__.UpdateQueryNode.create((0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseTableExpression)(table), this.#props.withNode),
        });
    }
    mergeInto(targetTable) {
        return new _query_builder_merge_query_builder_js__WEBPACK_IMPORTED_MODULE_12__.MergeQueryBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_2__.createQueryId)(),
            executor: this.#props.executor,
            queryNode: _operation_node_merge_query_node_js__WEBPACK_IMPORTED_MODULE_13__.MergeQueryNode.create((0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseAliasedTable)(targetTable), this.#props.withNode),
        });
    }
    /**
     * Creates a `with` query (Common Table Expression).
     *
     * ### Examples
     *
     * ```ts
     * await db
     *   .with('jennifers', (db) => db
     *     .selectFrom('person')
     *     .where('first_name', '=', 'Jennifer')
     *     .select(['id', 'age'])
     *   )
     *   .with('adult_jennifers', (db) => db
     *     .selectFrom('jennifers')
     *     .where('age', '>', 18)
     *     .select(['id', 'age'])
     *   )
     *   .selectFrom('adult_jennifers')
     *   .where('age', '<', 60)
     *   .selectAll()
     *   .execute()
     * ```
     *
     * The CTE name can optionally specify column names in addition to
     * a name. In that case Kysely requires the expression to retun
     * rows with the same columns.
     *
     * ```ts
     * await db
     *   .with('jennifers(id, age)', (db) => db
     *     .selectFrom('person')
     *     .where('first_name', '=', 'Jennifer')
     *     // This is ok since we return columns with the same
     *     // names as specified by `jennifers(id, age)`.
     *     .select(['id', 'age'])
     *   )
     *   .selectFrom('jennifers')
     *   .selectAll()
     *   .execute()
     * ```
     *
     * The first argument can also be a callback. The callback is passed
     * a `CTEBuilder` instance that can be used to configure the CTE:
     *
     * ```ts
     * await db
     *   .with(
     *     (cte) => cte('jennifers').materialized(),
     *     (db) => db
     *       .selectFrom('person')
     *       .where('first_name', '=', 'Jennifer')
     *       .select(['id', 'age'])
     *   )
     *   .selectFrom('jennifers')
     *   .selectAll()
     *   .execute()
     * ```
     */
    with(nameOrBuilder, expression) {
        const cte = (0,_parser_with_parser_js__WEBPACK_IMPORTED_MODULE_14__.parseCommonTableExpression)(nameOrBuilder, expression);
        return new QueryCreator({
            ...this.#props,
            withNode: this.#props.withNode
                ? _operation_node_with_node_js__WEBPACK_IMPORTED_MODULE_15__.WithNode.cloneWithExpression(this.#props.withNode, cte)
                : _operation_node_with_node_js__WEBPACK_IMPORTED_MODULE_15__.WithNode.create(cte),
        });
    }
    /**
     * Creates a recursive `with` query (Common Table Expression).
     *
     * Note that recursiveness is a property of the whole `with` statement.
     * You cannot have recursive and non-recursive CTEs in a same `with` statement.
     * Therefore the recursiveness is determined by the **first** `with` or
     * `withRecusive` call you make.
     *
     * See the {@link with} method for examples and more documentation.
     */
    withRecursive(nameOrBuilder, expression) {
        const cte = (0,_parser_with_parser_js__WEBPACK_IMPORTED_MODULE_14__.parseCommonTableExpression)(nameOrBuilder, expression);
        return new QueryCreator({
            ...this.#props,
            withNode: this.#props.withNode
                ? _operation_node_with_node_js__WEBPACK_IMPORTED_MODULE_15__.WithNode.cloneWithExpression(this.#props.withNode, cte)
                : _operation_node_with_node_js__WEBPACK_IMPORTED_MODULE_15__.WithNode.create(cte, { recursive: true }),
        });
    }
    /**
     * Returns a copy of this query creator instance with the given plugin installed.
     */
    withPlugin(plugin) {
        return new QueryCreator({
            ...this.#props,
            executor: this.#props.executor.withPlugin(plugin),
        });
    }
    /**
     * Returns a copy of this query creator instance without any plugins.
     */
    withoutPlugins() {
        return new QueryCreator({
            ...this.#props,
            executor: this.#props.executor.withoutPlugins(),
        });
    }
    /**
     * Sets the schema to be used for all table references that don't explicitly
     * specify a schema.
     *
     * This only affects the query created through the builder returned from
     * this method and doesn't modify the `db` instance.
     *
     * See [this recipe](https://github.com/koskimas/kysely/tree/master/site/docs/recipes/schemas.md)
     * for a more detailed explanation.
     *
     * ### Examples
     *
     * ```
     * await db
     *   .withSchema('mammals')
     *   .selectFrom('pet')
     *   .selectAll()
     *   .innerJoin('public.person', 'public.person.id', 'pet.owner_id')
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * select * from "mammals"."pet"
     * inner join "public"."person"
     * on "public"."person"."id" = "mammals"."pet"."owner_id"
     * ```
     *
     * `withSchema` is smart enough to not add schema for aliases,
     * common table expressions or other places where the schema
     * doesn't belong to:
     *
     * ```
     * await db
     *   .withSchema('mammals')
     *   .selectFrom('pet as p')
     *   .select('p.name')
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * select "p"."name" from "mammals"."pet" as "p"
     * ```
     */
    withSchema(schema) {
        return new QueryCreator({
            ...this.#props,
            executor: this.#props.executor.withPluginAtFront(new _plugin_with_schema_with_schema_plugin_js__WEBPACK_IMPORTED_MODULE_16__.WithSchemaPlugin(schema)),
        });
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-executor/default-query-executor.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-executor/default-query-executor.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DefaultQueryExecutor: () => (/* binding */ DefaultQueryExecutor)
/* harmony export */ });
/* harmony import */ var _query_executor_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query-executor-base.js */ "./node_modules/kysely/dist/esm/query-executor/query-executor-base.js");
/// <reference types="./default-query-executor.d.ts" />

class DefaultQueryExecutor extends _query_executor_base_js__WEBPACK_IMPORTED_MODULE_0__.QueryExecutorBase {
    #compiler;
    #adapter;
    #connectionProvider;
    constructor(compiler, adapter, connectionProvider, plugins = []) {
        super(plugins);
        this.#compiler = compiler;
        this.#adapter = adapter;
        this.#connectionProvider = connectionProvider;
    }
    get adapter() {
        return this.#adapter;
    }
    compileQuery(node) {
        return this.#compiler.compileQuery(node);
    }
    provideConnection(consumer) {
        return this.#connectionProvider.provideConnection(consumer);
    }
    withPlugins(plugins) {
        return new DefaultQueryExecutor(this.#compiler, this.#adapter, this.#connectionProvider, [...this.plugins, ...plugins]);
    }
    withPlugin(plugin) {
        return new DefaultQueryExecutor(this.#compiler, this.#adapter, this.#connectionProvider, [...this.plugins, plugin]);
    }
    withPluginAtFront(plugin) {
        return new DefaultQueryExecutor(this.#compiler, this.#adapter, this.#connectionProvider, [plugin, ...this.plugins]);
    }
    withConnectionProvider(connectionProvider) {
        return new DefaultQueryExecutor(this.#compiler, this.#adapter, connectionProvider, [...this.plugins]);
    }
    withoutPlugins() {
        return new DefaultQueryExecutor(this.#compiler, this.#adapter, this.#connectionProvider, []);
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-executor/noop-query-executor.js":
/*!****************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-executor/noop-query-executor.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NOOP_QUERY_EXECUTOR: () => (/* binding */ NOOP_QUERY_EXECUTOR),
/* harmony export */   NoopQueryExecutor: () => (/* binding */ NoopQueryExecutor)
/* harmony export */ });
/* harmony import */ var _query_executor_base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./query-executor-base.js */ "./node_modules/kysely/dist/esm/query-executor/query-executor-base.js");
/// <reference types="./noop-query-executor.d.ts" />

/**
 * A {@link QueryExecutor} subclass that can be used when you don't
 * have a {@link QueryCompiler}, {@link ConnectionProvider} or any
 * other needed things to actually execute queries.
 */
class NoopQueryExecutor extends _query_executor_base_js__WEBPACK_IMPORTED_MODULE_0__.QueryExecutorBase {
    get adapter() {
        throw new Error('this query cannot be compiled to SQL');
    }
    compileQuery() {
        throw new Error('this query cannot be compiled to SQL');
    }
    provideConnection() {
        throw new Error('this query cannot be executed');
    }
    withConnectionProvider() {
        throw new Error('this query cannot have a connection provider');
    }
    withPlugin(plugin) {
        return new NoopQueryExecutor([...this.plugins, plugin]);
    }
    withPlugins(plugins) {
        return new NoopQueryExecutor([...this.plugins, ...plugins]);
    }
    withPluginAtFront(plugin) {
        return new NoopQueryExecutor([plugin, ...this.plugins]);
    }
    withoutPlugins() {
        return new NoopQueryExecutor([]);
    }
}
const NOOP_QUERY_EXECUTOR = new NoopQueryExecutor();


/***/ }),

/***/ "./node_modules/kysely/dist/esm/query-executor/query-executor-base.js":
/*!****************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/query-executor/query-executor-base.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   QueryExecutorBase: () => (/* binding */ QueryExecutorBase)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _util_deferred_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/deferred.js */ "./node_modules/kysely/dist/esm/util/deferred.js");
/* harmony import */ var _util_log_once_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/log-once.js */ "./node_modules/kysely/dist/esm/util/log-once.js");
/// <reference types="./query-executor-base.d.ts" />



const NO_PLUGINS = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)([]);
class QueryExecutorBase {
    #plugins;
    constructor(plugins = NO_PLUGINS) {
        this.#plugins = plugins;
    }
    get plugins() {
        return this.#plugins;
    }
    transformQuery(node, queryId) {
        for (const plugin of this.#plugins) {
            const transformedNode = plugin.transformQuery({ node, queryId });
            // We need to do a runtime check here. There is no good way
            // to write types that enforce this constraint.
            if (transformedNode.kind === node.kind) {
                node = transformedNode;
            }
            else {
                throw new Error([
                    `KyselyPlugin.transformQuery must return a node`,
                    `of the same kind that was given to it.`,
                    `The plugin was given a ${node.kind}`,
                    `but it returned a ${transformedNode.kind}`,
                ].join(' '));
            }
        }
        return node;
    }
    async executeQuery(compiledQuery, queryId) {
        return await this.provideConnection(async (connection) => {
            const result = await connection.executeQuery(compiledQuery);
            const transformedResult = await this.#transformResult(result, queryId);
            // TODO: remove.
            warnOfOutdatedDriverOrPlugins(result, transformedResult);
            return transformedResult;
        });
    }
    async *stream(compiledQuery, chunkSize, queryId) {
        const connectionDefer = new _util_deferred_js__WEBPACK_IMPORTED_MODULE_1__.Deferred();
        const connectionReleaseDefer = new _util_deferred_js__WEBPACK_IMPORTED_MODULE_1__.Deferred();
        this.provideConnection(async (connection) => {
            connectionDefer.resolve(connection);
            // Lets wait until we don't need connection before returning here (returning releases connection)
            return await connectionReleaseDefer.promise;
        }).catch((ex) => connectionDefer.reject(ex));
        const connection = await connectionDefer.promise;
        try {
            for await (const result of connection.streamQuery(compiledQuery, chunkSize)) {
                yield await this.#transformResult(result, queryId);
            }
        }
        finally {
            connectionReleaseDefer.resolve();
        }
    }
    async #transformResult(result, queryId) {
        for (const plugin of this.#plugins) {
            result = await plugin.transformResult({ result, queryId });
        }
        return result;
    }
}
// TODO: remove.
function warnOfOutdatedDriverOrPlugins(result, transformedResult) {
    const { numAffectedRows } = result;
    if ((numAffectedRows === undefined &&
        result.numUpdatedOrDeletedRows === undefined) ||
        (numAffectedRows !== undefined &&
            transformedResult.numAffectedRows !== undefined)) {
        return;
    }
    (0,_util_log_once_js__WEBPACK_IMPORTED_MODULE_2__.logOnce)('kysely:warning: outdated driver/plugin detected! QueryResult.numUpdatedOrDeletedRows is deprecated and will be removed in a future release.');
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/alter-column-builder.js":
/*!*********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/alter-column-builder.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AlterColumnBuilder: () => (/* binding */ AlterColumnBuilder),
/* harmony export */   AlteredColumnBuilder: () => (/* binding */ AlteredColumnBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_alter_column_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/alter-column-node.js */ "./node_modules/kysely/dist/esm/operation-node/alter-column-node.js");
/* harmony import */ var _parser_data_type_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/data-type-parser.js */ "./node_modules/kysely/dist/esm/parser/data-type-parser.js");
/* harmony import */ var _parser_default_value_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/default-value-parser.js */ "./node_modules/kysely/dist/esm/parser/default-value-parser.js");
/// <reference types="./alter-column-builder.d.ts" />



class AlterColumnBuilder {
    #column;
    constructor(column) {
        this.#column = column;
    }
    setDataType(dataType) {
        return new AlteredColumnBuilder(_operation_node_alter_column_node_js__WEBPACK_IMPORTED_MODULE_0__.AlterColumnNode.create(this.#column, 'dataType', (0,_parser_data_type_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseDataTypeExpression)(dataType)));
    }
    setDefault(value) {
        return new AlteredColumnBuilder(_operation_node_alter_column_node_js__WEBPACK_IMPORTED_MODULE_0__.AlterColumnNode.create(this.#column, 'setDefault', (0,_parser_default_value_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseDefaultValueExpression)(value)));
    }
    dropDefault() {
        return new AlteredColumnBuilder(_operation_node_alter_column_node_js__WEBPACK_IMPORTED_MODULE_0__.AlterColumnNode.create(this.#column, 'dropDefault', true));
    }
    setNotNull() {
        return new AlteredColumnBuilder(_operation_node_alter_column_node_js__WEBPACK_IMPORTED_MODULE_0__.AlterColumnNode.create(this.#column, 'setNotNull', true));
    }
    dropNotNull() {
        return new AlteredColumnBuilder(_operation_node_alter_column_node_js__WEBPACK_IMPORTED_MODULE_0__.AlterColumnNode.create(this.#column, 'dropNotNull', true));
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
}
/**
 * Allows us to force consumers to do exactly one alteration to a column.
 *
 * Basically, deny the following:
 *
 * ```ts
 * db.schema.alterTable('person').alterColumn('age', (ac) => ac)
 * ```
 *
 * ```ts
 * db.schema.alterTable('person').alterColumn('age', (ac) => ac.dropNotNull().setNotNull())
 * ```
 *
 * Which would now throw a compilation error, instead of a runtime error.
 */
class AlteredColumnBuilder {
    #alterColumnNode;
    constructor(alterColumnNode) {
        this.#alterColumnNode = alterColumnNode;
    }
    toOperationNode() {
        return this.#alterColumnNode;
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/alter-table-add-foreign-key-constraint-builder.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/alter-table-add-foreign-key-constraint-builder.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AlterTableAddForeignKeyConstraintBuilder: () => (/* binding */ AlterTableAddForeignKeyConstraintBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_add_constraint_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/add-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/add-constraint-node.js");
/* harmony import */ var _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/alter-table-node.js */ "./node_modules/kysely/dist/esm/operation-node/alter-table-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/// <reference types="./alter-table-add-foreign-key-constraint-builder.d.ts" />




class AlterTableAddForeignKeyConstraintBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    onDelete(onDelete) {
        return new AlterTableAddForeignKeyConstraintBuilder({
            ...this.#props,
            constraintBuilder: this.#props.constraintBuilder.onDelete(onDelete),
        });
    }
    onUpdate(onUpdate) {
        return new AlterTableAddForeignKeyConstraintBuilder({
            ...this.#props,
            constraintBuilder: this.#props.constraintBuilder.onUpdate(onUpdate),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(_operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableNode.cloneWithTableProps(this.#props.node, {
            addConstraint: _operation_node_add_constraint_node_js__WEBPACK_IMPORTED_MODULE_2__.AddConstraintNode.create(this.#props.constraintBuilder.toOperationNode()),
        }), this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_3__.preventAwait)(AlterTableAddForeignKeyConstraintBuilder, "don't await AlterTableAddForeignKeyConstraintBuilder instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/alter-table-add-index-builder.js":
/*!******************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/alter-table-add-index-builder.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AlterTableAddIndexBuilder: () => (/* binding */ AlterTableAddIndexBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_add_index_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/add-index-node.js */ "./node_modules/kysely/dist/esm/operation-node/add-index-node.js");
/* harmony import */ var _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/alter-table-node.js */ "./node_modules/kysely/dist/esm/operation-node/alter-table-node.js");
/* harmony import */ var _operation_node_raw_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/raw-node.js */ "./node_modules/kysely/dist/esm/operation-node/raw-node.js");
/* harmony import */ var _parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser/reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/// <reference types="./alter-table-add-index-builder.d.ts" />






class AlterTableAddIndexBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    /**
     * Makes the index unique.
     */
    unique() {
        return new AlterTableAddIndexBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                addIndex: _operation_node_add_index_node_js__WEBPACK_IMPORTED_MODULE_2__.AddIndexNode.cloneWith(this.#props.node.addIndex, {
                    unique: true,
                }),
            }),
        });
    }
    /**
     * Adds a column to the index.
     *
     * Also see {@link columns} for adding multiple columns at once or {@link expression}
     * for specifying an arbitrary expression.
     *
     * ### Examples
     *
     * ```ts
     * await db.schema
     *         .alterTable('person')
     *         .createIndex('person_first_name_and_age_index')
     *         .column('first_name')
     *         .column('age desc')
     *         .execute()
     * ```
     *
     * The generated SQL (MySQL):
     *
     * ```sql
     * alter table `person` add index `person_first_name_and_age_index` (`first_name`, `age` desc)
     * ```
     */
    column(column) {
        return new AlterTableAddIndexBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                addIndex: _operation_node_add_index_node_js__WEBPACK_IMPORTED_MODULE_2__.AddIndexNode.cloneWithColumns(this.#props.node.addIndex, [
                    (0,_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseOrderedColumnName)(column),
                ]),
            }),
        });
    }
    /**
     * Specifies a list of columns for the index.
     *
     * Also see {@link column} for adding a single column or {@link expression} for
     * specifying an arbitrary expression.
     *
     * ### Examples
     *
     * ```ts
     * await db.schema
     *         .alterTable('person')
     *         .addIndex('person_first_name_and_age_index')
     *         .columns(['first_name', 'age desc'])
     *         .execute()
     * ```
     *
     * The generated SQL (MySQL):
     *
     * ```sql
     * alter table `person` add index `person_first_name_and_age_index` (`first_name`, `age` desc)
     * ```
     */
    columns(columns) {
        return new AlterTableAddIndexBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                addIndex: _operation_node_add_index_node_js__WEBPACK_IMPORTED_MODULE_2__.AddIndexNode.cloneWithColumns(this.#props.node.addIndex, columns.map(_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseOrderedColumnName)),
            }),
        });
    }
    /**
     * Specifies an arbitrary expression for the index.
     *
     * ### Examples
     *
     * ```ts
     * import { sql } from 'kysely'
     *
     * await db.schema
     *   .alterTable('person')
     *   .addIndex('person_first_name_index')
     *   .expression(sql`(first_name < 'Sami')`)
     *   .execute()
     * ```
     *
     * The generated SQL (MySQL):
     *
     * ```sql
     * alter table `person` add index `person_first_name_index` ((first_name < 'Sami'))
     * ```
     */
    expression(expression) {
        return new AlterTableAddIndexBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                addIndex: _operation_node_add_index_node_js__WEBPACK_IMPORTED_MODULE_2__.AddIndexNode.cloneWithColumns(this.#props.node.addIndex, [
                    expression.toOperationNode(),
                ]),
            }),
        });
    }
    using(indexType) {
        return new AlterTableAddIndexBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                addIndex: _operation_node_add_index_node_js__WEBPACK_IMPORTED_MODULE_2__.AddIndexNode.cloneWith(this.#props.node.addIndex, {
                    using: _operation_node_raw_node_js__WEBPACK_IMPORTED_MODULE_4__.RawNode.createWithSql(indexType),
                }),
            }),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_5__.preventAwait)(AlterTableAddIndexBuilder, "don't await AlterTableAddIndexBuilder instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/alter-table-builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/alter-table-builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AlterTableBuilder: () => (/* binding */ AlterTableBuilder),
/* harmony export */   AlterTableColumnAlteringBuilder: () => (/* binding */ AlterTableColumnAlteringBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_add_column_node_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../operation-node/add-column-node.js */ "./node_modules/kysely/dist/esm/operation-node/add-column-node.js");
/* harmony import */ var _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/alter-table-node.js */ "./node_modules/kysely/dist/esm/operation-node/alter-table-node.js");
/* harmony import */ var _operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../operation-node/column-definition-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-definition-node.js");
/* harmony import */ var _operation_node_drop_column_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../operation-node/drop-column-node.js */ "./node_modules/kysely/dist/esm/operation-node/drop-column-node.js");
/* harmony import */ var _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/identifier-node.js */ "./node_modules/kysely/dist/esm/operation-node/identifier-node.js");
/* harmony import */ var _operation_node_rename_column_node_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../operation-node/rename-column-node.js */ "./node_modules/kysely/dist/esm/operation-node/rename-column-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _column_definition_builder_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./column-definition-builder.js */ "./node_modules/kysely/dist/esm/schema/column-definition-builder.js");
/* harmony import */ var _operation_node_modify_column_node_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../operation-node/modify-column-node.js */ "./node_modules/kysely/dist/esm/operation-node/modify-column-node.js");
/* harmony import */ var _parser_data_type_parser_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../parser/data-type-parser.js */ "./node_modules/kysely/dist/esm/parser/data-type-parser.js");
/* harmony import */ var _foreign_key_constraint_builder_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./foreign-key-constraint-builder.js */ "./node_modules/kysely/dist/esm/schema/foreign-key-constraint-builder.js");
/* harmony import */ var _operation_node_add_constraint_node_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../operation-node/add-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/add-constraint-node.js");
/* harmony import */ var _operation_node_unique_constraint_node_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../operation-node/unique-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/unique-constraint-node.js");
/* harmony import */ var _operation_node_check_constraint_node_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../operation-node/check-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/check-constraint-node.js");
/* harmony import */ var _operation_node_foreign_key_constraint_node_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../operation-node/foreign-key-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/foreign-key-constraint-node.js");
/* harmony import */ var _operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../operation-node/column-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-node.js");
/* harmony import */ var _parser_table_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser/table-parser.js */ "./node_modules/kysely/dist/esm/parser/table-parser.js");
/* harmony import */ var _operation_node_drop_constraint_node_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../operation-node/drop-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/drop-constraint-node.js");
/* harmony import */ var _alter_column_builder_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./alter-column-builder.js */ "./node_modules/kysely/dist/esm/schema/alter-column-builder.js");
/* harmony import */ var _alter_table_executor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./alter-table-executor.js */ "./node_modules/kysely/dist/esm/schema/alter-table-executor.js");
/* harmony import */ var _alter_table_add_foreign_key_constraint_builder_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./alter-table-add-foreign-key-constraint-builder.js */ "./node_modules/kysely/dist/esm/schema/alter-table-add-foreign-key-constraint-builder.js");
/* harmony import */ var _alter_table_drop_constraint_builder_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./alter-table-drop-constraint-builder.js */ "./node_modules/kysely/dist/esm/schema/alter-table-drop-constraint-builder.js");
/* harmony import */ var _operation_node_primary_constraint_node_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../operation-node/primary-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/primary-constraint-node.js");
/* harmony import */ var _operation_node_drop_index_node_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../operation-node/drop-index-node.js */ "./node_modules/kysely/dist/esm/operation-node/drop-index-node.js");
/* harmony import */ var _operation_node_add_index_node_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../operation-node/add-index-node.js */ "./node_modules/kysely/dist/esm/operation-node/add-index-node.js");
/* harmony import */ var _alter_table_add_index_builder_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./alter-table-add-index-builder.js */ "./node_modules/kysely/dist/esm/schema/alter-table-add-index-builder.js");
/* harmony import */ var _unique_constraint_builder_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./unique-constraint-builder.js */ "./node_modules/kysely/dist/esm/schema/unique-constraint-builder.js");
/// <reference types="./alter-table-builder.d.ts" />




























/**
 * This builder can be used to create a `alter table` query.
 */
class AlterTableBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    renameTo(newTableName) {
        return new _alter_table_executor_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableExecutor({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                renameTo: (0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseTable)(newTableName),
            }),
        });
    }
    setSchema(newSchema) {
        return new _alter_table_executor_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableExecutor({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                setSchema: _operation_node_identifier_node_js__WEBPACK_IMPORTED_MODULE_4__.IdentifierNode.create(newSchema),
            }),
        });
    }
    alterColumn(column, alteration) {
        const builder = alteration(new _alter_column_builder_js__WEBPACK_IMPORTED_MODULE_5__.AlterColumnBuilder(column));
        return new AlterTableColumnAlteringBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithColumnAlteration(this.#props.node, builder.toOperationNode()),
        });
    }
    dropColumn(column) {
        return new AlterTableColumnAlteringBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithColumnAlteration(this.#props.node, _operation_node_drop_column_node_js__WEBPACK_IMPORTED_MODULE_6__.DropColumnNode.create(column)),
        });
    }
    renameColumn(column, newColumn) {
        return new AlterTableColumnAlteringBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithColumnAlteration(this.#props.node, _operation_node_rename_column_node_js__WEBPACK_IMPORTED_MODULE_7__.RenameColumnNode.create(column, newColumn)),
        });
    }
    addColumn(columnName, dataType, build = _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop) {
        const builder = build(new _column_definition_builder_js__WEBPACK_IMPORTED_MODULE_8__.ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_9__.ColumnDefinitionNode.create(columnName, (0,_parser_data_type_parser_js__WEBPACK_IMPORTED_MODULE_10__.parseDataTypeExpression)(dataType))));
        return new AlterTableColumnAlteringBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithColumnAlteration(this.#props.node, _operation_node_add_column_node_js__WEBPACK_IMPORTED_MODULE_11__.AddColumnNode.create(builder.toOperationNode())),
        });
    }
    modifyColumn(columnName, dataType, build = _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop) {
        const builder = build(new _column_definition_builder_js__WEBPACK_IMPORTED_MODULE_8__.ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_9__.ColumnDefinitionNode.create(columnName, (0,_parser_data_type_parser_js__WEBPACK_IMPORTED_MODULE_10__.parseDataTypeExpression)(dataType))));
        return new AlterTableColumnAlteringBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithColumnAlteration(this.#props.node, _operation_node_modify_column_node_js__WEBPACK_IMPORTED_MODULE_12__.ModifyColumnNode.create(builder.toOperationNode())),
        });
    }
    /**
     * See {@link CreateTableBuilder.addUniqueConstraint}
     */
    addUniqueConstraint(constraintName, columns, build = _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop) {
        const uniqueConstraintBuilder = build(new _unique_constraint_builder_js__WEBPACK_IMPORTED_MODULE_13__.UniqueConstraintNodeBuilder(_operation_node_unique_constraint_node_js__WEBPACK_IMPORTED_MODULE_14__.UniqueConstraintNode.create(columns, constraintName)));
        return new _alter_table_executor_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableExecutor({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                addConstraint: _operation_node_add_constraint_node_js__WEBPACK_IMPORTED_MODULE_15__.AddConstraintNode.create(uniqueConstraintBuilder.toOperationNode()),
            }),
        });
    }
    /**
     * See {@link CreateTableBuilder.addCheckConstraint}
     */
    addCheckConstraint(constraintName, checkExpression) {
        return new _alter_table_executor_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableExecutor({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                addConstraint: _operation_node_add_constraint_node_js__WEBPACK_IMPORTED_MODULE_15__.AddConstraintNode.create(_operation_node_check_constraint_node_js__WEBPACK_IMPORTED_MODULE_16__.CheckConstraintNode.create(checkExpression.toOperationNode(), constraintName)),
            }),
        });
    }
    /**
     * See {@link CreateTableBuilder.addForeignKeyConstraint}
     *
     * Unlike {@link CreateTableBuilder.addForeignKeyConstraint} this method returns
     * the constraint builder and doesn't take a callback as the last argument. This
     * is because you can only add one column per `ALTER TABLE` query.
     */
    addForeignKeyConstraint(constraintName, columns, targetTable, targetColumns) {
        return new _alter_table_add_foreign_key_constraint_builder_js__WEBPACK_IMPORTED_MODULE_17__.AlterTableAddForeignKeyConstraintBuilder({
            ...this.#props,
            constraintBuilder: new _foreign_key_constraint_builder_js__WEBPACK_IMPORTED_MODULE_18__.ForeignKeyConstraintBuilder(_operation_node_foreign_key_constraint_node_js__WEBPACK_IMPORTED_MODULE_19__.ForeignKeyConstraintNode.create(columns.map(_operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_20__.ColumnNode.create), (0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseTable)(targetTable), targetColumns.map(_operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_20__.ColumnNode.create), constraintName)),
        });
    }
    /**
     * See {@link CreateTableBuilder.addPrimaryKeyConstraint}
     */
    addPrimaryKeyConstraint(constraintName, columns) {
        return new _alter_table_executor_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableExecutor({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                addConstraint: _operation_node_add_constraint_node_js__WEBPACK_IMPORTED_MODULE_15__.AddConstraintNode.create(_operation_node_primary_constraint_node_js__WEBPACK_IMPORTED_MODULE_21__.PrimaryConstraintNode.create(columns, constraintName)),
            }),
        });
    }
    dropConstraint(constraintName) {
        return new _alter_table_drop_constraint_builder_js__WEBPACK_IMPORTED_MODULE_22__.AlterTableDropConstraintBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                dropConstraint: _operation_node_drop_constraint_node_js__WEBPACK_IMPORTED_MODULE_23__.DropConstraintNode.create(constraintName),
            }),
        });
    }
    /**
     * This can be used to add index to table.
     *
     *  ### Examples
     *
     * ```ts
     * db.schema.alterTable('person')
     *   .addIndex('person_email_index')
     *   .column('email')
     *   .unique()
     *   .execute()
     * ```
     *
     * The generated SQL (MySQL):
     *
     * ```sql
     * alter table `person` add unique index `person_email_index` (`email`)
     * ```
     */
    addIndex(indexName) {
        return new _alter_table_add_index_builder_js__WEBPACK_IMPORTED_MODULE_24__.AlterTableAddIndexBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                addIndex: _operation_node_add_index_node_js__WEBPACK_IMPORTED_MODULE_25__.AddIndexNode.create(indexName),
            }),
        });
    }
    /**
     * This can be used to drop index from table.
     *
     * ### Examples
     *
     * ```ts
     * db.schema.alterTable('person')
     *   .dropIndex('person_email_index')
     *   .execute()
     * ```
     *
     * The generated SQL (MySQL):
     *
     * ```sql
     * alter table `person` drop index `test_first_name_index`
     * ```
     */
    dropIndex(indexName) {
        return new _alter_table_executor_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableExecutor({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                dropIndex: _operation_node_drop_index_node_js__WEBPACK_IMPORTED_MODULE_26__.DropIndexNode.create(indexName),
            }),
        });
    }
    /**
     * Calls the given function passing `this` as the only argument.
     *
     * See {@link CreateTableBuilder.$call}
     */
    $call(func) {
        return func(this);
    }
}
class AlterTableColumnAlteringBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    alterColumn(column, alteration) {
        const builder = alteration(new _alter_column_builder_js__WEBPACK_IMPORTED_MODULE_5__.AlterColumnBuilder(column));
        return new AlterTableColumnAlteringBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithColumnAlteration(this.#props.node, builder.toOperationNode()),
        });
    }
    dropColumn(column) {
        return new AlterTableColumnAlteringBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithColumnAlteration(this.#props.node, _operation_node_drop_column_node_js__WEBPACK_IMPORTED_MODULE_6__.DropColumnNode.create(column)),
        });
    }
    renameColumn(column, newColumn) {
        return new AlterTableColumnAlteringBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithColumnAlteration(this.#props.node, _operation_node_rename_column_node_js__WEBPACK_IMPORTED_MODULE_7__.RenameColumnNode.create(column, newColumn)),
        });
    }
    addColumn(columnName, dataType, build = _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop) {
        const builder = build(new _column_definition_builder_js__WEBPACK_IMPORTED_MODULE_8__.ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_9__.ColumnDefinitionNode.create(columnName, (0,_parser_data_type_parser_js__WEBPACK_IMPORTED_MODULE_10__.parseDataTypeExpression)(dataType))));
        return new AlterTableColumnAlteringBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithColumnAlteration(this.#props.node, _operation_node_add_column_node_js__WEBPACK_IMPORTED_MODULE_11__.AddColumnNode.create(builder.toOperationNode())),
        });
    }
    modifyColumn(columnName, dataType, build = _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop) {
        const builder = build(new _column_definition_builder_js__WEBPACK_IMPORTED_MODULE_8__.ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_9__.ColumnDefinitionNode.create(columnName, (0,_parser_data_type_parser_js__WEBPACK_IMPORTED_MODULE_10__.parseDataTypeExpression)(dataType))));
        return new AlterTableColumnAlteringBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_2__.AlterTableNode.cloneWithColumnAlteration(this.#props.node, _operation_node_modify_column_node_js__WEBPACK_IMPORTED_MODULE_12__.ModifyColumnNode.create(builder.toOperationNode())),
        });
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_27__.preventAwait)(AlterTableBuilder, "don't await AlterTableBuilder instances");
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_27__.preventAwait)(_alter_column_builder_js__WEBPACK_IMPORTED_MODULE_5__.AlterColumnBuilder, "don't await AlterColumnBuilder instances");
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_27__.preventAwait)(AlterTableColumnAlteringBuilder, "don't await AlterTableColumnAlteringBuilder instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/alter-table-drop-constraint-builder.js":
/*!************************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/alter-table-drop-constraint-builder.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AlterTableDropConstraintBuilder: () => (/* binding */ AlterTableDropConstraintBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/alter-table-node.js */ "./node_modules/kysely/dist/esm/operation-node/alter-table-node.js");
/* harmony import */ var _operation_node_drop_constraint_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/drop-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/drop-constraint-node.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/// <reference types="./alter-table-drop-constraint-builder.d.ts" />




class AlterTableDropConstraintBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    ifExists() {
        return new AlterTableDropConstraintBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                dropConstraint: _operation_node_drop_constraint_node_js__WEBPACK_IMPORTED_MODULE_2__.DropConstraintNode.cloneWith(this.#props.node.dropConstraint, {
                    ifExists: true,
                }),
            }),
        });
    }
    cascade() {
        return new AlterTableDropConstraintBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                dropConstraint: _operation_node_drop_constraint_node_js__WEBPACK_IMPORTED_MODULE_2__.DropConstraintNode.cloneWith(this.#props.node.dropConstraint, {
                    modifier: 'cascade',
                }),
            }),
        });
    }
    restrict() {
        return new AlterTableDropConstraintBuilder({
            ...this.#props,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_1__.AlterTableNode.cloneWithTableProps(this.#props.node, {
                dropConstraint: _operation_node_drop_constraint_node_js__WEBPACK_IMPORTED_MODULE_2__.DropConstraintNode.cloneWith(this.#props.node.dropConstraint, {
                    modifier: 'restrict',
                }),
            }),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_3__.preventAwait)(AlterTableDropConstraintBuilder, "don't await AlterTableDropConstraintBuilder instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/alter-table-executor.js":
/*!*********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/alter-table-executor.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AlterTableExecutor: () => (/* binding */ AlterTableExecutor)
/* harmony export */ });
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/// <reference types="./alter-table-executor.d.ts" />


class AlterTableExecutor {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_1__.preventAwait)(AlterTableExecutor, "don't await AlterTableExecutor instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/column-definition-builder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/column-definition-builder.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ColumnDefinitionBuilder: () => (/* binding */ ColumnDefinitionBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_check_constraint_node_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../operation-node/check-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/check-constraint-node.js");
/* harmony import */ var _operation_node_references_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operation-node/references-node.js */ "./node_modules/kysely/dist/esm/operation-node/references-node.js");
/* harmony import */ var _operation_node_select_all_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/select-all-node.js */ "./node_modules/kysely/dist/esm/operation-node/select-all-node.js");
/* harmony import */ var _parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/column-definition-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-definition-node.js");
/* harmony import */ var _parser_default_value_parser_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../parser/default-value-parser.js */ "./node_modules/kysely/dist/esm/parser/default-value-parser.js");
/* harmony import */ var _operation_node_generated_node_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../operation-node/generated-node.js */ "./node_modules/kysely/dist/esm/operation-node/generated-node.js");
/* harmony import */ var _operation_node_default_value_node_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation-node/default-value-node.js */ "./node_modules/kysely/dist/esm/operation-node/default-value-node.js");
/* harmony import */ var _parser_on_modify_action_parser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../parser/on-modify-action-parser.js */ "./node_modules/kysely/dist/esm/parser/on-modify-action-parser.js");
/// <reference types="./column-definition-builder.d.ts" />










class ColumnDefinitionBuilder {
    #node;
    constructor(node) {
        this.#node = node;
    }
    /**
     * Adds `auto_increment` or `autoincrement` to the column definition
     * depending on the dialect.
     *
     * Some dialects like PostgreSQL don't support this. On PostgreSQL
     * you can use the `serial` or `bigserial` data type instead.
     */
    autoIncrement() {
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, { autoIncrement: true }));
    }
    /**
     * Makes the column an identity column.
     *
     * This only works on some dialects like MS SQL Server (MSSQL).
     *
     * For PostgreSQL's `generated always as identity` use {@link generatedAlwaysAsIdentity}.
     */
    identity() {
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, { identity: true }));
    }
    /**
     * Makes the column the primary key.
     *
     * If you want to specify a composite primary key use the
     * {@link CreateTableBuilder.addPrimaryKeyConstraint} method.
     */
    primaryKey() {
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, { primaryKey: true }));
    }
    /**
     * Adds a foreign key constraint for the column.
     *
     * If your database engine doesn't support foreign key constraints in the
     * column definition (like MySQL 5) you need to call the table level
     * {@link CreateTableBuilder.addForeignKeyConstraint} method instead.
     *
     * ### Examples
     *
     * ```ts
     * col.references('person.id')
     * ```
     */
    references(ref) {
        const references = (0,_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseStringReference)(ref);
        if (!references.table || _operation_node_select_all_node_js__WEBPACK_IMPORTED_MODULE_2__.SelectAllNode.is(references.column)) {
            throw new Error(`invalid call references('${ref}'). The reference must have format table.column or schema.table.column`);
        }
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, {
            references: _operation_node_references_node_js__WEBPACK_IMPORTED_MODULE_3__.ReferencesNode.create(references.table, [
                references.column,
            ]),
        }));
    }
    /**
     * Adds an `on delete` constraint for the foreign key column.
     *
     * If your database engine doesn't support foreign key constraints in the
     * column definition (like MySQL 5) you need to call the table level
     * {@link CreateTableBuilder.addForeignKeyConstraint} method instead.
     *
     * ### Examples
     *
     * ```ts
     * col.references('person.id').onDelete('cascade')
     * ```
     */
    onDelete(onDelete) {
        if (!this.#node.references) {
            throw new Error('on delete constraint can only be added for foreign keys');
        }
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, {
            references: _operation_node_references_node_js__WEBPACK_IMPORTED_MODULE_3__.ReferencesNode.cloneWithOnDelete(this.#node.references, (0,_parser_on_modify_action_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseOnModifyForeignAction)(onDelete)),
        }));
    }
    /**
     * Adds an `on update` constraint for the foreign key column.
     *
     * ### Examples
     *
     * ```ts
     * col.references('person.id').onUpdate('cascade')
     * ```
     */
    onUpdate(onUpdate) {
        if (!this.#node.references) {
            throw new Error('on update constraint can only be added for foreign keys');
        }
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, {
            references: _operation_node_references_node_js__WEBPACK_IMPORTED_MODULE_3__.ReferencesNode.cloneWithOnUpdate(this.#node.references, (0,_parser_on_modify_action_parser_js__WEBPACK_IMPORTED_MODULE_4__.parseOnModifyForeignAction)(onUpdate)),
        }));
    }
    /**
     * Adds a unique constraint for the column.
     */
    unique() {
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, { unique: true }));
    }
    /**
     * Adds a `not null` constraint for the column.
     */
    notNull() {
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, { notNull: true }));
    }
    /**
     * Adds a `unsigned` modifier for the column.
     *
     * This only works on some dialects like MySQL.
     */
    unsigned() {
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, { unsigned: true }));
    }
    /**
     * Adds a default value constraint for the column.
     *
     * ### Examples
     *
     * ```ts
     * db.schema
     *   .createTable('pet')
     *   .addColumn('number_of_legs', 'integer', (col) => col.defaultTo(4))
     *   .execute()
     * ```
     *
     * Values passed to `defaultTo` are interpreted as value literals by default. You can define
     * an arbitrary SQL expression using the {@link sql} template tag:
     *
     * ```ts
     * import { sql } from 'kysely'
     *
     * db.schema
     *   .createTable('pet')
     *   .addColumn(
     *     'number_of_legs',
     *     'integer',
     *     (col) => col.defaultTo(sql`any SQL here`)
     *   )
     *   .execute()
     * ```
     */
    defaultTo(value) {
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, {
            defaultTo: _operation_node_default_value_node_js__WEBPACK_IMPORTED_MODULE_5__.DefaultValueNode.create((0,_parser_default_value_parser_js__WEBPACK_IMPORTED_MODULE_6__.parseDefaultValueExpression)(value)),
        }));
    }
    /**
     * Adds a check constraint for the column.
     *
     * ### Examples
     *
     * ```ts
     * import { sql } from 'kysely'
     *
     * db.schema
     *   .createTable('pet')
     *   .addColumn('number_of_legs', 'integer', (col) =>
     *     col.check(sql`number_of_legs < 5`)
     *   )
     *   .execute()
     * ```
     */
    check(expression) {
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, {
            check: _operation_node_check_constraint_node_js__WEBPACK_IMPORTED_MODULE_7__.CheckConstraintNode.create(expression.toOperationNode()),
        }));
    }
    /**
     * Makes the column a generated column using a `generated always as` statement.
     *
     * ### Examples
     *
     * ```ts
     * import { sql } from 'kysely'
     *
     * db.schema
     *   .createTable('person')
     *   .addColumn('full_name', 'varchar(255)',
     *     (col) => col.generatedAlwaysAs(sql`concat(first_name, ' ', last_name)`)
     *   )
     *   .execute()
     * ```
     */
    generatedAlwaysAs(expression) {
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, {
            generated: _operation_node_generated_node_js__WEBPACK_IMPORTED_MODULE_8__.GeneratedNode.createWithExpression(expression.toOperationNode()),
        }));
    }
    /**
     * Adds the `generated always as identity` specifier.
     *
     * This only works on some dialects like PostgreSQL.
     *
     * For MS SQL Server (MSSQL)'s identity column use {@link identity}.
     */
    generatedAlwaysAsIdentity() {
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, {
            generated: _operation_node_generated_node_js__WEBPACK_IMPORTED_MODULE_8__.GeneratedNode.create({ identity: true, always: true }),
        }));
    }
    /**
     * Adds the `generated by default as identity` specifier on supported dialects.
     */
    generatedByDefaultAsIdentity() {
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, {
            generated: _operation_node_generated_node_js__WEBPACK_IMPORTED_MODULE_8__.GeneratedNode.create({ identity: true, byDefault: true }),
        }));
    }
    /**
     * Makes a generated column stored instead of virtual. This method can only
     * be used with {@link generatedAlwaysAs}
     *
     * ### Examples
     *
     * ```ts
     * db.schema
     *   .createTable('person')
     *   .addColumn('full_name', 'varchar(255)', (col) => col
     *     .generatedAlwaysAs("concat(first_name, ' ', last_name)")
     *     .stored()
     *   )
     *   .execute()
     * ```
     */
    stored() {
        if (!this.#node.generated) {
            throw new Error('stored() can only be called after generatedAlwaysAs');
        }
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, {
            generated: _operation_node_generated_node_js__WEBPACK_IMPORTED_MODULE_8__.GeneratedNode.cloneWith(this.#node.generated, {
                stored: true,
            }),
        }));
    }
    /**
     * This can be used to add any additional SQL right after the column's data type.
     *
     * ### Examples
     *
     * ```ts
     * db.schema.createTable('person')
     *  .addColumn('id', 'integer', col => col.primaryKey())
     *  .addColumn('first_name', 'varchar(36)', col => col.modifyFront(sql`collate utf8mb4_general_ci`).notNull())
     *  .execute()
     * ```
     *
     * The generated SQL (MySQL):
     *
     * ```sql
     * create table `person` (
     *   `id` integer primary key,
     *   `first_name` varchar(36) collate utf8mb4_general_ci not null
     * )
     * ```
     */
    modifyFront(modifier) {
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWithFrontModifier(this.#node, modifier.toOperationNode()));
    }
    /**
     * Adds `nulls not distinct` specifier.
     * Should be used with `unique` constraint.
     *
     * This only works on some dialects like PostgreSQL.
     *
     * ### Examples
     *
     * ```ts
     * db.schema.createTable('person')
     *  .addColumn('id', 'integer', col => col.primaryKey())
     *  .addColumn('first_name', 'varchar(30)', col => col.unique().nullsNotDistinct())
     *  .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * create table "person" (
     *   "id" integer primary key,
     *   "first_name" varchar(30) unique nulls not distinct
     * )
     * ```
     */
    nullsNotDistinct() {
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWith(this.#node, { nullsNotDistinct: true }));
    }
    /**
     * This can be used to add any additional SQL to the end of the column definition.
     *
     * ### Examples
     *
     * ```ts
     * db.schema.createTable('person')
     *  .addColumn('id', 'integer', col => col.primaryKey())
     *  .addColumn('age', 'integer', col => col.unsigned().notNull().modifyEnd(sql`comment ${sql.lit('it is not polite to ask a woman her age')}`))
     *  .execute()
     * ```
     *
     * The generated SQL (MySQL):
     *
     * ```sql
     * create table `person` (
     *   `id` integer primary key,
     *   `age` integer unsigned not null comment 'it is not polite to ask a woman her age'
     * )
     * ```
     */
    modifyEnd(modifier) {
        return new ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_0__.ColumnDefinitionNode.cloneWithEndModifier(this.#node, modifier.toOperationNode()));
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#node;
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_9__.preventAwait)(ColumnDefinitionBuilder, "don't await ColumnDefinitionBuilder instances directly.");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/create-index-builder.js":
/*!*********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/create-index-builder.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CreateIndexBuilder: () => (/* binding */ CreateIndexBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_create_index_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/create-index-node.js */ "./node_modules/kysely/dist/esm/operation-node/create-index-node.js");
/* harmony import */ var _operation_node_raw_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/raw-node.js */ "./node_modules/kysely/dist/esm/operation-node/raw-node.js");
/* harmony import */ var _parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser/reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/* harmony import */ var _parser_table_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/table-parser.js */ "./node_modules/kysely/dist/esm/parser/table-parser.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../parser/binary-operation-parser.js */ "./node_modules/kysely/dist/esm/parser/binary-operation-parser.js");
/* harmony import */ var _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../operation-node/query-node.js */ "./node_modules/kysely/dist/esm/operation-node/query-node.js");
/* harmony import */ var _plugin_immediate_value_immediate_value_transformer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../plugin/immediate-value/immediate-value-transformer.js */ "./node_modules/kysely/dist/esm/plugin/immediate-value/immediate-value-transformer.js");
/// <reference types="./create-index-builder.d.ts" />









class CreateIndexBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    /**
     * Adds the "if not exists" modifier.
     *
     * If the index already exists, no error is thrown if this method has been called.
     */
    ifNotExists() {
        return new CreateIndexBuilder({
            ...this.#props,
            node: _operation_node_create_index_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateIndexNode.cloneWith(this.#props.node, {
                ifNotExists: true,
            }),
        });
    }
    /**
     * Makes the index unique.
     */
    unique() {
        return new CreateIndexBuilder({
            ...this.#props,
            node: _operation_node_create_index_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateIndexNode.cloneWith(this.#props.node, {
                unique: true,
            }),
        });
    }
    /**
     * Adds `nulls not distinct` specifier to index.
     * This only works on some dialects like PostgreSQL.
     *
     * ### Examples
     *
     * ```ts
     * db.schema.createIndex('person_first_name_index')
     *  .on('person')
     *  .column('first_name')
     *  .nullsNotDistinct()
     *  .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * create index "person_first_name_index"
     * on "test" ("first_name")
     * nulls not distinct;
     * ```
     */
    nullsNotDistinct() {
        return new CreateIndexBuilder({
            ...this.#props,
            node: _operation_node_create_index_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateIndexNode.cloneWith(this.#props.node, {
                nullsNotDistinct: true,
            }),
        });
    }
    /**
     * Specifies the table for the index.
     */
    on(table) {
        return new CreateIndexBuilder({
            ...this.#props,
            node: _operation_node_create_index_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateIndexNode.cloneWith(this.#props.node, {
                table: (0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseTable)(table),
            }),
        });
    }
    /**
     * Adds a column to the index.
     *
     * Also see {@link columns} for adding multiple columns at once or {@link expression}
     * for specifying an arbitrary expression.
     *
     * ### Examples
     *
     * ```ts
     * await db.schema
     *         .createIndex('person_first_name_and_age_index')
     *         .on('person')
     *         .column('first_name')
     *         .column('age desc')
     *         .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * create index "person_first_name_and_age_index" on "person" ("first_name", "age" desc)
     * ```
     */
    column(column) {
        return new CreateIndexBuilder({
            ...this.#props,
            node: _operation_node_create_index_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateIndexNode.cloneWithColumns(this.#props.node, [
                (0,_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseOrderedColumnName)(column),
            ]),
        });
    }
    /**
     * Specifies a list of columns for the index.
     *
     * Also see {@link column} for adding a single column or {@link expression} for
     * specifying an arbitrary expression.
     *
     * ### Examples
     *
     * ```ts
     * await db.schema
     *         .createIndex('person_first_name_and_age_index')
     *         .on('person')
     *         .columns(['first_name', 'age desc'])
     *         .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * create index "person_first_name_and_age_index" on "person" ("first_name", "age" desc)
     * ```
     */
    columns(columns) {
        return new CreateIndexBuilder({
            ...this.#props,
            node: _operation_node_create_index_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateIndexNode.cloneWithColumns(this.#props.node, columns.map(_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseOrderedColumnName)),
        });
    }
    /**
     * Specifies an arbitrary expression for the index.
     *
     * ### Examples
     *
     * ```ts
     * import { sql } from 'kysely'
     *
     * await db.schema
     *   .createIndex('person_first_name_index')
     *   .on('person')
     *   .expression(sql`first_name COLLATE "fi_FI"`)
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * create index "person_first_name_index" on "person" (first_name COLLATE "fi_FI")
     * ```
     */
    expression(expression) {
        return new CreateIndexBuilder({
            ...this.#props,
            node: _operation_node_create_index_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateIndexNode.cloneWithColumns(this.#props.node, [
                expression.toOperationNode(),
            ]),
        });
    }
    using(indexType) {
        return new CreateIndexBuilder({
            ...this.#props,
            node: _operation_node_create_index_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateIndexNode.cloneWith(this.#props.node, {
                using: _operation_node_raw_node_js__WEBPACK_IMPORTED_MODULE_4__.RawNode.createWithSql(indexType),
            }),
        });
    }
    where(...args) {
        const transformer = new _plugin_immediate_value_immediate_value_transformer_js__WEBPACK_IMPORTED_MODULE_5__.ImmediateValueTransformer();
        return new CreateIndexBuilder({
            ...this.#props,
            node: _operation_node_query_node_js__WEBPACK_IMPORTED_MODULE_6__.QueryNode.cloneWithWhere(this.#props.node, transformer.transformNode((0,_parser_binary_operation_parser_js__WEBPACK_IMPORTED_MODULE_7__.parseValueBinaryOperationOrExpression)(args))),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_8__.preventAwait)(CreateIndexBuilder, "don't await CreateIndexBuilder instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/create-schema-builder.js":
/*!**********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/create-schema-builder.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CreateSchemaBuilder: () => (/* binding */ CreateSchemaBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_create_schema_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/create-schema-node.js */ "./node_modules/kysely/dist/esm/operation-node/create-schema-node.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./create-schema-builder.d.ts" />



class CreateSchemaBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    ifNotExists() {
        return new CreateSchemaBuilder({
            ...this.#props,
            node: _operation_node_create_schema_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateSchemaNode.cloneWith(this.#props.node, { ifNotExists: true }),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__.preventAwait)(CreateSchemaBuilder, "don't await CreateSchemaBuilder instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/create-table-builder.js":
/*!*********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/create-table-builder.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CreateTableBuilder: () => (/* binding */ CreateTableBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operation-node/column-definition-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-definition-node.js");
/* harmony import */ var _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/create-table-node.js */ "./node_modules/kysely/dist/esm/operation-node/create-table-node.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _column_definition_builder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./column-definition-builder.js */ "./node_modules/kysely/dist/esm/schema/column-definition-builder.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _operation_node_foreign_key_constraint_node_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../operation-node/foreign-key-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/foreign-key-constraint-node.js");
/* harmony import */ var _operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../operation-node/column-node.js */ "./node_modules/kysely/dist/esm/operation-node/column-node.js");
/* harmony import */ var _foreign_key_constraint_builder_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./foreign-key-constraint-builder.js */ "./node_modules/kysely/dist/esm/schema/foreign-key-constraint-builder.js");
/* harmony import */ var _parser_data_type_parser_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../parser/data-type-parser.js */ "./node_modules/kysely/dist/esm/parser/data-type-parser.js");
/* harmony import */ var _operation_node_primary_constraint_node_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../operation-node/primary-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/primary-constraint-node.js");
/* harmony import */ var _operation_node_unique_constraint_node_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../operation-node/unique-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/unique-constraint-node.js");
/* harmony import */ var _operation_node_check_constraint_node_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../operation-node/check-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/check-constraint-node.js");
/* harmony import */ var _parser_table_parser_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../parser/table-parser.js */ "./node_modules/kysely/dist/esm/parser/table-parser.js");
/* harmony import */ var _parser_on_commit_action_parse_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/on-commit-action-parse.js */ "./node_modules/kysely/dist/esm/parser/on-commit-action-parse.js");
/* harmony import */ var _unique_constraint_builder_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./unique-constraint-builder.js */ "./node_modules/kysely/dist/esm/schema/unique-constraint-builder.js");
/* harmony import */ var _parser_expression_parser_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../parser/expression-parser.js */ "./node_modules/kysely/dist/esm/parser/expression-parser.js");
/// <reference types="./create-table-builder.d.ts" />
















/**
 * This builder can be used to create a `create table` query.
 */
class CreateTableBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    /**
     * Adds the "temporary" modifier.
     *
     * Use this to create a temporary table.
     */
    temporary() {
        return new CreateTableBuilder({
            ...this.#props,
            node: _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateTableNode.cloneWith(this.#props.node, {
                temporary: true,
            }),
        });
    }
    /**
     * Adds an "on commit" statement.
     *
     * This can be used in conjunction with temporary tables on supported databases
     * like PostgreSQL.
     */
    onCommit(onCommit) {
        return new CreateTableBuilder({
            ...this.#props,
            node: _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateTableNode.cloneWith(this.#props.node, {
                onCommit: (0,_parser_on_commit_action_parse_js__WEBPACK_IMPORTED_MODULE_2__.parseOnCommitAction)(onCommit),
            }),
        });
    }
    /**
     * Adds the "if not exists" modifier.
     *
     * If the table already exists, no error is thrown if this method has been called.
     */
    ifNotExists() {
        return new CreateTableBuilder({
            ...this.#props,
            node: _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateTableNode.cloneWith(this.#props.node, {
                ifNotExists: true,
            }),
        });
    }
    /**
     * Adds a column to the table.
     *
     * ### Examples
     *
     * ```ts
     * import { sql } from 'kysely'
     *
     * await db.schema
     *   .createTable('person')
     *   .addColumn('id', 'integer', (col) => col.autoIncrement().primaryKey()),
     *   .addColumn('first_name', 'varchar(50)', (col) => col.notNull())
     *   .addColumn('last_name', 'varchar(255)')
     *   .addColumn('bank_balance', 'numeric(8, 2)')
     *   // You can specify any data type using the `sql` tag if the types
     *   // don't include it.
     *   .addColumn('data', sql`any_type_here`)
     *   .addColumn('parent_id', 'integer', (col) =>
     *     col.references('person.id').onDelete('cascade'))
     *   )
     * ```
     *
     * With this method, it's once again good to remember that Kysely just builds the
     * query and doesn't provide the same API for all databases. For example, some
     * databases like older MySQL don't support the `references` statement in the
     * column definition. Instead foreign key constraints need to be defined in the
     * `create table` query. See the next example:
     *
     * ```ts
     *   .addColumn('parent_id', 'integer')
     *   .addForeignKeyConstraint(
     *     'person_parent_id_fk', ['parent_id'], 'person', ['id'],
     *     (cb) => cb.onDelete('cascade')
     *   )
     * ```
     *
     * Another good example is that PostgreSQL doesn't support the `auto_increment`
     * keyword and you need to define an autoincrementing column for example using
     * `serial`:
     *
     * ```ts
     * await db.schema
     *   .createTable('person')
     *   .addColumn('id', 'serial', (col) => col.primaryKey()),
     * ```
     */
    addColumn(columnName, dataType, build = _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop) {
        const columnBuilder = build(new _column_definition_builder_js__WEBPACK_IMPORTED_MODULE_3__.ColumnDefinitionBuilder(_operation_node_column_definition_node_js__WEBPACK_IMPORTED_MODULE_4__.ColumnDefinitionNode.create(columnName, (0,_parser_data_type_parser_js__WEBPACK_IMPORTED_MODULE_5__.parseDataTypeExpression)(dataType))));
        return new CreateTableBuilder({
            ...this.#props,
            node: _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateTableNode.cloneWithColumn(this.#props.node, columnBuilder.toOperationNode()),
        });
    }
    /**
     * Adds a primary key constraint for one or more columns.
     *
     * The constraint name can be anything you want, but it must be unique
     * across the whole database.
     *
     * ### Examples
     *
     * ```ts
     * addPrimaryKeyConstraint('primary_key', ['first_name', 'last_name'])
     * ```
     */
    addPrimaryKeyConstraint(constraintName, columns) {
        return new CreateTableBuilder({
            ...this.#props,
            node: _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateTableNode.cloneWithConstraint(this.#props.node, _operation_node_primary_constraint_node_js__WEBPACK_IMPORTED_MODULE_6__.PrimaryConstraintNode.create(columns, constraintName)),
        });
    }
    /**
     * Adds a unique constraint for one or more columns.
     *
     * The constraint name can be anything you want, but it must be unique
     * across the whole database.
     *
     * ### Examples
     *
     * ```ts
     * addUniqueConstraint('first_name_last_name_unique', ['first_name', 'last_name'])
     * ```
     *
     * In dialects such as PostgreSQL you can specify `nulls not distinct` as follows:
     * ```ts
     * addUniqueConstraint('first_name_last_name_unique', ['first_name', 'last_name'], (builder) => builder.nullsNotDistinct())
     * ```
     */
    addUniqueConstraint(constraintName, columns, build = _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop) {
        const uniqueConstraintBuilder = build(new _unique_constraint_builder_js__WEBPACK_IMPORTED_MODULE_7__.UniqueConstraintNodeBuilder(_operation_node_unique_constraint_node_js__WEBPACK_IMPORTED_MODULE_8__.UniqueConstraintNode.create(columns, constraintName)));
        return new CreateTableBuilder({
            ...this.#props,
            node: _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateTableNode.cloneWithConstraint(this.#props.node, uniqueConstraintBuilder.toOperationNode()),
        });
    }
    /**
     * Adds a check constraint.
     *
     * The constraint name can be anything you want, but it must be unique
     * across the whole database.
     *
     * ### Examples
     *
     * ```ts
     * import { sql } from 'kysely'
     *
     * addCheckConstraint('check_legs', sql`number_of_legs < 5`)
     * ```
     */
    addCheckConstraint(constraintName, checkExpression) {
        return new CreateTableBuilder({
            ...this.#props,
            node: _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateTableNode.cloneWithConstraint(this.#props.node, _operation_node_check_constraint_node_js__WEBPACK_IMPORTED_MODULE_9__.CheckConstraintNode.create(checkExpression.toOperationNode(), constraintName)),
        });
    }
    /**
     * Adds a foreign key constraint.
     *
     * The constraint name can be anything you want, but it must be unique
     * across the whole database.
     *
     * ### Examples
     *
     * ```ts
     * addForeignKeyConstraint(
     *   'owner_id_foreign',
     *   ['owner_id'],
     *   'person',
     *   ['id'],
     * )
     * ```
     *
     * Add constraint for multiple columns:
     *
     * ```ts
     * addForeignKeyConstraint(
     *   'owner_id_foreign',
     *   ['owner_id1', 'owner_id2'],
     *   'person',
     *   ['id1', 'id2'],
     *   (cb) => cb.onDelete('cascade')
     * )
     * ```
     */
    addForeignKeyConstraint(constraintName, columns, targetTable, targetColumns, build = _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop) {
        const builder = build(new _foreign_key_constraint_builder_js__WEBPACK_IMPORTED_MODULE_10__.ForeignKeyConstraintBuilder(_operation_node_foreign_key_constraint_node_js__WEBPACK_IMPORTED_MODULE_11__.ForeignKeyConstraintNode.create(columns.map(_operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_12__.ColumnNode.create), (0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_13__.parseTable)(targetTable), targetColumns.map(_operation_node_column_node_js__WEBPACK_IMPORTED_MODULE_12__.ColumnNode.create), constraintName)));
        return new CreateTableBuilder({
            ...this.#props,
            node: _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateTableNode.cloneWithConstraint(this.#props.node, builder.toOperationNode()),
        });
    }
    /**
     * This can be used to add any additional SQL to the front of the query __after__ the `create` keyword.
     *
     * Also see {@link temporary}.
     *
     * ### Examples
     *
     * ```ts
     * db.schema.createTable('person')
     *   .modifyFront(sql`global temporary`)
     *   .addColumn('id', 'integer', col => col.primaryKey())
     *   .addColumn('first_name', 'varchar(64)', col => col.notNull())
     *   .addColumn('last_name', 'varchar(64), col => col.notNull())
     *   .execute()
     * ```
     *
     * The generated SQL (Postgres):
     *
     * ```sql
     * create global temporary table "person" (
     *   "id" integer primary key,
     *   "first_name" varchar(64) not null,
     *   "last_name" varchar(64) not null
     * )
     * ```
     */
    modifyFront(modifier) {
        return new CreateTableBuilder({
            ...this.#props,
            node: _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateTableNode.cloneWithFrontModifier(this.#props.node, modifier.toOperationNode()),
        });
    }
    /**
     * This can be used to add any additional SQL to the end of the query.
     *
     * Also see {@link onCommit}.
     *
     * ### Examples
     *
     * ```ts
     * db.schema.createTable('person')
     *   .addColumn('id', 'integer', col => col => primaryKey())
     *   .addColumn('first_name', 'varchar(64)', col => col.notNull())
     *   .addColumn('last_name', 'varchar(64), col => col.notNull())
     *   .modifyEnd(sql`collate utf8_unicode_ci`)
     *   .execute()
     * ```
     *
     * The generated SQL (MySQL):
     *
     * ```sql
     * create table `person` (
     *   `id` integer primary key,
     *   `first_name` varchar(64) not null,
     *   `last_name` varchar(64) not null
     * ) collate utf8_unicode_ci
     * ```
     */
    modifyEnd(modifier) {
        return new CreateTableBuilder({
            ...this.#props,
            node: _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateTableNode.cloneWithEndModifier(this.#props.node, modifier.toOperationNode()),
        });
    }
    /**
     * Allows to create table from `select` query.
     *
     * ### Examples
     *
     * ```ts
     * db.schema.createTable('copy')
     *   .temporary()
     *   .as(db.selectFrom('person').select(['first_name', 'last_name']))
     *   .execute()
     * ```
     *
     * The generated SQL (PostgreSQL):
     *
     * ```sql
     * create temporary table "copy" as
     * select "first_name", "last_name" from "person"
     * ```
     */
    as(expression) {
        return new CreateTableBuilder({
            ...this.#props,
            node: _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateTableNode.cloneWith(this.#props.node, {
                selectQuery: (0,_parser_expression_parser_js__WEBPACK_IMPORTED_MODULE_14__.parseExpression)(expression),
            }),
        });
    }
    /**
     * Calls the given function passing `this` as the only argument.
     *
     * ### Examples
     *
     * ```ts
     * db.schema
     *   .createTable('test')
     *   .$call((builder) => builder.addColumn('id', 'integer'))
     *   .execute()
     * ```
     *
     * ```ts
     * const addDefaultColumns = <T extends string, C extends string = never>(
     *   builder: CreateTableBuilder<T, C>
     * ) => {
     *   return builder
     *     .addColumn('id', 'integer', (col) => col.notNull())
     *     .addColumn('created_at', 'date', (col) =>
     *       col.notNull().defaultTo(sql`now()`)
     *     )
     *     .addColumn('updated_at', 'date', (col) =>
     *       col.notNull().defaultTo(sql`now()`)
     *     )
     * }
     *
     * db.schema
     *   .createTable('test')
     *   .$call(addDefaultColumns)
     *   .execute()
     * ```
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_15__.preventAwait)(CreateTableBuilder, "don't await CreateTableBuilder instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/create-type-builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/create-type-builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CreateTypeBuilder: () => (/* binding */ CreateTypeBuilder)
/* harmony export */ });
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _operation_node_create_type_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/create-type-node.js */ "./node_modules/kysely/dist/esm/operation-node/create-type-node.js");
/// <reference types="./create-type-builder.d.ts" />



class CreateTypeBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);
    }
    /**
     * Creates an anum type.
     *
     * ### Examples
     *
     * ```ts
     * db.schema.createType('species').asEnum(['cat', 'dog', 'frog'])
     * ```
     */
    asEnum(values) {
        return new CreateTypeBuilder({
            ...this.#props,
            node: _operation_node_create_type_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateTypeNode.cloneWithEnum(this.#props.node, values),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__.preventAwait)(CreateTypeBuilder, "don't await CreateTypeBuilder instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/create-view-builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/create-view-builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CreateViewBuilder: () => (/* binding */ CreateViewBuilder)
/* harmony export */ });
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _operation_node_create_view_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/create-view-node.js */ "./node_modules/kysely/dist/esm/operation-node/create-view-node.js");
/* harmony import */ var _parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/reference-parser.js */ "./node_modules/kysely/dist/esm/parser/reference-parser.js");
/* harmony import */ var _plugin_immediate_value_immediate_value_plugin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../plugin/immediate-value/immediate-value-plugin.js */ "./node_modules/kysely/dist/esm/plugin/immediate-value/immediate-value-plugin.js");
/// <reference types="./create-view-builder.d.ts" />





class CreateViewBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    /**
     * Adds the "temporary" modifier.
     *
     * Use this to create a temporary view.
     */
    temporary() {
        return new CreateViewBuilder({
            ...this.#props,
            node: _operation_node_create_view_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateViewNode.cloneWith(this.#props.node, {
                temporary: true,
            }),
        });
    }
    materialized() {
        return new CreateViewBuilder({
            ...this.#props,
            node: _operation_node_create_view_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateViewNode.cloneWith(this.#props.node, {
                materialized: true,
            }),
        });
    }
    /**
     * Only implemented on some dialects like SQLite. On most dialects, use {@link orReplace}.
     */
    ifNotExists() {
        return new CreateViewBuilder({
            ...this.#props,
            node: _operation_node_create_view_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateViewNode.cloneWith(this.#props.node, {
                ifNotExists: true,
            }),
        });
    }
    orReplace() {
        return new CreateViewBuilder({
            ...this.#props,
            node: _operation_node_create_view_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateViewNode.cloneWith(this.#props.node, {
                orReplace: true,
            }),
        });
    }
    columns(columns) {
        return new CreateViewBuilder({
            ...this.#props,
            node: _operation_node_create_view_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateViewNode.cloneWith(this.#props.node, {
                columns: columns.map(_parser_reference_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseColumnName),
            }),
        });
    }
    /**
     * Sets the select query or a `values` statement that creates the view.
     *
     * WARNING!
     * Some dialects don't support parameterized queries in DDL statements and therefore
     * the query or raw {@link sql } expression passed here is interpolated into a single
     * string opening an SQL injection vulnerability. DO NOT pass unchecked user input
     * into the query or raw expression passed to this method!
     */
    as(query) {
        const queryNode = query
            .withPlugin(new _plugin_immediate_value_immediate_value_plugin_js__WEBPACK_IMPORTED_MODULE_3__.ImmediateValuePlugin())
            .toOperationNode();
        return new CreateViewBuilder({
            ...this.#props,
            node: _operation_node_create_view_node_js__WEBPACK_IMPORTED_MODULE_1__.CreateViewNode.cloneWith(this.#props.node, {
                as: queryNode,
            }),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_4__.preventAwait)(CreateViewBuilder, "don't await CreateViewBuilder instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/drop-index-builder.js":
/*!*******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/drop-index-builder.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DropIndexBuilder: () => (/* binding */ DropIndexBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_drop_index_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/drop-index-node.js */ "./node_modules/kysely/dist/esm/operation-node/drop-index-node.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _parser_table_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../parser/table-parser.js */ "./node_modules/kysely/dist/esm/parser/table-parser.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./drop-index-builder.d.ts" />




class DropIndexBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    /**
     * Specifies the table the index was created for. This is not needed
     * in all dialects.
     */
    on(table) {
        return new DropIndexBuilder({
            ...this.#props,
            node: _operation_node_drop_index_node_js__WEBPACK_IMPORTED_MODULE_1__.DropIndexNode.cloneWith(this.#props.node, {
                table: (0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_2__.parseTable)(table),
            }),
        });
    }
    ifExists() {
        return new DropIndexBuilder({
            ...this.#props,
            node: _operation_node_drop_index_node_js__WEBPACK_IMPORTED_MODULE_1__.DropIndexNode.cloneWith(this.#props.node, {
                ifExists: true,
            }),
        });
    }
    cascade() {
        return new DropIndexBuilder({
            ...this.#props,
            node: _operation_node_drop_index_node_js__WEBPACK_IMPORTED_MODULE_1__.DropIndexNode.cloneWith(this.#props.node, {
                cascade: true,
            }),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_3__.preventAwait)(DropIndexBuilder, "don't await DropIndexBuilder instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/drop-schema-builder.js":
/*!********************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/drop-schema-builder.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DropSchemaBuilder: () => (/* binding */ DropSchemaBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_drop_schema_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/drop-schema-node.js */ "./node_modules/kysely/dist/esm/operation-node/drop-schema-node.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./drop-schema-builder.d.ts" />



class DropSchemaBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    ifExists() {
        return new DropSchemaBuilder({
            ...this.#props,
            node: _operation_node_drop_schema_node_js__WEBPACK_IMPORTED_MODULE_1__.DropSchemaNode.cloneWith(this.#props.node, {
                ifExists: true,
            }),
        });
    }
    cascade() {
        return new DropSchemaBuilder({
            ...this.#props,
            node: _operation_node_drop_schema_node_js__WEBPACK_IMPORTED_MODULE_1__.DropSchemaNode.cloneWith(this.#props.node, {
                cascade: true,
            }),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__.preventAwait)(DropSchemaBuilder, "don't await DropSchemaBuilder instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/drop-table-builder.js":
/*!*******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/drop-table-builder.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DropTableBuilder: () => (/* binding */ DropTableBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_drop_table_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/drop-table-node.js */ "./node_modules/kysely/dist/esm/operation-node/drop-table-node.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./drop-table-builder.d.ts" />



class DropTableBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    ifExists() {
        return new DropTableBuilder({
            ...this.#props,
            node: _operation_node_drop_table_node_js__WEBPACK_IMPORTED_MODULE_1__.DropTableNode.cloneWith(this.#props.node, {
                ifExists: true,
            }),
        });
    }
    cascade() {
        return new DropTableBuilder({
            ...this.#props,
            node: _operation_node_drop_table_node_js__WEBPACK_IMPORTED_MODULE_1__.DropTableNode.cloneWith(this.#props.node, {
                cascade: true,
            }),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__.preventAwait)(DropTableBuilder, "don't await DropTableBuilder instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/drop-type-builder.js":
/*!******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/drop-type-builder.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DropTypeBuilder: () => (/* binding */ DropTypeBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_drop_type_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/drop-type-node.js */ "./node_modules/kysely/dist/esm/operation-node/drop-type-node.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./drop-type-builder.d.ts" />



class DropTypeBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    ifExists() {
        return new DropTypeBuilder({
            ...this.#props,
            node: _operation_node_drop_type_node_js__WEBPACK_IMPORTED_MODULE_1__.DropTypeNode.cloneWith(this.#props.node, {
                ifExists: true,
            }),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__.preventAwait)(DropTypeBuilder, "don't await DropTypeBuilder instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/drop-view-builder.js":
/*!******************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/drop-view-builder.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DropViewBuilder: () => (/* binding */ DropViewBuilder)
/* harmony export */ });
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/* harmony import */ var _util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/* harmony import */ var _operation_node_drop_view_node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../operation-node/drop-view-node.js */ "./node_modules/kysely/dist/esm/operation-node/drop-view-node.js");
/// <reference types="./drop-view-builder.d.ts" />



class DropViewBuilder {
    #props;
    constructor(props) {
        this.#props = (0,_util_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(props);
    }
    materialized() {
        return new DropViewBuilder({
            ...this.#props,
            node: _operation_node_drop_view_node_js__WEBPACK_IMPORTED_MODULE_1__.DropViewNode.cloneWith(this.#props.node, {
                materialized: true,
            }),
        });
    }
    ifExists() {
        return new DropViewBuilder({
            ...this.#props,
            node: _operation_node_drop_view_node_js__WEBPACK_IMPORTED_MODULE_1__.DropViewNode.cloneWith(this.#props.node, {
                ifExists: true,
            }),
        });
    }
    cascade() {
        return new DropViewBuilder({
            ...this.#props,
            node: _operation_node_drop_view_node_js__WEBPACK_IMPORTED_MODULE_1__.DropViewNode.cloneWith(this.#props.node, {
                cascade: true,
            }),
        });
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#props.executor.transformQuery(this.#props.node, this.#props.queryId);
    }
    compile() {
        return this.#props.executor.compileQuery(this.toOperationNode(), this.#props.queryId);
    }
    async execute() {
        await this.#props.executor.executeQuery(this.compile(), this.#props.queryId);
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__.preventAwait)(DropViewBuilder, "don't await DropViewBuilder instances directly. To execute the query you need to call `execute`");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/foreign-key-constraint-builder.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/foreign-key-constraint-builder.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ForeignKeyConstraintBuilder: () => (/* binding */ ForeignKeyConstraintBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_foreign_key_constraint_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/foreign-key-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/foreign-key-constraint-node.js");
/* harmony import */ var _parser_on_modify_action_parser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../parser/on-modify-action-parser.js */ "./node_modules/kysely/dist/esm/parser/on-modify-action-parser.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/// <reference types="./foreign-key-constraint-builder.d.ts" />



class ForeignKeyConstraintBuilder {
    #node;
    constructor(node) {
        this.#node = node;
    }
    onDelete(onDelete) {
        return new ForeignKeyConstraintBuilder(_operation_node_foreign_key_constraint_node_js__WEBPACK_IMPORTED_MODULE_0__.ForeignKeyConstraintNode.cloneWith(this.#node, {
            onDelete: (0,_parser_on_modify_action_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseOnModifyForeignAction)(onDelete),
        }));
    }
    onUpdate(onUpdate) {
        return new ForeignKeyConstraintBuilder(_operation_node_foreign_key_constraint_node_js__WEBPACK_IMPORTED_MODULE_0__.ForeignKeyConstraintNode.cloneWith(this.#node, {
            onUpdate: (0,_parser_on_modify_action_parser_js__WEBPACK_IMPORTED_MODULE_1__.parseOnModifyForeignAction)(onUpdate),
        }));
    }
    /**
     * Simply calls the provided function passing `this` as the only argument. `$call` returns
     * what the provided function returns.
     */
    $call(func) {
        return func(this);
    }
    toOperationNode() {
        return this.#node;
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_2__.preventAwait)(ForeignKeyConstraintBuilder, "don't await ForeignKeyConstraintBuilder instances directly.");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/schema.js":
/*!*******************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/schema.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SchemaModule: () => (/* binding */ SchemaModule)
/* harmony export */ });
/* harmony import */ var _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../operation-node/alter-table-node.js */ "./node_modules/kysely/dist/esm/operation-node/alter-table-node.js");
/* harmony import */ var _operation_node_create_index_node_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../operation-node/create-index-node.js */ "./node_modules/kysely/dist/esm/operation-node/create-index-node.js");
/* harmony import */ var _operation_node_create_schema_node_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../operation-node/create-schema-node.js */ "./node_modules/kysely/dist/esm/operation-node/create-schema-node.js");
/* harmony import */ var _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operation-node/create-table-node.js */ "./node_modules/kysely/dist/esm/operation-node/create-table-node.js");
/* harmony import */ var _operation_node_drop_index_node_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../operation-node/drop-index-node.js */ "./node_modules/kysely/dist/esm/operation-node/drop-index-node.js");
/* harmony import */ var _operation_node_drop_schema_node_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../operation-node/drop-schema-node.js */ "./node_modules/kysely/dist/esm/operation-node/drop-schema-node.js");
/* harmony import */ var _operation_node_drop_table_node_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../operation-node/drop-table-node.js */ "./node_modules/kysely/dist/esm/operation-node/drop-table-node.js");
/* harmony import */ var _parser_table_parser_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../parser/table-parser.js */ "./node_modules/kysely/dist/esm/parser/table-parser.js");
/* harmony import */ var _alter_table_builder_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./alter-table-builder.js */ "./node_modules/kysely/dist/esm/schema/alter-table-builder.js");
/* harmony import */ var _create_index_builder_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./create-index-builder.js */ "./node_modules/kysely/dist/esm/schema/create-index-builder.js");
/* harmony import */ var _create_schema_builder_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./create-schema-builder.js */ "./node_modules/kysely/dist/esm/schema/create-schema-builder.js");
/* harmony import */ var _create_table_builder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./create-table-builder.js */ "./node_modules/kysely/dist/esm/schema/create-table-builder.js");
/* harmony import */ var _drop_index_builder_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./drop-index-builder.js */ "./node_modules/kysely/dist/esm/schema/drop-index-builder.js");
/* harmony import */ var _drop_schema_builder_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./drop-schema-builder.js */ "./node_modules/kysely/dist/esm/schema/drop-schema-builder.js");
/* harmony import */ var _drop_table_builder_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./drop-table-builder.js */ "./node_modules/kysely/dist/esm/schema/drop-table-builder.js");
/* harmony import */ var _util_query_id_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/query-id.js */ "./node_modules/kysely/dist/esm/util/query-id.js");
/* harmony import */ var _plugin_with_schema_with_schema_plugin_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../plugin/with-schema/with-schema-plugin.js */ "./node_modules/kysely/dist/esm/plugin/with-schema/with-schema-plugin.js");
/* harmony import */ var _create_view_builder_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./create-view-builder.js */ "./node_modules/kysely/dist/esm/schema/create-view-builder.js");
/* harmony import */ var _operation_node_create_view_node_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../operation-node/create-view-node.js */ "./node_modules/kysely/dist/esm/operation-node/create-view-node.js");
/* harmony import */ var _drop_view_builder_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./drop-view-builder.js */ "./node_modules/kysely/dist/esm/schema/drop-view-builder.js");
/* harmony import */ var _operation_node_drop_view_node_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../operation-node/drop-view-node.js */ "./node_modules/kysely/dist/esm/operation-node/drop-view-node.js");
/* harmony import */ var _create_type_builder_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./create-type-builder.js */ "./node_modules/kysely/dist/esm/schema/create-type-builder.js");
/* harmony import */ var _drop_type_builder_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./drop-type-builder.js */ "./node_modules/kysely/dist/esm/schema/drop-type-builder.js");
/* harmony import */ var _operation_node_create_type_node_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../operation-node/create-type-node.js */ "./node_modules/kysely/dist/esm/operation-node/create-type-node.js");
/* harmony import */ var _operation_node_drop_type_node_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../operation-node/drop-type-node.js */ "./node_modules/kysely/dist/esm/operation-node/drop-type-node.js");
/* harmony import */ var _parser_identifier_parser_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../parser/identifier-parser.js */ "./node_modules/kysely/dist/esm/parser/identifier-parser.js");
/// <reference types="./schema.d.ts" />


























/**
 * Provides methods for building database schema.
 */
class SchemaModule {
    #executor;
    constructor(executor) {
        this.#executor = executor;
    }
    /**
     * Create a new table.
     *
     * ### Examples
     *
     * This example creates a new table with columns `id`, `first_name`,
     * `last_name` and `gender`:
     *
     * ```ts
     * await db.schema
     *   .createTable('person')
     *   .addColumn('id', 'integer', col => col.primaryKey().autoIncrement())
     *   .addColumn('first_name', 'varchar', col => col.notNull())
     *   .addColumn('last_name', 'varchar', col => col.notNull())
     *   .addColumn('gender', 'varchar')
     *   .execute()
     * ```
     *
     * This example creates a table with a foreign key. Not all database
     * engines support column-level foreign key constraint definitions.
     * For example if you are using MySQL 5.X see the next example after
     * this one.
     *
     * ```ts
     * await db.schema
     *   .createTable('pet')
     *   .addColumn('id', 'integer', col => col.primaryKey().autoIncrement())
     *   .addColumn('owner_id', 'integer', col => col
     *     .references('person.id')
     *     .onDelete('cascade')
     *   )
     *   .execute()
     * ```
     *
     * This example adds a foreign key constraint for a columns just
     * like the previous example, but using a table-level statement.
     * On MySQL 5.X you need to define foreign key constraints like
     * this:
     *
     * ```ts
     * await db.schema
     *   .createTable('pet')
     *   .addColumn('id', 'integer', col => col.primaryKey().autoIncrement())
     *   .addColumn('owner_id', 'integer')
     *   .addForeignKeyConstraint(
     *     'pet_owner_id_foreign', ['owner_id'], 'person', ['id'],
     *     (constraint) => constraint.onDelete('cascade')
     *   )
     *   .execute()
     * ```
     */
    createTable(table) {
        return new _create_table_builder_js__WEBPACK_IMPORTED_MODULE_0__.CreateTableBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_1__.createQueryId)(),
            executor: this.#executor,
            node: _operation_node_create_table_node_js__WEBPACK_IMPORTED_MODULE_2__.CreateTableNode.create((0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseTable)(table)),
        });
    }
    /**
     * Drop a table.
     *
     * ### Examples
     *
     * ```ts
     * await db.schema
     *   .dropTable('person')
     *   .execute()
     * ```
     */
    dropTable(table) {
        return new _drop_table_builder_js__WEBPACK_IMPORTED_MODULE_4__.DropTableBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_1__.createQueryId)(),
            executor: this.#executor,
            node: _operation_node_drop_table_node_js__WEBPACK_IMPORTED_MODULE_5__.DropTableNode.create((0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseTable)(table)),
        });
    }
    /**
     * Create a new index.
     *
     * ### Examples
     *
     * ```ts
     * await db.schema
     *   .createIndex('person_full_name_unique_index')
     *   .on('person')
     *   .columns(['first_name', 'last_name'])
     *   .execute()
     * ```
     */
    createIndex(indexName) {
        return new _create_index_builder_js__WEBPACK_IMPORTED_MODULE_6__.CreateIndexBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_1__.createQueryId)(),
            executor: this.#executor,
            node: _operation_node_create_index_node_js__WEBPACK_IMPORTED_MODULE_7__.CreateIndexNode.create(indexName),
        });
    }
    /**
     * Drop an index.
     *
     * ### Examples
     *
     * ```ts
     * await db.schema
     *   .dropIndex('person_full_name_unique_index')
     *   .execute()
     * ```
     */
    dropIndex(indexName) {
        return new _drop_index_builder_js__WEBPACK_IMPORTED_MODULE_8__.DropIndexBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_1__.createQueryId)(),
            executor: this.#executor,
            node: _operation_node_drop_index_node_js__WEBPACK_IMPORTED_MODULE_9__.DropIndexNode.create(indexName),
        });
    }
    /**
     * Create a new schema.
     *
     * ### Examples
     *
     * ```ts
     * await db.schema
     *   .createSchema('some_schema')
     *   .execute()
     * ```
     */
    createSchema(schema) {
        return new _create_schema_builder_js__WEBPACK_IMPORTED_MODULE_10__.CreateSchemaBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_1__.createQueryId)(),
            executor: this.#executor,
            node: _operation_node_create_schema_node_js__WEBPACK_IMPORTED_MODULE_11__.CreateSchemaNode.create(schema),
        });
    }
    /**
     * Drop a schema.
     *
     * ### Examples
     *
     * ```ts
     * await db.schema
     *   .dropSchema('some_schema')
     *   .execute()
     * ```
     */
    dropSchema(schema) {
        return new _drop_schema_builder_js__WEBPACK_IMPORTED_MODULE_12__.DropSchemaBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_1__.createQueryId)(),
            executor: this.#executor,
            node: _operation_node_drop_schema_node_js__WEBPACK_IMPORTED_MODULE_13__.DropSchemaNode.create(schema),
        });
    }
    /**
     * Alter a table.
     *
     * ### Examples
     *
     * ```ts
     * await db.schema
     *   .alterTable('person')
     *   .alterColumn('first_name', (ac) => ac.setDataType('text'))
     *   .execute()
     * ```
     */
    alterTable(table) {
        return new _alter_table_builder_js__WEBPACK_IMPORTED_MODULE_14__.AlterTableBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_1__.createQueryId)(),
            executor: this.#executor,
            node: _operation_node_alter_table_node_js__WEBPACK_IMPORTED_MODULE_15__.AlterTableNode.create((0,_parser_table_parser_js__WEBPACK_IMPORTED_MODULE_3__.parseTable)(table)),
        });
    }
    /**
     * Create a new view.
     *
     * ### Examples
     *
     * ```ts
     * await db.schema
     *   .createView('dogs')
     *   .orReplace()
     *   .as(db.selectFrom('pet').selectAll().where('species', '=', 'dog'))
     *   .execute()
     * ```
     */
    createView(viewName) {
        return new _create_view_builder_js__WEBPACK_IMPORTED_MODULE_16__.CreateViewBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_1__.createQueryId)(),
            executor: this.#executor,
            node: _operation_node_create_view_node_js__WEBPACK_IMPORTED_MODULE_17__.CreateViewNode.create(viewName),
        });
    }
    /**
     * Drop a view.
     *
     * ### Examples
     *
     * ```ts
     * await db.schema
     *   .dropView('dogs')
     *   .ifExists()
     *   .execute()
     * ```
     */
    dropView(viewName) {
        return new _drop_view_builder_js__WEBPACK_IMPORTED_MODULE_18__.DropViewBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_1__.createQueryId)(),
            executor: this.#executor,
            node: _operation_node_drop_view_node_js__WEBPACK_IMPORTED_MODULE_19__.DropViewNode.create(viewName),
        });
    }
    /**
     * Create a new type.
     *
     * Only some dialects like PostgreSQL have user-defined types.
     *
     * ### Examples
     *
     * ```ts
     * await db.schema
     *   .createType('species')
     *   .asEnum(['dog', 'cat', 'frog'])
     *   .execute()
     * ```
     */
    createType(typeName) {
        return new _create_type_builder_js__WEBPACK_IMPORTED_MODULE_20__.CreateTypeBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_1__.createQueryId)(),
            executor: this.#executor,
            node: _operation_node_create_type_node_js__WEBPACK_IMPORTED_MODULE_21__.CreateTypeNode.create((0,_parser_identifier_parser_js__WEBPACK_IMPORTED_MODULE_22__.parseSchemableIdentifier)(typeName)),
        });
    }
    /**
     * Drop a type.
     *
     * Only some dialects like PostgreSQL have user-defined types.
     *
     * ### Examples
     *
     * ```ts
     * await db.schema
     *   .dropType('species')
     *   .ifExists()
     *   .execute()
     * ```
     */
    dropType(typeName) {
        return new _drop_type_builder_js__WEBPACK_IMPORTED_MODULE_23__.DropTypeBuilder({
            queryId: (0,_util_query_id_js__WEBPACK_IMPORTED_MODULE_1__.createQueryId)(),
            executor: this.#executor,
            node: _operation_node_drop_type_node_js__WEBPACK_IMPORTED_MODULE_24__.DropTypeNode.create((0,_parser_identifier_parser_js__WEBPACK_IMPORTED_MODULE_22__.parseSchemableIdentifier)(typeName)),
        });
    }
    /**
     * Returns a copy of this schema module with the given plugin installed.
     */
    withPlugin(plugin) {
        return new SchemaModule(this.#executor.withPlugin(plugin));
    }
    /**
     * Returns a copy of this schema module  without any plugins.
     */
    withoutPlugins() {
        return new SchemaModule(this.#executor.withoutPlugins());
    }
    /**
     * See {@link QueryCreator.withSchema}
     */
    withSchema(schema) {
        return new SchemaModule(this.#executor.withPluginAtFront(new _plugin_with_schema_with_schema_plugin_js__WEBPACK_IMPORTED_MODULE_25__.WithSchemaPlugin(schema)));
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/schema/unique-constraint-builder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/schema/unique-constraint-builder.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   UniqueConstraintNodeBuilder: () => (/* binding */ UniqueConstraintNodeBuilder)
/* harmony export */ });
/* harmony import */ var _operation_node_unique_constraint_node_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operation-node/unique-constraint-node.js */ "./node_modules/kysely/dist/esm/operation-node/unique-constraint-node.js");
/* harmony import */ var _util_prevent_await_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/prevent-await.js */ "./node_modules/kysely/dist/esm/util/prevent-await.js");
/// <reference types="./unique-constraint-builder.d.ts" />


class UniqueConstraintNodeBuilder {
    #node;
    constructor(node) {
        this.#node = node;
    }
    toOperationNode() {
        return this.#node;
    }
    /**
     * Adds `nulls not distinct` to the unique constraint definition
     *
     * Supported by PostgreSQL dialect only
     */
    nullsNotDistinct() {
        return new UniqueConstraintNodeBuilder(_operation_node_unique_constraint_node_js__WEBPACK_IMPORTED_MODULE_0__.UniqueConstraintNode.cloneWith(this.#node, { nullsNotDistinct: true }));
    }
}
(0,_util_prevent_await_js__WEBPACK_IMPORTED_MODULE_1__.preventAwait)(UniqueConstraintNodeBuilder, "don't await UniqueConstraintNodeBuilder instances directly.");


/***/ }),

/***/ "./node_modules/kysely/dist/esm/util/compilable.js":
/*!*********************************************************!*\
  !*** ./node_modules/kysely/dist/esm/util/compilable.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   isCompilable: () => (/* binding */ isCompilable)
/* harmony export */ });
/* harmony import */ var _object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./compilable.d.ts" />

function isCompilable(value) {
    return (0,_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isObject)(value) && (0,_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(value.compile);
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/util/deferred.js":
/*!*******************************************************!*\
  !*** ./node_modules/kysely/dist/esm/util/deferred.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Deferred: () => (/* binding */ Deferred)
/* harmony export */ });
/// <reference types="./deferred.d.ts" />
class Deferred {
    #promise;
    #resolve;
    #reject;
    constructor() {
        this.#promise = new Promise((resolve, reject) => {
            this.#reject = reject;
            this.#resolve = resolve;
        });
    }
    get promise() {
        return this.#promise;
    }
    resolve = (value) => {
        if (this.#resolve) {
            this.#resolve(value);
        }
    };
    reject = (reason) => {
        if (this.#reject) {
            this.#reject(reason);
        }
    };
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/util/log-once.js":
/*!*******************************************************!*\
  !*** ./node_modules/kysely/dist/esm/util/log-once.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   logOnce: () => (/* binding */ logOnce)
/* harmony export */ });
/// <reference types="./log-once.d.ts" />
const LOGGED_MESSAGES = new Set();
/**
 * Use for system-level logging, such as deprecation messages.
 * Logs a message and ensures it won't be logged again.
 */
function logOnce(message) {
    if (LOGGED_MESSAGES.has(message)) {
        return;
    }
    LOGGED_MESSAGES.add(message);
    console.log(message);
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/util/log.js":
/*!**************************************************!*\
  !*** ./node_modules/kysely/dist/esm/util/log.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LOG_LEVELS: () => (/* binding */ LOG_LEVELS),
/* harmony export */   Log: () => (/* binding */ Log)
/* harmony export */ });
/* harmony import */ var _object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./log.d.ts" />

const LOG_LEVELS = (0,_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)(['query', 'error']);
class Log {
    #levels;
    #logger;
    constructor(config) {
        if ((0,_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(config)) {
            this.#logger = config;
            this.#levels = (0,_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
                query: true,
                error: true,
            });
        }
        else {
            this.#logger = defaultLogger;
            this.#levels = (0,_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.freeze)({
                query: config.includes('query'),
                error: config.includes('error'),
            });
        }
    }
    isLevelEnabled(level) {
        return this.#levels[level];
    }
    async query(getEvent) {
        if (this.#levels.query) {
            await this.#logger(getEvent());
        }
    }
    async error(getEvent) {
        if (this.#levels.error) {
            await this.#logger(getEvent());
        }
    }
}
function defaultLogger(event) {
    if (event.level === 'query') {
        console.log(`kysely:query: ${event.query.sql}`);
        console.log(`kysely:query: duration: ${event.queryDurationMillis.toFixed(1)}ms`);
    }
    else if (event.level === 'error') {
        if (event.error instanceof Error) {
            console.error(`kysely:error: ${event.error.stack ?? event.error.message}`);
        }
        else {
            console.error(`kysely:error: ${JSON.stringify({
                error: event.error,
                query: event.query.sql,
                queryDurationMillis: event.queryDurationMillis,
            })}`);
        }
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/util/object-utils.js":
/*!***********************************************************!*\
  !*** ./node_modules/kysely/dist/esm/util/object-utils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   asArray: () => (/* binding */ asArray),
/* harmony export */   asReadonlyArray: () => (/* binding */ asReadonlyArray),
/* harmony export */   compare: () => (/* binding */ compare),
/* harmony export */   freeze: () => (/* binding */ freeze),
/* harmony export */   getLast: () => (/* binding */ getLast),
/* harmony export */   isArrayBufferOrView: () => (/* binding */ isArrayBufferOrView),
/* harmony export */   isBigInt: () => (/* binding */ isBigInt),
/* harmony export */   isBoolean: () => (/* binding */ isBoolean),
/* harmony export */   isBuffer: () => (/* binding */ isBuffer),
/* harmony export */   isDate: () => (/* binding */ isDate),
/* harmony export */   isEmpty: () => (/* binding */ isEmpty),
/* harmony export */   isFunction: () => (/* binding */ isFunction),
/* harmony export */   isNull: () => (/* binding */ isNull),
/* harmony export */   isNumber: () => (/* binding */ isNumber),
/* harmony export */   isObject: () => (/* binding */ isObject),
/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),
/* harmony export */   isReadonlyArray: () => (/* binding */ isReadonlyArray),
/* harmony export */   isString: () => (/* binding */ isString),
/* harmony export */   isUndefined: () => (/* binding */ isUndefined),
/* harmony export */   noop: () => (/* binding */ noop)
/* harmony export */ });
/// <reference types="./object-utils.d.ts" />
function isEmpty(obj) {
    if (Array.isArray(obj) || isString(obj) || isBuffer(obj)) {
        return obj.length === 0;
    }
    else if (obj) {
        return Object.keys(obj).length === 0;
    }
    return false;
}
function isUndefined(obj) {
    return typeof obj === 'undefined' || obj === undefined;
}
function isString(obj) {
    return typeof obj === 'string';
}
function isNumber(obj) {
    return typeof obj === 'number';
}
function isBoolean(obj) {
    return typeof obj === 'boolean';
}
function isNull(obj) {
    return obj === null;
}
function isDate(obj) {
    return obj instanceof Date;
}
function isBigInt(obj) {
    return typeof obj === 'bigint';
}
// Don't change the returnd type to `obj is Buffer` to not create a
// hard dependency to node.
function isBuffer(obj) {
    return typeof Buffer !== 'undefined' && Buffer.isBuffer(obj);
}
function isFunction(obj) {
    return typeof obj === 'function';
}
function isObject(obj) {
    return typeof obj === 'object' && obj !== null;
}
function isArrayBufferOrView(obj) {
    return obj instanceof ArrayBuffer || ArrayBuffer.isView(obj);
}
function isPlainObject(obj) {
    return (isObject(obj) &&
        !Array.isArray(obj) &&
        !isDate(obj) &&
        !isBuffer(obj) &&
        !isArrayBufferOrView(obj));
}
function getLast(arr) {
    return arr[arr.length - 1];
}
function freeze(obj) {
    return Object.freeze(obj);
}
function asArray(arg) {
    if (isReadonlyArray(arg)) {
        return arg;
    }
    else {
        return [arg];
    }
}
function asReadonlyArray(arg) {
    if (isReadonlyArray(arg)) {
        return arg;
    }
    else {
        return freeze([arg]);
    }
}
function isReadonlyArray(arg) {
    return Array.isArray(arg);
}
function noop(obj) {
    return obj;
}
function compare(obj1, obj2) {
    if (isReadonlyArray(obj1) && isReadonlyArray(obj2)) {
        return compareArrays(obj1, obj2);
    }
    else if (isObject(obj1) && isObject(obj2)) {
        return compareObjects(obj1, obj2);
    }
    return obj1 === obj2;
}
function compareArrays(arr1, arr2) {
    if (arr1.length !== arr2.length) {
        return false;
    }
    for (let i = 0; i < arr1.length; ++i) {
        if (!compare(arr1[i], arr2[i])) {
            return false;
        }
    }
    return true;
}
function compareObjects(obj1, obj2) {
    if (isBuffer(obj1) && isBuffer(obj2)) {
        return compareBuffers(obj1, obj2);
    }
    else if (isDate(obj1) && isDate(obj2)) {
        return compareDates(obj1, obj2);
    }
    return compareGenericObjects(obj1, obj2);
}
function compareBuffers(buf1, buf2) {
    return Buffer.compare(buf1, buf2) === 0;
}
function compareDates(date1, date2) {
    return date1.getTime() === date2.getTime();
}
function compareGenericObjects(obj1, obj2) {
    const keys1 = Object.keys(obj1);
    const keys2 = Object.keys(obj2);
    if (keys1.length !== keys2.length) {
        return false;
    }
    for (const key of keys1) {
        if (!compare(obj1[key], obj2[key])) {
            return false;
        }
    }
    return true;
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/util/performance-now.js":
/*!**************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/util/performance-now.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   performanceNow: () => (/* binding */ performanceNow)
/* harmony export */ });
/* harmony import */ var _object_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./object-utils.js */ "./node_modules/kysely/dist/esm/util/object-utils.js");
/// <reference types="./performance-now.d.ts" />

function performanceNow() {
    if (typeof performance !== 'undefined' && (0,_object_utils_js__WEBPACK_IMPORTED_MODULE_0__.isFunction)(performance.now)) {
        return performance.now();
    }
    else {
        return Date.now();
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/util/prevent-await.js":
/*!************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/util/prevent-await.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   preventAwait: () => (/* binding */ preventAwait)
/* harmony export */ });
/// <reference types="./prevent-await.d.ts" />
function preventAwait(clazz, message) {
    Object.defineProperties(clazz.prototype, {
        then: {
            enumerable: false,
            value: () => {
                throw new Error(message);
            },
        },
    });
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/util/query-id.js":
/*!*******************************************************!*\
  !*** ./node_modules/kysely/dist/esm/util/query-id.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createQueryId: () => (/* binding */ createQueryId)
/* harmony export */ });
/* harmony import */ var _random_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./random-string.js */ "./node_modules/kysely/dist/esm/util/random-string.js");
/// <reference types="./query-id.d.ts" />

function createQueryId() {
    return new LazyQueryId();
}
class LazyQueryId {
    #queryId;
    get queryId() {
        if (this.#queryId === undefined) {
            this.#queryId = (0,_random_string_js__WEBPACK_IMPORTED_MODULE_0__.randomString)(8);
        }
        return this.#queryId;
    }
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/util/random-string.js":
/*!************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/util/random-string.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   randomString: () => (/* binding */ randomString)
/* harmony export */ });
/// <reference types="./random-string.d.ts" />
const CHARS = [
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'g',
    'h',
    'i',
    'j',
    'k',
    'l',
    'm',
    'n',
    'o',
    'p',
    'q',
    'r',
    's',
    't',
    'u',
    'v',
    'w',
    'x',
    'y',
    'z',
    '0',
    '1',
    '2',
    '3',
    '4',
    '5',
    '6',
    '7',
    '8',
    '9',
];
function randomString(length) {
    let chars = '';
    for (let i = 0; i < length; ++i) {
        chars += randomChar();
    }
    return chars;
}
function randomChar() {
    return CHARS[~~(Math.random() * CHARS.length)];
}


/***/ }),

/***/ "./node_modules/kysely/dist/esm/util/require-all-props.js":
/*!****************************************************************!*\
  !*** ./node_modules/kysely/dist/esm/util/require-all-props.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   requireAllProps: () => (/* binding */ requireAllProps)
/* harmony export */ });
/// <reference types="./require-all-props.d.ts" />
/**
 * Helper function to check listed properties according to given type. Check if all properties has been used when object is initialised.
 *
 * Example use:
 *
 * ```ts
 * type SomeType = { propA: string; propB?: number; }
 *
 * // propB has to be mentioned even it is optional. It still should be initialized with undefined.
 * const a: SomeType = requireAllProps<SomeType>({ propA: "value A", propB: undefined });
 *
 * // checked type is implicit for variable.
 * const b = requireAllProps<SomeType>({ propA: "value A", propB: undefined });
 * ```
 *
 * Wrong use of this helper:
 *
 * 1. Omit checked type - all checked properties will be expect as of type never
 *
 * ```ts
 * const z: SomeType = requireAllProps({ propC: "no type will work" });
 * ```
 *
 * 2. Apply to spreaded object - there is no way how to check in compile time if spreaded object contains all properties
 *
 * ```ts
 * const y: SomeType = { propA: "" }; // valid object according to SomeType declaration
 * const x = requireAllProps<SomeType>( { ... y } );
 * ```
 *
 * @param obj object to check if all properties has been used
 * @returns untouched obj parameter is returned
 */
function requireAllProps(obj) {
    return obj;
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// the startup function
/******/ 	__webpack_require__.x = () => {
/******/ 		// Load entry module and return exports
/******/ 		// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 		var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors-node_modules_evolu_common-web_dist_ProxyWorker_js-node_modules_evolu_common_dist_src_-6e0f55","vendors-node_modules_sqlite_org_sqlite-wasm_sqlite-wasm_jswasm_sqlite3-bundler-friendly_mjs"], () => (__webpack_require__("./node_modules/@evolu/common-web/dist/Db.worker.js")))
/******/ 		__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 		return __webpack_exports__;
/******/ 	};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks and sibling chunks for the entrypoint
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".bundle.web.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/importScripts chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = self.location + "";
/******/ 		
/******/ 		// object to store loaded chunks
/******/ 		// "1" means "already loaded"
/******/ 		var installedChunks = {
/******/ 			"vendors-node_modules_evolu_common-web_dist_Db_worker_js": 1
/******/ 		};
/******/ 		
/******/ 		// importScripts chunk loading
/******/ 		var installChunk = (data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 				}
/******/ 			}
/******/ 			if(runtime) runtime(__webpack_require__);
/******/ 			while(chunkIds.length)
/******/ 				installedChunks[chunkIds.pop()] = 1;
/******/ 			parentChunkLoadingFunction(data);
/******/ 		};
/******/ 		__webpack_require__.f.i = (chunkId, promises) => {
/******/ 			// "1" is the signal for "already loaded"
/******/ 			if(!installedChunks[chunkId]) {
/******/ 				if(true) { // all chunks have JS
/******/ 					importScripts(__webpack_require__.p + __webpack_require__.u(chunkId));
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkstarpyapp"] = self["webpackChunkstarpyapp"] || [];
/******/ 		var parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);
/******/ 		chunkLoadingGlobal.push = installChunk;
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/startup chunk dependencies */
/******/ 	(() => {
/******/ 		var next = __webpack_require__.x;
/******/ 		__webpack_require__.x = () => {
/******/ 			return Promise.all([
/******/ 				__webpack_require__.e("vendors-node_modules_evolu_common-web_dist_ProxyWorker_js-node_modules_evolu_common_dist_src_-6e0f55"),
/******/ 				__webpack_require__.e("vendors-node_modules_sqlite_org_sqlite-wasm_sqlite-wasm_jswasm_sqlite3-bundler-friendly_mjs")
/******/ 			]).then(next);
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// run startup
/******/ 	var __webpack_exports__ = __webpack_require__.x();
/******/ 	
/******/ })()
;
//# sourceMappingURL=vendors-node_modules_evolu_common-web_dist_Db_worker_js.bundle.web.js.map