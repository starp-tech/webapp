"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkStarpyApp"] = self["webpackChunkStarpyApp"] || []).push([["db_worker_js"],{

/***/ "./node_modules/@evolu/common-web/dist/DbWorker.js":
/*!*********************************************************!*\
  !*** ./node_modules/@evolu/common-web/dist/DbWorker.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dbWorker\": () => (/* binding */ dbWorker)\n/* harmony export */ });\n/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @evolu/common */ \"./node_modules/@evolu/common/dist/src/SyncWorker.js\");\n/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @evolu/common */ \"./node_modules/@evolu/common/dist/src/DbWorker.js\");\n/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @evolu/common */ \"./node_modules/@evolu/common/dist/src/Crypto.js\");\n/* harmony import */ var effect_Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! effect/Effect */ \"./node_modules/effect/dist/esm/Effect.js\");\n/* harmony import */ var effect_Function__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! effect/Function */ \"./node_modules/effect/dist/esm/Function.js\");\n/* harmony import */ var effect_Layer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! effect/Layer */ \"./node_modules/effect/dist/esm/Layer.js\");\n/* harmony import */ var _PlatformLive_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./PlatformLive.js */ \"./node_modules/@evolu/common-web/dist/PlatformLive.js\");\n/* harmony import */ var _SqliteLive_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SqliteLive.js */ \"./node_modules/@evolu/common-web/dist/SqliteLive.js\");\n\n\n\n\n\n\nconst SyncWorkerLive = effect_Layer__WEBPACK_IMPORTED_MODULE_0__.effect(_evolu_common__WEBPACK_IMPORTED_MODULE_1__.SyncWorker, effect_Effect__WEBPACK_IMPORTED_MODULE_2__.sync(() => {\n    const worker = new Worker(new URL(/* worker import */ __webpack_require__.p + __webpack_require__.u(\"sync_worker_js\"), __webpack_require__.b), { type: undefined });\n    worker.onmessage = (e) => {\n        syncWorker.onMessage(e.data);\n    };\n    const syncWorker = {\n        postMessage: (input) => {\n            worker.postMessage(input);\n        },\n        onMessage: effect_Function__WEBPACK_IMPORTED_MODULE_3__.constVoid,\n    };\n    return syncWorker;\n}));\n// It's a separated because it's imported dynamically and by Web Worker.\nconst dbWorker = effect_Effect__WEBPACK_IMPORTED_MODULE_2__.provide(_evolu_common__WEBPACK_IMPORTED_MODULE_4__.DbWorker, effect_Layer__WEBPACK_IMPORTED_MODULE_0__.provide(_evolu_common__WEBPACK_IMPORTED_MODULE_4__.DbWorkerLive, effect_Layer__WEBPACK_IMPORTED_MODULE_0__.mergeAll(_SqliteLive_js__WEBPACK_IMPORTED_MODULE_5__.SqliteLive, _PlatformLive_js__WEBPACK_IMPORTED_MODULE_6__.Bip39Live, _evolu_common__WEBPACK_IMPORTED_MODULE_7__.NanoIdLive, SyncWorkerLive))).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.runSync);\n\n\n//# sourceURL=webpack://StarpyApp/./node_modules/@evolu/common-web/dist/DbWorker.js?");

/***/ }),

/***/ "./node_modules/@evolu/common-web/dist/SqliteLive.js":
/*!***********************************************************!*\
  !*** ./node_modules/@evolu/common-web/dist/SqliteLive.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SqliteLive\": () => (/* binding */ SqliteLive)\n/* harmony export */ });\n/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @evolu/common */ \"./node_modules/@evolu/common/dist/src/Platform.js\");\n/* harmony import */ var _evolu_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @evolu/common */ \"./node_modules/@evolu/common/dist/src/Sqlite.js\");\n/* harmony import */ var _sqlite_org_sqlite_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sqlite.org/sqlite-wasm */ \"./node_modules/@sqlite.org/sqlite-wasm/index.mjs\");\n/* harmony import */ var effect_Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! effect/Effect */ \"./node_modules/effect/dist/esm/Effect.js\");\n/* harmony import */ var effect_Layer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! effect/Layer */ \"./node_modules/effect/dist/esm/Layer.js\");\n\n\n\n\nconst dbname = self.name && self.name.split(\"/\")[0] ? self.name.split(\"/\")[0] : \"evolu\"\nconsole.info('dbname', dbname)\nconst sqlitePromise = (0,_sqlite_org_sqlite_wasm__WEBPACK_IMPORTED_MODULE_0__[\"default\"])().then((sqlite3) => _evolu_common__WEBPACK_IMPORTED_MODULE_1__.canUseDom\n    ? new sqlite3.oo1.JsStorageDb(\"local\")\n    : new sqlite3.oo1.OpfsDb(\"/evolu/\"+dbname+\".db\", \"c\"));\nconst exec = (arg) => effect_Effect__WEBPACK_IMPORTED_MODULE_2__.gen(function* (_) {\n    const sqlite = yield* _(effect_Effect__WEBPACK_IMPORTED_MODULE_2__.promise(() => sqlitePromise));\n    const sqliteQuery = (0,_evolu_common__WEBPACK_IMPORTED_MODULE_3__.ensureSqliteQuery)(arg);\n    const rows = sqlite.exec(sqliteQuery.sql, {\n        returnValue: \"resultRows\",\n        rowMode: \"object\",\n        bind: (0,_evolu_common__WEBPACK_IMPORTED_MODULE_3__.valuesToSqliteValues)(sqliteQuery.parameters),\n    });\n    (0,_evolu_common__WEBPACK_IMPORTED_MODULE_3__.maybeParseJson)(rows);\n    return { rows, changes: sqlite.changes() };\n});\nconst SqliteLive = effect_Layer__WEBPACK_IMPORTED_MODULE_4__.succeed(_evolu_common__WEBPACK_IMPORTED_MODULE_3__.Sqlite, { exec }); \n\n\n//# sourceURL=webpack://StarpyApp/./node_modules/@evolu/common-web/dist/SqliteLive.js?");

/***/ }),

/***/ "./node_modules/@sqlite.org/sqlite-wasm/index.mjs":
/*!********************************************************!*\
  !*** ./node_modules/@sqlite.org/sqlite-wasm/index.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"sqlite3Worker1Promiser\": () => (/* binding */ sqlite3Worker1Promiser)\n/* harmony export */ });\n/* harmony import */ var _sqlite_wasm_jswasm_sqlite3_bundler_friendly_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs */ \"./node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs\");\n/* harmony import */ var _sqlite_wasm_jswasm_sqlite3_worker1_promiser_bundler_friendly_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sqlite-wasm/jswasm/sqlite3-worker1-promiser-bundler-friendly.js */ \"./node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-promiser-bundler-friendly.js\");\n\n\n\nconst sqlite3Worker1Promiser = self.sqlite3Worker1Promiser;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_sqlite_wasm_jswasm_sqlite3_bundler_friendly_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n\n\n\n//# sourceURL=webpack://StarpyApp/./node_modules/@sqlite.org/sqlite-wasm/index.mjs?");

/***/ }),

/***/ "./node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-promiser-bundler-friendly.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-promiser-bundler-friendly.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/*\n  2022-08-24\n\n  The author disclaims copyright to this source code.  In place of a\n  legal notice, here is a blessing:\n\n  *   May you do good and not evil.\n  *   May you find forgiveness for yourself and forgive others.\n  *   May you share freely, never taking more than you give.\n\n  ***********************************************************************\n\n  This file implements a Promise-based proxy for the sqlite3 Worker\n  API #1. It is intended to be included either from the main thread or\n  a Worker, but only if (A) the environment supports nested Workers\n  and (B) it's _not_ a Worker which loads the sqlite3 WASM/JS\n  module. This file's features will load that module and provide a\n  slightly simpler client-side interface than the slightly-lower-level\n  Worker API does.\n\n  This script necessarily exposes one global symbol, but clients may\n  freely `delete` that symbol after calling it.\n*/\n\n\nglobalThis.sqlite3Worker1Promiser = function callee(\n  config = callee.defaultConfig,\n) {\n  if (1 === arguments.length && 'function' === typeof arguments[0]) {\n    const f = config;\n    config = Object.assign(Object.create(null), callee.defaultConfig);\n    config.onready = f;\n  } else {\n    config = Object.assign(Object.create(null), callee.defaultConfig, config);\n  }\n  const handlerMap = Object.create(null);\n  const noop = function () {};\n  const err = config.onerror || noop;\n  const debug = config.debug || noop;\n  const idTypeMap = config.generateMessageId ? undefined : Object.create(null);\n  const genMsgId =\n    config.generateMessageId ||\n    function (msg) {\n      return (\n        msg.type + '#' + (idTypeMap[msg.type] = (idTypeMap[msg.type] || 0) + 1)\n      );\n    };\n  const toss = (...args) => {\n    throw new Error(args.join(' '));\n  };\n  if (!config.worker) config.worker = callee.defaultConfig.worker;\n  if ('function' === typeof config.worker) config.worker = config.worker();\n  let dbId;\n  config.worker.onmessage = function (ev) {\n    ev = ev.data;\n    debug('worker1.onmessage', ev);\n    let msgHandler = handlerMap[ev.messageId];\n    if (!msgHandler) {\n      if (ev && 'sqlite3-api' === ev.type && 'worker1-ready' === ev.result) {\n        if (config.onready) config.onready();\n        return;\n      }\n      msgHandler = handlerMap[ev.type];\n      if (msgHandler && msgHandler.onrow) {\n        msgHandler.onrow(ev);\n        return;\n      }\n      if (config.onunhandled) config.onunhandled(arguments[0]);\n      else err('sqlite3Worker1Promiser() unhandled worker message:', ev);\n      return;\n    }\n    delete handlerMap[ev.messageId];\n    switch (ev.type) {\n      case 'error':\n        msgHandler.reject(ev);\n        return;\n      case 'open':\n        if (!dbId) dbId = ev.dbId;\n        break;\n      case 'close':\n        if (ev.dbId === dbId) dbId = undefined;\n        break;\n      default:\n        break;\n    }\n    try {\n      msgHandler.resolve(ev);\n    } catch (e) {\n      msgHandler.reject(e);\n    }\n  };\n  return function () {\n    let msg;\n    if (1 === arguments.length) {\n      msg = arguments[0];\n    } else if (2 === arguments.length) {\n      msg = Object.create(null);\n      msg.type = arguments[0];\n      msg.args = arguments[1];\n      msg.dbId = msg.args.dbId;\n    } else {\n      toss('Invalid arugments for sqlite3Worker1Promiser()-created factory.');\n    }\n    if (!msg.dbId && msg.type !== 'open') msg.dbId = dbId;\n    msg.messageId = genMsgId(msg);\n    msg.departureTime = performance.now();\n    const proxy = Object.create(null);\n    proxy.message = msg;\n    let rowCallbackId;\n    if ('exec' === msg.type && msg.args) {\n      if ('function' === typeof msg.args.callback) {\n        rowCallbackId = msg.messageId + ':row';\n        proxy.onrow = msg.args.callback;\n        msg.args.callback = rowCallbackId;\n        handlerMap[rowCallbackId] = proxy;\n      } else if ('string' === typeof msg.args.callback) {\n        toss(\n          'exec callback may not be a string when using the Promise interface.',\n        );\n      }\n    }\n\n    let p = new Promise(function (resolve, reject) {\n      proxy.resolve = resolve;\n      proxy.reject = reject;\n      handlerMap[msg.messageId] = proxy;\n      debug(\n        'Posting',\n        msg.type,\n        'message to Worker dbId=' + (dbId || 'default') + ':',\n        msg,\n      );\n      config.worker.postMessage(msg);\n    });\n    if (rowCallbackId) p = p.finally(() => delete handlerMap[rowCallbackId]);\n    return p;\n  };\n};\nglobalThis.sqlite3Worker1Promiser.defaultConfig = {\n  worker: function () {\n    return new Worker(\n      new URL(/* worker import */ __webpack_require__.p + __webpack_require__.u(\"node_modules_sqlite_org_sqlite-wasm_sqlite-wasm_jswasm_sqlite3-worker1-bundler-friendly_mjs\"), __webpack_require__.b),\n      {\n        type: undefined,\n      },\n    );\n  },\n  onerror: (...args) => console.error('worker1 promiser error', ...args),\n};\n\n\n//# sourceURL=webpack://StarpyApp/./node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-worker1-promiser-bundler-friendly.js?");

/***/ })

}]);