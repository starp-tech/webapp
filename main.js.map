{"version":3,"file":"main.js","mappings":"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","sources":["webpack://StarpyApp/./index.web.js","webpack://StarpyApp/./src/App.tsx","webpack://StarpyApp/./src/api/blobdb.ts","webpack://StarpyApp/./src/api/chat.ts","webpack://StarpyApp/./src/api/db/index.ts","webpack://StarpyApp/./src/api/db/supervisor.ts","webpack://StarpyApp/./src/api/db/tables/item.ts","webpack://StarpyApp/./src/api/encoder.ts","webpack://StarpyApp/./src/api/fs.ts","webpack://StarpyApp/./src/api/index.ts","webpack://StarpyApp/./src/api/media.ts","webpack://StarpyApp/./src/api/util.ts","webpack://StarpyApp/./src/api/wt.ts","webpack://StarpyApp/./src/components/app.tsx","webpack://StarpyApp/./src/components/contacts/chat.tsx","webpack://StarpyApp/./src/components/contacts/chatview.tsx","webpack://StarpyApp/./src/components/contacts/contactlibrary.tsx","webpack://StarpyApp/./src/components/contacts/contacts.tsx","webpack://StarpyApp/./src/components/contacts/styles.ts","webpack://StarpyApp/./src/components/editor/editorbanner.tsx","webpack://StarpyApp/./src/components/editor/editorcaret.tsx","webpack://StarpyApp/./src/components/editor/editorcontentitem.tsx","webpack://StarpyApp/./src/components/editor/editorform.tsx","webpack://StarpyApp/./src/components/editor/editorlayer.tsx","webpack://StarpyApp/./src/components/editor/editorplaycontrols.tsx","webpack://StarpyApp/./src/components/editor/editorproject.tsx","webpack://StarpyApp/./src/components/editor/editortoolbar.tsx","webpack://StarpyApp/./src/components/editor/editorvideo.tsx","webpack://StarpyApp/./src/components/encoder/encoderbanner.tsx","webpack://StarpyApp/./src/components/encoder/encoderproject.tsx","webpack://StarpyApp/./src/components/folder/folderlibrary.tsx","webpack://StarpyApp/./src/components/folder/foldernavigator.tsx","webpack://StarpyApp/./src/components/folder/folderpage.tsx","webpack://StarpyApp/./src/components/folder/items/contactitem.tsx","webpack://StarpyApp/./src/components/folder/items/contentitem.tsx","webpack://StarpyApp/./src/components/folder/items/folderitem.tsx","webpack://StarpyApp/./src/components/folder/items/mediaitem.tsx","webpack://StarpyApp/./src/components/folder/items/projectitem.tsx","webpack://StarpyApp/./src/components/folder/styles.ts","webpack://StarpyApp/./src/components/media/home.tsx","webpack://StarpyApp/./src/components/media/mediabanner.tsx","webpack://StarpyApp/./src/components/media/medialibrary.tsx","webpack://StarpyApp/./src/components/nav.tsx","webpack://StarpyApp/./src/components/nav/appnav.tsx","webpack://StarpyApp/./src/components/nav/banners/choosedialog.tsx","webpack://StarpyApp/./src/components/nav/banners/fileupload.tsx","webpack://StarpyApp/./src/components/nav/banners/toastdialog.tsx","webpack://StarpyApp/./src/components/nav/components/actions.tsx","webpack://StarpyApp/./src/components/nav/components/backbutton.tsx","webpack://StarpyApp/./src/components/nav/components/bannercontainer.tsx","webpack://StarpyApp/./src/components/nav/components/navinput.tsx","webpack://StarpyApp/./src/components/nav/drawer.tsx","webpack://StarpyApp/./src/components/settings/databases.tsx","webpack://StarpyApp/./src/components/settings/devices.tsx","webpack://StarpyApp/./src/components/settings/settings.tsx","webpack://StarpyApp/./src/ctx/ctx.ts","webpack://StarpyApp/./src/ctx/index.ts","webpack://StarpyApp/./src/db/defaults.ts","webpack://StarpyApp/./src/db/migration.ts","webpack://StarpyApp/./src/hooks/useContacts.ts","webpack://StarpyApp/./src/hooks/useFolder.ts","webpack://StarpyApp/./src/hooks/useFolders.ts","webpack://StarpyApp/./src/hooks/useKeyboardListener.ts","webpack://StarpyApp/./src/hooks/useMedia.ts","webpack://StarpyApp/./src/hooks/useMediaPlayer.ts","webpack://StarpyApp/./src/hooks/useMessages.ts","webpack://StarpyApp/./src/hooks/useRouteContact.ts","webpack://StarpyApp/./src/hooks/useUserData.ts","webpack://StarpyApp/./src/navigators/chatstack.tsx","webpack://StarpyApp/./src/navigators/editor.tsx","webpack://StarpyApp/./src/navigators/encoder.tsx","webpack://StarpyApp/./src/navigators/filestack.tsx","webpack://StarpyApp/./src/navigators/settings.tsx","webpack://StarpyApp/./src/routes/routes.ts","webpack://StarpyApp/./src/store/hooks.ts","webpack://StarpyApp/./src/store/slices/chat.ts","webpack://StarpyApp/./src/store/slices/editor.ts","webpack://StarpyApp/./src/store/slices/encoder.ts","webpack://StarpyApp/./src/store/slices/fs.ts","webpack://StarpyApp/./src/store/slices/media.ts","webpack://StarpyApp/./src/store/slices/ui.ts","webpack://StarpyApp/./src/store/slices/upload.ts","webpack://StarpyApp/./src/store/store.ts","webpack://StarpyApp/./src/types/Contact.ts","webpack://StarpyApp/./src/types/Folder.ts","webpack://StarpyApp/./src/types/Media.ts","webpack://StarpyApp/./src/types/index.ts","webpack://StarpyApp/./src/types/nav.ts","webpack://StarpyApp/webpack/bootstrap","webpack://StarpyApp/webpack/runtime/amd options","webpack://StarpyApp/webpack/runtime/chunk loaded","webpack://StarpyApp/webpack/runtime/compat get default export","webpack://StarpyApp/webpack/runtime/define property getters","webpack://StarpyApp/webpack/runtime/ensure chunk","webpack://StarpyApp/webpack/runtime/get javascript chunk filename","webpack://StarpyApp/webpack/runtime/get mini-css chunk filename","webpack://StarpyApp/webpack/runtime/global","webpack://StarpyApp/webpack/runtime/hasOwnProperty shorthand","webpack://StarpyApp/webpack/runtime/load script","webpack://StarpyApp/webpack/runtime/make namespace object","webpack://StarpyApp/webpack/runtime/node module decorator","webpack://StarpyApp/webpack/runtime/publicPath","webpack://StarpyApp/webpack/runtime/jsonp chunk loading","webpack://StarpyApp/webpack/startup"],"sourcesContent":["import IoniconsFont from '@expo/vector-icons/Ionicons';\nimport MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\n\nimport 'react-native-gesture-handler';\nimport iconFont from '@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf';\n// import { enableFreeze } from 'react-native-screens';\n// import \"setimmediate\"\n// enableFreeze(true);\n\nconst iconFontStyles = `@font-face {\n  src: url(${iconFont});\n  font-family: Ionicons;\n}`;\n\nconst style = document.createElement('style');\nstyle.type = 'text/css';\n\nif (style.styleSheet) {\n  style.styleSheet.cssText = iconFontStyles;\n} else {\n  style.appendChild(document.createTextNode(iconFontStyles));\n}\n\n// Inject stylesheet\ndocument.head.appendChild(style);\nimport App from './src/App';\nimport { createElement } from 'react';\nimport { createRoot } from 'react-dom/client'\nimport { initUserData } from './src/api';\ninitUserData().then(()=>{\n  const root = createRoot(document.getElementById('root'))\n  root.render(createElement(App))\n})","import {SafeAreaProvider} from 'react-native-safe-area-context';\n\nimport React from 'react';\n\nimport {LogBox, Platform} from 'react-native';\n\nLogBox.ignoreAllLogs(); //Hide all warning notifications on front-end\n\nimport AppComponent from './components/app';\n\nimport {UserData} from './api';\n\nimport {UserCtx, UserDataDispatch, UserDataState} from './ctx';\n\nimport {useUserData} from './hooks/useUserData';\n\nimport {\n  configureFonts,\n  MD3DarkTheme,\n  PaperProvider,\n} from 'react-native-paper';\n\nconst theme = {\n  ...MD3DarkTheme,\n  fonts: configureFonts({\n    config: {\n      default: {\n        fontFamily: Platform.select({\n          web: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n          ios: 'System',\n          macos: 'System',\n          default: 'System',\n        }),\n        fontWeight: '400',\n        letterSpacing: 0.5,\n        lineHeight: 22,\n        fontSize: 20,\n      },\n    },\n    isV3: true,\n  }),\n};\nimport {store} from './store/store';\nimport {Provider} from 'react-redux';\n\nimport {QueryClientProvider} from 'react-query';\n\nimport {queryClient} from './api';\n\nconst App = () => {\n  const {userDataState, userDataDispatch} = useUserData();\n  return (\n    <Provider store={store}>\n      <QueryClientProvider client={queryClient}>\n        <UserCtx.Provider value={UserData}>\n          <UserDataState.Provider value={userDataState}>\n            <UserDataDispatch.Provider value={userDataDispatch}>\n              <SafeAreaProvider>\n                <PaperProvider theme={theme}>\n                  <React.Fragment>\n                    {Platform.OS === 'web' ? (\n                      <style type=\"text/css\">{`\n                    @font-face {\n                      font-family: 'MaterialCommunityIcons';\n                      src: url(${require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf')}) format('truetype');\n                    }\n                  `}</style>\n                    ) : null}\n                    <></>\n                  </React.Fragment>\n                  <AppComponent />\n                </PaperProvider>\n              </SafeAreaProvider>\n            </UserDataDispatch.Provider>\n          </UserDataState.Provider>\n        </UserCtx.Provider>\n      </QueryClientProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import * as SQLite from 'expo-sqlite';\nimport {Platform} from 'react-native';\n\nlet db: SQLite.SQLiteDatabase;\nconst initDB = async () => {\n  db = await SQLite.openDatabaseAsync('blobDB7');\n\n  await db.execAsync(`\n    DROP TABLE IF EXISTS blobs;\n    CREATE TABLE IF NOT EXISTS blobs (id INTEGER PRIMARY KEY NOT NULL, data BLOB, parent VARCHAR);\n  `);\n};\n\nPlatform.OS !== 'web' && initDB();\n\nexport const createBlobDB = async () => {\n  return {\n    writeBlob: async (id: string, blob: Uint8Array) =>\n      await db.runAsync(\n        'INSERT INTO blobs (parent, data) VALUES (?, ?)',\n        id,\n        blob,\n      ),\n    readBlobs: async (id: string) => {\n      const data = await db.getAllAsync(\n        'SELECT * FROM blobs WHERE parent = ? ORDER BY id ASC limit 1000',\n        [id],\n      );\n      const ids: number[] = data.map(i => i.id);\n      const deletequery = `DELETE FROM blobs WHERE id IN (${ids.join(\n        ',',\n      )})`;\n      // console.info('deletequery', deletequery)\n      await db.runAsync(deletequery);\n      return data;\n    },\n  };\n};\n","import {\n  getUserData,\n  getById,\n  createDBConn,\n  writeItem,\n  Database,\n} from './db';\n\nimport {UserInfo, Contact, ChatMessage} from '../types';\n\nimport uuid from 'react-native-uuid';\n\nimport {faker} from '@faker-js/faker';\nimport {Evolu} from '@evolu/common';\n\nexport const sendChatMessage = async (\n  chatId: string,\n  text: string,\n  mnemonic: string,\n  message = {},\n) => {\n  const u: UserInfo = await getUserData();\n  const id = uuid.v4();\n  const data = {\n    id,\n    text,\n    userId: u.id,\n    chatId,\n    folderId: chatId,\n    messageStatus: 'sent',\n    userName: u.name,\n    createdAt: new Date().valueOf(),\n  };\n  const ndata = {...data, ...message};\n  const nEvolu = await createDBConn(chatId, mnemonic);\n  await writeItem(ndata, nEvolu);\n  return ndata;\n};\n\nexport const getPublicMessages = async (\n  chatId: string,\n  mnemonic: string,\n  limit: number = 15,\n  offset: number = 0,\n) => {\n  try {\n    const folder = (await getById(chatId)) as Contact;\n    let e: Evolu<Database> | undefined;\n    if ((folder && folder.mnemonic) || mnemonic) {\n      e = await createDBConn(\n        chatId,\n        folder?.mnemonic || mnemonic,\n        true,\n      );\n    }\n    const query = e?.createQuery(db =>\n      db\n        .selectFrom('item')\n        .selectAll()\n        .where('chatId', '=', chatId)\n        .orderBy('createdAt', 'desc')\n        .limit(limit)\n        .offset(offset),\n    );\n    const data = query && (await e?.loadQuery(query));\n    return data?.rows?.map(i => i.item as ChatMessage);\n  } catch (err) {\n    console.error('getPublicMessages error', err);\n  }\n  return [];\n};\n\nexport const createNewParty = async (party: Contact) => {\n  console.info('createNewParty', party);\n  const user = await getUserData();\n  const chatId = party.id;\n  const contact = {\n    ...party,\n    id: chatId,\n    authorId: user.id,\n    authorName: user.name,\n    isContact: true,\n    mnemonic: genMnemonic(),\n  };\n  const item = await writeItem(contact);\n  await sendChatMessage(\n    chatId,\n    user.name + ' has created chat ' + party.name,\n    contact.mnemonic,\n    {system: true},\n  );\n  return contact;\n};\n\nexport const genMnemonic = () => {\n  return [\n    faker.animal.bird().split(' ').join('').toLowerCase(),\n    faker.animal.bird().split(' ').join('').toLowerCase(),\n    faker.color.human().split(' ').join('').toLowerCase(),\n    faker.color.human().split(' ').join('').toLowerCase(),\n    faker.color.human().split(' ').join('').toLowerCase(),\n    faker.animal.fish().split(' ').join('').toLowerCase(),\n    faker.animal.fish().split(' ').join('').toLowerCase(),\n    faker.animal.fish().split(' ').join('').toLowerCase(),\n    faker.animal.insect().split(' ').join('').toLowerCase(),\n    faker.hacker.noun().split(' ').join('').toLowerCase(),\n    faker.hacker.noun().split(' ').join('').toLowerCase(),\n    faker.hacker.noun().split(' ').join('').toLowerCase(),\n  ].join(' ');\n};\n","export interface WindowExtend extends Window {\n  evolu: Evolu<Database>;\n  Video: any;\n}\n\ndeclare global {\n  var evolu: Evolu<Database>;\n  var Video: any;\n  var window: WindowExtend;\n}\n\nimport uuid from 'react-native-uuid';\nimport * as S from '@effect/schema/Schema';\n\nimport {createEvolu, database} from '@evolu/react-native';\n// import { sql } from 'kysely'\n\nimport {ItemTable} from './tables/item';\nimport {domain, shareFolder} from '..';\nimport {\n  Contact,\n  DatabaseItem,\n  Device,\n  Folder,\n  FolderType,\n  Media,\n  UserInfo,\n} from '../../types';\n\nimport {Platform} from 'react-native';\nimport {QueryClient} from 'react-query';\nimport {Evolu, EvoluConfig} from '@evolu/common';\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n      refetchOnReconnect: false,\n    },\n  },\n});\n\nconst Database = database({\n  item: ItemTable,\n});\n\nexport type Database = S.Schema.To<typeof Database>;\n\nconst dbConns: {[key: string]: Evolu<Database>} = {};\n\nwindow.dbConns = dbConns;\n\nexport const dbMnemoCons: {[key: string]: Evolu<Database>} = {};\n\nexport let defaultDBName = 'starpy2';\n\nexport let dbSocket: WebSocket | undefined;\nexport const createDBConn = (\n  dbname = `${defaultDBName}`,\n  mnemonic?: string,\n  index?: boolean,\n): Evolu<Database> | Promise<Evolu<Database>> => {\n  if (dbConns[dbname]) return dbConns[dbname];\n  if (mnemonic && dbMnemoCons[mnemonic]) return dbMnemoCons[mnemonic];\n\n  const ops: Partial<EvoluConfig<Database>> = {\n    name: dbname,\n    syncUrl: 'https://db.starpy.me',\n  };\n  if (Platform.OS == 'web') {\n    ops.enableWebsocketConnection = true;\n  } else {\n    if (dbname === defaultDBName)\n      ops.enableWebsocketConnection = true;\n    else ops.externalWebsocketConnection = dbSocket;\n  }\n  if (mnemonic) ops.mnemonic = mnemonic;\n  const db = createEvolu(Database, ops);\n  if (dbname === defaultDBName)\n    db.socket.then(socket => {\n      dbSocket = socket;\n      console.info('dbSocket', socket);\n    });\n  dbConns[dbname] = db;\n  if (mnemonic) dbMnemoCons[mnemonic] = db;\n  if (index === true) {\n    return new Promise(res => {\n      indexAllFoldersForDB(db).then(() => res(db));\n\n      db.subscribeSyncState(async () => {\n        const state = db.getSyncState();\n        if (state._tag === 'SyncStateIsSynced') {\n          if (!isFirstSync[dbname]) {\n            isFirstSync[dbname] = true;\n          }\n          // console.info('state', state, dbname);\n          queryClient.refetchQueries('folderContent_' + dbname);\n          indexAllFoldersForDB(db);\n        }\n      });\n    });\n  }\n  return db;\n};\nconst isFirstSync: {[key: string]: boolean} = {};\n\nexport const indexAllFoldersForDB = async (e: Evolu<Database>) => {\n  try {\n    const query = e?.createQuery(db =>\n      db\n        .selectFrom('item')\n        .selectAll()\n        .where('mnemonic', 'is not', null)\n        .where('isDeleted', 'is', null),\n    );\n    const folders = await e?.loadQuery(query);\n    // console.info('folders', folders.rows);\n    const folderPromises = folders.rows\n      .map(async item => {\n        if (item.isDeleted) return;\n        if (!isFirstSync[item.id]) {\n          isFirstSync[item.id] = true;\n          dbConns[item.id] = e;\n        }\n        await queryClient.refetchQueries('folderContent_' + item.id);\n      })\n      .filter(i => i);\n    await Promise.all(folderPromises);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getUserData = async (\n  apiKey?: string,\n): Promise<UserInfo> => {\n  if (Platform.OS === 'web') {\n    if (!apiKey) apiKey = localStorage?.getItem('authToken');\n  }\n  // const url = domain+\"api/v1/backend/?authToken=\"+apiKey || \"\"\n  // const authData =  (await (await fetch(url, {\n  //     credentials:\"include\",\n  //     method:\"GET\",\n  //   })\n  // ).json())\n  const authData = {};\n  const [userData] = await findBy('userDoc', true);\n  const devices = await findBy('isDevice', true);\n  // console.info('get user data', userData)\n  return {\n    ...userData,\n    ...authData,\n    // photo: authData?.picture,\n    devices,\n  };\n};\n\nexport const getFolderContent = async (folderId: string) => {\n  const folder: Folder = await getById(folderId);\n  let e = evolu;\n  if (folder && folder.mnemonic) {\n    e = await createDBConn(folderId, folder.mnemonic, true);\n    // console.info('dbconn', e)\n  }\n  const query = e?.createQuery(db =>\n    db\n      .selectFrom('item')\n      .selectAll()\n      .where('folderId', '=', folderId)\n      .where('isDeleted', 'is', null)\n      .orderBy('orderId', 'asc')\n      .orderBy('lastUpdated', 'desc'),\n  );\n  const data = await e?.loadQuery(query);\n  // console.info(\"getFolderContent\", folderId, data)\n  return data.rows.map(i => i.item as Folder | Media | Contact);\n};\n\nexport const getPublicFolderContent = async (folderId: string) =>\n  getFolderContent(folderId);\n\nexport const getFoldersByType = async (\n  type: FolderType,\n): Promise<Folder[]> => {\n  const query = evolu?.createQuery(db =>\n    db\n      .selectFrom('item')\n      .selectAll()\n      .where('folderType', '=', type)\n      .where('folderId', 'is', null)\n      .where('isDeleted', 'is', null),\n  );\n  const data = await evolu?.loadQuery(query);\n  // console.info('folders', data.rows)\n  return data.rows.map(i => i.item as Folder);\n};\n\nexport const writeItem = async (data: any, e?: Evolu<Database>) => {\n  const parentFolderId =\n    Platform.OS === 'web'\n      ? new URL(window?.location?.toString()).searchParams.get(\n          'parentFolderId',\n        )\n      : '';\n  let createdNewDbConn = false;\n  if (data.folderId || parentFolderId) {\n    const folder: Folder = await getById(\n      data.folderId || parentFolderId,\n    );\n    if (folder && folder.mnemonic) {\n      e = await createDBConn(data.folderId, folder.mnemonic);\n      if (\n        data.isFolder ||\n        data.isEditorLayer ||\n        data.isEditorProject\n      ) {\n        data.mnemonic = folder.mnemonic;\n        dbConns[data.id] = e;\n        createdNewDbConn = true;\n      }\n      if (data.isMediaNew || data.isEncoderProject) {\n        data.extractor = 'wt';\n      }\n    }\n  }\n  console.info('writeItem data', data);\n  const item = await (e || evolu).createOrUpdate('item', {\n    id: data.id,\n    title: data.title,\n    name: data.name,\n    item: data,\n    isFolder: data.isFolder,\n    isContact: data.isContact,\n    isMediaNew: data.isMediaNew,\n    isDevice: data.isDevice,\n    userDoc: data.userDoc,\n    folderId: data.folderId,\n    folderType: data.folderType,\n    chatId: data.chatId,\n    createdAt: data.createdAt,\n    isDeleted: data.isDeleted,\n    isEditorProject: data.isDeleted,\n    isEditorLayer: data.isDeleted,\n    orderId: data.orderId || 1,\n    mnemonic: data.mnemonic,\n    lastUpdated: new Date().valueOf(),\n  });\n  if (data.mnemonic && data.isFolder && !e) {\n    console.info('create a new index for a new folder');\n    e = await createDBConn(data.id, data.mnemonic, true);\n  }\n  return item;\n};\n\nexport const findByOriginalId = async (id: string) =>\n  findBy('originalId', id);\n\nexport const findBy = async (\n  key: string,\n  value: string | boolean | number,\n) => {\n  const query = evolu?.createQuery(db =>\n    db.selectFrom('item').selectAll().where(key, '=', value),\n  );\n  const data = await evolu?.loadQuery(query);\n  console.info('findBy', data);\n  return data.rows.map(i => i.item);\n};\n\nexport const getById = async (\n  id: string,\n  folderId?: string,\n): Promise<Media | Folder | Contact | Device> => {\n  let e = evolu;\n  if (folderId) {\n    e = dbConns[folderId];\n    if (!e && id !== folderId) {\n      const folder: Folder = await getById(folderId);\n      if (folder?.mnemonic) {\n        e = await createDBConn(folder.id, folder.mnemonic);\n      } else {\n        e = evolu;\n      }\n    }\n  }\n  const query = e?.createQuery(db =>\n    db.selectFrom('item').selectAll().where('id', '=', id),\n  );\n  const item = await e?.loadQuery(query);\n  const i = item?.row?.item;\n  if (i?.isFolder || i?.isEditorLayer || i?.isEditorProject) {\n    if (!dbConns[i.id] && i.mnemonic) {\n      dbConns[i] = e;\n    }\n  }\n  if (!i && id !== '' && id !== undefined && id !== null) {\n    if (dbConns[id] && id !== folderId) return await getById(id, id);\n    // const parentFolderId = new URL(window.location.toString()).searchParams.get(\"parentFolderId\")\n    // if(!folderId && parentFolderId) {\n    //   folderId = parentFolderId\n    //   return await getById(id, folderId)\n    // }\n  }\n  // console.info('getById', id, folderId, i)\n  // console.info(i)\n  return i;\n};\n\nexport const initDatabaseRecord = async (\n  dbname: string,\n  mnemonic: string,\n  e?: Evolu,\n) => {\n  let databases;\n  if (!e) {\n    console.info(\n      'checking for database record for initial db ',\n      defaultDBName,\n    );\n    databases = await getFoldersByType(FolderType.database);\n    if (databases.length) {\n      const exists = databases.find(i => i.mnemonic === mnemonic);\n      if (exists) return exists;\n    }\n  }\n  const id = uuid.v4().toString();\n  const ndb: DatabaseItem = {\n    id,\n    title: `${dbname}_${id}`,\n    mnemonic,\n    isDatabase: true,\n    folderType: FolderType.database,\n    date: new Date().valueOf(),\n    added: new Date().valueOf().toString(),\n    orderId: databases?.length + 1 || 2,\n    userId: 'super',\n  };\n  return await writeItem(ndb, e);\n};\n\nconst evolu = createDBConn();\n\nexport {evolu};\n","import {getFoldersByType, initDatabaseRecord, evolu} from '.';\nimport {DatabaseItem, FolderType} from '../../types';\n\nexport const getDatabases = async (): Promise<DatabaseItem[]> => {\n  try {\n    if (evolu) {\n      await initDatabaseRecord('starpy2', evolu.getOwner().mnemonic);\n    }\n  } catch (err) {\n    console.error(err);\n  }\n\n  return (await getFoldersByType(\n    FolderType.database,\n  )) as DatabaseItem[];\n};\n","import * as S from '@effect/schema/Schema';\n\nimport {\n  NonEmptyString1000,\n  SqliteBoolean,\n  id,\n  table,\n  JsonObjectOrArray,\n  String1000,\n} from '@evolu/common';\n\nconst SomeJson = S.Struct({foo: S.String, bar: S.Boolean});\n\ntype SomeJson = S.Schema.To<typeof SomeJson>;\n\nconst ItemId = id('Item');\n\ntype ItemId = S.Schema.To<typeof ItemId>;\n\nexport const ItemTable = table({\n  id: ItemId,\n  name: String1000,\n  title: String1000,\n  isCompleted: SqliteBoolean,\n  item: SomeJson,\n  isMediaNew: SqliteBoolean,\n  isContact: SqliteBoolean,\n  folderId: String1000,\n  isDevice: SqliteBoolean,\n  isFolder: SqliteBoolean,\n  folderType: String1000,\n  userDoc: SqliteBoolean,\n  chatId: String1000,\n  orderId: String1000,\n  lastUpdated: String1000,\n  isEditorProject: SqliteBoolean,\n  isEditorLayer: SqliteBoolean,\n  isDatabase: SqliteBoolean,\n  mnemonic: String1000,\n});\n\nexport type ItemTable = S.Schema.To<typeof ItemTable>;\n","// export {FFmpeg, fetchFile, toBlobURL};\nimport {Platform} from 'react-native';\nimport {\n  EditorLayer,\n  EditorProject,\n  EncoderProject,\n  Media,\n} from '../types';\nimport {getFileOpfs, writeFileOpfs} from './fs';\nimport {appDirectory, ffMpegWasmBaseUrl} from '../db/defaults';\nimport {downloadFileById} from './wt';\nimport {FFmpegKit} from 'ffmpeg-kit-react-native';\nimport * as ExpoFileSystem from 'expo-file-system';\nconst documentDir =\n  Platform.OS === 'web'\n    ? ''\n    : ExpoFileSystem.documentDirectory?.replace('file://', '/') || '';\nconst cachedMedia: {[key: string]: string} = {};\n\nlet ffmpeg;\n\nexport type CBProgressParams = {progress: number; time: number};\nexport type CBProgressCallback = (progress: CBProgressParams) => void;\n\nexport const cancelEncoding = () => {\n  try {\n    ffmpeg.terminate();\n  } catch (err) {\n    // console.error('terminate ffmpeg error', err)\n  }\n};\n\nexport let FFmpeg;\nlet util;\nexport let fetchFile, toBlobURL;\nconst createFFmpeg = async (cb: CBProgressCallback) => {\n  if (Platform.OS === 'web') {\n    if (!FFmpeg) {\n      util = await import('@ffmpeg/util');\n      fetchFile = util.fetchFile;\n      toBlobURL = util.toBlobURL;\n      FFmpeg = (await import('@ffmpeg/ffmpeg')).FFmpeg;\n    }\n    ffmpeg = new FFmpeg();\n    // ffmpeg.mount(\"NODEFS\", {} as WorkerFSMountData, \"/\")\n    window.ffmpeg = ffmpeg;\n    ffmpeg.on('log', ({message}: {message: string}) => {\n      console.log('ffmpeg', message);\n    });\n    ffmpeg.on('progress', (params: CBProgressParams) => {\n      console.info('ffmpeg progress', params);\n      if (cb) cb(params || 0);\n    });\n    await ffmpeg.load({\n      coreURL: await toBlobURL(\n        `${ffMpegWasmBaseUrl}/ffmpeg-core.js`,\n        'text/javascript',\n      ),\n      wasmURL: await toBlobURL(\n        `${ffMpegWasmBaseUrl}/ffmpeg-core.wasm`,\n        'application/wasm',\n      ),\n    });\n  }\n};\n\nexport const encodeMedia = async (\n  media: EncoderProject,\n  cb?: CBProgressCallback,\n  isPrerender?: boolean,\n): Promise<string | undefined> => {\n  const id = media.isCopy || media?.id;\n  const nmedia = {...media, id};\n  const fileId = `${id}_${media?.filename}`;\n  const {encoding} = media;\n  const cachedId = encoding?.lastUpdated || 0;\n  console.info('cachedId', cachedId);\n  const outPostfix = `.output.${cachedId}.${\n    encoding?.output || 'mp4'\n  }`;\n  const outFileId = fileId + outPostfix;\n  try {\n    if (cachedMedia[id]) return cachedMedia[id];\n    if (cachedId === 0) {\n      // const opfsFile =\n      cachedMedia[id] = await getFileOpfs(nmedia);\n      return cachedMedia[id];\n    }\n    const dirCore = await window.navigator.storage.getDirectory(\n      appDirectory,\n    );\n    const dir = await dirCore.getDirectoryHandle(nmedia.folderId);\n    const cache = await dir.getFileHandle(`${id}_${outFileId}`);\n    const file = await cache?.getFile();\n    if (file) {\n      cachedMedia[id] = URL.createObjectURL(file);\n      return cachedMedia[id];\n    }\n  } catch (err) {\n    console.error('get cache error', err);\n  }\n  cancelEncoding();\n  await createFFmpeg(cb);\n  try {\n    let opfsFile;\n    try {\n      opfsFile = await getFileOpfs(nmedia);\n    } catch (err) {\n      console.info('file not found locally downloading', err);\n      const dlFIle = await downloadFileById(\n        nmedia.id,\n        nmedia.folderId,\n        cb && (progress => cb({progress, time: 0})),\n      );\n      console.info('dlFIle', dlFIle);\n      opfsFile = URL.createObjectURL(await dlFIle.getFile());\n      if (cachedId === 0) {\n        return encodeMedia(media, cb, isPrerender);\n      }\n    }\n    const execCmd = genExecCmd(nmedia, isPrerender);\n    await execEncode({\n      files: [fileId],\n      encoded: [opfsFile],\n      outFileId,\n      execCmd,\n      mediaOut: nmedia,\n    });\n  } catch (err) {\n    console.error('ffmpeg error ', err);\n  }\n};\n\nexport const execEncode = async (cmd: {\n  files: (string | undefined)[];\n  encoded: (string | undefined)[];\n  outFileId: string;\n  execCmd: string[];\n  mediaOut: Media;\n}) => {\n  console.info('execEncode', cmd);\n  try {\n    if (Platform.OS === 'web') {\n      const outFileId = cmd.outFileId;\n      try {\n        await Promise.all(\n          cmd.encoded.map(async (opfsFile, index) => {\n            const fileId = cmd.files[index];\n            const fs = await fetchFile(opfsFile);\n            await ffmpeg.writeFile(fileId, fs);\n          }),\n        );\n      } catch (err) {\n        console.error('load files in ffmpeg error', err);\n        throw err;\n      }\n      console.info('after loading files into ffmpeg', cmd.execCmd);\n      const exec = await ffmpeg.exec(cmd.execCmd);\n      console.info('after exec', exec, outFileId);\n      const data = await ffmpeg.readFile(outFileId);\n      console.info('after processing', data);\n      data.name = outFileId;\n      const file = await (\n        await writeFileOpfs(cmd.mediaOut, data)\n      )?.getFile();\n      cachedMedia[cmd.mediaOut.id] = URL.createObjectURL(file);\n      console.info(\n        'cachedMedia for project',\n        cachedMedia[cmd.mediaOut.id],\n      );\n      return cachedMedia[cmd.mediaOut.id];\n    } else {\n      const exec = await FFmpegKit.executeAsync(\n        cmd.execCmd.join(' '),\n      );\n      console.info('after exec ffmpeg', exec);\n    }\n  } catch (err) {\n    console.error('encodeProject error', err);\n  }\n};\n\nexport const encodeProject = async (\n  projectData: EditorProject,\n  layers: EditorLayer[],\n  isPrerender?: boolean,\n  cb?: CBProgressCallback,\n  logs?: (line: string) => void,\n) => {\n  try {\n    const cmd = genRenderCmd(projectData, layers, isPrerender);\n    const id = projectData.id;\n    const files = cmd.files.filter(i => i !== '-i');\n    console.info(\n      'encodeProject',\n      projectData,\n      layers,\n      isPrerender,\n      cmd,\n    );\n    const cachedId = projectData.editor?.lastUpdated || 0;\n    // try {\n    //     if(cachedMedia[id])\n    //         return cachedMedia[id]\n    //     if(cachedId === 0) {\n    //         // const opfsFile =\n    //         cachedMedia[id] =  await getFileOpfs(nmedia)\n    //         return cachedMedia[id]\n    //     }\n    //     const dirCore = await window.navigator.storage.getDirectory(appDirectory)\n    //     const dir = await dirCore.getDirectoryHandle(projectData.folderId)\n    //     const cache = await dir.getFileHandle(`${id}_${cmd.outFileId}`);\n    //     const file = await cache?.getFile()\n    //     if(file) {\n    //         cachedMedia[id] = URL.createObjectURL(file)\n    //         return cachedMedia[id]\n    //     }\n    // } catch(err) {\n    //     console.error(\"get cache error\", err)\n    // }\n    const encoded = await Promise.all(\n      cmd.medias.map(media =>\n        encodeMedia(\n          media!,\n          progress => {\n            console.info('encoding media', media.id, progress);\n            if (cb) cb(progress);\n          },\n          isPrerender,\n        ),\n      ),\n    );\n    console.info('encoded', encoded, files, cmd.execCmd);\n    cancelEncoding();\n    await createFFmpeg(cb);\n    cmd.files = files;\n    cmd.encoded = encoded;\n    cmd.mediaOut = projectData;\n    await execEncode(cmd);\n  } catch (err) {\n    console.error('encodeproject error', err);\n  }\n};\n\nexport const genRenderCmd = (\n  projectData: EditorProject,\n  layers: EditorLayer[],\n  isPrerender?: boolean,\n) => {\n  if (projectData?.id === undefined || layers?.length < 1)\n    return {execCmd: [], medias: [], files: []};\n  const fileId = `${projectData.id}_${projectData.title}`;\n  const {editor: encoding} = projectData;\n  const outPostfix = `.output.${encoding?.lastUpdated || 0}.${\n    encoding?.output || 'mp4'\n  }`;\n  const outFileId = fileId + outPostfix;\n  const threads =\n    Platform.OS === 'web' &&\n    window.navigator.hardwareConcurrency.toString();\n  const extraCode: string[] =\n    encoding?.code && encoding.code[0] != ''\n      ? encoding.code\n          .filter(i => i !== '')\n          .map(i =>\n            i\n              .trim()\n              .replace(/[\\r\\n]+/gm, '')\n              .trim(),\n          )\n      : [];\n  const medias = layers\n    ?.map(layer => layer?.media?.map(m => ({...m, layer})))\n    .flat()\n    .filter(i => i)\n    .filter(i => !i.isContact);\n  const files =\n    medias\n      ?.map(e => [\n        '-i',\n        `${documentDir}${e?.id}_${e?.filename}.output.${\n          e?.encoding?.lastUpdated || 0\n        }.${e?.encoding?.output || 'mp4'}`,\n      ])\n      .flat() || [];\n  const hasAudio = layers?.reduce((a, layer) => {\n    if (a === true) return a;\n\n    return !layer.editor?.muted;\n  }, false);\n  const hasVideo = layers?.reduce((a, layer) => {\n    if (a === true) return a;\n\n    return !layer.editor?.videoDisabled;\n  }, false);\n  const audioOutput = hasAudio ? '[a_concat]' : '';\n  const audioMap = hasAudio ? ['-map', audioOutput] : [];\n  const videoOutput = hasVideo ? '[v_concat]' : '';\n  const videoMap = hasVideo ? ['-map', videoOutput] : [];\n  const aspectRatio = projectData?.editor?.aspectRatio || '16/9';\n  const scale = `scale=${encoding?.width || 1280}:${\n    encoding?.height || 720\n  },setdar=${aspectRatio}`;\n  const filterTrim =\n    medias?.map((e, index) => {\n      const trimV =\n        `[${index}:v]trim=start=${\n          e?.encoding.start || 0\n        }:end=${parseInt(\n          e?.encoding?.end || e?.duration,\n        )},setpts=PTS-STARTPTS` +\n        ',' +\n        scale +\n        `[v${index}]`;\n\n      const trimA = `[${index}:a]atrim=start=${\n        e?.encoding.start || 0\n      }:end=${parseInt(\n        e?.encoding?.end || e?.duration,\n      )},asetpts=PTS-STARTPTS[a${index}]`;\n      //`,volume=${e?.encoding?.soundVolume/100 || 1},amix[a${index}]`\n      let trim = trimV + ', \\n' + trimA;\n      if (e?.layer?.editor?.muted) trim = trimV;\n      if (e?.layer?.editor?.videoDisabled) trim = trimA;\n      return trim;\n    }) || [];\n  // console.info('medias', medias)\n  const videosLength =\n    medias?.filter(i => i?.layer?.editor?.videoDisabled !== true)\n      .length || 1;\n  const audiosLength =\n    medias?.filter(i => i?.layer?.editor?.muted !== true).length || 1;\n  const videoConcat =\n    (medias\n      ?.map((a, i) => {\n        if (a.layer?.editor?.videoDisabled !== true) return `[v${i}]`;\n        return undefined;\n      })\n      ?.filter(i => i)\n      .join('') || '') +\n    `concat=n=${videosLength}:v=1:a=0${videoOutput}`;\n  const audioConcat =\n    (medias\n      ?.map((a, i) => {\n        if (a.layer?.editor?.muted !== true) return `[a${i}]`;\n        return undefined;\n      })\n      ?.filter(i => i)\n      ?.join('') || '') +\n    `concat=n=${audiosLength}:v=0:a=1${audioOutput}`;\n  // [a3]volume=enable='between(t,0,49)'${audioOutput}`\n  const filterConcat = videoConcat + ';\\n' + audioConcat;\n  filterTrim.push(filterConcat);\n  const execCmd: string[] = [\n    ...files,\n    '-crf',\n    encoding?.compressionLevel?.toString() || '20',\n    '-threads',\n    threads,\n    '-filter_complex',\n    `${filterTrim.join(';\\n')}`,\n    '-preset',\n    encoding?.preset || 'veryfast',\n    '-movflags',\n    '+faststart',\n    ...extraCode,\n    ...videoMap,\n    ...audioMap,\n    '-r',\n    encoding?.framerate?.toString() || '30',\n    `${documentDir}${outFileId}`,\n  ];\n  return {execCmd, medias, files, outFileId};\n};\n\nexport const genExecCmd = (\n  projectData: EncoderProject,\n  isPrerender?: boolean,\n) => {\n  if (projectData?.id === undefined) return [];\n  const fileId = `${projectData.id}_${projectData.filename}`;\n  const {encoding} = projectData;\n  const outPostfix = `.output.${encoding?.lastUpdated || 0}.${\n    encoding?.output || 'mp4'\n  }`;\n  const outFileId = fileId + outPostfix;\n  const threads = window.navigator.hardwareConcurrency.toString();\n  const extraCode: string[] =\n    encoding?.code && encoding.code[0] != ''\n      ? encoding.code\n          .filter(i => i !== '')\n          .map(i =>\n            i\n              .trim()\n              .replace(/[\\r\\n]+/gm, '')\n              .trim(),\n          )\n      : [];\n  const prerenderOptionalCode = !isPrerender\n    ? [\n        '-ss',\n        genExecTime(encoding?.start || 0),\n        '-to',\n        genExecTime(encoding?.end || projectData?.duration),\n      ]\n    : [];\n  const execCmd = [\n    '-i',\n    `${documentDir}${fileId}`,\n    '-crf',\n    encoding?.compressionLevel?.toString() || '20',\n    '-threads',\n    threads,\n    '-filter_complex',\n    `scale=${encoding?.width || projectData.width}x${\n      encoding?.height || projectData.height\n    }`,\n    '-preset',\n    encoding?.preset || 'veryfast',\n    '-movflags',\n    '+faststart',\n    ...prerenderOptionalCode,\n    ...extraCode,\n    `${documentDir}${outFileId}`,\n  ];\n  return execCmd;\n};\n\nexport const genExecTime = (seconds: number, comma?: boolean) => {\n  const end = parseInt(seconds, 10);\n  let endMins = parseInt(end / 60, 10);\n  let endSeconds = parseInt(end - endMins * 60, 10);\n  if (endMins.toString().length === 1) endMins = '0' + endMins;\n  if (endSeconds.toString().length === 1)\n    endSeconds = '0' + endSeconds;\n  const separator = comma ? ',' : ':';\n  const extraSymbol = comma ? '' : '00:';\n  return `${extraSymbol}${endMins}${separator}${endSeconds}`;\n};\n\nexport const getActiveProjectLayer = (\n  layers: EditorLayer[],\n  currentPosition: number,\n) => {\n  let activeMedia: EncoderProject | undefined;\n  let layerCount = 0;\n  let offset = 0;\n  let layer: EditorLayer | undefined;\n\n  while (activeMedia?.id === undefined) {\n    layer = layers[layerCount];\n\n    if (layerCount > layers.length + 1) {\n      console.error('layers', layers, layerCount);\n      throw 'no_layer_found';\n    }\n\n    if (layer?.id === undefined) {\n      layerCount++;\n      continue;\n    }\n    if (layer?.editor?.videoDisabled === true) {\n      layerCount++;\n      continue;\n    }\n\n    const layerMedia = layer.media;\n    activeMedia = layerMedia!.reduce((a, media: EncoderProject) => {\n      if (a.id) return a;\n\n      a +=\n        (media?.encoding?.end || media?.duration) -\n        (media?.encoding?.start || 0);\n      if (a >= currentPosition) return media;\n\n      offset = a;\n      return a;\n    }, 0);\n    layerCount++;\n  }\n  return {offset, layer, activeLayer: layerCount, activeMedia};\n};\n\nexport const getNextActiveProjectMedia = (\n  layers: EditorLayer[],\n  startPosition: number,\n  media: EncoderProject,\n) => {\n  const currentDuration =\n    (media?.encoding?.end || media?.duration) -\n    (media?.encoding?.start || 0);\n  const nextPosition = startPosition + currentDuration + 1;\n  const next = getActiveProjectLayer(layers, nextPosition);\n  console.info('nextPosition', nextPosition, next);\n  return next;\n};\n\nexport const getTotalTime = (layers: EditorLayer[]): number => {\n  const time = layers.reduce((a, layer) => {\n    const t = layer.media?.reduce((agv, media) => {\n      agv +=\n        (media?.encoding?.end || media?.duration) -\n        (media?.encoding?.start || 0);\n      return agv;\n    }, 0);\n    if (!t) return a;\n    if (a > t) return a;\n    if (t > a) return t;\n  }, 0);\n  return time;\n};\n\nexport const getProjectMedia = async (\n  layers: EditorLayer[],\n  currentPosition: number,\n  cb: CBProgressCallback,\n) => {\n  const {offset, layer, activeLayer, activeMedia} =\n    getActiveProjectLayer(layers, currentPosition);\n  const offsetPosition =\n    currentPosition -\n    offset +\n    parseFloat(activeMedia?.encoding.start || 0);\n  const totalTime = getTotalTime(layers);\n  console.info(\n    'getProjectMedia offset',\n    offsetPosition,\n    currentPosition,\n    offset,\n    activeMedia.encoding.start,\n    activeMedia?.id,\n  );\n  const encode = async () => {\n    const e = encodeMedia(activeMedia, cb, true);\n    return new Promise(res => {\n      e.then(async r => {\n        res(r);\n        try {\n          const next = getNextActiveProjectMedia(\n            layers,\n            offset,\n            activeMedia,\n          );\n          if (next) {\n            await encodeMedia(next.activeMedia, () => {}, true);\n          }\n        } catch (err) {\n          console.error('prepare next video error', err);\n        }\n      });\n    });\n  };\n  const url = activeMedia?.id !== undefined ? await encode() : null;\n  return {\n    url,\n    currentPosition: offsetPosition,\n    muted: layer?.editor?.muted,\n    activeMedia,\n    totalTime,\n    offset,\n    activeLayer,\n  };\n};\n","import * as ExpoFileSystem from 'expo-file-system';\nimport {Platform} from 'react-native';\nimport {Folder, Media} from '../types';\nimport {writeItem} from './db';\nimport {getBlobForArrayBuffer} from './wt';\n\nimport * as ExpoDocumentPicker from 'expo-document-picker';\nimport {createBlobDB} from './blobdb';\nimport {\n  AssetType,\n  Dirs,\n  FileStat,\n  FileSystem,\n} from 'react-native-file-access';\n\nexport async function* streamFileChunks(\n  path: string,\n  bytesOffset: number,\n  chunkSize: number,\n  byteEnd: number,\n) {\n  let currentOffset = bytesOffset;\n  while (currentOffset < byteEnd) {\n    const buf = Buffer.from(\n      await FileSystem.readFileChunk(\n        path,\n        currentOffset,\n        chunkSize,\n        'base64',\n      ),\n      'base64',\n    );\n    currentOffset += chunkSize;\n    yield buf;\n  }\n}\nfunction iteratorToStream(\n  iterator: ReturnType<typeof streamFileChunks>,\n) {\n  return new ReadableStream({\n    async pull(controller) {\n      const {value, done} = await iterator.next();\n\n      if (done) {\n        controller.close();\n      } else {\n        controller.enqueue(value);\n      }\n    },\n  });\n}\nexport const streamFile = (\n  path: string,\n  bytesOffset: number,\n  chunkSize: number,\n  byteEnd: number,\n) => {\n  const streamGen = streamFileChunks(\n    path,\n    bytesOffset,\n    chunkSize,\n    byteEnd,\n  );\n  const stream = iteratorToStream(streamGen);\n  stream.clone = () =>\n    streamFile(path, bytesOffset, chunkSize, byteEnd);\n  return stream;\n};\n\nexport const writeFileOpfs = async (\n  media: Media,\n  file: File | ExpoDocumentPicker.DocumentPickerAsset,\n) => {\n  if (Platform.OS === 'web') {\n    const dirCore = await window.navigator.storage.getDirectory();\n    const dir = await dirCore.getDirectoryHandle(media.folderId, {\n      create: true,\n    });\n    const fileId = `${media.id}_${file.name}`;\n    const fileHandle = await dir.getFileHandle(fileId, {\n      create: true,\n    });\n    const writable = await fileHandle.createWritable();\n\n    await writable.write(file);\n    await writable.close();\n    if (!media.isDownloaded) {\n      media.isDownloaded = true;\n      await writeItem(media);\n    }\n    return fileHandle;\n  }\n  const fileId = `${media.id}_${media.filename}`;\n  const fileUri = `${ExpoFileSystem.documentDirectory}${media.folderId}/${fileId}`;\n  await ExpoFileSystem.copyAsync({\n    to: fileUri,\n    from: (file as ExpoDocumentPicker.DocumentPickerAsset).uri,\n  });\n  return fileUri.replace('file://', '');\n};\n\nexport const getFileStats = async (\n  media: Media,\n): Promise<FileStat> => {\n  const fileData = await getFileReaderOpfs(media);\n\n  if (Platform.OS === 'web') {\n    const file = fileData as File & {\n      filename: string;\n      path: string;\n      type: 'file';\n    };\n    return file;\n  } else {\n    const file = FileSystem.stat(fileData as string);\n    return file;\n  }\n};\n\nexport const removeObject = async (\n  objectItem: Media | Folder,\n): Promise<void> => {\n  if (Platform.OS === 'web') {\n    const dirCore = await window.navigator.storage.getDirectory();\n    if ((objectItem as Media).isMediaNew) {\n      const media = objectItem as Media;\n      const fileId = `${media.id}_${media.filename}`;\n      const dir = await dirCore.getDirectoryHandle(media.folderId);\n      dir.removeEntry(fileId);\n    } else {\n      // const dir = await dirCore.getDirectoryHandle(objectItem.folderId as string);\n      dirCore.removeEntry(objectItem.id, {recursive: true});\n    }\n  } else {\n    if ((objectItem as Media).isMediaNew) {\n      const media = objectItem as Media;\n      const filePath = (await getFileReaderOpfs(media)) as string;\n      await ExpoFileSystem.deleteAsync(filePath);\n    } else {\n      await ExpoFileSystem.deleteAsync(objectItem.id);\n    }\n  }\n};\n\nexport const getFileOpfs = async (\n  media: Media,\n): Promise<string | undefined> => {\n  try {\n    console.info('get file', media.id);\n\n    const file = await getFileReaderOpfs(media);\n    if (typeof file === 'string') return file;\n\n    if (!file) throw 'no_file_found';\n\n    const url = URL.createObjectURL(file);\n    return url;\n  } catch (err) {\n    // console.error('get file error', err);\n    throw err;\n  }\n};\n\nexport const exportFile = async (media: Media): Promise<void> => {\n  if (Platform.OS === 'web') {\n    const file = (await getFileOpfs(media)) as string;\n    const a = document.createElement('a');\n    a.style = 'display:none;';\n    document.body.appendChild(a);\n    a.download = media.filename;\n    a.href = file;\n    a.click();\n  }\n};\n\nexport const getFileReaderOpfs = async (\n  media: Media,\n): Promise<File | string | undefined> => {\n  try {\n    const fileId = `${media.id}_${media.filename}`;\n    if (Platform.OS === 'web') {\n      const dirCore = await window.navigator.storage.getDirectory();\n      const dir = await dirCore.getDirectoryHandle(media.folderId, {\n        create: true,\n      });\n      const fileHandle = await dir.getFileHandle(fileId);\n      const file = await fileHandle?.getFile();\n      return file;\n    } else {\n      const fileUri = `${ExpoFileSystem.documentDirectory}${media.folderId}/${fileId}`;\n      console.info('fileUri', fileUri);\n      const file = await ExpoFileSystem.getInfoAsync(fileUri);\n      console.info('rn fs file', file);\n      return (file?.exists && file.uri) || undefined;\n    }\n  } catch (err) {\n    // console.error('get file reader error', err);\n  }\n};\nlet chunksCount = {};\nlet savePromises = {};\nlet savesCompleted = {};\nexport const saveFileToData = async (\n  filename: string,\n  fileUri: string,\n  saveCount: number,\n): Promise<void> => {\n  console.info(\n    'save ',\n    filename,\n    saveCount,\n    savesCompleted[filename],\n  );\n  if (savePromises[filename])\n    return savePromises[filename].then(() =>\n      saveFileToData(filename, fileUri, saveCount),\n    );\n  else\n    savePromises[filename] = new Promise(async (resolve, rej) => {\n      try {\n        const {readBlobs} = await createBlobDB();\n        let blobs = await readBlobs(filename);\n        let bbs = blobs.map(i => i.data);\n        let buffers = bbs.reduce(\n          (a, i) => _appendBuffer(a, Uint8Array.from(i)),\n          new Uint8Array(),\n        );\n        if (chunksCount[filename])\n          chunksCount[filename] += blobs.length;\n        else chunksCount[filename] = blobs.length;\n        console.info(\n          'save file to data',\n          filename,\n          buffers.length,\n          blobs.length,\n          bbs.length,\n        );\n        console.info(\n          'current chunk on saving file',\n          chunksCount[filename],\n        );\n        let nfile = getBlobForArrayBuffer(buffers.buffer) as Blob & {\n          name: string;\n        };\n        nfile.name = filename;\n        const fr = new FileReader();\n        fr.onload = async () => {\n          // console.info('file reader result', fr)\n          try {\n            const data = fr.result.replace('data:blob;base64,', '');\n            await FileSystem.appendFile(\n              fileUri.replace('file://', ''),\n              data,\n              'base64',\n            );\n            resolve(null);\n          } catch (err) {\n            const error = (err as Error)?.message || err;\n            console.error('fs worker err', error);\n            rej(error);\n          }\n        };\n        fr.readAsDataURL(nfile);\n      } catch (err) {\n        savePromises[filename] = null;\n        console.error(\n          'fs worker err',\n          (err as Error)?.message || err,\n        );\n        rej((err as Error)?.message || err);\n      }\n    });\n  await savePromises[filename];\n  if (savesCompleted[filename])\n    savesCompleted[filename].push(saveCount);\n  else savesCompleted[filename] = [saveCount];\n  savePromises[filename] = null;\n};\n\nexport const _appendBuffer = function (\n  buffer1: ArrayBuffer,\n  buffer2: ArrayBuffer,\n) {\n  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp;\n};\n\nexport const DocumentPicker = {\n  pickSingle: async () =>\n    new Promise(async resolve => {\n      if (Platform.OS === 'web') {\n        const fileInput = document.getElementById(\n          'fileInput',\n        ) as HTMLInputElement | null;\n        fileInput?.click();\n        fileInput?.addEventListener('change', async () => {\n          if (fileInput?.files?.length) {\n            const file = fileInput?.files?.[0];\n            const nfile = {\n              file,\n              type: file?.type,\n              title: file?.name,\n              name: file?.name,\n              extractor: 'local',\n              size: file?.size,\n              originalId: file?.name + file?.size,\n            };\n            return resolve(nfile);\n          }\n        });\n      } else {\n        const exres = await ExpoDocumentPicker.getDocumentAsync({\n          multiple: false,\n        });\n        const asset = exres?.assets?.[0];\n        console.info('expo res', exres, asset);\n        if (!asset) return resolve(undefined);\n        const nfile = {\n          asset,\n          file: asset,\n          uri: asset.uri,\n          type: asset.mimeType,\n          size: asset.size,\n          title: asset.name,\n          name: asset.name,\n          extractor: 'local',\n          originalId: asset.name + asset.size,\n        };\n        return resolve(nfile);\n      }\n    }),\n};\n","export * from '../db/defaults';\nexport * from './db';\nexport * from './media';\nexport * from './chat';\nexport * from './fs';\nimport {getWT, startUpMediaSharing} from './media';\nimport {writeItem, getUserData, getById} from './db';\ndeclare global {\n  var publicSocketCallback: any;\n  var newMediaCallback: any;\n  var setupPartyView: any;\n  var playMediaLink: any;\n  var playMesh: any;\n  var mediaClient: any;\n  var windowClosedCallback: any;\n  // var localStorage: any;\n  var showOpenFilePicker: any;\n}\nexport {evolu, createDBConn} from './db';\nimport * as ExpoDevice from 'expo-device';\n\nimport {colors, domain, userDocKey} from '../db/defaults';\n\nimport {CurrentUserData, Device} from '../types';\nimport {Platform} from 'react-native';\nimport {doInitialMigration} from '../db/migration';\n\nconst apiURL = `${domain}api/v1/`;\n\nexport let UserData: CurrentUserData = {\n  user: {\n    id: 'test',\n    name: 'test',\n  },\n  isEditingFolder: {},\n  colors,\n  searchItems: [],\n  currentFolderIds: {},\n};\n\nexport const initUserData = async () => {\n  try {\n    UserData.user = await doInitialMigration(writeItem, getUserData);\n    const userAgent =\n      ExpoDevice.designName?.replace(/[^\\w\\s]/gi, '') ||\n      'unknown_agent';\n    const os = ExpoDevice.osName || 'unknown_os';\n    const browserName = ExpoDevice.brand || 'web';\n    console.info('browserName', browserName);\n    const deviceId = userAgent + os + browserName;\n    // console.info('deviceId', deviceId)\n    const device = (await getById(deviceId)) as Device;\n    // console.info('device', device)\n    if (!device || !device.manufacturer) {\n      const ndevice: Device = {\n        id: deviceId,\n        manufacturer: browserName,\n        isDevice: true,\n        userAgent,\n        createdAt: new Date().valueOf(),\n        model: browserName,\n        os,\n        platform: Platform.OS,\n      };\n      console.info(ndevice);\n      await writeItem(ndevice);\n    }\n    console.info('initUserData', UserData);\n    if (Platform.OS === 'web') {\n      // startUpMediaSharing();\n    }\n  } catch (err) {\n    console.error('initUserData Error', err);\n  }\n};\n\nexport const publicPartyPref = () => {};\nexport const deleteById = (id: string) => {};\nexport const setOpenItem = () => {};\nexport const removeFile = () => {};\nexport const downloadFile = () => {};\n\nexport const getUnreadMessages = () => {};\nexport const extractMedia = async (link: string) => {\n  const media = await getWT(link);\n  console.info('onMedia', media);\n  return {\n    url: media.magnetURI,\n    title: media.name,\n    originalId: media.infoHash,\n    id: media.infoHash,\n    filename: media.files[0].name,\n    extractor: 'wt',\n    isFolder:\n      media.files && media.files?.length > -1 ? true : undefined,\n    files:\n      media.files && media.files?.length > -1\n        ? media.files\n        : undefined,\n  };\n};\n","export * from './fs';\nexport * from './wt';\nexport * from './encoder';\n\nimport {EditorLayer, EditorProject, Folder, Media} from '../types';\n\nimport {getById, getFolderContent, evolu} from './db';\nimport {cast} from '@evolu/common';\nimport {shareFileToWT} from './wt';\nimport {FolderPreviewContentType} from '../hooks/useFolders';\nimport {getFileOpfs} from './fs';\n\nexport const recursiveShare = async (\n  media: FolderPreviewContentType,\n): Promise<void> => {\n  if ((media as Media).isDownloaded) {\n    try {\n      shareFileToWT(media.id, media.folderId);\n      return;\n    } catch (err) {\n      // console.error(\"shareFileToWT\", err)\n    }\n  }\n  if (\n    (media as Folder).isFolder ||\n    (media as EditorProject).isEditorProject ||\n    (media as EditorLayer).isEditorLayer\n  ) {\n    const innerContent: (Media | Folder)[] = await getFolderContent(\n      media.id,\n    );\n    await Promise.all(innerContent.map(recursiveShare));\n    return;\n  }\n  return undefined;\n};\n\nexport const shareFolder = async (folder: Folder) => {\n  const content: (Media | Folder)[] = await getFolderContent(\n    folder.id,\n  );\n  // for (let n = 0; n < content.length; n++) {\n  // const contentItem =\n  // await recursiveShare(content[n]);\n  // const shared = (await Promise.all(content.map(recursiveShare))).flat().filter((i)=>i)\n  // }\n};\nexport const startUpMediaSharing = async () => {\n  try {\n    // await new Promise(res=>setTimeout(()=>res(), 20000))\n    const query = (await evolu).createQuery(db =>\n      db\n        .selectFrom('item')\n        .selectAll()\n        .where('isFolder', '=', cast(true))\n        .where('mnemonic', 'is not', null)\n        .orderBy('createdAt', 'desc'),\n    );\n\n    // const sharedFolders: Folder[] = (\n    //   await (await evolu).loadQuery(query)\n    // )?.rows?.map(i => i.item);\n    // console.info(\"sharedFolders\", sharedFolders)\n    // for (let i = 0; i < sharedFolders.length; i++) {\n    //   const folder = sharedFolders[i];\n    // await shareFolder(folder);\n    // return shared;\n    // }\n    // const sharedFiles = (\n    //   await Promise.all(\n    //     sharedFolders.map(async folder => {\n    //       const content: (Media | Folder)[] = await getFolderContent(\n    //         folder.id,\n    //       );\n    //       const shared = (\n    //         await Promise.all(content.map(recursiveShare))\n    //       )\n    //         .flat()\n    //         .filter(i => i);\n    //       return shared;\n    //     }),\n    //   )\n    // ).flat();\n    // console.info('sharedFiles', sharedFiles);\n  } catch (err) {\n    console.error('startUpMediaSharing error', err);\n  }\n};\n\nexport const getMediaAndEnq = async (\n  mediaId: string,\n  filename: string,\n) => {\n  const media: Media = (await getById(mediaId)) as any;\n  console.info('playing media', media);\n  if (media.extractor === 'local') {\n    media.url = (await getFileOpfs(media)) as string;\n  }\n  return enqMedia(media, filename);\n};\n\nexport const enqMedia = async (media: Media, filename: string) => {\n  return playMediaLink(media.url, media.currentPosition, filename);\n};\n","export const getBrowserName = () => {\n  // Opera 8.0+\n  const isOpera =\n    (!!window.opr && !!opr.addons) ||\n    !!window.opera ||\n    navigator.userAgent.indexOf(' OPR/') >= 0;\n  if (isOpera) return 'opera';\n  // Firefox 1.0+\n  const isFirefox = typeof window.InstallTrigger !== 'undefined';\n\n  if (isFirefox) return 'firefox';\n\n  // Safari 3.0+ \"[object HTMLElementConstructor]\"\n  const isSafari =\n    /constructor/i.test(window.HTMLElement) ||\n    (function (p) {\n      return p.toString() === '[object SafariRemoteNotification]';\n    })(\n      !window['safari'] ||\n        (typeof window.safari !== 'undefined' &&\n          window['safari'].pushNotification),\n    );\n\n  if (isSafari) return 'apple-safari';\n\n  // Internet Explorer 6-11\n  const isIE = /*@cc_on!@*/ false || !!window.document.documentMode;\n\n  if (isIE) return 'microsoft-internet-explorer';\n  // Edge 20+\n  const isEdge = !isIE && !!window.StyleMedia;\n\n  if (isEdge) return 'microsoft-edge';\n\n  // Chrome 1 - 79\n  const isChrome = window.chrome;\n\n  if (isChrome) return 'google-chrome';\n\n  // Edge (based on chromium) detection\n  const isEdgeChromium =\n    window.isChrome &&\n    window.navigator.userAgent.indexOf('Edg') != -1;\n\n  if (isEdgeChromium) return 'microsoft-edge';\n\n  // Blink engine detection\n  const isBlink = (window.isChrome || isOpera) && !!window.CSS;\n\n  if (isBlink) return 'blink';\n};\n\nconst units = [\n  'bytes',\n  'KiB',\n  'MiB',\n  'GiB',\n  'TiB',\n  'PiB',\n  'EiB',\n  'ZiB',\n  'YiB',\n];\nexport const niceBytes = (x: string) => {\n  let l = 0,\n    n = parseInt(x, 10) || 0;\n\n  while (n >= 1024 && ++l) {\n    n = n / 1024;\n  }\n\n  return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + units[l];\n};\n","import {Platform} from 'react-native';\nimport * as ExpoFileSystem from 'expo-file-system';\nimport {ReadingOptions} from 'expo-file-system';\nimport {getById, writeItem} from './db';\nimport {\n  _appendBuffer,\n  getFileReaderOpfs,\n  saveFileToData,\n  streamFile,\n  writeFileOpfs,\n} from './fs';\nimport {createBlobDB} from './blobdb';\nimport {Media} from '../types';\n\nconst rtcConfig: RTCConfiguration = {\n  iceServers: [\n    {\n      urls: ['stun:turn.starpy.me', 'turn:turn.starpy.me'],\n      username: 'username1',\n      credential: 'password1',\n    },\n  ],\n  sdpSemantics: 'unified-plan',\n  bundlePolicy: 'max-bundle',\n  iceCandidatePoolSize: 1,\n  iceTransportPolicy: 'relay',\n  iceCandidatePoolsize: 1,\n};\n\nlet Fetch;\nlet mediaClient: any, mediaWorker: any;\nexport let getBlobForArrayBuffer: (arrayBuffer: ArrayBuffer) => Blob;\nexport let getArrayBufferForBlob: (Blob: Blob) => ArrayBuffer;\nconst announce = ['wss://media.starpy.me'];\nconst createMediaClient = async () => {\n  const ops = {\n    tracker: {\n      rtcConfig,\n      announce,\n    },\n    // secure:true,\n    announce,\n  };\n  if (Platform.OS === 'web') {\n    mediaClient = new WebTorrent(ops);\n  } else {\n    Fetch = (await import('react-native-fetch-api')).fetch;\n    const jsi = await import('react-native-blob-jsi-helper');\n    getBlobForArrayBuffer = jsi.getBlobForArrayBuffer;\n    getArrayBufferForBlob = jsi.getArrayBufferForBlob;\n\n    const wt = (await import('webtorrent/dist/webtorrent.min.js'))\n      .default;\n    mediaClient = new wt(ops);\n  }\n  mediaClient.on('error', function (err) {\n    console.error('mediaclient err: ' + err.message);\n    // reject(err)\n  });\n\n  const resolveWorker = async reg => {\n    const worker = reg.active || reg.waiting || reg.installing;\n    await new Promise(resolvd2 => {\n      const checkState = worker => {\n        mediaWorker = worker;\n        const res = worker.state === 'activated';\n        if (res) {\n          console.info('after load worker');\n          mediaClient.loadWorker(worker, resolvd2);\n        }\n        return res;\n      };\n      if (!checkState(worker)) {\n        mediaWorker.addEventListener('statechange', ({target}) =>\n          checkState(target),\n        );\n      }\n    });\n  };\n  const prs = await new Promise(async resolve => {\n    if (Platform.OS === 'web') {\n      const reg = await navigator.serviceWorker.register(\n        '/sw.min.js',\n      );\n      const wp = await resolveWorker(reg);\n    } else {\n      return resolve(mediaClient);\n    }\n  });\n  return prs;\n};\ncreateMediaClient();\nexport const downloadFileById = async (\n  mediaId: string,\n  folderId?: string,\n  progressCB?: (progress: number) => void,\n) => {\n  const media: Media = await getById(mediaId, folderId);\n  if (media?.extractor === 'wt') {\n    // const wt = await getVideoWT(media);\n    let wt;\n    let stream;\n    let cbt = null;\n    // if (wt) {\n    if (mediaClientFiles[mediaId]) {\n      wt = mediaClientFiles[mediaId];\n    } else {\n      const mediaData = await getVideoWT(media);\n      wt = mediaData.torrent;\n      stream = mediaData.stream;\n    }\n    wt.on('download', bytes => {\n      if (progressCB) progressCB(wt.progress);\n    });\n    if (Platform.OS === 'web') {\n      const blob = await (await fetch(stream)).arrayBuffer();\n      const file = new File([blob], media.filename);\n      return await writeFileOpfs(media, file);\n    }\n  }\n};\n\nconst isVideo = (file: any) =>\n  file?.name?.endsWith('.mp4') ||\n  file?.name?.endsWith('.webm') ||\n  file?.name?.endsWith('.mkv') ||\n  file?.name?.endsWith('.mov');\n\nconst mediaClientFiles = {};\nconst streamUrls: {[key: string]: string | undefined} = {};\nconst mobileStreamingForFileIsRunning: {\n  [key: string]: Promise<string | undefined> | undefined;\n} = {};\nconst processWT = async (\n  wt,\n  media: Media,\n  filename?: string,\n): Promise<string | undefined> => {\n  let file = filename\n    ? wt.files.find(i => i.name || i.filename === filename)\n    : wt.files.find(file => isVideo(file));\n\n  if (!file && wt.files?.length) file = wt.files[0];\n\n  if (streamUrls[file.name]) return streamUrls[file.name];\n\n  if (mobileStreamingForFileIsRunning[file.name])\n    return await mobileStreamingForFileIsRunning[file.name];\n\n  if (!file?.name) throw new Error('no_file_found_in_metadata');\n\n  console.info('file name found', file?.name);\n\n  mobileStreamingForFileIsRunning[file.name] = new Promise(\n    async (resolve, reject) => {\n      try {\n        const process = (err: Error, url: string) => {\n          if (err) return reject(err);\n          resolve(url);\n        };\n        // isVideo(file) ?\n        if (Platform.OS === 'web') {\n          file?.getStreamURL(process);\n        } else {\n          const fileUri = `${ExpoFileSystem.documentDirectory}${media.folderId}/${file.name}`;\n          await ExpoFileSystem.writeAsStringAsync(fileUri, '', {\n            encoding: 'base64',\n          });\n          file.select();\n          const {writeBlob} = await createBlobDB();\n          const stream = file.createReadStream();\n          let countChunks = 0;\n          let lastSave = 0;\n          const saveThreshold = 5;\n          const startTheshold = 70;\n          let saveCount = 0;\n          stream.on('data', (chunk: Uint8Array) => {\n            countChunks++;\n            const chunkId = parseInt(countChunks.toString(), 10);\n            writeBlob(file.name, chunk).then(() => {\n              try {\n                if (\n                  chunkId - lastSave > saveThreshold &&\n                  lastSave !== chunkId\n                ) {\n                  lastSave = countChunks;\n                  saveCount++;\n                  saveFileToData(file.name, fileUri, saveCount).then(\n                    () => {\n                      if (startTheshold >= saveCount)\n                        resolve(fileUri);\n                    },\n                  );\n                }\n              } catch (err) {\n                console.error('write blob err', err);\n              }\n            });\n          });\n\n          file.on('done', async () => {\n            console.info('file done', file.name);\n            saveCount++;\n            await saveFileToData(file.name, fileUri, saveCount);\n            mobileStreamingForFileIsRunning[file.name] = undefined;\n            resolve(fileUri);\n          });\n        }\n      } catch (err) {\n        mobileStreamingForFileIsRunning[file.name] = undefined;\n        console.error('get stream err', err);\n      }\n    },\n  ).catch(err => {\n    mobileStreamingForFileIsRunning[file.name] = undefined;\n    console.error('get stream url error', err);\n  }) as Promise<string | undefined>;\n\n  streamUrls[file.name] = await mobileStreamingForFileIsRunning[\n    file.name\n  ];\n  console.info('after stream url', streamUrls[file.name]);\n  return streamUrls[file.name];\n};\n\nexport const getVideoWT = async (\n  media: Media,\n  filename?: string,\n): Promise<{stream: string | undefined; torrent: any}> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      if (mediaClientFiles[media.id]) {\n        resolve({\n          stream: await processWT(\n            mediaClientFiles[media.id],\n            media,\n            filename,\n          ),\n          torrent: mediaClientFiles[media.id],\n        });\n        return;\n      }\n      // console.info('before media client add', media.filename, );\n      const torrentFileName = 'torrent.file.' + media.id;\n      const torrentBuffer =\n        media?.torrentFile && Platform.OS === 'web'\n          ? new File(\n              [\n                Uint8Array.from(Object.values(media.torrentFile))\n                  .buffer,\n              ],\n              torrentFileName,\n            )\n          : media?.torrentFile &&\n            Uint8Array.from(Object.values(media.torrentFile));\n      // if(torrentBuffer)\n      //   torrentBuffer.name = torrentFileName\n\n      console.info('torrentFile', torrentBuffer);\n\n      mediaClient.add(torrentBuffer || media.url, wt => {\n        try {\n          mediaClientFiles[media.id] = wt;\n          console.info('after mediaclient add', media.filename, wt);\n          processWT(wt, media, filename)\n            .then(streamUrl =>\n              resolve({stream: streamUrl, torrent: wt}),\n            )\n            .catch(err => reject(err));\n        } catch (err) {\n          console.error('getVideoWT err', err);\n          reject(err);\n        }\n      });\n    } catch (err) {\n      console.error('get video wt err', err);\n      reject(err);\n    }\n  });\n};\n\nexport const getWT = async (magnet: string): Promise<any> => {\n  return await new Promise(async (resolve, reject) => {\n    mediaClient.add(magnet, async wt => resolve(wt));\n  });\n};\n\nconst isSharing: {[key: string]: true | undefined} = {};\nexport const shareFileToWT = async (\n  mediaId: string,\n  folderId?: string,\n): Promise<void> => {\n  try {\n    const media: Media = await getById(mediaId, folderId);\n    if (\n      (media.infoHash && isSharing[media.infoHash]) ||\n      isSharing[mediaId]\n    ) {\n      console.info('issharing already', isSharing);\n      return;\n    }\n    if (media.infoHash) isSharing[media.infoHash] = true;\n    isSharing[mediaId] = true;\n\n    let file = await getFileReaderOpfs(media);\n    console.info('filepath', file);\n    if (Platform.OS !== 'web') {\n      // const bs64 = await ExpoFileSystem.readAsStringAsync(\n      //   file as string,\n      //   {encoding: 'base64'},\n      // );\n      // file = `data:${media.fileType || \"video/mp4\"};base64,${bs64}`\n      const fileDL = file.replace('file://', '');\n      // file = await (await fetch(fileDL)).blob()\n      file = new Blob([], {type: media.fileType, size: media.size});\n      // const fsd = await Fetch(fileDL);\n      const stream = streamFile(\n        fileDL,\n        0,\n        5000,\n        media.size as number,\n      );\n      stream.length = media.size;\n      file.length = media.size;\n      // file.size = media.size\n      // file.stream = () => fsd.body;\n      file.stream = () => stream;\n      file.name = media.filename;\n      // file = arrayBuffer;\n      // file = new File(arrayBuffer, media.filename);\n    }\n    console.info('share file wt', file);\n    if (!file) throw 'no_file';\n    // if(Platform.OS === \"web\")\n    shareFile(file, announce, media);\n    // return runOnRuntime(bgRuntime, shareFile)(file, announce, media)\n  } catch (err) {\n    console.error('shareFileToWt err', err);\n  }\n};\nconst onProgress = progress => {\n  // console.info('ontorrentcreateprogress', progress)\n};\nconst shareFile = (\n  file: File | string,\n  announce: string[],\n  media: Media,\n) => {\n  'worklet';\n  new Promise((resolve, reject) => {\n    try {\n      mediaClient.seed(file, {announce, onProgress}, async wt => {\n        try {\n          console.info('after wt create', wt);\n          if (\n            media.extractor === 'wt' &&\n            media.url &&\n            media.url.search('file://') === -1\n          )\n            return resolve(media);\n          media.torrentFile = wt.torrentFile;\n          media.url = wt.magnetURI;\n          media.infoHash = wt.infoHash;\n          media.extractor = 'wt';\n          media.isDownloaded = true;\n\n          await writeItem(media);\n          resolve(media);\n        } catch (err) {\n          console.error('create wt err', err);\n          reject(err);\n        }\n      });\n    } catch (err) {\n      console.error('create wt err', err);\n      reject(err);\n    }\n  });\n};\n","import React, {\n  useState,\n  useEffect,\n  useContext,\n  useRef,\n  createContext,\n} from 'react';\n\nimport {Text} from 'react-native';\n\nimport {NavigationContainer, Theme} from '@react-navigation/native';\n\nimport RootStackNav from './nav';\n\nimport {GestureHandlerRootView} from 'react-native-gesture-handler';\nimport {linking} from '../routes/routes';\nimport {MD3DarkTheme} from 'react-native-paper';\n\nconst AppComponent = () => {\n  return (\n    <GestureHandlerRootView style={{width: '100%', height: '100%'}}>\n      <NavigationContainer\n        // onStateChange={(state)=>console.info('state change', state)}\n        theme={MD3DarkTheme as any}\n        linking={linking}\n        fallback={<Text>Loading...</Text>}>\n        <RootStackNav />\n      </NavigationContainer>\n    </GestureHandlerRootView>\n  );\n};\n\nexport default AppComponent;\n","import React from 'react';\nimport ChatView from './chatview';\nimport {useQuery} from 'react-query';\nimport {ActivityIndicator} from 'react-native-paper';\nimport {useRouteContact} from '../../hooks/useRouteContact';\nimport {useRoute} from '@react-navigation/native';\nimport {getById, getFolderContent, getUserData} from '../../api';\nimport {Contact, FolderType, UserInfo} from '../../types';\nimport {ChatParams} from '../../types/nav';\nimport {useFolder} from '../../hooks/useFolder';\nimport {View, useWindowDimensions} from 'react-native';\nimport {FolderNavigator} from '../folder/foldernavigator';\nimport ContentItem from '../folder/items/contentitem';\nimport {styles} from './styles';\n\nfunction Chat({isEmbed}: {isEmbed?: boolean}) {\n  const route = useRoute();\n  const params = route.params as ChatParams;\n  const chatId = params.chatId;\n  const userQuery = useQuery('UserData', () => getUserData(), {\n    refetchOnMount: false,\n    refetchOnReconnect: false,\n    refetchOnWindowFocus: false,\n    onError(err) {\n      console.error('on get contact error', err);\n    },\n  });\n  const contactQuery = useQuery(\n    'contact_' + chatId,\n    () => getById(chatId),\n    {\n      refetchOnMount: false,\n      refetchOnReconnect: false,\n      refetchOnWindowFocus: false,\n      onError(err) {\n        console.error('on get contact error', err);\n      },\n    },\n  );\n  const isLoading = !userQuery.isFetched || !contactQuery.isFetched;\n  const contact = contactQuery?.data as Contact;\n  const user = userQuery?.data as UserInfo;\n  const dim = useWindowDimensions();\n  const {width} = dim;\n\n  const parentFolderId =\n    params?.parentFolderId ||\n    params?.parentFolderId! ||\n    ((contact && contact.folderId) as string);\n  const parentFolderHook = useFolder(\n    parentFolderId,\n    getFolderContent,\n    getById,\n    FolderType.contact,\n  );\n\n  useRouteContact(contact, isLoading, user, params);\n  const isMobile = width > 700 && !isEmbed ? false : true;\n  return (\n    <View\n      style={{\n        width: '100%',\n        height: '100%',\n        flexDirection: 'row',\n        backgroundColor: 'black',\n      }}>\n      {!isMobile ? (\n        <FolderNavigator\n          folderType={FolderType.contact}\n          renderContent={({item}) => (\n            <ContentItem\n              i={item}\n              key={item.id}\n              dataHook={parentFolderHook}\n              styles={styles}\n              width={!isMobile ? (width / 100) * 70 : width}\n            />\n          )}\n          parentFolderId={parentFolderId}\n          parentFolderHook={parentFolderHook}\n        />\n      ) : null}\n      <View style={{width: isMobile ? '100%' : '70%'}}>\n        {/* {isLoading === true ? (\n          <ActivityIndicator size={72} />\n        ) : ( */}\n        <ChatView params={{user, contact}} chatId={chatId} />\n        {/* )} */}\n      </View>\n    </View>\n  );\n}\n\nexport default Chat;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n  useCallback,\n} from 'react';\nimport {ChatMessage, Contact} from '../../types/Contact';\nimport {UserInfo} from '../../types/UserInfo';\nimport {View, TouchableOpacity, Platform} from 'react-native';\n\nimport {UserCtx} from '../../ctx';\n\nimport {useMessages} from '../../hooks/useMessages';\nimport {\n  ActivityIndicator,\n  List,\n  ProgressBar,\n  useTheme,\n} from 'react-native-paper';\n\nimport {\n  Bubble,\n  BubbleProps,\n  Composer,\n  GiftedAvatar,\n  GiftedChat,\n  InputToolbar,\n} from 'react-native-gifted-chat';\nimport {textAccentColor} from './styles';\n\nexport interface ChatViewParams {\n  chatId: string;\n  params: {contact: Contact; user: UserInfo};\n  isEmbeded?: boolean;\n}\ntype OnSendType = {\n  onSend: (t: {text: string}[], b: boolean) => void;\n  focus: () => void;\n};\n\nconst ChatView = (chatViewParams: ChatViewParams) => {\n  const {chatId, params} = chatViewParams;\n\n  const {user} = params;\n  const {messages, sendMessage, nextPage, isLoadingEarlier} =\n    useMessages(chatId);\n\n  const onSend = (text: string) => sendMessage(text);\n\n  const current = useContext(UserCtx);\n\n  const renderBubble = (\n    props: Readonly<BubbleProps<ChatMessage>>,\n  ) => {\n    return (\n      <Bubble\n        {...props}\n        textStyle={{\n          left: {color: textAccentColor},\n        }}\n        wrapperStyle={{\n          right: {\n            backgroundColor: '#871e69',\n            alignSelf: 'auto',\n            maxWidth: '60%',\n          },\n          left: {\n            backgroundColor: '#344868',\n            alignSelf: 'auto',\n            maxWidth: '60%',\n          },\n        }}\n      />\n    );\n  };\n  const theme = useTheme();\n  const composerRef = useRef<typeof Composer | undefined>();\n  const {surface} = theme.colors;\n  return (\n    <View\n      style={{\n        backgroundColor: current!.colors.backgroundColor,\n        height: '100%',\n        width: '100%',\n        flexDirection: 'row',\n      }}>\n      <GiftedChat\n        scrollToBottom={true}\n        renderLoading={() => <ActivityIndicator size={72} />}\n        messages={messages.map((m: ChatMessage) => {\n          // console.info(\"messages\", m)\n          return {\n            ...m,\n            _id: m.id,\n            user: {\n              _id: m.userId,\n              name: m.userName,\n            },\n          };\n        })}\n        onSend={([message]) => onSend(message.text)}\n        user={{\n          _id: user?.id,\n          avatar: user?.photo,\n        }}\n        renderBubble={renderBubble}\n        timeTextStyle={{}}\n        renderAvatar={props => (\n          <GiftedAvatar\n            {...props}\n            user={props?.currentMessage?.user}\n            avatarStyle={{\n              backgroundColor: 'transparent',\n              borderWidth: 1,\n              borderColor: surface,\n            }}\n          />\n        )}\n        listViewProps={{\n          scrollEventThrottle: 400,\n          onEndReached: () => {\n            console.info('on end of chat reached', isLoadingEarlier);\n            if (isLoadingEarlier === true) return;\n            nextPage();\n          },\n        }}\n        isLoadingEarlier={isLoadingEarlier}\n        loadEarlier={true}\n        onLoadEarlier={() => nextPage()}\n        renderLoadEarlier={props => (\n          <View style={{height: 100, width: '100%'}}>\n            {props.isLoadingEarlier ? (\n              <ActivityIndicator size={32} />\n            ) : (\n              <View style={{height: 100}} />\n            )}\n          </View>\n        )}\n        renderChatEmpty={() => (\n          <View style={{transform: [{scaleY: -1}]}}>\n            <List.Item\n              left={p => (\n                <List.Icon\n                  {...p}\n                  color={textAccentColor}\n                  icon={'lock'}\n                />\n              )}\n              titleStyle={{color: textAccentColor}}\n              title={'Decrypting Messages...'}\n            />\n            <ProgressBar indeterminate visible={true} />\n          </View>\n        )}\n        renderInputToolbar={inputProps => (\n          <InputToolbar\n            {...inputProps}\n            containerStyle={{\n              backgroundColor: 'black',\n              borderColor: 'gray',\n            }}\n            primaryStyle={{borderColor: 'white'}}\n            renderComposer={props => (\n              <Composer\n                ref={composerRef}\n                {...props}\n                textInputStyle={{\n                  color: textAccentColor,\n                  padding: 10,\n                }}\n                multiline={true}\n                textInputAutoFocus={true}\n                textInputProps={{\n                  ...props.textInputProps,\n                  // for enabling the Return key to send a message only on web\n                  blurOnSubmit: Platform.OS === 'web',\n                  onSubmitEditing: e => {\n                    if (props.text && (props as OnSendType).onSend) {\n                      (props as OnSendType).onSend(\n                        [{text: props.text?.trim()}],\n                        true,\n                      );\n                    }\n                    Platform.OS === 'web' &&\n                      setTimeout(() => {\n                        (\n                          e.nativeEvent as unknown as {\n                            target: {focus: () => void};\n                          }\n                        ).target.focus();\n                      }, 300);\n                  },\n                }}\n              />\n            )}\n            renderSend={props => (\n              <TouchableOpacity\n                onPress={() => {\n                  (props as OnSendType).onSend(\n                    [{text: props.text as string}],\n                    true,\n                  );\n                }}>\n                <List.Icon\n                  style={{padding: 10}}\n                  {...props}\n                  icon={'send'}\n                />\n              </TouchableOpacity>\n            )}\n          />\n        )}\n        placeholder=\"Write your message\"\n        showUserAvatar={false}\n      />\n    </View>\n  );\n};\n\nexport default ChatView;\n","import React, {memo} from 'react';\n\nimport {useContacts} from '../../hooks/useContacts';\nimport FolderLibrary from '../folder/folderlibrary';\nimport {\n  getFolderContent,\n  getFoldersByType,\n  writeItem,\n} from '../../api';\n\nconst ContactLibrary = () => {\n  const dataHook = useContacts(\n    getFoldersByType,\n    getFolderContent,\n    writeItem,\n  );\n\n  return <FolderLibrary dataHook={dataHook} />;\n};\n\nexport default memo(ContactLibrary);\n","import React from 'react';\n\nimport {View} from 'react-native';\n\nimport ContactLibrary from './contactlibrary';\n\nconst ContactsView = (props: any) => {\n  return (\n    <View\n      style={{\n        height: '100%',\n        width: '100%',\n      }}>\n      <View>\n        <ContactLibrary {...props} showPublicParty={true} />\n      </View>\n    </View>\n  );\n};\nexport default ContactsView;\n","export const styles = {\n  container: {\n    flex: 1,\n    paddingTop: 0,\n    marginTop: 0,\n  },\n  item: {\n    paddingTop: 15,\n    paddingLeft: 5,\n    fontSize: 12,\n    height: 160,\n    color: 'black',\n    width: 80,\n  },\n  tinyLogo: {\n    marginTop: 2,\n    width: 22,\n    height: 22,\n  },\n  scroll: {\n    height: '100%',\n    display: 'flex',\n    position: 'relative',\n    backgroundColor: 'black',\n    // marginTop,\n    width: '100%',\n  },\n  icon: {\n    paddingLeft: 10,\n  },\n};\nexport const textAccentColor = '#b4c0d1';\n","import React, {memo, useRef} from 'react';\nimport {Platform, View, useWindowDimensions} from 'react-native';\nimport {Banner, Divider, useTheme} from 'react-native-paper';\nimport {useQuery} from 'react-query';\nimport {EditorLayer, EditorProject} from '../../types';\nimport EncoderProject from '../encoder/encoderproject';\nimport EditorForm from './editorform';\nimport EditorVideoComponent from './editorvideo';\nimport {ScrollView} from 'react-native-gesture-handler';\nimport {getFolderContent, getById, writeItem} from '../../api';\nimport Chat from '../contacts/chat';\nimport {EditorPlayControls} from './editorplaycontrols';\nimport {ProjectParams} from '../../types/nav';\nfunction EditorBanner({\n  projectId,\n  height,\n  routeParams,\n}: {\n  projectId: string;\n  height: number;\n  routeParams: ProjectParams;\n}) {\n  const theme = useTheme();\n  const mediaData = useQuery(\n    ['projectdata', projectId],\n    async () => await getById(projectId),\n    {\n      enabled: projectId ? true : false,\n    },\n  );\n  const video2 = useRef<JSX.IntrinsicElements['video'] | undefined>();\n  const mediaRes: EditorProject = mediaData.data;\n\n  const layersQuery = useQuery(\n    ['projectLayers', projectId],\n    async () => {\n      const data = await getFolderContent(projectId);\n      const m = await Promise.all(\n        data.map(async i => {\n          return {\n            ...i,\n            media: await getFolderContent(i?.id),\n          };\n        }),\n      );\n      return m;\n    },\n  );\n  const {width} = useWindowDimensions();\n  const codeWidth = width * 0.24 - 50;\n  const layers: EditorLayer[] | undefined = layersQuery?.data;\n  const isMobile = width < 700 || Platform.OS !== 'web';\n  if (isMobile) {\n    return (\n      <View\n        style={{margin: 0, padding: 0, display: 'flex'}}\n        className=\"video-banner\">\n        {/* <Divider /> */}\n        <Banner\n          visible={projectId ? true : false}\n          theme={theme}\n          style={{\n            backgroundColor: 'black',\n            padding: 0,\n            margin: 0,\n            // height: height/3,\n            width,\n            marginHorizontal: 0,\n            paddingHorizontal: 0,\n            overflow: 'hidden',\n            display: 'flex',\n            flexDirection: 'row',\n          }}\n          contentStyle={{\n            width,\n            flex: 1,\n            height: '100%',\n            padding: 0,\n            margin: 0,\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'stretch',\n            overflow: 'hidden',\n            marginHorizontal: 0,\n            paddingHorizontal: 0,\n          }}>\n          <View\n            style={{\n              width: '100%',\n              height: isMobile ? height / 2.5 : height / 2,\n              borderLeftWidth: isMobile ? 0 : 1,\n              borderRightWidth: isMobile ? 0 : 1,\n              margin: 0,\n              padding: 0,\n              borderLeftColor: 'rgb(73, 69, 79)',\n              borderRightColor: 'rgb(73, 69, 79)',\n              display: 'flex',\n            }}\n            key={2}>\n            <EditorVideoComponent\n              video2={video2}\n              projectId={projectId}\n              mediaRes={mediaRes}\n              layers={layers}\n            />\n            <EditorPlayControls />\n          </View>\n        </Banner>\n      </View>\n    );\n  }\n  return (\n    <View\n      style={{margin: 0, display: 'flex'}}\n      className=\"video-banner\">\n      <Divider />\n      <Banner\n        visible={projectId ? true : false}\n        theme={theme}\n        style={{\n          backgroundColor: 'black',\n          padding: 0,\n          margin: 0,\n          height: '100%',\n          overflow: 'hidden',\n          display: 'flex',\n          flexDirection: 'row',\n        }}\n        contentStyle={{\n          width: '100%',\n          height: '100%',\n          maxWidth: 'auto',\n          padding: 0,\n          margin: 0,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'stretch',\n          overflow: 'hidden',\n        }}>\n        <View\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            width: '100%',\n            height: '100%',\n          }}>\n          <ScrollView\n            style={{\n              width: '24%',\n              height: height / 2,\n              display: 'flex',\n              marginRight: 5,\n            }}\n            key={1}\n            showsHorizontalScrollIndicator={false}\n            showsVerticalScrollIndicator={false}>\n            <EditorForm\n              projectId={projectId}\n              mediaRes={mediaRes}\n              video2={video2}\n              layers={layers}\n              projectQuery={mediaData}\n              writeItem={writeItem}\n            />\n          </ScrollView>\n          <View\n            style={{\n              width: '50%',\n              height: height / 2,\n              borderLeftWidth: 1,\n              borderRightWidth: 1,\n              borderLeftColor: 'rgb(73, 69, 79)',\n              borderRightColor: 'rgb(73, 69, 79)',\n              display: 'flex',\n            }}\n            key={2}>\n            <EditorVideoComponent\n              video2={video2}\n              projectId={projectId}\n              mediaRes={mediaRes}\n              layers={layers}\n            />\n          </View>\n          <View\n            style={{\n              width: '24%',\n              height: height / 2,\n              display: 'flex',\n            }}\n            key={3}>\n            {routeParams?.encoder && (\n              <EncoderProject params={routeParams} />\n            )}\n            {routeParams?.chatId && <Chat />}\n          </View>\n        </View>\n      </Banner>\n      <Divider />\n    </View>\n  );\n}\n\nexport default memo(EditorBanner);\n","import React from 'react';\nimport {\n  HandlerStateChangeEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n  State,\n} from 'react-native-gesture-handler';\n\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  setCaretPosition,\n  setScrollPosition,\n} from '../../store/slices/editor';\nimport {Animated, useWindowDimensions, View} from 'react-native';\n\nfunction EditorCaret() {\n  const dispatch = useAppDispatch();\n  const caretPosition = useAppSelector(\n    state => state.editor.caretPosition,\n  );\n  const {width, height} = useWindowDimensions();\n  const translateX = new Animated.Value(0);\n  const onGestureEvent = Animated.event(\n    [\n      {\n        nativeEvent: {\n          translationX: translateX,\n        },\n      },\n    ],\n    {\n      listener: event => {\n        // console.info('ongesture', event)\n      },\n      useNativeDriver: true,\n    },\n  );\n\n  const onHandlerStateChange = (\n    event: HandlerStateChangeEvent<PanGestureHandlerEventPayload>,\n  ): number | undefined => {\n    if (event.nativeEvent.oldState === State.ACTIVE) {\n      const newOffset = event.nativeEvent.translationX;\n      let fullOffset = caretPosition + newOffset;\n      if (fullOffset < 0) fullOffset = 0;\n\n      translateX.setOffset(fullOffset);\n      translateX.setValue(0);\n      dispatch(setCaretPosition(fullOffset));\n      return fullOffset;\n    }\n  };\n  return (\n    <View style={{cursor: 'pointer', height: 0}}>\n      <PanGestureHandler\n        onGestureEvent={onGestureEvent}\n        onHandlerStateChange={onHandlerStateChange}>\n        <Animated.View\n          style={[\n            {\n              width: 50,\n              opacity: 0.5,\n              height: height / 2,\n              justifyContent: 'center',\n              alignItems: 'center',\n              backgroundColor: 'red',\n              cursor: 'pointer',\n            },\n            {\n              transform: [\n                {\n                  translateX: translateX.interpolate({\n                    inputRange: [0, width],\n                    outputRange: [caretPosition, width],\n                    extrapolate: 'extend',\n                  }),\n                },\n              ],\n            },\n          ]}></Animated.View>\n      </PanGestureHandler>\n    </View>\n  );\n}\nexport default EditorCaret;\n","import {useNavigation, useRoute} from '@react-navigation/native';\nimport {useAppSelector} from '../../store/hooks';\nimport {Animated, View} from 'react-native';\nimport {useMutation, useQueryClient} from 'react-query';\nimport {\n  EditorComment,\n  EditorProject,\n  EncoderProject,\n} from '../../types';\nimport {\n  PanGestureHandler,\n  TouchableOpacity,\n  State,\n} from 'react-native-gesture-handler';\nimport {Avatar, IconButton, List} from 'react-native-paper';\nimport React from 'react';\nconst minDuration = 40;\n\nconst EditorContentItem = ({\n  item,\n  onDragEnd,\n  onDragStart,\n  index,\n  layerIndex,\n  writeItem,\n  parentDataHook,\n}: {\n  item: EncoderProject | EditorComment;\n  folder: EditorProject;\n}) => {\n  const nav = useNavigation();\n  const route = useRoute();\n  const queryClient = useQueryClient();\n  const editor = useAppSelector(state => state.editor);\n  const {pixelsPerSecond} = editor;\n  const {projectId} = route.params;\n  const maxDuration = ((item?.duration || 0) - 1) * pixelsPerSecond;\n  const start = item.encoding?.start || 0;\n  const end = item.encoding?.end || item.duration;\n  let currentDuration = end\n    ? (end - start) * pixelsPerSecond\n    : maxDuration;\n  // if(currentDuration < minDuration)\n  // \tcurrentDuration = minDuration / 2\n  let width = new Animated.Value(currentDuration);\n  const writeItemMutation = useMutation((item: EncoderProject) =>\n    writeItem(item),\n  );\n  const onGestureEvent = Animated.event(\n    [\n      {\n        nativeEvent: {\n          translationX: width,\n        },\n      },\n    ],\n    {\n      listener: event => {\n        // console.info('ongesture', event)\n      },\n      useNativeDriver: true,\n    },\n  );\n  const combIndex = index + layerIndex;\n  let backgroundColor = combIndex % 2 ? 'darkcyan' : 'green';\n  if (combIndex % 3 > 1) backgroundColor = 'darkslateblue';\n\n  const deleteItem = async () => {\n    parentDataHook.onRemoveFolder(item);\n  };\n  const onHandlerStateChange = async event => {\n    if (event.nativeEvent.oldState === State.ACTIVE) {\n      let newvalue = width._value;\n\n      if (newvalue > maxDuration) newvalue = maxDuration;\n      if (newvalue < minDuration) newvalue = minDuration;\n\n      if (width._value !== newvalue) width.setValue(newvalue);\n\n      if (!item.encoding) item.encoding = {};\n      newvalue = newvalue / pixelsPerSecond;\n      if (newvalue < item.encoding?.start || 0)\n        newvalue += item.encoding?.start;\n      item.encoding.end = newvalue;\n      // item.encoding.lastUpdated = new Date().valueOf()\n      await writeItemMutation.mutateAsync(item);\n    }\n  };\n  return (\n    <View key={item.id} style={{height: 68, position: 'relative'}}>\n      <Animated.View\n        style={{\n          width: !item.isContact\n            ? width.interpolate({\n                inputRange: [start, maxDuration],\n                outputRange: [start, maxDuration],\n                extrapolate: 'clamp',\n              })\n            : 75,\n          height: '100%',\n          top: 0,\n          padding: 0,\n          margin: 0,\n          left: item.currentPosition\n            ? pixelsPerSecond * item.currentPosition\n            : 0,\n          position: item.currentPosition ? 'absolute' : 'relative',\n          backgroundColor,\n          zIndex: 2,\n          borderWidth:\n            item.id === route.params.encoder ||\n            item.id === route.params.chatId\n              ? 1\n              : 0,\n          borderRadius: item.isContact ? 100 : 0,\n          borderColor: 'white',\n        }}>\n        {!item.isContact && (\n          <>\n            <PanGestureHandler\n              // onGestureEvent={onGestureEvent}\n              onHandlerStateChange={onHandlerStateChange}>\n              <View\n                style={{\n                  position: 'absolute',\n                  left: 0,\n                  bottom: 0,\n                  transform: [{rotate: '90deg'}],\n                  cursor: 'pointer',\n                  zIndex: 100,\n                }}>\n                <List.Icon\n                  icon={'resize-bottom-right'}\n                  style={{padding: 0, margin: 0}}\n                />\n              </View>\n            </PanGestureHandler>\n            <PanGestureHandler\n              // onGestureEvent={onGestureEvent}\n              onHandlerStateChange={onHandlerStateChange}>\n              <View\n                style={{\n                  position: 'absolute',\n                  right: 0,\n                  bottom: 0,\n                  cursor: 'pointer',\n                  zIndex: 100,\n                }}>\n                <List.Icon\n                  icon={'resize-bottom-right'}\n                  style={{padding: 0, margin: 0}}\n                />\n              </View>\n            </PanGestureHandler>\n          </>\n        )}\n        <List.Item\n          onPress={() =>\n            nav.setParams({\n              ...route.params,\n              encoder: !item.isContact && item.id,\n              chatId: item.isContact && item.id,\n            })\n          }\n          style={{height: '100%'}}\n          title={item.isContact ? '' : item.title}\n          right={() => (\n            <>\n              {!item.isContact && (\n                <TouchableOpacity\n                  onPressIn={onDragStart}\n                  onPressOut={onDragEnd}\n                  style={{pointerEvents: 'auto'}}>\n                  <IconButton size={18} icon={'drag'} />\n                </TouchableOpacity>\n              )}\n              {item.isContact && (\n                <Avatar.Text\n                  size={30}\n                  label={[\n                    item.title?.split(' ')[0][0],\n                    item.title?.split(' ')[1][0],\n                  ].join('')}\n                  style={{\n                    marginLeft: -10,\n                    marginTop: 8,\n                    backgroundColor: 'transparent',\n                  }}\n                />\n              )}\n              <IconButton\n                size={18}\n                icon={'delete'}\n                onPress={deleteItem}\n              />\n            </>\n          )}\n        />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default EditorContentItem;\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {\n  SafeAreaView,\n  View,\n  useWindowDimensions,\n  Clipboard,\n  Platform,\n} from 'react-native';\nimport {\n  Button,\n  Divider,\n  IconButton,\n  List,\n  Menu,\n  TextInput,\n} from 'react-native-paper';\nimport {\n  EditorLayer,\n  EditorProject,\n  FFMpegOutputType,\n  FFMpegPreset,\n} from '../../types';\nimport {\n  genRenderCmd,\n  genExecTime,\n  getTotalTime,\n  encodeProject,\n} from '../../api/media';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  addNewLogLine,\n  setActiveLayer,\n  setCaretPosition,\n  setIsRendering,\n  setRenderProgress,\n  setRenderUrl,\n  setScrollPosition,\n} from '../../store/slices/editor';\nimport {useMutation} from 'react-query';\nimport SyntaxHighlighter from 'react-native-syntax-highlighter';\nimport {xonokai} from 'react-syntax-highlighter/src/styles/prism';\nimport CodeEditor, {\n  CodeEditorSyntaxStyles,\n} from '@rivascva/react-native-code-editor';\nimport {writeItem} from '../../api';\nfunction EditorForm(props: {\n  mediaRes: EditorProject;\n  layers: EditorLayer[];\n}) {\n  const {mediaRes, video2, layers, projectQuery} = props;\n\n  const dispatch = useAppDispatch();\n  const caretPosition = useAppSelector(\n    state => state.editor.caretPosition,\n  );\n  const scrollPosition = useAppSelector(\n    state => state.editor.scrollPosition,\n  );\n  const pixelsPerSecond = useAppSelector(\n    state => state.editor.pixelsPerSecond,\n  );\n  const activeLayer = useAppSelector(\n    state => state.editor.activeLayer,\n  );\n  const isPlaying = useAppSelector(state => state.editor.isPlaying);\n  const isRendering = useAppSelector(\n    state => state.editor.isRendering,\n  );\n  const renderOutputURL = useAppSelector(\n    state => state.editor.renderOutputURL,\n  );\n  const renderProgress = useAppSelector(\n    state => state.editor.renderProgress,\n  );\n  const ffmpegLogs = useAppSelector(state => state.editor.ffmpegLogs);\n  const ffmpegError = useAppSelector(\n    state => state.editor.ffmpegError,\n  );\n  const totalTime = layers?.length ? getTotalTime(layers) : 0;\n  const [showCode, setShowCode] = useState(false);\n  const {width} = useWindowDimensions();\n  const codeEditorRef = useRef();\n  const currentPosition =\n    (caretPosition + scrollPosition) / pixelsPerSecond;\n  const fontSize = 12;\n  const inputWidth = 120;\n  const codeWidth = width * 0.24 - 50;\n  const [outputMenuVisible, setOutputMenuVisible] = useState(false);\n  const [presetMenuVisible, setPresetMenuVisible] = useState(false);\n  const outputTypes = Object.keys(FFMpegOutputType);\n  const execCmd = genRenderCmd(mediaRes, layers, true).execCmd;\n  const codeString = execCmd.join('\\n');\n  const closeMenu = () => {\n    setOutputMenuVisible(false);\n    setPresetMenuVisible(false);\n  };\n  const projectWriteMutation = useMutation(\n    (item: EditorProject) => writeItem(item),\n    {\n      onSuccess: () => {\n        console.info('after writing project');\n        projectQuery.refetch();\n      },\n    },\n  );\n  const processKey = useCallback(\n    ev => {\n      const step = 5;\n      if (ev.code === 'ArrowLeft') {\n        if (!video2.current?.paused) {\n          video2.current?.pause();\n        }\n        console.info(\n          'arrowLeft, caretPosition, scrollPosition',\n          caretPosition,\n          scrollPosition,\n        );\n        caretPosition > 0\n          ? dispatch(setCaretPosition(caretPosition - step))\n          : dispatch(setScrollPosition(scrollPosition - step));\n      }\n      if (ev.code === 'ArrowRight') {\n        if (!video2.current?.paused) {\n          video2.current?.pause();\n        }\n        console.info(\n          'arrowRight, caretPosition, scrollPosition',\n          caretPosition,\n          scrollPosition,\n        );\n        dispatch(setCaretPosition(caretPosition + step));\n      }\n      if (ev.code === 'Space') {\n        if (video2.current?.paused) video2.current?.play();\n        else video2.current?.pause();\n      }\n    },\n    [caretPosition, scrollPosition],\n  );\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      document.onkeyup = ev => processKey(ev);\n    }\n  }, [processKey]);\n  const selectValue = (\n    valueType: keyof EditorProject['editor'],\n    value: string | number,\n  ) => {\n    const np = mediaRes;\n    const numericTypes = [\n      'width',\n      'height',\n      'start',\n      'end',\n      'framerate',\n    ];\n    const nonRenderTypes = ['start', 'end'];\n    const shouldRerender = !nonRenderTypes.includes(valueType);\n    if (numericTypes.includes(valueType) && isNaN(value)) {\n      console.info('invalid type');\n      return;\n    }\n    if (!np.editor) {\n      np.editor = {};\n    }\n    np.editor[valueType] = value;\n\n    if (shouldRerender) np.editor.lastUpdated = new Date().valueOf();\n\n    projectWriteMutation.mutateAsync(np);\n    closeMenu();\n  };\n  return (\n    <>\n      <List.Item\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'clock'} />\n        )}\n        title={genExecTime(currentPosition)}\n        right={p => (\n          <IconButton\n            {...p}\n            size={fontSize}\n            icon={!isPlaying ? 'play' : 'pause'}\n            onPress={() => {\n              if (video2?.current?.paused === true) {\n                // dispatch(resetCurrentVideoStateToMain())\n                dispatch(\n                  setActiveLayer({\n                    activeLayerId: activeLayer,\n                    caretPosition,\n                    scrollPosition,\n                  }),\n                );\n                video2?.current.play();\n              } else {\n                video2?.current.pause();\n                // dispatch(resetCurrentVideoStateToMain())\n              }\n            }}\n          />\n        )}\n      />\n      <Divider key={'divinputrender'} />\n      <Button\n        icon={'movie'}\n        style={{pointerEvents: 'auto', cursor: 'pointer'}}\n        onPress={async () => {\n          dispatch(setIsRendering(true));\n          const render = await encodeProject(\n            mediaRes,\n            layers,\n            false,\n            renderParams => dispatch(setRenderProgress(renderParams)),\n            logLine => dispatch(addNewLogLine(logLine)),\n          );\n          dispatch(setRenderUrl(render));\n          dispatch(setIsRendering(false));\n        }}\n        loading={isRendering}\n        disabled={isRendering}\n        mode={'outlined'}>\n        {isRendering\n          ? `Rendering project: ${parseInt(\n              (renderProgress * 100).toString(),\n              10,\n            )}%`\n          : ffmpegError\n          ? 'Render Project (Error! check logs)'\n          : 'Render Project'}\n      </Button>\n      <Divider key={'divinputdownload'} />\n      {renderOutputURL && (\n        <a\n          href={renderOutputURL}\n          download={true}\n          style={{width: '100%'}}>\n          <Button\n            icon={'film'}\n            style={{\n              pointerEvents: 'auto',\n              cursor: 'pointer',\n              width: '100%',\n            }}\n            mode={'outlined'}>\n            Download video\n          </Button>\n        </a>\n      )}\n      <Divider key={'div01'} />\n      <List.Item\n        key={'start'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'clock-plus'} />\n        )}\n        titleStyle={{fontSize}}\n        title={'Start'}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={0}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('start', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div7'} />\n      <List.Item\n        key={'end'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'clock-minus'} />\n        )}\n        titleStyle={{fontSize}}\n        title={`End`}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={genExecTime(totalTime) || 0}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('end', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div3'} />\n      <List.Item\n        key={'width'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'ruler'} />\n        )}\n        title={`Width`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={mediaRes?.editor?.width}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('width', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div2'} />\n      <List.Item\n        key={'height'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'ruler'} />\n        )}\n        title={`Height`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={mediaRes?.editor?.height}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('height', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'divaspect'} />\n      <List.Item\n        key={'aspect'}\n        left={p => (\n          <List.Icon\n            {...p}\n            style={{fontSize}}\n            icon={'aspect-ratio'}\n          />\n        )}\n        titleStyle={{fontSize}}\n        title={'Aspect Ratio'}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={mediaRes?.editor?.aspectRatio || '16/9'}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"default\"\n              onChangeText={text => selectValue('aspectRatio', text)}\n            />\n          </View>\n        )}\n      />\n      <Divider key={'divrate'} />\n      <List.Item\n        key={'frames'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'movie-roll'} />\n        )}\n        titleStyle={{fontSize}}\n        title={'Frame Rate'}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={mediaRes?.editor?.framerate || 30}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('framerate', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div1'} />\n      <List.Item\n        key={'output'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'file-export'} />\n        )}\n        title={'Output'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <Menu\n              visible={outputMenuVisible}\n              onDismiss={closeMenu}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setOutputMenuVisible(true)}>\n                  {mediaRes?.editor?.output}\n                </Button>\n              }>\n              <>\n                {outputTypes.map(item => (\n                  <Menu.Item\n                    key={item}\n                    onPress={() => selectValue('output', item)}\n                    title={item}\n                  />\n                ))}\n              </>\n            </Menu>\n          </View>\n        )}\n      />\n      <Divider key={'divPreset'} />\n      <List.Item\n        key={'preset'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'file-export'} />\n        )}\n        title={'Preset'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <Menu\n              visible={presetMenuVisible}\n              onDismiss={closeMenu}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setPresetMenuVisible(true)}>\n                  {mediaRes?.editor?.preset}\n                </Button>\n              }>\n              <>\n                {Object.keys(FFMpegPreset).map(item => (\n                  <Menu.Item\n                    key={item}\n                    onPress={() => selectValue('preset', item)}\n                    title={item}\n                  />\n                ))}\n              </>\n            </Menu>\n          </View>\n        )}\n      />\n      <Divider key={'divinputcode2'} />\n      <Button\n        icon={'code-brackets'}\n        onPress={() => setShowCode(!showCode)}>\n        Show FFMpeg Code\n      </Button>\n      {showCode === true ? (\n        <View>\n          <Divider key={'divinputcode'} />\n          <List.Item\n            key={'code'}\n            left={p => <List.Icon {...p} icon={'code-brackets'} />}\n            title={''}\n            titleStyle={{fontSize}}\n            onPress={() => codeEditorRef?.current?.focus()}\n            right={p => (\n              <SafeAreaView style={{width: codeWidth, zIndex: 10}}>\n                <CodeEditor\n                  className={'codeEditor'}\n                  ref={codeEditorRef}\n                  style={{\n                    fontSize,\n                    inputLineHeight: fontSize,\n                    highlighterLineHeight: fontSize,\n                    marginLeft: 0,\n                  }}\n                  language=\"bash\"\n                  syntaxStyle={CodeEditorSyntaxStyles.xonokai}\n                  initialValue={\n                    mediaRes.editor?.code?.join(',') || ''\n                  }\n                  onChange={text => {\n                    if (\n                      text === mediaRes.editor?.code?.join(',') ||\n                      ''\n                    )\n                      return;\n                    selectValue('code', text.split(','));\n                  }}\n                  autoFocus={false}\n                  showLineNumbers\n                />\n              </SafeAreaView>\n            )}\n          />\n          <Divider key={'divoutputcode'} />\n          {codeString && (\n            <List.Item\n              key={'output_code'}\n              left={p => <List.Icon {...p} icon={'code-tags'} />}\n              title=\"\"\n              onPress={() => Clipboard.setString(codeString)}\n              titleStyle={{fontSize}}\n              right={() => (\n                <View style={{width: codeWidth}}>\n                  <SyntaxHighlighter\n                    language=\"bash\"\n                    style={xonokai}\n                    fontSize={fontSize}\n                    pointerEvents={true}\n                    scroll={true}\n                    highlighter={'prism'}>\n                    {codeString}\n                  </SyntaxHighlighter>{' '}\n                </View>\n              )}\n            />\n          )}\n          <Divider key={'divlogs'} />\n          {codeString && (\n            <List.Item\n              key={'output_logs'}\n              left={p => (\n                <List.Icon {...p} icon={'code-parentheses'} />\n              )}\n              title=\"\"\n              onPress={() => Clipboard.setString(ffmpegLogs)}\n              titleStyle={{fontSize}}\n              right={() => (\n                <View\n                  style={{width: codeWidth, pointerEvents: 'auto'}}>\n                  <SyntaxHighlighter\n                    language=\"bash\"\n                    style={xonokai}\n                    customStyle={{\n                      pointerEvents: 'auto',\n                      userSelect: 'all',\n                    }}\n                    fontSize={fontSize}\n                    userSelect={true}\n                    pointerEvents={true}\n                    scroll={true}\n                    highlighter={'prism'}>\n                    {ffmpegLogs}\n                  </SyntaxHighlighter>{' '}\n                </View>\n              )}\n            />\n          )}\n          <Divider key={'div8'} />\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nexport default EditorForm;\n","import React from 'react';\nimport {\n  View,\n  GestureResponderEvent,\n  useWindowDimensions,\n} from 'react-native';\nimport {useFolder} from '../../hooks/useFolder';\nimport {\n  EditorLayer,\n  EncoderProject,\n  Folder,\n  FolderType,\n} from '../../types';\nimport {Divider, IconButton, List, Text} from 'react-native-paper';\n\nimport DragList from 'react-native-draglist';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\n\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport uuid from 'react-native-uuid';\nimport {\n  DocumentPicker,\n  getById,\n  getFolderContent,\n  writeItem,\n} from '../../api';\nimport {startOnboarding} from '../../store/slices/upload';\nimport EditorContentItem from './editorcontentitem';\n\nexport function EditorLayerHeaderComponent(props) {\n  const dataHook = useFolder(\n    props.folderId,\n    getFolderContent,\n    itemId => getById(itemId, props.parentFolderId),\n    FolderType.editor,\n    writeItem,\n  );\n  const {width} = useWindowDimensions();\n  const isMobile = width < 700;\n  const folder = dataHook.folder as EditorLayer;\n  const layer = folder?.editor;\n  const showComments = useAppSelector(\n    state => state.editor.showComments,\n  );\n  const toggleLayerProp = async (propName: keyof typeof layer) => {\n    await writeItem({\n      ...dataHook.folder,\n      editor: {\n        ...(layer || {}),\n        [propName]: layer && layer[propName] === true ? false : true,\n      },\n    } as EditorLayer);\n    dataHook.folderData.refetch();\n  };\n\n  const muteLayer = (_e: GestureResponderEvent) =>\n    toggleLayerProp('muted');\n\n  const hideLayer = (_e: GestureResponderEvent) =>\n    toggleLayerProp('videoDisabled');\n\n  const isCommentLayer =\n    folder?.id !== undefined && layer?.isCommentLayer;\n\n  if (isCommentLayer && !showComments) return <></>;\n  const Controls = (p = {}) => (\n    <View style={{flexDirection: 'row', padding: 0}}>\n      <IconButton\n        {...p}\n        size={iconSize}\n        icon={layer?.muted ? 'volume-off' : 'volume-high'}\n        mode={'outlined'}\n        onPress={muteLayer}\n      />\n      <IconButton\n        size={iconSize}\n        {...p}\n        mode={'outlined'}\n        icon={layer?.videoDisabled ? 'video-off' : 'video'}\n        onPress={hideLayer}\n      />\n      <IconButton\n        size={iconSize}\n        {...p}\n        icon={'delete'}\n        onPress={async () => {\n          await dataHook.onRemoveFolder({\n            id: props.folderId,\n          } as Folder);\n          props.parentHook.folderContentQuery.refetch();\n        }}\n        mode={'outlined'}\n      />\n    </View>\n  );\n  const iconSize = isMobile ? 10 : 14;\n  return (\n    <View style={{display: 'flex', flexDirection: 'row', height: 68}}>\n      <View style={{width: '100%'}}>\n        <Divider />\n        <List.Item\n          title={() =>\n            isMobile ? (\n              <Controls />\n            ) : (\n              <TouchableOpacity\n                onPressIn={props.onDragStart}\n                onPressOut={props.onDragEnd}\n                style={{pointerEvents: 'auto'}}>\n                <Text style={{fontSize: 14}}>\n                  {dataHook.folder?.title}\n                </Text>\n              </TouchableOpacity>\n            )\n          }\n          right={p => {\n            if (isMobile) return null;\n            if (!isCommentLayer) return <Controls />;\n\n            return (\n              <IconButton\n                size={iconSize}\n                {...p}\n                mode={'outlined'}\n                icon={'forum'}\n              />\n            );\n          }}\n        />\n      </View>\n    </View>\n  );\n}\n\nexport function EditorLayerBodyComponent(props) {\n  const dispatch = useAppDispatch();\n  const dataHook = useFolder(\n    props.folderId,\n    getFolderContent,\n    itemId => getById(itemId, props.parentFolderId),\n    FolderType.editor,\n    writeItem,\n  );\n  const folder = dataHook.folder as EditorLayer;\n  const layer = folder?.editor;\n  const showComments = useAppSelector(\n    state => state.editor.showComments,\n  );\n  const isCommentLayer =\n    folder?.id !== undefined && layer?.isCommentLayer;\n  if (isCommentLayer && !showComments) return <></>;\n\n  const renderContent = ({\n    item,\n    onDragEnd,\n    onDragStart,\n    index,\n  }: {\n    item: EncoderProject;\n  }) => (\n    <EditorContentItem\n      onDragEnd={onDragEnd}\n      onDragStart={onDragStart}\n      item={item}\n      index={index}\n      layerIndex={props.layerIndex}\n      writeItem={writeItem}\n      parentDataHook={dataHook}\n    />\n  );\n  const onClickAddContent = async () => {\n    const pickerResult = await DocumentPicker.pickSingle({\n      presentationStyle: 'fullScreen',\n    });\n    console.info('pickerResult', pickerResult, dataHook.folder);\n    // setMediaModalVisible(true)\n    if (!pickerResult) return;\n    const url = pickerResult.uri;\n    let fId = props.folderId;\n    const nd: Media = {\n      id: uuid.v4().toString(),\n      url,\n      title: pickerResult.name,\n      originalId: pickerResult.name,\n      filename: pickerResult.name,\n      fileType: pickerResult.type,\n      folderId: fId,\n      userId: props.userId,\n      date: new Date().valueOf(),\n      isMediaNew: false,\n      isEncoderProject: true,\n      type: pickerResult.file.type,\n      size: pickerResult.file.size,\n      extractor: dataHook.folder?.mnemonic ? 'wt' : 'local',\n    };\n    dispatch(startOnboarding({file: pickerResult.file, media: nd}));\n  };\n  const data = dataHook.folderContent;\n  return (\n    <View style={{display: 'flex', flexDirection: 'row'}}>\n      <View\n        style={{width: '80%', display: 'flex', flexDirection: 'row'}}>\n        {!isCommentLayer && data !== undefined && (\n          <>\n            <DragList\n              horizontal={true}\n              renderItem={renderContent}\n              keyExtractor={item => item.id || item.date.toString()}\n              data={data}\n              onReordered={dataHook.onReordered}\n              style={{width: '100%'}}\n              showsHorizontalScrollIndicator={false}\n              showsVerticalScrollIndicator={false}\n            />\n            <List.Item\n              title={'Add Content'}\n              titleStyle={{fontSize: 14}}\n              style={{pointerEvents: 'auto'}}\n              onPress={() => onClickAddContent()}\n              right={props => (\n                <>\n                  <IconButton\n                    {...props}\n                    icon={'plus'}\n                    onPress={() => onClickAddContent()}\n                    mode={'outlined'}\n                  />\n                </>\n              )}\n            />\n          </>\n        )}\n        {isCommentLayer && data !== undefined && (\n          <>\n            {data?.map((item, index) => (\n              <EditorContentItem\n                item={item}\n                index={index}\n                layerIndex={props.layerIndex}\n                writeItem={writeItem}\n                parentDataHook={dataHook}\n              />\n            ))}\n            <List.Item\n              title={''}\n              titleStyle={{fontSize: 14}}\n              style={{pointerEvents: 'auto', height: 68}}\n              // right={(p)=><IconButton size={14} {...p} mode={\"outlined\"} icon={\"forum\"} /> }\n            />\n          </>\n        )}\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport {IconButton, List} from 'react-native-paper';\nimport {genExecTime} from '../../api';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  setActiveLayer,\n  setIsPlaying,\n} from '../../store/slices/editor';\nimport {useWindowDimensions} from 'react-native';\n\nexport function EditorPlayControls() {\n  const {width} = useWindowDimensions();\n  const dispatch = useAppDispatch();\n  const caretPosition = useAppSelector(\n    state => state.editor.caretPosition,\n  );\n  const scrollPosition = useAppSelector(\n    state => state.editor.scrollPosition,\n  );\n  const pixelsPerSecond = useAppSelector(\n    state => state.editor.pixelsPerSecond,\n  );\n  const isPlaying = useAppSelector(state => state.editor.isPlaying);\n  // const isRendering = useAppSelector(\n  //   state => state.editor.isRendering,\n  // );\n  const activeLayer = useAppSelector(\n    state => state.editor.activeLayer,\n  );\n  const currentPosition =\n    (caretPosition + scrollPosition) / pixelsPerSecond;\n  return (\n    <List.Item\n      style={{\n        width,\n        height: 50,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        backgroundColor: 'transparent',\n        zIndex: 10000,\n      }}\n      left={p => <List.Icon {...p} icon={'clock'} />}\n      title={genExecTime(currentPosition)}\n      right={p => (\n        <IconButton\n          {...p}\n          // size={fontSize}\n          mode=\"contained\"\n          icon={!isPlaying ? 'play' : 'pause'}\n          onPress={async () => {\n            try {\n              // console.info('toggle play', video3.current, video3.current?.playAsync)\n              if (isPlaying === false) {\n                console.info('start play');\n                // dispatch(resetCurrentVideoStateToMain())\n                dispatch(\n                  setActiveLayer({\n                    activeLayerId: activeLayer,\n                    caretPosition,\n                    scrollPosition,\n                  }),\n                );\n                dispatch(setIsPlaying(true));\n                // (video3.current as Video).shouldPlay = true\n              } else {\n                // await (video3.current as Video).stopAsync()\n                dispatch(setIsPlaying(false));\n                // dispatch(resetCurrentVideoStateToMain())\n              }\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React, {useCallback, useEffect, useRef} from 'react';\nimport {\n  View,\n  useWindowDimensions,\n  VirtualizedList,\n} from 'react-native';\nimport {useFolder} from '../../hooks/useFolder';\nimport {EditorLayer, EncoderProject, FolderType} from '../../types';\nimport {useRoute} from '@react-navigation/native';\nimport {Divider, IconButton, List} from 'react-native-paper';\n\nimport DragList from 'react-native-draglist';\nimport {ScrollView} from 'react-native-gesture-handler';\n\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  setScrollPosition,\n  setScrollParams,\n  setCaretPosition,\n  setIsPlaying,\n} from '../../store/slices/editor';\nimport uuid from 'react-native-uuid';\nimport {useMutation} from 'react-query';\nimport {getById, getFolderContent, writeItem} from '../../api';\nimport EditorCaret from './editorcaret';\nimport {ProjectParams} from '../../types/nav';\nimport {\n  EditorLayerBodyComponent,\n  EditorLayerHeaderComponent,\n} from './editorlayer';\nconst folderType = FolderType.editor;\n\nfunction EditorProjectComponent(props: {userId: string}) {\n  const {width} = useWindowDimensions();\n  const isMobile = width < 700;\n  const route = useRoute();\n  const {userId} = props;\n  const scrollPosition = useAppSelector(\n    state => state.editor.scrollPosition,\n  );\n  const scrollParams = useAppSelector(\n    state => state.editor.scrollParams,\n  );\n  const {projectId, parentFolderId} = route.params as ProjectParams;\n  // console.info('parentFolderId', parentFolderId)\n  const getByIdCallback = useCallback(\n    itemId => getById(itemId, parentFolderId),\n    [parentFolderId],\n  );\n  const dispatch = useAppDispatch();\n  const dataHook = useFolder(\n    projectId,\n    getFolderContent,\n    getByIdCallback,\n    FolderType.editor,\n    writeItem,\n  );\n  useEffect(() => {\n    console.info('reset');\n    dispatch(setIsPlaying(false));\n    dispatch(setScrollPosition(0));\n    dispatch(setCaretPosition(0));\n    return () => {\n      dispatch(setIsPlaying(false));\n      dispatch(setScrollPosition(0));\n      dispatch(setCaretPosition(0));\n      // dispatch(setV)\n    };\n  }, [projectId]);\n  const writeItemMutation = useMutation((item: EditorLayer) =>\n    writeItem(item),\n  );\n  const onClickAddLayer = async () => {\n    const layer: EditorLayer = {\n      id: uuid.v4().toString(),\n      title: 'Layer' + parseInt(dataHook.folderContent.length + 1),\n      folderId: projectId,\n      userId,\n      isEditorLayer: true,\n      orderId: dataHook.folderContent.length + 1,\n      folderType,\n      isFolder: false,\n      date: new Date().valueOf(),\n      mnemonic: dataHook.folder?.mnemonic,\n    };\n    await writeItemMutation.mutateAsync(layer);\n    dataHook.folderContentQuery.refetch();\n  };\n  const renderContent = ({\n    item,\n    onDragEnd,\n    onDragStart,\n    index,\n  }: {\n    item: EncoderProject;\n  }) => (\n    <EditorLayerHeaderComponent\n      {...props}\n      key={item.id}\n      onDragEnd={onDragEnd}\n      onDragStart={onDragStart}\n      folderId={item.id}\n      layerIndex={index}\n      parentHook={dataHook}\n      parentFolderId={parentFolderId}\n    />\n  );\n  const horizontalScroll = useRef();\n  const isOpen = true;\n  // const\n  const contentContainerWidth = isMobile\n    ? isOpen\n      ? '60%'\n      : '90%'\n    : '80%';\n  const controlsContainerWidth = isMobile\n    ? isOpen\n      ? '40%'\n      : 0\n    : '20%';\n  return (\n    <ScrollView\n      style={{width, height: '100%', position: 'absolute'}}\n      showsHorizontalScrollIndicator={false}\n      showsVerticalScrollIndicator={false}>\n      <View style={{display: 'flex', flexDirection: 'column'}}>\n        <View style={{width: '100%', flexDirection: 'row'}}>\n          <View style={{width: controlsContainerWidth}}>\n            {dataHook.folderContent !== undefined && (\n              <DragList\n                renderItem={renderContent}\n                keyExtractor={item => item.id || item.date.toString()}\n                data={dataHook.folderContent}\n                onReordered={async (start, end) => {\n                  await dataHook.onReordered(start, end);\n                }}\n                showsHorizontalScrollIndicator={false}\n                showsVerticalScrollIndicator={false}\n              />\n            )}\n          </View>\n          <ScrollView\n            horizontal={true}\n            style={{\n              width: contentContainerWidth,\n              display: 'flex',\n              flexDirection: 'row',\n              height: '100%',\n            }}\n            onScroll={e => {\n              dispatch(\n                setScrollPosition(e.nativeEvent.contentOffset.x),\n              );\n            }}\n            ref={e => {\n              horizontalScroll.current = e;\n              const totalWidth =\n                horizontalScroll?.current?.clientWidth;\n              const totalScroll =\n                horizontalScroll.current?.scrollWidth;\n              if (\n                scrollParams.totalScroll !== totalScroll ||\n                scrollParams.totalWidth !== totalWidth\n              ) {\n                dispatch(\n                  setScrollParams({\n                    totalWidth,\n                    totalScroll,\n                  }),\n                );\n              }\n              horizontalScroll?.current?.scrollTo({\n                x: scrollPosition,\n              });\n            }}\n            scrollEventThrottle={50}\n            showsHorizontalScrollIndicator={false}\n            showsVerticalScrollIndicator={false}>\n            <VirtualizedList\n              renderItem={({item, index}) => (\n                <EditorLayerBodyComponent\n                  {...props}\n                  key={item.id}\n                  folderId={item.id}\n                  layerIndex={index}\n                  parentFolderId={parentFolderId}\n                />\n              )}\n              keyExtractor={item => item.id || item.date.toString()}\n              getItem={dataHook.getContentItem}\n              getItemCount={dataHook.getContentCount}\n              data={dataHook.folderContent}\n              showsHorizontalScrollIndicator={false}\n              showsVerticalScrollIndicator={false}\n            />\n          </ScrollView>\n        </View>\n        <View style={{width: controlsContainerWidth}}>\n          <Divider />\n          <List.Item\n            titleStyle={{fontSize: 14}}\n            onPress={() => onClickAddLayer()}\n            right={props => (\n              <>\n                <IconButton\n                  {...props}\n                  icon={'plus'}\n                  mode={'outlined'}\n                />\n              </>\n            )}\n          />\n        </View>\n        <View\n          style={{\n            width: contentContainerWidth,\n            position: 'absolute',\n            height: 0,\n            left: controlsContainerWidth,\n          }}>\n          <EditorCaret />\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\nexport default EditorProjectComponent;\n","import React, {useState} from 'react';\nimport {Appbar, Menu} from 'react-native-paper';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  setPixelsPerSecond,\n  setShowComments,\n} from '../../store/slices/editor';\nimport {\n  createNewParty,\n  getActiveProjectLayer,\n  sendChatMessage,\n  getById,\n  writeItem,\n} from '../../api';\nimport {useQuery, useQueryClient} from 'react-query';\nimport {\n  EditorComment,\n  EditorLayer,\n  EncoderProject,\n} from '../../types';\nimport {getFolderContent, getUserData} from '../../api';\n\nimport uuid from 'react-native-uuid';\nimport {Platform, useWindowDimensions} from 'react-native';\n\nexport default function EditorToolBar(props) {\n  const {projectId, routeParams} = props;\n  const {encoder} = routeParams;\n  const dispatch = useAppDispatch();\n  const queryClient = useQueryClient();\n  const caretPosition = useAppSelector(\n    state => state.editor.caretPosition,\n  );\n  const scrollPosition = useAppSelector(\n    state => state.editor.scrollPosition,\n  );\n  const pixelsPerSecond = useAppSelector(\n    state => state.editor.pixelsPerSecond,\n  );\n  const showComments = useAppSelector(\n    state => state.editor.showComments,\n  );\n  const {width} = useWindowDimensions();\n  const isMobile = width < 700 || Platform.OS !== 'web';\n  const showEditor = useAppSelector(state => state.editor.showEditor);\n  const currentPosition =\n    (caretPosition + scrollPosition) / pixelsPerSecond;\n  const [isRefreshing, setRefreshing] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const onHideMenu = () => setMenuOpen(false);\n  const openMenu = () => setMenuOpen(true);\n\n  const layersQuery = useQuery(\n    ['projectLayersToolbar', projectId],\n    async () => {\n      const data = await getFolderContent(projectId);\n      const m = await Promise.all(\n        data.map(async i => {\n          return {\n            ...i,\n            media: await getFolderContent(i?.id),\n          };\n        }),\n      );\n      return m;\n    },\n  );\n  const layers: EditorLayer[] | undefined = layersQuery.data;\n  const forgetEverything = async () => {\n    await layersQuery.refetch();\n    await queryClient.refetchQueries(['folderData_' + projectId], {});\n    await queryClient.refetchQueries(['folderContent_' + projectId]);\n    await queryClient.refetchQueries(['project_' + projectId]);\n    await queryClient.refetchQueries(['projectLayers', projectId]);\n    await queryClient.refetchQueries(['encodedMedia', projectId]);\n    await queryClient.refetchQueries([\n      'folderContent_' + projectId + '_comments',\n    ]);\n    const folders = layers?.map(layer => layer.id);\n    console.info('project.folders', folders);\n    if (folders?.length)\n      for (let f = 0; f < folders.length; f++) {\n        const fId = folders[f];\n        queryClient.refetchQueries(['folderContent_' + fId]);\n      }\n  };\n\n  const onClickSetScale = (scale: '+' | '-') => {\n    let nscale =\n      scale === '+' ? pixelsPerSecond * 1.25 : pixelsPerSecond * 0.75;\n    if (nscale < 0.5) nscale = 0.5;\n    dispatch(setPixelsPerSecond(nscale));\n  };\n\n  const onClickCopy = async () => {\n    if (isRefreshing) {\n      return;\n    }\n    setRefreshing(true);\n    try {\n      const item = await getById(encoder, projectId);\n      item.isCopy = item.isCopy || item.id;\n      item.id = uuid.v4().toString();\n      item.orderId += 1;\n      item.createdAt = new Date().valueOf().toString();\n      console.info('click copy', {encoder, currentPosition, item});\n      await writeItem(item);\n      await queryClient.refetchQueries(['projectLayers', projectId]);\n      await queryClient.refetchQueries([\n        'folderContent_' + item.folderId,\n      ]);\n      await forgetEverything();\n    } catch (err) {\n      console.error('oncClickCopy', err);\n    }\n    setRefreshing(false);\n  };\n\n  const onClickCut = async () => {\n    if (isRefreshing) {\n      return;\n    }\n    setRefreshing(true);\n    try {\n      const currentData = getActiveProjectLayer(\n        layers,\n        currentPosition,\n      );\n      const item: EncoderProject = await getById(encoder, projectId);\n      const offsetPosition =\n        currentPosition -\n        currentData.offset +\n        (item.encoding.start || 0);\n\n      const nitem = JSON.parse(JSON.stringify({...item}));\n      nitem.isCopy = item.isCopy || item.id;\n      nitem.id = uuid.v4().toString();\n      nitem.orderId -= 1;\n      nitem.encoding.start = offsetPosition;\n      nitem.encoding.end = item.encoding.end || item.duration || 0;\n      nitem.createdAt = new Date().valueOf().toString();\n\n      item.encoding.end = offsetPosition;\n      await writeItem(item);\n      await writeItem(nitem);\n      await forgetEverything();\n    } catch (err) {\n      console.error('oncClickCut', err);\n    }\n    setRefreshing(false);\n  };\n\n  const onClickRefresh = async () => {\n    try {\n      if (isRefreshing) {\n        return;\n      }\n      setRefreshing(true);\n\n      await forgetEverything();\n    } catch (err) {\n      console.error('onClickRefresh', err);\n    }\n    setRefreshing(false);\n  };\n  const onClickShowComments = () =>\n    dispatch(setShowComments(!showComments));\n\n  const onClickAddComment = async () => {\n    const user = await getUserData();\n    const id = uuid.v4().toString();\n    const mnemonic = layers[0]?.mnemonic;\n    const comment: EditorComment = {\n      id,\n      partyId: id,\n      userId: user.id,\n      title: user.name,\n      currentPosition,\n      isContact: true,\n      isParty: true,\n      authorName: user.name,\n      name: user.name,\n      mnemonic,\n      folderId: projectId + '_comments',\n      isFolder: true,\n      duration: 10,\n      encoding: {\n        start: 0,\n        end: 10,\n      },\n    };\n    await createNewParty(comment);\n    await forgetEverything();\n    console.info(mnemonic);\n    await sendChatMessage(\n      comment.id,\n      user.name + ' has created comment',\n      mnemonic!,\n      {system: true},\n    );\n  };\n\n  const onClickUndo = () => {};\n\n  const onClickRedo = () => {};\n\n  return (\n    <>\n      {!isMobile ? (\n        <>\n          <Appbar.Action\n            icon=\"refresh\"\n            disabled={isRefreshing}\n            onPress={() => onClickRefresh()}\n          />\n          {showComments ? (\n            <Appbar.Action\n              icon=\"comment-plus\"\n              onPress={() => onClickAddComment()}\n            />\n          ) : null}\n          <Appbar.Action\n            icon={\n              showComments ? 'comment-eye' : 'comment-eye-outline'\n            }\n            onPress={() => onClickShowComments()}\n          />\n          <Appbar.Action\n            icon=\"magnify-plus-outline\"\n            onPress={() => onClickSetScale('+')}\n          />\n          <Appbar.Action\n            icon=\"magnify-minus-outline\"\n            onPress={() => onClickSetScale('-')}\n          />\n          {showEditor && (\n            <Appbar.Action\n              disabled={isRefreshing}\n              icon=\"content-cut\"\n              onPress={() => onClickCut()}\n            />\n          )}\n          {showEditor && (\n            <Appbar.Action\n              disabled={isRefreshing}\n              icon=\"content-copy\"\n              onPress={() => onClickCopy()}\n            />\n          )}\n        </>\n      ) : (\n        <Menu\n          visible={menuOpen}\n          onDismiss={onHideMenu}\n          anchor={\n            <Appbar.Action icon={'dots-grid'} onPress={openMenu} />\n          }>\n          <Menu.Item\n            leadingIcon=\"refresh\"\n            title=\"Refresh\"\n            disabled={isRefreshing}\n            onPress={() => onClickRefresh()}\n          />\n          <Menu.Item\n            leadingIcon=\"comment-plus\"\n            title=\"Add comment\"\n            onPress={() => onClickAddComment()}\n          />\n          <Menu.Item\n            title=\"Toggle comments\"\n            leadingIcon={\n              showComments ? 'comment-eye' : 'comment-eye-outline'\n            }\n            onPress={() => onClickShowComments()}\n          />\n          <Menu.Item\n            title=\"Magnify timeline\"\n            leadingIcon=\"magnify-plus-outline\"\n            onPress={() => onClickSetScale('+')}\n          />\n          <Menu.Item\n            title=\"Scale timeline\"\n            leadingIcon=\"magnify-minus-outline\"\n            onPress={() => onClickSetScale('-')}\n          />\n          {showEditor && (\n            <Menu.Item\n              title=\"Cut Content\"\n              disabled={isRefreshing}\n              leadingIcon=\"content-cut\"\n              onPress={() => onClickCut()}\n            />\n          )}\n          {showEditor && (\n            <Menu.Item\n              title=\"Copy Content\"\n              disabled={isRefreshing}\n              leadingIcon=\"content-copy\"\n              onPress={() => onClickCopy()}\n            />\n          )}\n        </Menu>\n      )}\n    </>\n  );\n}\n","import React, {Ref, RefObject, useCallback, useRef} from 'react';\nimport {\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n} from 'react-native';\nimport {IconButton, List, ProgressBar} from 'react-native-paper';\nimport {useQuery} from 'react-query';\nimport {\n  CBProgressParams,\n  genExecTime,\n  getActiveProjectLayer,\n  getProjectMedia,\n} from '../../api/media';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {useIsFocused} from '@react-navigation/native';\nimport {\n  setEncoderProgress,\n  setCaretPosition,\n  setScrollPosition,\n  setIsPlaying,\n  setActiveLayer,\n} from '../../store/slices/editor';\nimport {ResizeMode, Video} from 'expo-av';\nimport {EditorLayer, EditorProject, Media} from '../../types';\n\nconst styles = StyleSheet.create({\n  video: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  chip: {\n    fontSize: 18,\n  },\n});\nfunction EditorVideoComponent({\n  video2,\n  mediaRes,\n  layers,\n  projectId,\n}: {\n  projectId: string;\n  layers: EditorLayer[];\n  mediaRes: EditorProject;\n  video2: RefObject<JSX.IntrinsicElements['video'] | undefined>;\n}) {\n  const dispatch = useAppDispatch();\n  const encoderProgress = useAppSelector(\n    state => state.editor.encoderProgress,\n  );\n  const pixelsPerSecond = useAppSelector(\n    state => state.editor.pixelsPerSecond,\n  );\n  const caretPosition = useAppSelector(\n    state => state.editor.videoCaretPosition,\n  );\n  const scrollPosition = useAppSelector(\n    state => state.editor.videoScrollPosition,\n  );\n  const video3 = useRef<Video | null>();\n  const isPlaying = useAppSelector(state => state.editor.isPlaying);\n  const canScroll = useAppSelector(state => state.editor.canScroll);\n  const scroll = useAppSelector(state => state.editor.scroll);\n  const activeLayer = useAppSelector(\n    state => state.editor.activeLayer,\n  );\n  const focused = useIsFocused();\n  const currentPosition =\n    (caretPosition + scrollPosition) / pixelsPerSecond || 0.0;\n  const encodedMediaQuery = useQuery(\n    ['encodedMedia', projectId, currentPosition, activeLayer],\n    async () =>\n      await getProjectMedia(\n        layers!,\n        currentPosition,\n        (progress: CBProgressParams) =>\n          dispatch(setEncoderProgress(progress.progress)),\n      ),\n    {\n      enabled:\n        mediaRes?.id !== undefined && layers?.length && focused\n          ? true\n          : false,\n      keepPreviousData: false,\n      onSuccess: () => {\n        console.info('after query');\n        if (video2?.current)\n          video2.current.currentPosition =\n            encodedMediaQuery.data?.currentPosition || 0.0;\n      },\n    },\n  );\n\n  const queryPosition =\n    encodedMediaQuery.data?.currentPosition || 0.0;\n  const offsetPosition = encodedMediaQuery.data?.offset || 0.0;\n  // console.info('queryPosition', queryPosition)\n  // console.info('offsetPosition', offsetPosition)\n  const onTimeUpdate = useCallback(\n    (currentTime: number, paused: boolean) => {\n      try {\n        const newtime =\n          (offsetPosition || 0) +\n          currentTime -\n          (encodedMediaQuery.data?.activeMedia.encoding.start || 0);\n\n        if (newtime >= encodedMediaQuery.data?.totalTime) {\n          if (Platform.OS === 'web') video2.current?.pause();\n          else video3.current?.setStatusAsync({shouldPlay: false});\n          dispatch(setIsPlaying(false));\n        }\n\n        const newoffset = newtime * pixelsPerSecond;\n        const activeLayerId = getActiveProjectLayer(layers!, newtime)\n          ?.activeMedia?.id;\n        const layerSwitched =\n          activeLayerId && activeLayerId !== activeLayer;\n        let nscrollPosition = 0;\n        let ncaretPosition = caretPosition;\n\n        if (!paused) {\n          if (canScroll) {\n            const offset = newoffset - scroll;\n            console.info('offset', offset, scroll, newoffset);\n            if (offset > 0) {\n              const diff = newoffset - offset;\n              console.info('diff', diff, offset, scroll, newoffset);\n              nscrollPosition = diff;\n              ncaretPosition = offset;\n            } else {\n              nscrollPosition = newoffset - caretPosition;\n            }\n          } else {\n            ncaretPosition = newoffset;\n          }\n          dispatch(setIsPlaying(true));\n          dispatch(setCaretPosition(ncaretPosition));\n          dispatch(setScrollPosition(nscrollPosition));\n        }\n        if (paused && isPlaying && Platform.OS === 'web')\n          dispatch(setIsPlaying(false));\n        if (layerSwitched) {\n          // console.info('layerSwitched', layerSwitched, activeLayer, activeLayerId)\n          dispatch(\n            setActiveLayer({\n              activeLayerId,\n              scrollPosition: nscrollPosition,\n              caretPosition: ncaretPosition,\n            }),\n          );\n        }\n      } catch (err) {\n        console.error('ontimeupdate rr', err);\n      }\n    },\n    [encodedMediaQuery, canScroll, isPlaying, layers, offsetPosition],\n  );\n  const {width, height} = useWindowDimensions();\n  const fontSize = 12;\n  return (\n    <>\n      {(encoderProgress && encoderProgress !== 1) ||\n      encodedMediaQuery.isFetching ? (\n        <ProgressBar\n          style={{\n            height: '100%',\n            width: '100%',\n            position: 'absolute',\n            top: 0,\n          }}\n          progress={encoderProgress}\n        />\n      ) : (\n        <>\n          {Platform.OS === 'web' ? (\n            <video\n              controls={false}\n              style={styles.video}\n              src={(encodedMediaQuery.data?.url as string) || ''}\n              muted={encodedMediaQuery.data?.muted}\n              ref={e => {\n                // console.info('rerender video')\n                // console.info(\"ref\", e, encodedMediaQuery.data)\n                if (e) {\n                  e.currentTime = queryPosition;\n                  video2.current = e;\n                  if (isPlaying) e.play();\n                }\n              }}\n              onPlaying={e => {\n                dispatch(setIsPlaying(true));\n              }}\n              onPause={e => {\n                dispatch(setIsPlaying(false));\n              }}\n              onEnded={p => {\n                console.info('ended', p);\n              }}\n              onTimeUpdate={e =>\n                onTimeUpdate(\n                  (\n                    e.nativeEvent\n                      .target as JSX.IntrinsicElements['video']\n                  ).currentTime,\n                  (\n                    e.nativeEvent\n                      .target as JSX.IntrinsicElements['video']\n                  ).paused,\n                )\n              }\n            />\n          ) : (\n            <Video\n              source={{\n                uri: (encodedMediaQuery.data?.url as string) || '',\n              }}\n              positionMillis={parseInt(queryPosition * 1000)}\n              shouldPlay={isPlaying}\n              ref={e => {\n                console.info('onref', e);\n                video3.current = e;\n                if (isPlaying) e?.setStatusAsync({shouldPlay: true});\n              }}\n              isMuted={encodedMediaQuery.data?.muted}\n              style={{\n                width,\n                height: height / 3,\n                position: 'absolute',\n                left: -15,\n                top: 0,\n                padding: 0,\n                margin: 0,\n              }}\n              volume={1}\n              resizeMode={ResizeMode.CONTAIN}\n              useNativeControls={false}\n              onPlaybackStatusUpdate={async status => {\n                if (status.isLoaded && status.positionMillis) {\n                  onTimeUpdate(\n                    status.positionMillis / 1000,\n                    !status.isPlaying,\n                  );\n                }\n              }}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n}\nexport default EditorVideoComponent;\n","import React, {useRef} from 'react';\nimport {ImageBackground, StyleSheet, View} from 'react-native';\nimport {\n  ActivityIndicator,\n  Banner,\n  Chip,\n  Divider,\n  ProgressBar,\n  Text,\n  useTheme,\n} from 'react-native-paper';\nimport {useQuery, useQueryClient} from 'react-query';\nimport {EncoderProject} from '../../types';\nimport {\n  getFileOpfs,\n  encodeMedia,\n  getVideoWT,\n  getById,\n} from '../../api';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {useIsFocused} from '@react-navigation/native';\nimport {niceBytes} from '../../api/util';\nimport {setEncoderProgress} from '../../store/slices/encoder';\n\nconst styles = StyleSheet.create({\n  video: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  chip: {\n    fontSize: 18,\n  },\n});\nexport default function EncoderBanner({\n  projectId,\n  height,\n  folderId,\n}: {\n  projectId: string;\n  height: number;\n  folderId: string;\n}) {\n  const dispatch = useAppDispatch();\n  const state = useAppSelector(state => state.encoder);\n  const theme = useTheme();\n  const queryClient = useQueryClient();\n  const mediaData = useQuery(\n    ['projectdata', projectId],\n    async () => await getById(projectId, folderId),\n    {\n      enabled: projectId ? true : false,\n    },\n  );\n  const focused = useIsFocused();\n\n  const mediaRes = mediaData.data as EncoderProject | undefined;\n  // const {encoder} = mediaRes\n\n  const localMediaQuery = useQuery(\n    ['localMedia', projectId],\n    async () => {\n      if (!mediaRes?.id) return undefined;\n      // const folder = await getById(mediaRes.folderId)\n      let file;\n      try {\n        file = await getFileOpfs(mediaRes);\n      } catch (err) {\n        console.error(err);\n      }\n\n      if (mediaRes.extractor === 'wt' && !file)\n        file = await getVideoWT(mediaRes);\n\n      return file;\n    },\n    {\n      enabled:\n        mediaData.isFetched && focused && mediaRes?.id !== undefined\n          ? true\n          : false,\n    },\n  );\n\n  const encodedMediaQuery = useQuery(\n    ['encodedMedia', projectId],\n    async () =>\n      mediaRes?.id &&\n      encodeMedia(mediaRes, params =>\n        dispatch(setEncoderProgress(params.progress)),\n      ),\n    {\n      enabled:\n        mediaData.isFetched && focused && mediaRes?.id !== undefined\n          ? true\n          : false,\n    },\n  );\n\n  const encodedFileSize = useQuery(\n    ['encodedFileSize', projectId],\n    async () => {\n      // console.info(\"encoded url\", encodedMediaQuery.data)\n      if (!encodedMediaQuery.data) return '0';\n      const head = await fetch(encodedMediaQuery.data, {\n        cache: 'no-cache',\n      });\n      // console.info('head', head)\n      return head.headers.get('Content-Length')?.toString();\n    },\n    {\n      enabled:\n        !mediaData.isFetching &&\n        focused &&\n        encodedMediaQuery.data &&\n        encodedMediaQuery.data.search('blob') > -1\n          ? true\n          : false,\n\n      retry: false,\n    },\n  );\n\n  const mediaLoading =\n    mediaData.isFetching || localMediaQuery.isFetching;\n  console.info('encodedFileSize', encodedFileSize.data);\n  const mediaSrc = localMediaQuery.data;\n  const video2 = useRef<JSX.IntrinsicElements['video']>();\n  const video1 = useRef<JSX.IntrinsicElements['video']>();\n  if (!mediaRes) {\n    return <ActivityIndicator size={72} />;\n  }\n  return (\n    <>\n      <Divider />\n      <Banner\n        visible={projectId ? true : false}\n        theme={theme}\n        style={{\n          backgroundColor: 'black',\n          padding: 0,\n          margin: 0,\n        }}\n        contentStyle={{\n          width: '100%',\n          height: '100%',\n          maxWidth: 'auto',\n          padding: 0,\n          margin: 0,\n        }}>\n        <View\n          style={{\n            width: '50%',\n            height: height / 2,\n            borderRightWidth: 1,\n            borderRightColor: 'rgb(73, 69, 79)',\n          }}>\n          <Text style={{textAlign: 'left', zIndex: 10}}>\n            <Chip textStyle={styles.chip}>\n              Before: {mediaRes?.size && niceBytes(mediaRes.size)}\n            </Chip>\n          </Text>\n          {mediaLoading ? <ActivityIndicator size={72} /> : null}\n\n          {projectId && !mediaLoading && focused ? (\n            <video\n              controls={true}\n              style={styles.video}\n              onPlaying={e => {\n                const {currentTime} = e.nativeEvent.target;\n                window.video1 = e.nativeEvent.target;\n                if (video2.current)\n                  video2.current.currentTime = currentTime;\n                if (video2.current && video2.current.paused)\n                  video2.current.play();\n              }}\n              onPause={e => {\n                const {currentTime} = e.nativeEvent.target;\n                if (video2.current)\n                  video2.current.currentTime = currentTime;\n                if (video2.current && !video2.current.paused)\n                  video2.current.pause();\n              }}\n              onEnded={p => {\n                console.info('ended', p);\n              }}\n              onTimeUpdate={e => {\n                const {currentTime, paused} = e.nativeEvent.target;\n                if (video2.current && paused)\n                  video2.current.currentTime = currentTime;\n              }}\n              ref={video1}\n              src={mediaSrc}\n            />\n          ) : null}\n        </View>\n        <View\n          style={{\n            width: '50%',\n            height: height / 2,\n            borderLeftWidth: 1,\n            borderLeftColor: 'rgb(73, 69, 79)',\n          }}>\n          {encodedMediaQuery.isFetching ? (\n            <>\n              <Text style={{textAlign: 'right', zIndex: 10}}> </Text>\n              <ProgressBar\n                style={{\n                  height: '100%',\n                  position: 'absolute',\n                  top: -25,\n                }}\n                progress={state.encoderProgress}\n              />\n              <View\n                style={{\n                  position: 'absolute',\n                  top: '40%',\n                  display: 'flex',\n                  width: '100%',\n                }}>\n                <Text style={{textAlign: 'center', color: 'coral'}}>\n                  Loading{' '}\n                  {parseFloat(\n                    Math.abs(state.encoderProgress * 100),\n                  ).toFixed(2)}\n                  %\n                </Text>\n              </View>\n            </>\n          ) : (\n            <Text style={{textAlign: 'right', zIndex: 10}}>\n              <Chip textStyle={styles.chip}>\n                After:{' '}\n                {!encodedFileSize.isFetching &&\n                  encodedFileSize.data &&\n                  niceBytes(encodedFileSize.data)}\n              </Chip>\n              <a href={encodedMediaQuery.data} download={true}>\n                <Chip textStyle={styles.chip} onPress={() => {}}>\n                  Download\n                </Chip>\n              </a>\n            </Text>\n          )}\n\n          {projectId && !encodedMediaQuery.isFetching && focused ? (\n            <>\n              {mediaRes?.encoding?.output === 'mp4' && (\n                <video\n                  controls={true}\n                  style={styles.video}\n                  onPlaying={e => {\n                    if (video1.current?.paused)\n                      video1.current?.play();\n                  }}\n                  onPause={e => {\n                    if (!video1.current?.paused)\n                      video1.current?.pause();\n                  }}\n                  ref={video2}\n                  src={encodedMediaQuery.data}\n                />\n              )}\n              {mediaRes?.encoding?.output === 'gif' && (\n                <ImageBackground\n                  source={{uri: encodedMediaQuery.data}}\n                  resizeMode=\"contain\"\n                  style={styles.video}\n                />\n              )}\n            </>\n          ) : null}\n        </View>\n      </Banner>\n      <Divider />\n    </>\n  );\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  memo,\n} from 'react';\nimport {SafeAreaView, View, useWindowDimensions} from 'react-native';\nimport {\n  ActivityIndicator,\n  Button,\n  Divider,\n  List,\n  Menu,\n  TextInput,\n} from 'react-native-paper';\nimport {useMutation, useQuery, useQueryClient} from 'react-query';\nimport {findBy, genExecCmd, getById, writeItem} from '../../api';\n// import {genExecCmd} from '../../api/media';\nimport {useRoute} from '@react-navigation/native';\nimport {\n  EncoderProject as EncoderProjectType,\n  FFMpegOutputType,\n  FFMpegPreset,\n} from '../../types';\nimport {ScrollView} from 'react-native-gesture-handler';\nimport SyntaxHighlighter from 'react-native-syntax-highlighter';\nimport {xonokai} from 'react-syntax-highlighter/src/styles/prism';\nimport CodeEditor, {\n  CodeEditorSyntaxStyles,\n} from '@rivascva/react-native-code-editor';\nimport {ProjectParams} from '../../types/nav';\nfunction EncoderProject(props?: {params?: ProjectParams}) {\n  // const {writeItem} = props;\n  const route = useRoute();\n  const queryClient = useQueryClient();\n  const [showCode, setShowCode] = useState(false);\n  const params = route.params as ProjectParams;\n  console.info('params', params);\n  let {projectId, encoder, folderId, parentFolderId} = params || {};\n  if (encoder) projectId = encoder;\n  const project = useQuery(\n    'project_' + projectId,\n    async () => await getById(projectId, parentFolderId || folderId),\n  );\n  const projectData: EncoderProjectType = project.data;\n  console.info('projectData', projectData);\n  const afterWrite = useRef<number | undefined>();\n  const codeEditorRef = useRef();\n  const {width} = useWindowDimensions();\n  const codeWidth = props.codeWidth || width - 200;\n  const projectWriteMutation = useMutation(\n    async (np: EncoderProjectType) => {\n      const ni = await writeItem(np);\n      clearTimeout(afterWrite.current);\n      afterWrite.current = setTimeout(() => {\n        queryClient.refetchQueries({\n          queryKey: ['folderContent_' + projectData?.folderId],\n        });\n        queryClient.refetchQueries({\n          queryKey: ['projectdata', projectId],\n        });\n        queryClient.resetQueries({\n          queryKey: ['encodedMedia', projectId],\n          exact: true,\n        });\n        queryClient.resetQueries({\n          queryKey: ['encodedFileSize', projectId],\n          exact: true,\n        });\n        queryClient.resetQueries({\n          queryKey: ['encodedFileSize', projectId],\n          exact: true,\n        });\n        project.refetch();\n      }, 1000);\n      return ni;\n    },\n  );\n  const [outputMenuVisible, setOutputMenuVisible] = useState(false);\n  const [presetMenuVisible, setPresetMenuVisible] = useState(false);\n  const outputTypes = Object.keys(FFMpegOutputType);\n  const closeMenu = () => {\n    setOutputMenuVisible(false);\n    setPresetMenuVisible(false);\n  };\n  const selectValue = (\n    valueType: keyof EncoderProjectType['encoding'],\n    value: string | number,\n  ) => {\n    const np = projectData;\n    const numericTypes = [\n      'width',\n      'compressionLevel',\n      'height',\n      'start',\n      'end',\n      'soundVolume',\n    ];\n    const nonRenderTypes = ['start', 'end', 'soundVolume'];\n    const shouldRerender = !nonRenderTypes.includes(valueType);\n    if (numericTypes.includes(valueType) && isNaN(value)) {\n      console.info('invalid type');\n      return;\n    }\n    if (value === '') {\n      return;\n    }\n    if (!np.encoding) {\n      np.encoding = {};\n    }\n    np.encoding[valueType] = value;\n    console.info(np);\n\n    if (shouldRerender)\n      np.encoding.lastUpdated = new Date().valueOf();\n\n    projectWriteMutation.mutateAsync(np);\n    closeMenu();\n  };\n  if (project.isFetching) {\n    return <ActivityIndicator size={72} />;\n  }\n  const execCmd = genExecCmd(projectData);\n  const codeString = execCmd.join('\\n');\n  const fontSize = 12;\n  const inputWidth = 120;\n  return (\n    <ScrollView\n      showsVerticalScrollIndicator={false}\n      showsHorizontalScrollIndicator={false}>\n      <Divider key={'div00'} />\n      <List.Item\n        key={'info'}\n        left={p => <List.Icon {...p} icon={'information'} />}\n        title={projectData?.title}\n      />\n      <Divider key={'div01'} />\n      <List.Item\n        key={'start'}\n        left={p => <List.Icon {...p} icon={'clock-plus'} />}\n        title={'Start'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.start || 0}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('start', parseFloat(text))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div7'} />\n      <List.Item\n        key={'end'}\n        left={p => <List.Icon {...p} icon={'clock-minus'} />}\n        title={`End (${projectData?.duration})`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={\n                projectData?.encoding?.end || projectData?.duration\n              }\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('end', parseFloat(text))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div4'} />\n      <List.Item\n        key={'cl'}\n        left={p => <List.Icon {...p} icon={'zip-box'} />}\n        title={'Compression'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.compressionLevel}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('compressionLevel', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'divvolume'} />\n      <List.Item\n        key={'volume'}\n        left={p => <List.Icon {...p} icon={'zip-box'} />}\n        title={'Sound Volume'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.soundVolume || 100}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('soundVolume', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div3'} />\n      <List.Item\n        key={'width'}\n        left={p => <List.Icon {...p} icon={'ruler'} />}\n        title={`Width(${projectData?.width})`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.width}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('width', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div2'} />\n      <List.Item\n        key={'height'}\n        left={p => <List.Icon {...p} icon={'ruler'} />}\n        title={`Height(${projectData?.height})`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.height}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('height', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div1'} />\n      <List.Item\n        key={'output'}\n        left={p => <List.Icon {...p} icon={'file-export'} />}\n        title={'Output'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <Menu\n              visible={outputMenuVisible}\n              onDismiss={closeMenu}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setOutputMenuVisible(true)}>\n                  {projectData?.encoding?.output}\n                </Button>\n              }>\n              <>\n                {outputTypes.map(item => (\n                  <Menu.Item\n                    key={item}\n                    onPress={() => selectValue('output', item)}\n                    title={item}\n                  />\n                ))}\n              </>\n            </Menu>\n          </View>\n        )}\n      />\n      <Divider key={'div'} />\n      <List.Item\n        key={'preset'}\n        left={p => <List.Icon {...p} icon={'cog'} />}\n        title={'Preset'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <Menu\n              visible={presetMenuVisible}\n              onDismiss={closeMenu}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setPresetMenuVisible(true)}>\n                  {projectData?.encoding?.preset}\n                </Button>\n              }>\n              <>\n                {Object.keys(FFMpegPreset).map(item => (\n                  <Menu.Item\n                    key={item}\n                    onPress={() => selectValue('preset', item)}\n                    title={item}\n                  />\n                ))}\n              </>\n            </Menu>\n          </View>\n        )}\n      />\n      {showCode === true ? (\n        <View>\n          <Divider key={'div5'} />\n          <List.Item\n            key={'code'}\n            left={p => <List.Icon {...p} icon={'code-brackets'} />}\n            title={''}\n            titleStyle={{fontSize}}\n            onPress={() => codeEditorRef?.current?.focus()}\n            right={p => (\n              <SafeAreaView style={{width: codeWidth, zIndex: 10}}>\n                <CodeEditor\n                  className={'codeEditor'}\n                  ref={codeEditorRef}\n                  style={{\n                    fontSize,\n                    inputLineHeight: fontSize,\n                    highlighterLineHeight: fontSize,\n                    display: 'flex',\n                  }}\n                  language=\"bash\"\n                  syntaxStyle={CodeEditorSyntaxStyles.xonokai}\n                  initialValue={\n                    projectData?.encoding?.code?.join(',') || ''\n                  }\n                  onChange={text => {\n                    if (\n                      text ===\n                        projectData?.encoding?.code?.join(',') ||\n                      ''\n                    )\n                      return;\n                    selectValue('code', text.split(','));\n                  }}\n                  autoFocus={false}\n                  showLineNumbers\n                />\n              </SafeAreaView>\n            )}\n          />\n          <Divider key={'div6'} />\n          {codeString && (\n            <List.Item\n              key={'output_code'}\n              left={p => <List.Icon {...p} icon={'code-tags'} />}\n              title=\"\"\n              titleStyle={{fontSize}}\n              right={() => (\n                <View style={{width: codeWidth}}>\n                  <SyntaxHighlighter\n                    language=\"bash\"\n                    style={xonokai}\n                    highlighter={'prism'}\n                    fontSize={fontSize}>\n                    {codeString}\n                  </SyntaxHighlighter>{' '}\n                </View>\n              )}\n            />\n          )}\n          <Divider key={'div8'} />\n        </View>\n      ) : null}\n      <Button\n        icon={'code-brackets'}\n        onPress={() => setShowCode(!showCode)}>\n        Show FFMpeg Code\n      </Button>\n    </ScrollView>\n  );\n}\n\nexport default memo(EncoderProject);\n","import React from 'react';\n\nimport {DataHook, DataHookFolders, Folder} from '../../types';\n\nimport {\n  SafeAreaView,\n  StyleSheet,\n  View,\n  useWindowDimensions,\n  VirtualizedList,\n} from 'react-native';\n\nimport FolderItem from './items/folderitem';\nimport {ActivityIndicator} from 'react-native-paper';\nimport {\n  CommonActions,\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\nimport {FileStackParams, FolderParams} from '../../types/nav';\n\nexport interface FolderLibraryProps {\n  dataHook: DataHookFolders;\n}\n\nconst FolderLibrary = (folderLibraryProps: FolderLibraryProps) => {\n  const {dataHook} = folderLibraryProps;\n  const dim = useWindowDimensions();\n  const {height} = dim;\n  const drawerOffset = dim.width > 700 ? 80 : 0;\n  const width = dim.width - drawerOffset;\n  const iconSize = 30;\n  const iconColor = 'black';\n  let marginTop = 0;\n  const navigation = useNavigation<NavigationProp<FileStackParams>>();\n  const {\n    folders,\n    currentFolderId,\n    getItem,\n    getItemCount,\n    isEditingFolder,\n    currentFolderEditorName,\n    setFolderEditorName,\n    folderNameInputRef,\n    onFolderActionPress,\n    loadingContent,\n    loadingFolders,\n    onRemoveFolder,\n    abortEditFolder,\n  } = dataHook;\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: 0,\n      marginTop: 0,\n    },\n    item: {\n      paddingLeft: 5,\n      fontSize: 12,\n      height: 120,\n      color: 'black',\n      width: '100%',\n    },\n    tinyLogo: {\n      marginTop: 2,\n      width: 22,\n      height: 22,\n    },\n    scroll: {\n      height: height - 55,\n      display: 'flex',\n      position: 'relative',\n      backgroundColor: 'black',\n      marginTop,\n      width: '100%',\n    },\n    icon: {\n      paddingLeft: 10,\n    },\n  });\n  const renderFolder = (item: Folder) => (\n    <View style={{width}} key={item.id}>\n      <FolderItem\n        key={item.id}\n        folder={{\n          ...item,\n          isOpen: item.id === currentFolderId && !isEditingFolder,\n          isInfoOpen: item.id === isEditingFolder,\n        }}\n        styles={styles}\n        abortEditFolder={abortEditFolder}\n        folderNameInputRef={folderNameInputRef}\n        iconColor={iconColor}\n        iconSize={iconSize}\n        width={width}\n        isLoadingContent={\n          currentFolderId === item.id && loadingContent\n        }\n        isOpen={item.id === currentFolderId}\n        currentFolderEditorName={currentFolderEditorName}\n        setFolderEditorName={setFolderEditorName}\n        onFolderPress={() => {\n          navigation.navigate({\n            name: 'Folder',\n            params: {\n              folderId: item.id,\n              title: item.title,\n              mnemonic: item.mnemonic,\n              userId: item.userId,\n            },\n          });\n        }}\n        onShareFolder={() => dataHook.onShareFolder(item)}\n        onFolderActionPress={() => onFolderActionPress(item.id)}\n        onRemoveFolder={() => onRemoveFolder(item)}>\n        {item.id === currentFolderId && !isEditingFolder ? (\n          <View style={{width, height: 'auto'}}></View>\n        ) : null}\n      </FolderItem>\n    </View>\n  );\n  // console.info('loadingFolders', folders, loadingFolders)\n  if (loadingFolders) {\n    return <ActivityIndicator size={72} />;\n  }\n  return (\n    <SafeAreaView style={{...styles.scroll}}>\n      <VirtualizedList\n        onEndReached={() => {\n          console.info('onEndReached');\n        }}\n        data={folders}\n        initialNumToRender={100}\n        renderItem={({item}) => renderFolder(item)}\n        keyExtractor={(item: Folder) =>\n          item.id || item.date.toString()\n        }\n        getItemCount={getItemCount}\n        getItem={getItem}\n        getItemLayout={(data, index) => ({\n          length: 50,\n          offset: 50 * index,\n          index,\n        })}\n      />\n    </SafeAreaView>\n  );\n};\n\nexport default FolderLibrary;\n","import React, {memo} from 'react';\n\nimport {\n  ListRenderItemInfo,\n  SafeAreaView,\n  View,\n  VirtualizedList,\n  useWindowDimensions,\n} from 'react-native';\n\nimport {\n  FolderPreviewContentType,\n  useFolders,\n} from '../../hooks/useFolders';\n\nimport {ActivityIndicator} from 'react-native-paper';\nimport Medialibrary from '../media/medialibrary';\nimport {FolderType} from '../../types';\nimport Contactlibrary from '../contacts/contactlibrary';\nimport FolderLibrary from './folderlibrary';\nimport {\n  getFolderContent,\n  getFoldersByType,\n  writeItem,\n} from '../../api';\nimport {styles} from './styles';\nimport {useFolder} from '../../hooks/useFolder';\n\nexport type RenderContentType = (\n  item: ListRenderItemInfo<FolderPreviewContentType>,\n) => JSX.Element;\n\nexport const FolderNavigator = ({\n  parentFolderId,\n  parentFolderHook,\n  renderContent,\n  folderType,\n}: {\n  renderContent: RenderContentType;\n  parentFolderId: string | null;\n  parentFolderHook: ReturnType<typeof useFolder>;\n  folderType: FolderType;\n}) => {\n  const foldersHook = useFolders(folderType, false);\n  const {height} = useWindowDimensions();\n  return (\n    <View style={{width: '30%', height: '100%'}}>\n      {!parentFolderId ? (\n        <FolderLibrary dataHook={foldersHook} />\n      ) : null}\n      {parentFolderId ? (\n        <>\n          {!parentFolderHook.folderContentQuery.isFetching &&\n          !parentFolderHook.isLoadingFolder &&\n          parentFolderHook.folderContent?.length ? (\n            <VirtualizedList\n              onEndReached={() => {\n                console.info('onEndReached');\n                // parentFolderHook.folderContentQuery.refetch()\n              }}\n              scrollEnabled={true}\n              style={{height}}\n              data={parentFolderHook.folderContent}\n              pagingEnabled={true}\n              initialNumToRender={1000}\n              renderItem={renderContent}\n              keyExtractor={(item: FolderPreviewContentType) =>\n                item.id || item.date.toString()\n              }\n              showsHorizontalScrollIndicator={false}\n              showsVerticalScrollIndicator={false}\n              getItemCount={parentFolderHook.getContentCount}\n              getItem={parentFolderHook.getContentItem}\n              onScrollToTop={() => {\n                // console.info('ontop');\n              }}\n              getItemLayout={(_data, index) => ({\n                length: 130,\n                offset: 130 * index,\n                index,\n              })}\n            />\n          ) : (\n            <ActivityIndicator size={72} />\n          )}\n        </>\n      ) : null}\n    </View>\n  );\n};\n","import React, {memo} from 'react';\n\nimport {\n  SafeAreaView,\n  View,\n  useWindowDimensions,\n  Platform,\n} from 'react-native';\n\nimport DragList, {\n  DragListRenderItemInfo,\n} from 'react-native-draglist';\n\nimport {FolderPreviewContentType} from '../../hooks/useFolders';\n\nimport ContentItem from './items/contentitem';\nimport {useFolder} from '../../hooks/useFolder';\nimport {\n  ActivityIndicator,\n  IconButton,\n  List,\n} from 'react-native-paper';\nimport {useIsFocused, useRoute} from '@react-navigation/native';\nimport {FolderType} from '../../types';\nimport {ScrollView} from 'react-native-gesture-handler';\nimport {getById, getFolderContent, writeItem} from '../../api';\nimport {FolderParams} from '../../types/nav';\nimport {FolderNavigator, RenderContentType} from './foldernavigator';\nimport {styles} from './styles';\n\nexport interface FolderLibraryProps {\n  folderId?: string;\n  folderType: FolderType;\n}\nconst FolderPage = (props: FolderLibraryProps) => {\n  const {folderType} = props;\n  const isFocused = useIsFocused();\n  const {height, width} = useWindowDimensions();\n  const isMobile = width > 700 ? false : true;\n  const route = useRoute();\n  let marginTop = Platform.OS === 'web' ? 0 : 0;\n  const params = route.params as FolderParams;\n  const {folderId, mnemonic, title, userId} = params;\n  const dataHook = useFolder(\n    folderId,\n    getFolderContent,\n    getById,\n    folderType,\n    writeItem,\n    mnemonic,\n    title,\n    userId,\n  );\n  const {\n    folderContent,\n    isLoadingFolder,\n    isLoadingFolderContent,\n    folderData,\n    folderContentQuery,\n    folder,\n    onReordered,\n    addMedia,\n  } = dataHook;\n\n  let parentFolderId =\n    params?.parentFolderId || (folder && folder.folderId) || null;\n  if (parentFolderId === folderId) parentFolderId = null;\n  const parentFolderHook = useFolder(\n    parentFolderId,\n    getFolderContent,\n    getById,\n    folderType,\n    writeItem,\n  );\n\n  const mstyles = styles;\n  mstyles.item.width = width - 80;\n  mstyles.scroll.height = height - 65;\n  mstyles.scroll.marginTop = marginTop;\n  if (!isFocused) return <></>;\n  const renderContent = ({\n    item: i,\n    onDragEnd,\n    onDragStart,\n  }: DragListRenderItemInfo<FolderPreviewContentType>) => (\n    <ContentItem\n      i={i}\n      key={i.id}\n      dataHook={dataHook}\n      styles={mstyles}\n      width={!isMobile ? (width / 100) * 70 : width}\n      onDragStart={onDragStart}\n      onDragEnd={onDragEnd}\n    />\n  );\n  return (\n    <SafeAreaView>\n      <View\n        style={{\n          height: '100%',\n          width: '100%',\n          flexDirection: 'row',\n        }}>\n        {!isMobile ? (\n          <FolderNavigator\n            parentFolderId={parentFolderId}\n            parentFolderHook={parentFolderHook}\n            renderContent={renderContent as RenderContentType}\n            folderType={folderType}\n          />\n        ) : null}\n        {!isLoadingFolder &&\n        !folderContentQuery.isFetching &&\n        folderContent !== undefined ? (\n          <DragList\n            renderItem={renderContent}\n            keyExtractor={item => item?.id || item?.date.toString()}\n            style={{\n              width: '100%',\n              height,\n              paddingBottom: 50,\n            }}\n            data={folderContent}\n            showsVerticalScrollIndicator={false}\n            showsHorizontalScrollIndicator={false}\n            scrollEnabled={true}\n            ListEmptyComponent={() => (\n              <List.Item\n                title={'Create your first project'}\n                left={() => (\n                  <IconButton icon={'creation'} mode=\"outlined\" />\n                )}\n                style={{padding: 10}}\n                onPress={() => addMedia()}\n              />\n            )}\n            onReordered={onReordered}\n          />\n        ) : (\n          <ActivityIndicator size={72} />\n        )}\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default memo(FolderPage);\n","import React, {memo} from 'react';\n\nimport {Contact} from '../../../types';\n\nimport {Divider, List} from 'react-native-paper';\nimport {\n  NavigationProp,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport {ChatParams, ChatStackParams} from '../../../types/nav';\n\nexport interface ContactItemProps {\n  i: Contact;\n  width: number;\n}\n\nconst ContactItem = (contactItemProps: ContactItemProps) => {\n  const {i, width} = contactItemProps;\n  const route = useRoute();\n  const params = route.params as ChatParams;\n  const navigation = useNavigation<NavigationProp<ChatStackParams>>();\n  const isOpen = params?.chatId === i.id;\n  const contact = i;\n  const title = i.name || i.id;\n  const icon = isOpen ? 'chat' : 'chat-outline';\n  const onPressContact = () => {\n    navigation.navigate({\n      name: 'Chat',\n      params: {\n        chatId: contact.id,\n        name: contact.name,\n        parentFolderId: contact.folderId,\n        mnemonic: contact.mnemonic,\n      },\n    });\n  };\n\n  const children = isOpen ? <></> : null;\n  return (\n    <>\n      <List.Accordion\n        style={{width}}\n        expanded={isOpen}\n        title={title}\n        onPress={onPressContact}\n        left={props => <List.Icon {...props} icon={icon} />}\n        right={() => <></>}>\n        {children}\n      </List.Accordion>\n      <Divider />\n    </>\n  );\n};\nexport default memo(ContactItem);\n","import React from 'react';\n\nimport {\n  Folder,\n  Media,\n  Contact,\n  EditorProject,\n  DataHook,\n  FolderType,\n} from '../../../types';\n\nimport {useWindowDimensions} from 'react-native';\n\nimport MediaItem from './mediaitem';\n\nimport ContactItem from './contactitem';\n\nimport FolderItem from './folderitem';\n\nimport ProjectItem from './projectitem';\nimport {useFolders} from '../../../hooks/useFolders';\nimport {useMedia} from '../../../hooks/useMedia';\nimport {\n  NavigationProp,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport {FileStackParams, FolderParams} from '../../../types/nav';\nimport {useAppDispatch} from '../../../store/hooks';\nimport {setFolderMenuItemId} from '../../../store/slices/ui';\nconst enableMove = false;\n\nexport interface ContentItemProps {\n  dataHook: DataHook;\n  styles: any;\n  i: Contact | Media | Folder;\n  width: number;\n  onDragEnd?: () => void;\n  onDragStart?: () => void;\n}\n\nconst ContentItem = (ContentItemProps: ContentItemProps) => {\n  const dispatch = useAppDispatch();\n  const {dataHook, styles, i, onDragEnd, onDragStart} =\n    ContentItemProps;\n  const navigation = useNavigation<NavigationProp<FileStackParams>>();\n  const route = useRoute();\n  const params = route.params as FolderParams;\n  const currentFolderId = params?.folderId;\n  const dim = useWindowDimensions();\n  const drawerOffset = dim.width > 700 ? 80 : 0;\n  const width = ContentItemProps.width - drawerOffset;\n  const iconSize = 30;\n  const iconColor = 'black';\n  const showMenu = () =>\n    dispatch(setFolderMenuItemId({itemId: i.id}));\n  const hideMenu = () =>\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n  if ((i as Media).isMediaNew) {\n    const {\n      onMediaPress,\n      onRemoveMediaPress,\n      onDownloadMediaPress,\n      onCopyLinkPress,\n      onEditMediaPress,\n      isLoadingMedia,\n      onRemoveFile,\n      currentContentId,\n      currentMediaId,\n      onExportFile,\n    } = dataHook as ReturnType<typeof useMedia>;\n    return (\n      <MediaItem\n        key={i.id}\n        i={i as Media}\n        width={width}\n        onMediaPress={onMediaPress}\n        onRemoveMediaPress={() => onRemoveMediaPress(i.id)}\n        onDownloadMediaPress={onDownloadMediaPress}\n        onCopyLinkPress={onCopyLinkPress}\n        onEditMediaPress={onEditMediaPress}\n        onDragEnd={onDragEnd}\n        onDragStart={onDragStart}\n        showMenu={showMenu}\n        hideMenu={hideMenu}\n        onExportFile={() => onExportFile(i.id)}\n        onRemoveFile={() => onRemoveFile(i.id)}\n        itemLoading={\n          i.id === currentMediaId && isLoadingMedia\n            ? currentMediaId\n            : false\n        }\n        isOpen={i.id === currentContentId ? true : false}\n        isPlaying={\n          i.id === currentMediaId && !isLoadingMedia ? true : false\n        }\n        enableMove={enableMove}\n      />\n    );\n  }\n\n  if (\n    (i as Media).isEncoderProject ||\n    (i as EditorProject).isEditorProject\n  ) {\n    return (\n      <ProjectItem\n        item={i as Media}\n        folderType={dataHook.folderType as FolderType}\n        onRemoveFolder={() => dataHook.onRemoveFolder(i as Folder)}\n      />\n    );\n  }\n\n  if ((i as Contact).isContact) {\n    return <ContactItem key={i.id} i={i as Contact} width={width} />;\n  }\n  if ((i as Folder).isFolder) {\n    const {\n      onRemoveFolder,\n      isEditingFolder,\n      onFolderActionPress,\n      setFolderEditorName,\n      currentFolderEditorName,\n      folderNameInputRef,\n      abortEditFolder,\n      onShareFolder,\n    } = dataHook as ReturnType<typeof useFolders>;\n    return (\n      <FolderItem\n        key={i.id}\n        folder={{\n          ...(i as Folder),\n          isInfoOpen: i.id === isEditingFolder,\n          isOpen: i.id === currentFolderId,\n        }}\n        styles={styles}\n        setFolderEditorName={setFolderEditorName}\n        currentFolderEditorName={currentFolderEditorName}\n        folderNameInputRef={folderNameInputRef}\n        iconColor={iconColor}\n        iconSize={iconSize}\n        enableMove={enableMove}\n        width={width}\n        onDragEnd={onDragEnd}\n        onDragStart={onDragStart}\n        showMenu={showMenu}\n        hideMenu={hideMenu}\n        isOpen={i.id === currentFolderId}\n        onRemoveFolder={() => onRemoveFolder(i as Folder)}\n        onShareFolder={() => onShareFolder(i as Folder)}\n        onFolderActionPress={() => onFolderActionPress(i.id)}\n        onFolderPress={() =>\n          navigation.navigate({\n            name: 'Folder',\n            params: {\n              folderId: (i as Folder).id,\n              title: (i as Folder).title,\n              parentFolderId: i.folderId as string,\n              mnemonic: (i as Folder).mnemonic,\n              userId: (i as Folder).userId,\n            },\n          })\n        }\n        isSecondLevel={true}\n        abortEditFolder={() => abortEditFolder()}>\n        {i.id === currentFolderId ? <></> : null}\n      </FolderItem>\n    );\n  }\n  return <></>;\n};\n\nexport default ContentItem;\n","import React, {MutableRefObject, useMemo} from 'react';\n\nimport {Folder} from '../../../types';\n\nimport {View, TextInput as TextInputType} from 'react-native';\nimport {defaultFolders} from '../../../db/defaults';\nimport {\n  ActivityIndicator,\n  Divider,\n  List,\n  Text,\n  useTheme,\n  TextInput,\n  IconButton,\n  Menu,\n} from 'react-native-paper';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {recursiveShare} from '../../../api';\nimport {\n  setFolderMenuItemId,\n  setToastText,\n} from '../../../store/slices/ui';\n\ntype FolderItemCallback = (\n  i: Folder,\n  isSecondLevel?: boolean,\n) => void;\n\nexport interface FolderItemProps {\n  folder: Folder;\n  enableMove?: boolean;\n  currentFolderEditorName?: string;\n  styles: any;\n  folderNameInputRef?: MutableRefObject<TextInputType | null>;\n  setFolderEditorName?: any;\n  iconColor: string;\n  iconSize: number;\n  onFolderPress: FolderItemCallback;\n  onFolderActionPress?: FolderItemCallback;\n  onRemoveFolder?: FolderItemCallback;\n  onMoveFolder?: FolderItemCallback;\n  onShareFolder?: FolderItemCallback;\n  abortEditFolder?: FolderItemCallback;\n  width: number;\n  isSecondLevel?: boolean;\n  children?: React.ReactNode;\n  isOpen?: boolean;\n  isLoadingContent?: boolean;\n  onDragEnd?: () => void;\n  onDragStart?: () => void;\n  showMenu?: () => void;\n  hideMenu?: () => void;\n}\n\nconst FolderItem = (props: FolderItemProps) => {\n  const {\n    folder,\n    width,\n    onFolderPress,\n    onRemoveFolder,\n    onFolderActionPress,\n    isSecondLevel,\n    children,\n    isOpen,\n    isLoadingContent,\n    currentFolderEditorName,\n    folderNameInputRef,\n    setFolderEditorName,\n    abortEditFolder,\n    onShareFolder,\n    onDragStart,\n    onDragEnd,\n    showMenu,\n    hideMenu,\n  } = props;\n  const theme = useTheme();\n\n  let folderIcon = folder.isOpen ? 'folder-open' : 'folder-outline';\n  let folderAccesory = folder.isInfoOpen\n    ? 'checkbox-outline'\n    : 'pencil-outline';\n  let isDefaultFolder = false;\n  if (defaultFolders.includes(folder.id)) {\n    isDefaultFolder = true;\n    folderAccesory = 'star';\n  }\n  if (folder.mnemonic) {\n    folderIcon = folder.isOpen\n      ? 'folder-network'\n      : 'folder-network-outline';\n  }\n  if (folder.isInfoOpen) {\n    folderIcon = 'arrow-left-circle';\n  }\n  const touchableStyle = {\n    pointerEvents: 'auto',\n    padding: isOpen ? 5 : 0,\n    paddingTop: 15,\n  } as any;\n  const dispatch = useAppDispatch();\n  const shareAllMedia = () => {\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n    recursiveShare(folder);\n    dispatch(setToastText('All folder files have been shared'));\n  };\n\n  const isMenuOpen = useAppSelector(\n    state => state.ui.folderItemMenuOpen === folder.id,\n  );\n  useMemo(() => {\n    if (folder.isInfoOpen) setFolderEditorName(folder.title);\n  }, [folder.isInfoOpen]);\n\n  const remove = async () => {\n    if (onRemoveFolder) await onRemoveFolder(folder);\n  };\n  const edit = async () => {\n    if (isDefaultFolder) return;\n\n    if (onFolderActionPress)\n      await onFolderActionPress(folder, isSecondLevel);\n    setTimeout(() => {\n      folderNameInputRef?.current?.focus();\n    }, 300);\n  };\n\n  const leftItem = (props: any) =>\n    isLoadingContent ? (\n      <ActivityIndicator style={{paddingLeft: 20}} />\n    ) : (\n      <TouchableOpacity\n        onPress={() => onFolderPress(folder, isSecondLevel)}\n        style={touchableStyle}>\n        <List.Icon {...props} icon={folderIcon} />\n      </TouchableOpacity>\n    );\n\n  const rightItem = (props: any) => (\n    <View style={{flexDirection: 'row', flexWrap: 'wrap'}}>\n      {!isDefaultFolder && !folder.isInfoOpen ? (\n        <>\n          <TouchableOpacity\n            onPressIn={onDragStart}\n            onPressOut={onDragEnd}\n            style={{pointerEvents: 'auto'}}>\n            <IconButton icon={'dots-grid'} />\n          </TouchableOpacity>\n          <Menu\n            anchor={\n              <IconButton icon={'dots-vertical'} onPress={showMenu} />\n            }\n            style={{marginTop: 50}}\n            visible={isMenuOpen}\n            onDismiss={hideMenu}>\n            <>\n              <Menu.Item\n                leadingIcon={'heart'}\n                title={'Share All Media'}\n                onPress={() => shareAllMedia()}\n              />\n              <Divider />\n            </>\n            <>\n              <Menu.Item\n                leadingIcon={'share'}\n                title={'Share Folder'}\n                onPress={() => onShareFolder && onShareFolder(folder)}\n              />\n              <Divider />\n            </>\n            <>\n              <Menu.Item\n                leadingIcon={folderAccesory}\n                title={'Edit Folder'}\n                onPress={edit}\n              />\n              <Divider />\n            </>\n            <>\n              <Menu.Item\n                leadingIcon={'delete'}\n                title={'Delete Folder'}\n                onPress={remove}\n              />\n            </>\n          </Menu>\n        </>\n      ) : null}\n    </View>\n  );\n  return (\n    <>\n      <Divider />\n      {!children ? (\n        <List.Item\n          style={{width}}\n          title={({ellipsizeMode, color: titleColor, fontSize}) => (\n            <>\n              {folder.isInfoOpen ? (\n                <TextInput\n                  mode=\"outlined\"\n                  style={\n                    {\n                      height: 50,\n                      width: '100%',\n                      pointerEvents: 'auto',\n                    } as any\n                  }\n                  placeholder={'new folder name'}\n                  theme={theme}\n                  value={currentFolderEditorName}\n                  ref={folderNameInputRef}\n                  onChangeText={setFolderEditorName}\n                  left={\n                    <TextInput.Icon\n                      onPress={() =>\n                        abortEditFolder && abortEditFolder(folder)\n                      }\n                      icon={folderIcon}\n                    />\n                  }\n                  right={\n                    <TextInput.Icon\n                      onPress={edit}\n                      icon={folderAccesory}\n                    />\n                  }\n                  autoFocus\n                  id=\"test-input\"\n                />\n              ) : (\n                <TouchableOpacity\n                  style={{pointerEvents: 'auto'} as any}\n                  onPress={() =>\n                    onFolderPress(folder, isSecondLevel)\n                  }>\n                  <View style={{}}>\n                    <Text\n                      ellipsizeMode={ellipsizeMode}\n                      style={{color: titleColor, fontSize}}\n                      numberOfLines={2}>\n                      {folder.title}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              )}\n            </>\n          )}\n          left={!folder.isInfoOpen ? leftItem : () => <></>}\n          right={rightItem}\n          theme={theme}\n        />\n      ) : (\n        <List.Accordion\n          expanded={isOpen}\n          title={folder.title}\n          style={{width}}\n          left={leftItem}\n          right={() => <></>}\n          onPress={() => onFolderPress(folder, isSecondLevel)}\n          theme={theme}>\n          {children}\n        </List.Accordion>\n      )}\n      {/* <Divider/> */}\n    </>\n  );\n};\n\nexport default FolderItem;\n","import React from 'react';\n\nimport {Media} from '../../../types';\n\nimport {View, StyleSheet, ImageBackground} from 'react-native';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\n\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nexport interface MediaItemProps {\n  i: Media;\n  itemLoading: string | boolean;\n  enableMove: boolean;\n  width: number;\n  onMediaPress: (media: Media) => void;\n  onRemoveMediaPress: (media: Media) => void;\n  onDownloadMediaPress: (mediaId: string) => void;\n  onCopyLinkPress: (mediaId: string) => void;\n  onEditMediaPress: (mediaId: string) => void;\n  isOpen: boolean;\n  isPlaying: boolean;\n  onDragEnd?: () => void;\n  onDragStart?: () => void;\n  showMenu?: () => void;\n  hideMenu?: () => void;\n  onRemoveFile?: () => void;\n  onExportFile?: () => void;\n}\nimport {\n  List,\n  ActivityIndicator,\n  useTheme,\n  Divider,\n  Text,\n  Chip,\n  IconButton,\n  Menu,\n} from 'react-native-paper';\n\nimport {useQuery} from 'react-query';\n\nimport {getFileStats, shareFileToWT} from '../../../api/media';\nimport {setSharing} from '../../../store/slices/fs';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n  customTitle: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  additionalPadding: {\n    paddingTop: 8,\n  },\n  image: {\n    width: '100%',\n    height: 'auto',\n    opacity: 0.6,\n    position: 'absolute',\n    resizeMode: 'cover',\n    zIndex: -1,\n    flex: 1,\n  },\n});\n\nconst MediaItem = (props: MediaItemProps) => {\n  const {\n    i,\n    itemLoading,\n    width,\n    onMediaPress,\n    onRemoveMediaPress,\n    onDownloadMediaPress,\n    onCopyLinkPress,\n    onEditMediaPress,\n    isPlaying,\n    onDragEnd,\n    onDragStart,\n    showMenu,\n    hideMenu,\n    onRemoveFile,\n    onExportFile,\n  } = props;\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  // const width = \"100%\"\n  const thisItemIsLoading = i.id === itemLoading;\n\n  const onActionPress = () => onEditMediaPress(i.id);\n  const onCellPress = () => onMediaPress(i);\n  const onRemove = async () => onRemoveMediaPress(i);\n  const onCopyLink = async () => onCopyLinkPress(i.id);\n  const isDownloading = useAppSelector(\n    state => state.fs.downloadingProgress[i.id],\n  );\n  const isMenuOpen = useAppSelector(\n    state => state.ui.folderItemMenuOpen === i.id,\n  );\n  const isSharing = useAppSelector(state => state.fs.sharing[i.id]);\n  const isDownloadedQuery = useQuery(\n    ['isDownloaded', i.id, i.isDownloaded],\n    async () => {\n      try {\n        // let file = undefined\n        const file = await getFileStats(i);\n        // console.info('hasfile', file);\n        if (file) {\n          const onep = (i.size as number) / 100;\n          const percent = parseFloat(file.size / onep).toFixed(2);\n          return percent;\n        } else {\n          return false;\n        }\n      } catch (err) {\n        return false;\n      }\n    },\n    {\n      refetchOnMount: false,\n      refetchOnReconnect: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n    },\n  );\n  const isDownloaded = isDownloadedQuery?.data;\n  const onDownloadToggle = async () =>\n    isDownloaded ? null : onDownloadMediaPress(i.id);\n  const imageSource = {uri: i.thumbnail, cache: 'force-cache'};\n  let iconName = isPlaying\n    ? 'stop-circle-outline'\n    : 'play-circle-outline';\n\n  let offlineTitle = isDownloaded\n    ? 'Remove From Device'\n    : 'Download To Device';\n\n  let offlineIconName =\n    isDownloadedQuery.isFetched && isDownloaded\n      ? 'floppy'\n      : 'cloud-download-outline';\n\n  if (isDownloading) {\n    offlineTitle = 'Downloading / Cancel';\n  }\n  let extractorIcon = i.extractor.toLowerCase();\n  if (extractorIcon === 'wt') extractorIcon = 'folder-network';\n  if (extractorIcon === 'local') extractorIcon = 'file';\n  const height = 100;\n  const cloudIcon =\n    isDownloading !== undefined\n      ? () => <ActivityIndicator animating={true} theme={theme} />\n      : offlineIconName;\n  const controlIconPaddingTop = 30;\n  const touchableStyle = {\n    pointerEvents: 'auto',\n    paddingTop: controlIconPaddingTop,\n  } as any;\n  let downloadText = isDownloading\n    ? `Downloading ${parseInt((isDownloading * 100).toString(), 10)}%`\n    : 'Download';\n\n  if (isDownloaded) downloadText = `Downloaded ${isDownloaded}%`;\n\n  return (\n    <View style={{width, height}}>\n      <List.Item\n        style={{height, zIndex: 2, position: 'absolute', width}}\n        left={props => (\n          <TouchableOpacity\n            onPress={onCellPress}\n            style={touchableStyle}>\n            <List.Icon\n              {...props}\n              icon={\n                thisItemIsLoading\n                  ? () => (\n                      <ActivityIndicator\n                        animating={true}\n                        theme={theme}\n                      />\n                    )\n                  : iconName\n              }\n            />\n          </TouchableOpacity>\n        )}\n        right={props => (\n          <>\n            <TouchableOpacity\n              onPressIn={onDragStart}\n              onPressOut={onDragEnd}\n              style={{pointerEvents: 'auto'}}>\n              <IconButton icon={'dots-grid'} />\n            </TouchableOpacity>\n            <Menu\n              anchor={\n                <IconButton\n                  icon={'dots-vertical'}\n                  onPress={showMenu}\n                />\n              }\n              style={{marginTop: 50}}\n              visible={isMenuOpen}\n              onDismiss={hideMenu}>\n              {isDownloaded && (\n                <>\n                  <Menu.Item\n                    leadingIcon={'share'}\n                    title={'Export File'}\n                    onPress={onExportFile}\n                  />\n                  <Divider />\n                </>\n              )}\n              {isDownloaded && (\n                <>\n                  <Menu.Item\n                    leadingIcon={'file'}\n                    title={'Delete File'}\n                    onPress={onRemoveFile}\n                  />\n                  <Divider />\n                </>\n              )}\n              <Menu.Item\n                leadingIcon={'delete'}\n                title={'Delete Item'}\n                onPress={onRemove}\n              />\n            </Menu>\n          </>\n        )}\n        title={({ellipsizeMode, color: titleColor, fontSize}) => (\n          <View\n            style={[\n              styles.container,\n              styles.row,\n              styles.customTitle,\n            ]}>\n            <Text\n              ellipsizeMode={ellipsizeMode}\n              style={{color: titleColor, fontSize}}\n              numberOfLines={2}>\n              {i.title}\n            </Text>\n          </View>\n        )}\n        // onPress={()=>{}}\n        description={({\n          ellipsizeMode,\n          color: descriptionColor,\n          fontSize,\n        }) => (\n          <View style={[styles.container, styles.column]}>\n            <Text\n              numberOfLines={1}\n              ellipsizeMode={ellipsizeMode}\n              style={{color: descriptionColor, fontSize}}>\n              {i.description}\n            </Text>\n            <View\n              style={[\n                styles.container,\n                styles.row,\n                styles.additionalPadding,\n                {gap: 10},\n              ]}>\n              <Chip\n                icon={'file'}\n                onPress={onDownloadToggle}\n                style={{height: 30}}\n                textStyle={{fontSize}}>\n                {downloadText}\n              </Chip>\n              {isDownloaded && (\n                <Chip\n                  icon={isSharing ? 'heart' : 'network'}\n                  onPress={() => {\n                    if (isSharing) return;\n                    dispatch(\n                      setSharing({itemId: i.id, status: true}),\n                    );\n                    shareFileToWT(i.id, i.folderId);\n                  }}\n                  style={{height: 30}}\n                  textStyle={{fontSize}}>\n                  {isSharing ? 'Sharing' : 'Share'}\n                </Chip>\n              )}\n            </View>\n          </View>\n        )}\n      />\n      {i.thumbnail ? (\n        <ImageBackground\n          source={{uri: i.thumbnail, cache: 'force-cache'}}\n          resizeMethod=\"resize\"\n          resizeMode=\"cover\"\n          style={{\n            ...styles.image,\n            height,\n            width,\n          }}\n          imageStyle={{...styles.image, height, width}}\n        />\n      ) : null}\n      <Divider />\n    </View>\n  );\n};\n\nexport default MediaItem;\n","import React from 'react';\nimport {Divider, IconButton, List} from 'react-native-paper';\nimport {FolderType, Media} from '../../../types';\nimport {\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\nimport {ProjectsStackedParams} from '../../../types/nav';\nfunction ProjectItem({\n  item,\n  folderType,\n  onRemoveFolder,\n}: {\n  item: Media;\n  folderType: FolderType;\n  onRemoveFolder: (item: {id: string}) => void;\n}) {\n  const navigation =\n    useNavigation<NavigationProp<ProjectsStackedParams>>();\n  const projectType =\n    folderType === FolderType.encoder\n      ? 'EncoderProject'\n      : 'EditorProject';\n  const projectIcon =\n    folderType === FolderType.editor ? 'film' : 'matrix';\n  return (\n    <>\n      <Divider />\n      <List.Item\n        style={{padding: 19}}\n        title={item.title}\n        onPress={() => {\n          navigation.navigate({\n            name: projectType,\n            params: {\n              projectId: item.id,\n              mnemonic: item.mnemonic,\n              parentFolderId: item.folderId,\n            },\n          });\n        }}\n        left={() => <List.Icon icon={projectIcon} />}\n        right={() => (\n          <IconButton\n            icon={'delete'}\n            onPress={() => onRemoveFolder(item)}\n          />\n        )}\n      />\n    </>\n  );\n}\n\nexport default ProjectItem;\n","import {TextStyle, ViewStyle} from 'react-native';\n\nexport const styles = {\n  container: {\n    flex: 1,\n    paddingTop: 0,\n    marginTop: 0,\n  } as ViewStyle,\n  item: {\n    paddingTop: 15,\n    paddingLeft: 5,\n    fontSize: 12,\n    height: 160,\n    color: 'black',\n    width: 80,\n  } as ViewStyle,\n  tinyLogo: {\n    marginTop: 2,\n    width: 22,\n    height: 22,\n  } as ViewStyle,\n  scroll: {\n    height: 65,\n    display: 'flex',\n    position: 'relative',\n    backgroundColor: 'black',\n    width: '100%',\n    marginTop: 0,\n  } as ViewStyle,\n  icon: {\n    paddingLeft: 10,\n  } as TextStyle,\n};\n","import React, {memo} from 'react';\n\nimport {View} from 'react-native';\n\nimport MediaLibrary from './medialibrary';\n\nconst HomeView = () => {\n  return (\n    <View\n      style={{\n        height: '100%',\n        width: '100%',\n      }}>\n      <View>\n        <MediaLibrary />\n      </View>\n    </View>\n  );\n};\n\nexport default memo(HomeView);\n","import React, {useRef} from 'react';\nimport {\n  Image,\n  ImageBackground,\n  Platform,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport {\n  ActivityIndicator,\n  Banner,\n  Divider,\n  IconButton,\n  useTheme,\n} from 'react-native-paper';\nimport {useMutation, useQuery} from 'react-query';\nimport {Media} from '../../types';\nimport {getFileOpfs, getVideoWT} from '../../api/media';\nimport {useIsFocused} from '@react-navigation/native';\nimport {\n  MediaActionType,\n  loaded,\n  togglePause,\n} from '../../store/slices/media';\nimport {useAppDispatch} from '../../store/hooks';\nimport {ResizeMode, Video} from 'expo-av';\nimport {getById} from '../../api';\nimport {useMediaPlayer} from '../../hooks/useMediaPlayer';\nimport {UnifiedStackParam} from '../../types/nav';\n\nexport default function MediaBanner({\n  height,\n  mediaPlayer,\n}: {\n  mediaPlayer: ReturnType<typeof useMediaPlayer>;\n  height: number;\n}) {\n  const theme = useTheme();\n  const dispatch = useAppDispatch();\n  const {currentMediaId, currentMedia} = mediaPlayer;\n  const fileType = currentMedia?.fileType;\n  const isImage = fileType?.search('image') > -1;\n  const {width} = useWindowDimensions();\n  const focused = useIsFocused();\n  const mediaRes = currentMedia as Media;\n  const updateMediaTime = useMutation(\n    async (currentTime: number) => {\n      if (mediaRes) {\n        // mediaRes.currentPosition = currentTime;\n        // await writeItem(mediaRes)\n        // await mediaData.refetch()\n      }\n    },\n    {retry: false},\n  );\n\n  const mediaQuery = useQuery(\n    'wtMedia_' + currentMediaId,\n    async () => {\n      let file: string | undefined;\n\n      try {\n        file = await getFileOpfs(mediaRes);\n      } catch (err) {}\n\n      if (!file) file = (await getVideoWT(mediaRes)).stream;\n\n      dispatch(\n        loaded({\n          actionType: MediaActionType.loaded,\n          mediaId: currentMediaId!,\n        }),\n      );\n      return file;\n    },\n    {\n      enabled: focused ? true : false,\n      refetchOnMount: true,\n    },\n  );\n  const mediaLoading = mediaQuery.isLoading;\n  const mediaSrc = mediaQuery?.data;\n  const currentPosition = mediaRes?.currentPosition || 0;\n  const isMobile = width < 700;\n  const bannerHeight = isMobile ? height / 4 : height / 2;\n  const videoRef = useRef();\n  return (\n    <>\n      <Banner\n        visible={currentMediaId ? true : false}\n        theme={theme}\n        style={{\n          backgroundColor: 'black',\n          padding: 0,\n          margin: 0,\n          width,\n          height: bannerHeight,\n          position: 'static',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        }}\n        contentStyle={{\n          width: isMobile ? width : '100%',\n          height: bannerHeight,\n          padding: 0,\n          margin: 0,\n        }}>\n        <View\n          style={{\n            width: isMobile ? width : '100%',\n            height: bannerHeight - 40,\n            position: 'relative',\n          }}>\n          {isImage && currentMediaId && mediaSrc && (\n            <ImageBackground\n              style={{height: bannerHeight}}\n              resizeMethod=\"scale\"\n              imageStyle={{resizeMode: 'contain'}}\n              // imageStyle={{width: '100%', height: '100%'}}\n              source={{uri: mediaSrc}}\n            />\n          )}\n          {!isImage && currentMediaId && mediaSrc ? (\n            Platform.OS === 'web' ? (\n              <video\n                // autoPlay={!media.isMediaPaused ? true : false}\n                controls={true}\n                style={{\n                  width: '100%',\n                  height: '100%',\n                  objectFit: 'contain',\n                }}\n                onPlaying={e => {\n                  const {currentTime} = e.nativeEvent\n                    .target as any as {currentTime: number};\n                  updateMediaTime.mutateAsync(currentTime);\n                  dispatch(\n                    togglePause({\n                      pause: false,\n                      actionType: MediaActionType.pause,\n                    }),\n                  );\n                }}\n                onPause={e => {\n                  dispatch(\n                    togglePause({\n                      pause: true,\n                      actionType: MediaActionType.pause,\n                    }),\n                  );\n                }}\n                onEnded={p => {\n                  console.info('ended', p);\n                }}\n                onTimeUpdate={e => {\n                  const {currentTime} = e.nativeEvent\n                    .target as any as {currentTime: number};\n                  // console.info('time', currentTime)\n                  const minimumTimeDiff = 5;\n                  if (\n                    currentTime > minimumTimeDiff &&\n                    currentTime - currentPosition > minimumTimeDiff &&\n                    !updateMediaTime.isLoading\n                  ) {\n                    updateMediaTime.mutateAsync(currentTime);\n                  }\n                }}\n                onResize={() => {\n                  console.info('resize');\n                }}\n                onLoadedData={e => {\n                  if (!mediaPlayer.isMediaPaused)\n                    e.nativeEvent.target.play();\n                }}\n                ref={el => {\n                  // console.info(\"onmount\", el)\n                  if (\n                    el &&\n                    el.paused &&\n                    el.currentTime !== currentPosition\n                  ) {\n                    // el.currentTime = currentPosition\n                  }\n                }}\n                src={mediaSrc}>\n                <track\n                  label=\"language one\"\n                  kind=\"subtitles\"\n                  srcLang=\"en\"\n                  default\n                />\n              </video>\n            ) : (\n              <Video\n                source={{uri: mediaSrc}}\n                ref={videoRef}\n                shouldPlay={true}\n                style={{\n                  width: '100%',\n                  height: '100%',\n                  position: 'absolute',\n                  left: -10,\n                  top: 0,\n                  padding: 0,\n                  margin: 0,\n                }}\n                volume={1}\n                resizeMode={ResizeMode.CONTAIN}\n                useNativeControls={true}\n                onPlaybackStatusUpdate={async status => {\n                  if (status.isLoaded) {\n                    // console.info('is loaded');\n                    if (status.isBuffering && !status.isPlaying) {\n                      // console.info('is buffering and paused');\n                    }\n                  }\n                }}\n              />\n            )\n          ) : null}\n          {mediaLoading ? (\n            <ActivityIndicator\n              style={{position: 'relative', flexBasis: 'auto'}}\n              size={72}\n            />\n          ) : null}\n          <IconButton\n            style={{\n              position: 'absolute',\n              cursor: 'pointer',\n              right: Platform.select({native: 10, web: 0}),\n              top: Platform.select({native: -20, web: 0}),\n              pointerEvents: 'auto',\n              zIndex: 100000,\n            }}\n            icon={'close'}\n            mode=\"outlined\"\n            size={25}\n            onPress={() => mediaPlayer.onMediaPress('')}\n          />\n        </View>\n      </Banner>\n      <Divider />\n    </>\n  );\n}\n","import React, {memo} from 'react';\nimport {useMedia} from '../../hooks/useMedia';\nimport FolderLibrary from '../folder/folderlibrary';\nimport {\n  getFolderContent,\n  getFoldersByType,\n  writeItem,\n} from '../../api';\n\nconst MediaLibrary = () => {\n  const dataHook = useMedia(\n    getFoldersByType,\n    getFolderContent,\n    writeItem,\n  );\n\n  return <FolderLibrary dataHook={dataHook} />;\n};\n\nexport default memo(MediaLibrary);\n","import React from 'react';\n\nimport {createMaterialBottomTabNavigator} from 'react-native-paper/react-navigation';\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport {SafeAreaInsetsContext} from 'react-native-safe-area-context';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\nimport CustomNavigationBar from './nav/appnav';\n\nimport {createFileStack} from '../navigators/filestack';\nimport {Platform, useWindowDimensions} from 'react-native';\nimport DrawerItems from './nav/drawer';\nimport {createChatStack} from '../navigators/chatstack';\nimport {createSettings} from '../navigators/settings';\nimport {createEncoder} from '../navigators/encoder';\nimport {createEditor} from '../navigators/editor';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {setCurrentPage} from '../store/slices/ui';\nimport {useKeyboardDispatcher} from '../hooks/useKeyboardListener';\nimport {\n  ExtendedNavState,\n  StackRouteName,\n  UnifiedStackParam,\n  RootStackName,\n  RootStackRouteNames,\n} from '../types/nav';\n\nconst DrawerNav = createDrawerNavigator();\n\nconst Tab = createMaterialBottomTabNavigator();\n\nconst RootStack = createNativeStackNavigator();\n\nconst FileStack = createFileStack();\n\nconst ChatStackScreen = createChatStack();\n\nconst SettingsStack = createSettings();\n\nconst EncoderStack = createEncoder();\n\nconst EditorStack = createEditor();\n\nconst TabNav = () => {\n  const dim = useWindowDimensions();\n  const dispatch = useAppDispatch();\n  const isNavHidden = useAppSelector(\n    state => state.ui.isTabBarHidden,\n  );\n  useKeyboardDispatcher();\n  const screenStateListener = (navState: ExtendedNavState) => {\n    try {\n      const currentTab =\n        navState?.data?.state?.routes[\n          navState?.data.state?.index || 0\n        ] || {};\n      const currentNavPage =\n        currentTab?.state?.routes[currentTab?.state?.index || 0];\n      const parentName = currentTab.name as RootStackRouteNames;\n      const currentPage = currentNavPage?.name as StackRouteName;\n      const params = currentNavPage?.params as UnifiedStackParam;\n      dispatch(setCurrentPage({currentPage, params, parentName}));\n    } catch (err) {}\n  };\n  if (dim.width > 700 && Platform.OS === 'web') {\n    return (\n      <SafeAreaInsetsContext.Consumer>\n        {insets => {\n          const {left, right} = insets || {left: 0, right: 0};\n          const collapsedDrawerWidth = 80 + Math.max(left, right);\n          const nonCollasedWidth = 180;\n          const collapsed = true;\n          return (\n            <DrawerNav.Navigator\n              screenOptions={{\n                drawerStyle: {\n                  width: collapsed\n                    ? collapsedDrawerWidth\n                    : nonCollasedWidth,\n                },\n                drawerPosition: 'left',\n                drawerType: 'permanent',\n              }}\n              detachInactiveScreens={true}\n              defaultStatus=\"open\"\n              screenListeners={{\n                state: state =>\n                  screenStateListener(state as ExtendedNavState),\n              }}\n              drawerContent={props => <DrawerItems {...props} />}>\n              <DrawerNav.Screen\n                name=\"FilesTab\"\n                component={FileStack}\n                options={{\n                  headerShown: false,\n                  drawerIcon: ({color, size}) => (\n                    <Ionicons\n                      name=\"folder-outline\"\n                      color={color}\n                      size={24}\n                    />\n                  ),\n                  title: 'Files',\n                }}\n              />\n              <DrawerNav.Screen\n                name=\"ContactsTab\"\n                component={ChatStackScreen}\n                options={{\n                  headerShown: false,\n                  title: 'Contacts',\n                }}\n              />\n              <DrawerNav.Screen\n                name=\"EncoderTab\"\n                component={EncoderStack}\n                options={{\n                  headerShown: false,\n                  title: 'Encoder',\n                }}\n              />\n              <DrawerNav.Screen\n                name=\"EditorTab\"\n                component={EditorStack}\n                options={{\n                  headerShown: false,\n                  title: 'Editor',\n                }}\n              />\n              <DrawerNav.Screen\n                name=\"SettingsTab\"\n                component={SettingsStack}\n                options={{\n                  headerShown: false,\n                  drawerIcon: ({color, size}) => (\n                    <Ionicons\n                      name=\"people-outline\"\n                      color={color}\n                      size={24}\n                    />\n                  ),\n                  title: 'Contacts',\n                }}\n              />\n            </DrawerNav.Navigator>\n          );\n        }}\n      </SafeAreaInsetsContext.Consumer>\n    );\n  }\n  return (\n    <Tab.Navigator\n      barStyle={{display: isNavHidden ? 'none' : 'flex'}}\n      screenListeners={{\n        state: state =>\n          screenStateListener(state as ExtendedNavState),\n      }}>\n      <Tab.Screen\n        name=\"FilesTab\"\n        options={{\n          tabBarLabel: 'Files',\n          tabBarIcon: 'folder',\n        }}\n        component={FileStack}\n      />\n      <Tab.Screen\n        name=\"ContactsTab\"\n        component={ChatStackScreen}\n        options={{\n          tabBarLabel: 'Contacts',\n          tabBarIcon: 'contacts',\n        }}\n      />\n      <Tab.Screen\n        name=\"EditorTab\"\n        component={EditorStack}\n        options={{\n          tabBarLabel: 'Editor',\n          tabBarIcon: 'scissors-cutting',\n        }}\n      />\n      <Tab.Screen\n        name=\"SettingsTab\"\n        options={{\n          tabBarLabel: 'Settings',\n          tabBarIcon: 'cog',\n        }}\n        component={SettingsStack}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst RootStackNav = () => (\n  <RootStack.Navigator\n    screenOptions={{\n      header: props => <CustomNavigationBar {...props} />,\n    }}>\n    <RootStack.Screen\n      name={RootStackName}\n      component={TabNav}\n      options={{\n        orientation: 'portrait',\n        freezeOnBlur: true,\n      }}\n    />\n  </RootStack.Navigator>\n);\n\nexport default RootStackNav;\n","import React, {useContext, useState, useMemo, useEffect} from 'react';\nimport {\n  Appbar,\n  useTheme,\n  TextInput,\n  Searchbar,\n} from 'react-native-paper';\n\nimport {Platform} from 'react-native';\nimport {useWindowDimensions} from 'react-native';\nimport {useAppSelector} from '../../store/hooks';\nimport uuid from 'react-native-uuid';\n\nimport {UserDataState} from '../../ctx';\nimport {\n  CurrentUserData,\n  Folder,\n  FolderType,\n  Media,\n} from '../../types';\nimport {useMutation, useQuery, useQueryClient} from 'react-query';\nimport {\n  encoderProjectTypes,\n  extractMedia,\n  getUserData,\n  writeItem,\n} from '../../api';\n\nimport {FolderParams} from '../../types/nav';\n\nimport {NativeStackHeaderProps} from '@react-navigation/native-stack';\nimport {BannerContainer} from './components/bannercontainer';\nimport {Actions} from './components/actions';\n\nimport {\n  Audio,\n  InterruptionModeAndroid,\n  InterruptionModeIOS,\n} from 'expo-av';\nimport {\n  NavInput,\n  addFolderPlaceholder,\n  chatPlacehoder,\n  defaulPlaceHolderText,\n  searchContactsPlaceholderText,\n} from './components/navinput';\nexport default function CustomNavigationBar({\n  options,\n}: NativeStackHeaderProps) {\n  useEffect(() => {\n    const enableAudio = async () => {\n      await Audio.setAudioModeAsync({\n        allowsRecordingIOS: false,\n        interruptionModeIOS: InterruptionModeIOS.DuckOthers,\n        playsInSilentModeIOS: true,\n        staysActiveInBackground: true,\n        interruptionModeAndroid: InterruptionModeAndroid.DuckOthers,\n        shouldDuckAndroid: false,\n      });\n    };\n    enableAudio();\n  }, []);\n  const theme = useTheme();\n  const queryClient = useQueryClient();\n  const [searchValue, setSearch] = useState('');\n  const {width, height} = useWindowDimensions();\n  const mode = useAppSelector(state => state.ui.editingMode);\n  const userState = useContext(UserDataState) as CurrentUserData;\n  const userData = useQuery('UserData', () => getUserData());\n  const userId = userData?.data?.id;\n  const [isLocked, setLocked] = useState(false);\n  const writeItemMutation = useMutation(\n    (item: Media | Folder) => writeItem(item),\n    {retry: true},\n  );\n\n  const params = useAppSelector(state => state.ui.params);\n  const folderType = useAppSelector(state => state.ui.folderType);\n\n  const folderId =\n    (params as FolderParams)?.folderId || params?.parentFolderId;\n\n  const newFolderType = 'new_' + folderType;\n  const isEncoderProject = encoderProjectTypes.includes(folderType);\n\n  const extractLink = async () => {\n    if (\n      searchValue.search('http') === -1 &&\n      searchValue.search('magnet') === -1\n    )\n      return;\n    console.info(searchValue);\n\n    if (isLocked === true) return;\n    setLocked(true);\n    setTimeout(() => {\n      setLocked(false);\n    }, 20000);\n\n    let exData = await extractMedia(searchValue);\n    if (exData && exData.id) {\n      const {id} = exData;\n\n      try {\n        const nd: Media & {isFolder?: boolean} = {\n          ...exData,\n          originalId: id,\n          id: uuid.v4().toString(),\n          folderId: folderId || newFolderType,\n          userId: userState.user.id,\n          date: new Date().valueOf(),\n          isMediaNew: true,\n          isFolder:\n            exData.files && exData.files.length ? true : undefined,\n          files:\n            exData.files &&\n            exData.files.map((i: {name: string; length: number}) => ({\n              name: i.name,\n              size: i.length,\n            })),\n        };\n        await writeItemMutation.mutateAsync(nd);\n        await queryClient.refetchQueries({\n          queryKey: 'folderContent_' + nd.folderId,\n        });\n        setSearch('');\n      } catch (err) {\n        console.error('extractLink', err);\n      }\n    }\n    setLocked(false);\n  };\n\n  useMemo(() => {\n    extractLink();\n  }, [searchValue]);\n  const showFullSearchBar = width > 700 && Platform.OS !== 'macos';\n\n  let placeholderText = addFolderPlaceholder;\n\n  if (mode === 'party') {\n    placeholderText = chatPlacehoder;\n  }\n  if (mode === 'search') {\n    placeholderText = 'type to search';\n  }\n  return (\n    <>\n      <Appbar.Header theme={theme}>\n        <NavInput\n          options={options}\n          folderId={folderId as string}\n          isLocked={isLocked}\n          searchValue={searchValue}\n          setSearch={setSearch}\n        />\n        <Actions\n          showFullSearchBar={showFullSearchBar}\n          isEncoderProject={isEncoderProject}\n          userId={userId}\n        />\n        {showFullSearchBar ? (\n          <Searchbar\n            loading={isLocked}\n            mode=\"bar\"\n            placeholder={\n              folderType === FolderType.contact\n                ? searchContactsPlaceholderText\n                : defaulPlaceHolderText\n            }\n            theme={theme}\n            style={{height: 40, width: 300}}\n            inputStyle={{paddingBottom: 14}}\n            value={searchValue}\n            onChangeText={setSearch}\n          />\n        ) : null}\n      </Appbar.Header>\n      <BannerContainer\n        userId={userId}\n        isEncoderProject={isEncoderProject}\n        height={height}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport {StyleSheet} from 'react-native';\nimport {\n  Dialog,\n  Portal,\n  Button,\n  Text,\n  useTheme,\n} from 'react-native-paper';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {setAppDialogParams} from '../../../store/slices/ui';\n\nexport const ChooseDialog = () => {\n  const dispatch = useAppDispatch();\n  const left = useAppSelector(\n    state => state.ui.appDialogOnSelectLeftt,\n  );\n  const right = useAppSelector(\n    state => state.ui.appDialogOnSelectRight,\n  );\n  const theme = useTheme();\n  const visible = useAppSelector(state => state.ui.appDialogVisible);\n  const body = useAppSelector(state => state.ui.appDialogBody);\n  const title = useAppSelector(state => state.ui.appDialogTitle);\n  const close = () =>\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: false,\n        appDialogBody: undefined,\n        appDialogControls: undefined,\n        appDialogIcon: undefined,\n        appDialogTitle: undefined,\n        appDialogOnSelectLeftt: undefined,\n        appDialogOnSelectRight: undefined,\n      }),\n    );\n  return (\n    <Portal>\n      <Dialog\n        theme={theme}\n        style={{\n          width: 300,\n          height: 'auto',\n          maxWidth: 300,\n          top: 0,\n          bottom: 0,\n          left: 'calc(50% - 150px)',\n        }}\n        onDismiss={close}\n        visible={visible}>\n        <Dialog.Icon icon=\"alert\" />\n        <Dialog.Title style={styles.title}>{title}</Dialog.Title>\n        {body && (\n          <Dialog.Content>\n            {typeof body === 'string' ? (\n              <Text style={{width: '100%', padding: 20}}>{body}</Text>\n            ) : (\n              <body />\n            )}\n          </Dialog.Content>\n        )}\n        <Dialog.Actions>\n          <Button onPress={left || close} mode=\"outlined\">\n            Disagree\n          </Button>\n          <Button onPress={right} mode=\"outlined\">\n            Agree\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  title: {\n    textAlign: 'center',\n  },\n});\n","import axios from 'axios';\nimport React, {useState} from 'react';\nimport {\n  GestureHandlerRootView,\n  ScrollView,\n} from 'react-native-gesture-handler';\nimport {\n  Portal,\n  Modal,\n  Card,\n  Avatar,\n  Button,\n  List,\n  Divider,\n  Banner,\n  ProgressBar,\n  useTheme,\n} from 'react-native-paper';\nimport {useMutation, useQueryClient} from 'react-query';\nimport {domain, cdndomain} from '../../../db/defaults';\nimport {\n  EditorLayer,\n  EditorProject,\n  EncoderProject,\n  FFMpegOutputType,\n  FFMpegPreset,\n  Folder,\n  FolderType,\n  Media,\n} from '../../../types';\n\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {\n  setFileUploadProgress,\n  setMediaModalVisible,\n  setUploadInProgress,\n} from '../../../store/slices/upload';\nimport {shareFileToWT, writeFileOpfs} from '../../../api/media';\nimport {useNavigation} from '@react-navigation/native';\nimport {niceBytes} from '../../../api/util';\nimport uuid from 'react-native-uuid';\nimport {getById, writeItem} from '../../../api';\nimport {Platform} from 'react-native';\nimport {AVPlaybackStatusSuccess, Video} from 'expo-av';\nconst preset = FFMpegPreset.superfast;\nconst output = FFMpegOutputType.mp4;\nconst compressionLevel = 20;\n\nexport default function FileUpload(props: any) {\n  //FILE UPLOAD\n  const {\n    userId,\n    folderType,\n    hideMedialModal,\n    folderId,\n    routeName,\n    projectId,\n    isEncoderProject,\n  } = props;\n  const theme = useTheme();\n  const queryClient = useQueryClient();\n  const uploadState = useAppSelector(state => state.upload);\n  const dispatch = useAppDispatch();\n  const nav = useNavigation();\n  const mediaModalVisible = uploadState.modalVisible;\n  const pickerFile = uploadState.file;\n  const pickerFileMeta = uploadState.media;\n  const uploadToCloud = uploadState.uploadToCloud;\n  const shareToWt = uploadState.shareToWT;\n  const encryptionEnabled = uploadState.encryption;\n  const fileUploadProgress = uploadState.fileUploadProgress;\n  const isUploadInProgress = uploadState.isUploadInProgress;\n  const uuidFilename = `${pickerFileMeta?.id}-${pickerFileMeta?.filename}`;\n  const authToken =\n    Platform.OS === 'web' ? localStorage?.getItem('authToken') : '';\n  const writeItemMutation = useMutation(\n    (item: Media | Folder | EditorProject | EditorLayer) =>\n      writeItem(item),\n  );\n  const [videoMeta, setVideoMeta] = useState({});\n\n  const uploadFileMutation = useMutation(\n    () =>\n      axios.request({\n        url: `${domain}api/v1/backend/files/${uuidFilename}?authToken=${authToken}`,\n        method: 'PUT',\n        data: pickerFile,\n        withCredentials: true,\n        onUploadProgress: progress =>\n          dispatch(setFileUploadProgress(progress)),\n      }),\n    {\n      retry(attempts) {\n        if (attempts < 4) return true;\n      },\n    },\n  );\n\n  const writeItemToLocalStoreMutation = useMutation(meta =>\n    writeFileOpfs({...meta, ...videoMeta}, pickerFile!),\n  );\n\n  const writingItem =\n    writeItemMutation.isLoading || uploadFileMutation.isLoading;\n  let peerShared = shareToWt;\n  if (pickerFileMeta?.extractor === 'wt') {\n    peerShared = true;\n  }\n  const confirmFile = async () => {\n    try {\n      const meta: Media = JSON.parse(JSON.stringify(pickerFileMeta!));\n      const {width, height} = videoMeta;\n      const end = videoMeta.duration - 1;\n      console.info('routeName', routeName, 'folderType', folderType);\n      meta.isDownloaded = true;\n      let folder: Folder = await getById(meta.folderId);\n      if (!folder) {\n        folder = (await getById(meta.folderId, folderId)) as Folder;\n      }\n      console.info('project folder', folder, folderId, meta.folderId);\n      if (folder?.mnemonic) {\n        peerShared = true;\n      }\n      if (\n        folderType === FolderType.editor &&\n        routeName !== 'EditorProject'\n      ) {\n        console.info('creating a new editor project from file');\n        const editor: EditorProject = {\n          id: uuid.v4().toString(),\n          title: meta.title,\n          userId,\n          isEditorProject: true,\n          folderType,\n          folderId,\n          orderId: 1,\n          isFolder: false,\n          editor: {\n            length: 1 * 60 * 1000,\n            width,\n            height,\n            preset,\n            output,\n            lastUpdated: new Date().valueOf(),\n            compressionLevel,\n            code: [],\n          },\n          mnemonic: folder?.mnemonic,\n          date: new Date().valueOf(),\n        };\n        await writeItemMutation.mutateAsync(editor);\n        const layer: EditorLayer = {\n          id: uuid.v4().toString(),\n          title: 'Layer 1',\n          folderId: editor.id,\n          userId,\n          isEditorLayer: true,\n          orderId: 1,\n          folderType,\n          isFolder: false,\n          date: new Date().valueOf(),\n          editor: {\n            videoDisabled: false,\n            muted: false,\n          },\n          mnemonic: folder?.mnemonic,\n        };\n        await writeItemMutation.mutateAsync(layer);\n        const comment_layer: EditorLayer = {\n          id: editor.id + '_comments',\n          title: 'Comments',\n          folderId: editor.id,\n          userId,\n          isEditorLayer: true,\n          orderId: 1,\n          folderType,\n          isFolder: false,\n          date: new Date().valueOf(),\n          editor: {\n            videoDisabled: true,\n            muted: true,\n            isCommentLayer: true,\n          },\n          mnemonic: folder?.mnemonic,\n        };\n        await writeItemMutation.mutateAsync(comment_layer);\n        meta.folderId = layer.id;\n        meta.isMediaNew = isEncoderProject;\n        meta.isEncoderProject = isEncoderProject;\n        meta.encoding = {\n          end,\n          width,\n          height,\n          preset,\n          output,\n          compressionLevel,\n        };\n      }\n      if (folderType === FolderType.editor) {\n        (meta as EncoderProject).encoding = {\n          end,\n          width,\n          height,\n          preset,\n          output,\n          compressionLevel,\n        };\n      }\n      console.info('foldertype saveitem', folderType, meta);\n      await writeItemToLocalStoreMutation.mutateAsync(meta);\n      await writeItemMutation.mutateAsync({...meta, ...videoMeta});\n      try {\n        if (peerShared) shareFileToWT(meta.id, meta.folderId);\n      } catch (err) {\n        console.error('share to wt error', err);\n      }\n      if (uploadToCloud) {\n        dispatch(setUploadInProgress(true));\n        dispatch(setMediaModalVisible(false));\n        await uploadFileMutation.mutateAsync();\n        const fileUrl = cdndomain + userId + '/' + uuidFilename;\n        meta.webpage_url = fileUrl;\n        meta.hasCloud = true;\n        meta.extractor = 'cloud';\n        meta.url = fileUrl;\n        console.info('after upload File Mutation', meta);\n      }\n      await queryClient.refetchQueries({\n        queryKey: ['folderContent_' + meta.folderId],\n      });\n      await queryClient.refetchQueries({\n        queryKey: ['folderContent_' + folderId],\n      });\n      await queryClient.refetchQueries({\n        queryKey: ['projectLayers', projectId],\n      });\n      await queryClient.refetchQueries({\n        queryKey: ['encodedMedia', projectId],\n      });\n      dispatch(setUploadInProgress(false));\n      dispatch(setMediaModalVisible(false));\n      if (!folderId) {\n        nav.navigate('Folder', {folderId: meta.folderId});\n      }\n    } catch (err) {\n      console.error('media upload modal error', err);\n    }\n  };\n  return (\n    <>\n      <Banner theme={theme} visible={isUploadInProgress}>\n        <Card.Title\n          titleStyle={{fontSize: 20}}\n          title=\"Uploading file\"\n          subtitle={pickerFileMeta?.filename}\n          left={props => <Avatar.Icon {...props} icon=\"file\" />}\n        />\n        <Divider />\n        <ProgressBar\n          animatedValue={fileUploadProgress?.progress || 0}\n        />\n      </Banner>\n      <Portal>\n        <Modal\n          visible={mediaModalVisible}\n          onDismiss={hideMedialModal}\n          theme={theme}\n          style={{padding: 20}}>\n          <Card>\n            <Card.Title\n              titleStyle={{fontSize: 20}}\n              title=\"Adding a new file\"\n              subtitle=\"Please confirm\"\n              left={props => <Avatar.Icon {...props} icon=\"file\" />}\n            />\n            <Divider />\n            <GestureHandlerRootView style={{height: '70%'}}>\n              <ScrollView>\n                <Card.Content>\n                  <List.Section>\n                    <List.Item\n                      title={'Filename'}\n                      description={pickerFileMeta?.filename}\n                    />\n                    <List.Item\n                      title={'Format'}\n                      description={pickerFileMeta?.type}\n                    />\n                    <List.Item\n                      title={'Duration'}\n                      description={videoMeta?.duration}\n                    />\n                    <List.Item\n                      title={'Width'}\n                      description={videoMeta?.width}\n                    />\n                    <List.Item\n                      title={'Height'}\n                      description={videoMeta?.height}\n                    />\n                    <List.Item\n                      title={'Size'}\n                      description={niceBytes(\n                        pickerFileMeta?.size?.toString(),\n                      )}\n                    />\n                    <List.Item\n                      title={'FolderId'}\n                      description={pickerFileMeta?.folderId}\n                    />\n                    {pickerFile && Platform.OS === 'web' ? (\n                      <video\n                        style={{display: 'none'}}\n                        src={URL.createObjectURL(pickerFile)}\n                        onLoadedMetadata={e => {\n                          // console.info(\"metaLoaded\", e.nativeEvent.target, e.nativeEvent.target.videoWidth, e.nativeEvent.target.videoHeight, e.nativeEvent.target.duration)\n                          // window.video1 = e.nativeEvent.target\n                          setVideoMeta({\n                            width: e.nativeEvent.target.videoWidth,\n                            height: e.nativeEvent.target.videoHeight,\n                            duration: e.nativeEvent.target.duration,\n                          });\n                        }}\n                      />\n                    ) : (\n                      <Video\n                        // style={{display: 'none'}}\n                        source={{uri: pickerFileMeta?.url as string}}\n                        onLoad={e => {\n                          e;\n                        }}\n                        onReadyForDisplay={e => {\n                          console.info('metaLoaded', e);\n                          // window.video1 = e.nativeEvent.target\n                          setVideoMeta({\n                            width: e.naturalSize.width,\n                            height: e.naturalSize.height,\n                            duration:\n                              (e.status as AVPlaybackStatusSuccess)\n                                .durationMillis / 1000,\n                          });\n                        }}\n                      />\n                    )}\n                    {/* <List.Item \n                  onPress={()=>dispatch(setShareToWt(!shareToWt))}\n                  title={\"Share To WebTorrent\"} \n                  right={(props)=><Switch theme={theme} value={peerShared || shareToWt}/>\n                } /> */}\n                    {/* <List.Item\n                  onPress={()=>dispatch(setUploadToCloud(!uploadToCloud))} \n                  title={\"Upload To Cloud\"} \n                  right={(props)=><Switch theme={theme} value={uploadToCloud}/>} \n                /> */}\n                    {/* <List.Item\n                  onPress={()=>dispatch(setEncrypt(!encryptionEnabled))} \n                  title={\"Encrypt\"} \n                  right={(props)=><Switch theme={theme} value={encryptionEnabled}/>} \n                /> */}\n                  </List.Section>\n                </Card.Content>\n              </ScrollView>\n            </GestureHandlerRootView>\n            <Divider />\n            <Card.Actions style={{height: 'auto'}}>\n              <Button\n                disabled={writingItem}\n                onPress={hideMedialModal}>\n                Cancel\n              </Button>\n              <Button\n                loading={writeItemMutation.isLoading}\n                onPress={confirmFile}>\n                Confirm\n              </Button>\n            </Card.Actions>\n          </Card>\n        </Modal>\n      </Portal>\n    </>\n  );\n}\n","import {Portal, Snackbar, useTheme} from 'react-native-paper';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {setToastText} from '../../../store/slices/ui';\n\nexport function ToastDialog() {\n  const text = useAppSelector(state => state.ui.toastText);\n  const icon = useAppSelector(state => state.ui.toastIcon);\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const visible = text !== undefined;\n  console.info('toast text', text, icon);\n  return (\n    <Portal>\n      <Snackbar\n        theme={theme}\n        visible={visible}\n        icon={icon}\n        onDismiss={() => dispatch(setToastText(undefined))}>\n        {text}\n      </Snackbar>\n    </Portal>\n  );\n}\n","import uuid from 'react-native-uuid';\nimport React from 'react';\nimport {Appbar, Tooltip} from 'react-native-paper';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {startOnboarding} from '../../../store/slices/upload';\nimport {FolderType} from '../../../types';\nimport {FolderParams, ProjectParams} from '../../../types/nav';\nimport EditorToolBar from '../../editor/editortoolbar';\nimport {DocumentPicker, writeItem} from '../../../api';\nimport {setEditingMode} from '../../../store/slices/ui';\n\nexport function Actions({\n  showFullSearchBar,\n  isEncoderProject,\n  userId,\n}: {\n  showFullSearchBar: boolean;\n  isEncoderProject: boolean;\n  userId?: string;\n}) {\n  const dispatch = useAppDispatch();\n  const params = useAppSelector(state => state.ui.params);\n  const folderType = useAppSelector(state => state.ui.folderType);\n  const routeName = useAppSelector(state => state.ui.currentPage);\n  const projectId = (params as ProjectParams)?.projectId;\n  const folderId = (params as FolderParams)?.folderId;\n  const isEditing =\n    useAppSelector(state => state.ui.editingMode) !== undefined;\n  console.info('isEditing', isEditing);\n  let addFileEnabled = [\n    FolderType.media,\n    FolderType.editor,\n    FolderType.encoder,\n  ].includes(folderType);\n\n  let addFolderEnabled = folderType !== FolderType.settings;\n  const showScaleControls = routeName === 'EditorProject';\n\n  const newFolderType = 'new_' + folderType;\n\n  if (showScaleControls) {\n    addFileEnabled = false;\n    addFolderEnabled = false;\n  }\n\n  const onClickFile = async () => {\n    const pickerResult = await DocumentPicker.pickSingle({\n      presentationStyle: 'fullScreen',\n    });\n    console.info('pickerResult', pickerResult);\n    // setMediaModalVisible(true)\n    if (!pickerResult) return;\n    const url = pickerResult.uri;\n    let fId = folderId || newFolderType;\n    console.info('isEncoderProject', isEncoderProject);\n    const nd: Media = {\n      id: uuid.v4().toString(),\n      url,\n      title: pickerResult.name,\n      originalId: pickerResult.name,\n      filename: pickerResult.name,\n      fileType: pickerResult.type,\n      folderId: fId,\n      userId,\n      date: new Date().valueOf(),\n      isMediaNew: !isEncoderProject,\n      isEncoderProject,\n      type: pickerResult.file.type,\n      size: pickerResult.file.size,\n      extractor: 'local',\n    };\n    dispatch(startOnboarding({file: pickerResult.file, media: nd}));\n    // setPickerFile(pickerResult.file)\n    // setPickerFileMeta(nd)\n  };\n\n  const onClickFolder = () => {\n    dispatch(setEditingMode('folder'));\n  };\n\n  const onClickSearch = () => {\n    dispatch(setEditingMode('search'));\n  };\n\n  const onClickContact = () => {\n    dispatch(setEditingMode('party'));\n  };\n\n  const onClickDatabase = () => {\n    dispatch(setEditingMode('database'));\n  };\n\n  return (\n    <>\n      {routeName === 'Databases' ? (\n        <Appbar.Action\n          icon={'database-plus'}\n          onPress={onClickDatabase}\n        />\n      ) : null}\n      {addFolderEnabled && !isEditing ? (\n        <Tooltip title=\"Create a folder\">\n          <Appbar.Action\n            icon=\"folder-plus\"\n            onPress={() => onClickFolder()}\n          />\n        </Tooltip>\n      ) : null}\n      {showScaleControls && (\n        <EditorToolBar projectId={projectId} routeParams={params} />\n      )}\n      {!isEditing && folderType === 'contact' ? (\n        <Tooltip title=\"Create a chat\">\n          <Appbar.Action\n            icon=\"chat-plus\"\n            onPress={() => onClickContact()}\n          />\n        </Tooltip>\n      ) : null}\n      {addFileEnabled && !isEditing ? (\n        <Tooltip title=\"Select a file\">\n          <Appbar.Action\n            icon=\"file-plus\"\n            onPress={() => onClickFile()}\n          />\n        </Tooltip>\n      ) : null}\n      {!showFullSearchBar && !isEditing ? (\n        <Appbar.Action\n          icon=\"magnify\"\n          onPress={() => onClickSearch()}\n        />\n      ) : null}\n    </>\n  );\n}\n","import React from 'react';\nimport {Appbar} from 'react-native-paper';\nimport {\n  FolderParams,\n  ProjectParams,\n  RootScreens,\n  RootStackName,\n  RootStackRouteNames,\n  StackRouteName,\n  UnifiedStackParams,\n} from '../../../types/nav';\nimport {useAppSelector} from '../../../store/hooks';\nimport {Folder} from '../../../types';\nimport {\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\n\nexport function BackButton({folder}: {folder: Folder | undefined}) {\n  const navigation =\n    useNavigation<NavigationProp<UnifiedStackParams>>();\n  const params = useAppSelector(state => state.ui.params);\n  const parentName = useAppSelector(state => state.ui.parentName);\n  const folderId = (params as FolderParams)?.folderId;\n  const parentFolderId =\n    (params as ProjectParams)?.parentFolderId ||\n    (folder?.folderId as string);\n  const backPress = () => {\n    const folderParams: FolderParams = {\n      folderId: parentFolderId,\n      mnemonic:\n        parentFolderId?.search('new_') === -1\n          ? folder?.mnemonic\n          : undefined,\n      title: folder?.title as string,\n    };\n    console.info({folderParams});\n    if (folderParams.folderId && folderParams.folderId !== folderId) {\n      navigation.navigate(RootStackName, {\n        screen: parentName,\n        params: {\n          screen: 'Folder',\n          params: folderParams,\n        },\n      });\n      return;\n    }\n\n    navigation.navigate(RootStackName, {\n      screen: parentName,\n      params: {\n        screen: RootScreens[parentName],\n        params: undefined,\n      },\n    });\n  };\n  return <Appbar.Action icon=\"chevron-left\" onPress={backPress} />;\n}\n","import React from 'react';\nimport {useMediaPlayer} from '../../../hooks/useMediaPlayer';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {cancel} from '../../../store/slices/upload';\nimport {ProjectParams, FolderParams} from '../../../types/nav';\nimport EditorBanner from '../../editor/editorbanner';\nimport EncoderBanner from '../../encoder/encoderbanner';\nimport FileUpload from '../banners/fileupload';\nimport MediaBanner from '../../media/mediabanner';\nimport {View} from 'react-native';\nimport {ChooseDialog} from '../banners/choosedialog';\nimport {ToastDialog} from '../banners/toastdialog';\n\nexport function BannerContainer({\n  userId,\n  isEncoderProject,\n  height,\n}: {\n  userId: string | undefined;\n  isEncoderProject: boolean;\n  height: number;\n}) {\n  const params = useAppSelector(state => state.ui.params);\n  const folderType = useAppSelector(state => state.ui.folderType);\n  const routeName = useAppSelector(state => state.ui.currentPage);\n  const projectId = (params as ProjectParams)?.projectId;\n  const folderId = (params as FolderParams)?.folderId;\n  const parentFolderId = (params as ProjectParams)?.parentFolderId;\n  const dispatch = useAppDispatch();\n\n  const hideMedialModal = () => {\n    dispatch(cancel());\n  };\n\n  const mediaPlayer = useMediaPlayer();\n\n  return (\n    <View style={{padding: 0, margin: 0}}>\n      <FileUpload\n        projectId={projectId}\n        userId={userId}\n        folderType={folderType}\n        hideMedialModal={hideMedialModal}\n        folderId={folderId || parentFolderId}\n        routeName={routeName}\n        isEncoderProject={isEncoderProject}\n      />\n      {mediaPlayer.currentMediaId ? (\n        <MediaBanner height={height} mediaPlayer={mediaPlayer} />\n      ) : null}\n      {routeName === 'EncoderProject' ? (\n        <EncoderBanner\n          projectId={projectId}\n          height={height}\n          folderId={folderId || parentFolderId}\n        />\n      ) : null}\n      {routeName === 'EditorProject' ? (\n        <EditorBanner\n          projectId={projectId}\n          height={height}\n          routeParams={params}\n          folderId={folderId || parentFolderId}\n        />\n      ) : null}\n      <ChooseDialog />\n      <ToastDialog />\n    </View>\n  );\n}\n","import React, {useContext, useState, useMemo, useEffect} from 'react';\nimport {\n  Appbar,\n  useTheme,\n  TextInput,\n  Searchbar,\n  useAppThe,\n} from 'react-native-paper';\n\nimport {getHeaderTitle} from '@react-navigation/elements';\nimport {View} from 'react-native';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\n\nimport {\n  ChatParams,\n  FolderParams,\n  UnifiedStackParams,\n} from '../../../types/nav';\n\nimport uuid from 'react-native-uuid';\n\nimport {BackButton} from './backbutton';\nimport {setEditingMode} from '../../../store/slices/ui';\nimport {NativeStackNavigationOptions} from '@react-navigation/native-stack';\nimport {\n  createNewParty,\n  getById,\n  getUserData,\n  writeItem,\n} from '../../../api';\nimport {\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\nimport {useMutation, useQuery, useQueryClient} from 'react-query';\nimport {Folder, Media} from '../../../types';\nexport const defaulPlaceHolderText = 'type to search your collection';\nexport const addFolderPlaceholder = 'Type name of the folder';\nexport const searchContactsPlaceholderText =\n  'type to search your contacts';\nexport const chatPlacehoder = 'Type name of the new chat';\n\nexport function NavInput({\n  options,\n  folderId,\n  isLocked,\n  searchValue,\n  setSearch,\n}: {\n  options: NativeStackNavigationOptions;\n  folderId: string;\n  isLocked: boolean;\n  searchValue: string;\n  setSearch: (s: string) => void;\n}) {\n  const queryClient = useQueryClient();\n  const navigation =\n    useNavigation<NavigationProp<UnifiedStackParams>>();\n  const params = useAppSelector(state => state.ui.params);\n  const folderType = useAppSelector(state => state.ui.folderType);\n  const dispatch = useAppDispatch();\n  const isEditing = useAppSelector(state => state.ui.isEditing);\n  const mode = useAppSelector(state => state.ui.editingMode);\n  const [textValue, setText] = useState('');\n  const routeName: string = useAppSelector(\n    state => state.ui.currentPage,\n  );\n  const userData = useQuery('UserData', () => getUserData());\n  const userId = userData?.data?.id as string;\n  const theme = useTheme();\n  const writeItemMutation = useMutation(\n    (item: Media | Folder) => writeItem(item),\n    {retry: true},\n  );\n  const folderDataQuery = useQuery(\n    'folderData_' + folderId,\n    async () => await getById(folderId as string),\n    {retry: true, enabled: folderId ? true : false},\n  );\n  const folder = folderDataQuery.data;\n  const back = useAppSelector(state => state.ui.isBackEnabled);\n  const newFolderType = 'new_' + folderType;\n  const title =\n    (params as ChatParams)?.name ||\n    (params as FolderParams)?.title ||\n    getHeaderTitle(options, routeName!);\n  let placeholderText = addFolderPlaceholder;\n\n  if (mode === 'party') {\n    placeholderText = chatPlacehoder;\n  }\n  if (mode === 'search') {\n    placeholderText = 'type to search';\n  }\n\n  const onClickExtra = async () => {\n    console.info('mode', mode);\n    try {\n      switch (mode) {\n        case 'party':\n          console.info('createNewParty');\n          const partyId = userId + '_' + uuid.v4();\n          const party = await createNewParty({\n            id: partyId,\n            name: textValue,\n            partyId,\n            folderId: folderId || newFolderType,\n          });\n          navigation.navigate('Chat', {\n            chatId: partyId,\n            name: textValue,\n            mnemonic: party.mnemonic,\n            parentFolderId: folderId || newFolderType,\n          });\n          console.info('createNewParty done', party);\n          break;\n        case 'folder':\n          const newFolderId = 'folder_' + uuid.v4() + '_' + userId;\n          const nFolder: Folder = {\n            id: newFolderId,\n            title: textValue,\n            isFolder: true,\n            date: new Date().valueOf(),\n            userId,\n            folderType,\n            folderId,\n          };\n          await writeItemMutation.mutateAsync(nFolder);\n          break;\n\n        case 'search':\n          dispatch(setEditingMode(undefined));\n          break;\n      }\n    } catch (err) {\n      console.error('onClickExtra err', err);\n    }\n    if (folderId) {\n      await queryClient.refetchQueries({\n        queryKey: 'folderContent_' + folderId,\n      });\n    } else {\n      await queryClient.refetchQueries({\n        queryKey: 'folders_' + folderType,\n      });\n    }\n\n    dispatch(setEditingMode(undefined));\n    return true;\n  };\n  const showTextField = isEditing && mode !== 'database';\n  return (\n    <>\n      {!showTextField && back ? (\n        <BackButton folder={folder as Folder} />\n      ) : null}\n\n      {!showTextField ? (\n        <Appbar.Content\n          title={title}\n          theme={theme}\n          style={{paddingLeft: !back ? 15 : 0}}\n        />\n      ) : null}\n      {showTextField ? (\n        <View style={{width: '100%'}}>\n          <TextInput\n            placeholder={placeholderText}\n            onChangeText={query =>\n              mode === 'search' ? setSearch(query) : setText(query)\n            }\n            style={{\n              width: '100%',\n              textAlignVertical: 'bottom',\n              lineHeight: 30,\n              padding: 10,\n              height: 40,\n            }}\n            theme={theme}\n            value={mode === 'search' ? searchValue : textValue}\n            left={\n              <TextInput.Icon\n                style={{marginTop: 20}}\n                icon=\"arrow-left-circle\"\n                onPress={() => {\n                  dispatch(setEditingMode(undefined));\n                }}\n              />\n            }\n            autoFocus\n            maxLength={100}\n            right={\n              <TextInput.Icon\n                style={{marginTop: 20}}\n                onPress={onClickExtra}\n                icon=\"check-circle\"\n                loading={isLocked}\n              />\n            }\n          />\n        </View>\n      ) : null}\n    </>\n  );\n}\n","import * as React from 'react';\nimport {I18nManager, StyleSheet, View, Platform} from 'react-native';\n\nimport {\n  DrawerContentComponentProps,\n  DrawerContentScrollView,\n} from '@react-navigation/drawer';\nimport {Drawer, useTheme} from 'react-native-paper';\n\nconst DrawerCollapsedItemsData = [\n  {\n    label: 'Media',\n    focusedIcon: 'folder',\n    unfocusedIcon: 'folder-outline',\n    key: 0,\n    screen: 'FilesTab',\n  },\n  {\n    label: 'Chat',\n    focusedIcon: 'forum',\n    unfocusedIcon: 'forum-outline',\n    key: 1,\n    screen: 'ContactsTab',\n  },\n  {\n    label: 'Encode\\nCompress',\n    focusedIcon: 'state-machine',\n    unfocusedIcon: 'state-machine',\n    key: 2,\n    screen: 'EncoderTab',\n  },\n  {\n    label: 'Video\\nEditor',\n    focusedIcon: 'scissors-cutting',\n    unfocusedIcon: 'scissors-cutting',\n    key: 3,\n    screen: 'EditorTab',\n  },\n  {\n    label: 'Settings',\n    focusedIcon: 'cog',\n    unfocusedIcon: 'cog-outline',\n    key: 4,\n    screen: 'SettingsTab',\n  },\n];\n\nfunction DrawerItems(props: DrawerContentComponentProps) {\n  const nav = props.navigation;\n  const drawerItemIndex = props.state.index;\n  const theme = useTheme();\n  const isV3 = true;\n  const collapsed = true;\n\n  return (\n    <DrawerContentScrollView\n      alwaysBounceVertical={false}\n      style={[\n        styles.drawerContent,\n        {\n          backgroundColor: theme.colors.surface,\n        },\n      ]}\n      showsVerticalScrollIndicator={false}\n      showsHorizontalScrollIndicator={false}>\n      {isV3 && collapsed && (\n        <>\n          {DrawerCollapsedItemsData.map((props, index) => (\n            <Drawer.Section\n              style={styles.collapsedSection}\n              key={props.key}>\n              <Drawer.CollapsedItem\n                {...props}\n                key={props.key}\n                active={drawerItemIndex === index}\n                onPress={() => {\n                  nav.navigate(props.screen);\n                }}\n              />\n            </Drawer.Section>\n          ))}\n        </>\n      )}\n    </DrawerContentScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  drawerContent: {\n    flex: 1,\n  },\n  preference: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n  },\n  v3Preference: {\n    height: 56,\n    paddingHorizontal: 28,\n  },\n  badge: {\n    alignSelf: 'center',\n  },\n  collapsedSection: {\n    marginTop: 16,\n    fontSize: 12,\n  },\n  annotation: {\n    marginHorizontal: 24,\n    marginVertical: 6,\n  },\n});\n\nexport default DrawerItems;\n","import React, {useState} from 'react';\nimport {\n  ActivityIndicator,\n  Button,\n  Chip,\n  Dialog,\n  Divider,\n  IconButton,\n  List,\n  Text,\n  TextInput,\n} from 'react-native-paper';\nimport {useMutation, useQuery} from 'react-query';\nimport {View, Clipboard, Platform} from 'react-native';\nimport {\n  createDBConn,\n  dbMnemoCons,\n  evolu,\n  initDatabaseRecord,\n} from '../../api/db';\nimport {getDatabases} from '../../api/db/supervisor';\nimport {DatabaseItem} from '../../types';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {setEditingMode} from '../../store/slices/ui';\nimport {genMnemonic} from '../../api';\n\nexport function DatabaseItemComponent({\n  db,\n  totalLength,\n  showMnemonic,\n}: {\n  db: DatabaseItem;\n  totalLength: number;\n  showMnemonic: (i: DatabaseItem) => void;\n}) {\n  const currentMnemonic = evolu!.getOwner()?.mnemonic;\n  const isCurrent = db.mnemonic === currentMnemonic;\n  const mnemonic = db.mnemonic as string;\n  const loginMutation = useMutation(async () => {\n    try {\n      if (!dbMnemoCons[mnemonic]) {\n        await createDBConn(db.title, db.mnemonic, true);\n      }\n      await initDatabaseRecord(\n        'previous',\n        currentMnemonic,\n        dbMnemoCons[mnemonic],\n      );\n    } catch (err) {\n      console.error(err);\n    }\n    evolu.restoreOwner(db.mnemonic);\n  });\n  const logoutDatabase = (i: DatabaseItem) => {};\n  const loginDatabase = (i: DatabaseItem) => {\n    loginMutation.mutateAsync();\n  };\n  return (\n    <List.Item\n      key={db.id}\n      left={props => <List.Icon {...props} icon={'database'} />}\n      right={props => (\n        <>\n          {/* {totalLength > 1 && (\n              <Button\n                {...props}\n                icon={'logout'}\n                mode=\"outlined\"\n                onPress={() => logoutDatabase(db)}>\n                Logout\n              </Button>\n            )} */}\n          {!isCurrent && (\n            <Button\n              {...props}\n              icon={'archive-arrow-down'}\n              mode=\"outlined\"\n              onPress={() => loginDatabase(db)}>\n              Switch\n            </Button>\n          )}\n          <Button\n            {...props}\n            icon={'eye'}\n            mode=\"outlined\"\n            onPress={() => showMnemonic(db)}>\n            Show\n          </Button>\n        </>\n      )}\n      description={\n        <View style={{gap: 10, flexDirection: 'row'}}>\n          <Chip>{`${new Date(db.date).toDateString()}`}</Chip>\n          {isCurrent && (\n            <Chip style={{backgroundColor: 'green'}}>Current</Chip>\n          )}\n        </View>\n      }\n      title={`${db.title}`}\n    />\n  );\n}\n\nexport default function DatabasesScreen() {\n  const dbReq = useQuery('Databases', () => getDatabases(), {\n    refetchOnWindowFocus: false,\n  });\n  const isLoading = dbReq.isLoading;\n  const dbs = dbReq.data;\n  const [mnemonic, setShowMnemonic] = useState<string | undefined>(\n    undefined,\n  );\n  const [dbName, setDbName] = useState<string>('');\n  const [dbMnemonic, setDbMnemonic] = useState<string>('');\n  const showMnemonic = (i: DatabaseItem) =>\n    setShowMnemonic(i.mnemonic);\n\n  const createDBMutation = useMutation(\n    async () => {\n      console.info('createdb');\n      return await initDatabaseRecord(dbName, dbMnemonic);\n    },\n    {\n      onSuccess: () => {\n        dispatch(setEditingMode(undefined));\n        dbReq.refetch();\n      },\n    },\n  );\n  const showCreate = useAppSelector(\n    state => state.ui.editingMode === 'database',\n  );\n  const dispatch = useAppDispatch();\n  if (isLoading) return <ActivityIndicator size={72} />;\n  return (\n    <>\n      <List.Section>\n        {dbs?.map(db => (\n          <DatabaseItemComponent\n            db={db}\n            totalLength={dbs.length}\n            showMnemonic={showMnemonic}\n          />\n        ))}\n      </List.Section>\n      <Dialog\n        style={{maxWidth: 500}}\n        visible={mnemonic !== undefined}\n        onDismiss={() => setShowMnemonic(undefined)}>\n        <Dialog.Title>Mnemonic</Dialog.Title>\n        <Dialog.Content>\n          <Text>{mnemonic}</Text>\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button\n            icon={'clipboard'}\n            onPress={() => (\n              Clipboard.setString(mnemonic as string),\n              setShowMnemonic(undefined)\n            )}>\n            Copy\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n      <Dialog\n        visible={showCreate}\n        style={{maxWidth: 500}}\n        onDismiss={() => dispatch(setEditingMode(undefined))}>\n        <Dialog.Title>Create a new Database</Dialog.Title>\n        <Dialog.Content>\n          <TextInput\n            label={'Database Name'}\n            value={dbName}\n            onChangeText={setDbName}\n          />\n          <TextInput\n            label={'Database Mnemonic'}\n            value={dbMnemonic}\n            onChangeText={setDbMnemonic}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button\n            key={'close'}\n            icon={'close'}\n            onPress={() => {\n              dispatch(setEditingMode(undefined));\n            }}>\n            Cancel\n          </Button>\n          <Button\n            key={'matrix'}\n            icon={'matrix'}\n            onPress={() => {\n              setDbMnemonic(genMnemonic());\n            }}>\n            Generate New Mnemonic\n          </Button>\n          <Button\n            key={'check'}\n            icon={'check'}\n            disabled={\n              dbName.length < 3 || dbMnemonic.split(' ').length !== 12\n            }\n            onPress={() => createDBMutation.mutateAsync()}\n            loading={createDBMutation.isLoading}>\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </>\n  );\n}\n","import React from 'react';\nimport {ActivityIndicator, Divider, List} from 'react-native-paper';\nimport {useQuery} from 'react-query';\nimport {Device} from '../../types';\nimport {View} from 'react-native';\n\nexport default function DevicesScreen(props: any) {\n  const user = useQuery('UserData', () => props.getUserData(), {\n    refetchOnWindowFocus: false,\n  });\n  const userLoading = user.isLoading;\n  const userData = user.data;\n  if (userLoading) return <ActivityIndicator size={72} />;\n  return (\n    <List.Section>\n      {userData.devices.map((device: Device) => (\n        <View key={device.id}>\n          {device.id !== 'unknown' && device.manufacturer ? (\n            <>\n              <Divider />\n              <List.Item\n                key={device.id}\n                left={props => (\n                  <List.Icon\n                    {...props}\n                    icon={device.manufacturer.toLowerCase()}\n                  />\n                )}\n                right={props => (\n                  <List.Icon {...props} icon={'logout'} />\n                )}\n                description={`Created: ${new Date(\n                  device.createdAt,\n                ).toDateString()}`}\n                title={`${device.model.replace(\n                  new RegExp('-'),\n                  ' ',\n                )} on ${device.platform}`}\n              />\n              <Divider />\n            </>\n          ) : null}\n        </View>\n      ))}\n    </List.Section>\n  );\n}\n","import React, {useCallback} from 'react';\n\nimport {\n  View,\n  Linking,\n  StyleSheet,\n  Pressable,\n  Platform,\n} from 'react-native';\n\nimport {UserInfo} from '../../types';\nimport {useQuery} from 'react-query';\nimport {\n  ActivityIndicator,\n  List,\n  Avatar,\n  Divider,\n  Switch,\n  Text,\n  Chip,\n} from 'react-native-paper';\nimport {\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\nimport {getUserData} from '../../api';\nimport {SettingsStackParams} from '../../types/nav';\n\nconst appLoginUrl = 'https://www.starpy.me?appLogin=true';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n  customTitle: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  additionalPadding: {\n    paddingTop: 8,\n  },\n  image: {\n    width: '100%',\n    height: 'auto',\n    opacity: 0.6,\n    position: 'absolute',\n    resizeMode: 'cover',\n    zIndex: -1,\n    flex: 1,\n  },\n});\nconst SettingsView = () => {\n  const userDataQuery = useQuery('UserData', () => getUserData());\n  const isLoadingUserData = userDataQuery.isLoading;\n  const nav = useNavigation<NavigationProp<SettingsStackParams>>();\n  const UserData = userDataQuery.data;\n\n  const openDevices = () => nav.navigate('Devices');\n  const openDbs = () => nav.navigate('Databases');\n  const showDiskStatus = () => nav.navigate('Drive');\n\n  const onEditProfile = () => {\n    console.info('onEditProfile');\n  };\n  const AvatarSize = 72;\n  const controlIconPaddingTop = 20;\n  const touchableStyle = {\n    pointerEvents: 'auto',\n    paddingTop: controlIconPaddingTop,\n  } as any;\n  return (\n    <View\n      style={{\n        height: '100%',\n        width: '100%',\n      }}>\n      {isLoadingUserData ? (\n        <ActivityIndicator animating={true} size={72} />\n      ) : (\n        <>\n          <List.Section>\n            <List.Item\n              title={UserData?.name}\n              left={props =>\n                UserData?.photo ? (\n                  <Avatar.Image\n                    style={props.style}\n                    source={{\n                      uri: UserData?.photo,\n                      cache: 'force-cache',\n                    }}\n                    size={AvatarSize}\n                  />\n                ) : (\n                  <Avatar.Text\n                    style={props.style}\n                    label={\n                      (UserData?.name &&\n                        UserData?.name.slice(0, 2).toUpperCase()) ||\n                      ''\n                    }\n                    size={AvatarSize}\n                  />\n                )\n              }\n              description={({\n                ellipsizeMode,\n                color: descriptionColor,\n                fontSize,\n              }) => (\n                <View style={[styles.container, styles.column]}>\n                  <Text\n                    numberOfLines={1}\n                    ellipsizeMode={ellipsizeMode}\n                    style={{color: descriptionColor, fontSize}}>\n                    {UserData?.description}\n                  </Text>\n                  <View\n                    style={[\n                      styles.container,\n                      styles.row,\n                      styles.additionalPadding,\n                    ]}>\n                    {Platform.OS == 'macos' ? (\n                      <Chip\n                        icon=\"laptop\"\n                        onPress={() => {}}\n                        style={{height: 30}}>\n                        MacOS\n                      </Chip>\n                    ) : null}\n                    {Platform.OS === 'web' ? (\n                      <Chip\n                        icon=\"web\"\n                        onPress={() => {}}\n                        style={{height: 30}}>\n                        WEB\n                      </Chip>\n                    ) : null}\n                  </View>\n                </View>\n              )}\n              right={props => (\n                <Pressable\n                  style={touchableStyle}\n                  onPress={onEditProfile}>\n                  <List.Icon {...props} icon=\"pencil-outline\" />\n                </Pressable>\n              )}\n            />\n            {/* <Divider />\n            <List.Item\n              onPress={showDiskStatus}\n              title={'Drive Status'}\n              left={props => (\n                <List.Icon icon=\"harddisk\" style={props.style} />\n              )}\n            /> */}\n            <Divider />\n            <List.Item\n              onPress={openDevices}\n              title={'Devices'}\n              left={props => (\n                <List.Icon icon=\"devices\" style={props.style} />\n              )}\n            />\n            <Divider />\n            <List.Item\n              onPress={openDbs}\n              title={'Databases'}\n              left={props => (\n                <List.Icon icon=\"database\" style={props.style} />\n              )}\n            />\n            <Divider />\n          </List.Section>\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default SettingsView;\n","import {createContext} from 'react';\n\nimport {CurrentUserData} from '../types';\n\nimport {UserDataAction} from '../hooks/useUserData';\n\nexport const PeerCtx = createContext(null);\n\nexport const MediaCtx = createContext(null);\n\nexport const PartyCtx = createContext(null);\n\nexport const UserCtx = createContext<CurrentUserData | null>(null);\n\nexport const LocalCtx = createContext(null);\n\nexport const LoadingContext = createContext(false);\n\nexport const UserDataState = createContext<CurrentUserData | null>(\n  null,\n);\n\nexport const UserDataDispatch =\n  createContext<React.Dispatch<UserDataAction> | null>(null);\n","export * from './ctx';\n","import {FolderType} from '../types';\n\nexport const migrationKey = 'afanassii25662';\n// export const migrationKey = 'p2';\nexport const dbID = migrationKey;\nexport const userDocKey = 'userDoc';\nexport const domain = 'https://www.starpy.me/';\nexport const cdndomain = 'https://cdn.starpy.me/';\nexport const contactPrefix = 'contact_';\nexport const publicPartyPref = 'public_party_';\nexport const ffMpegWasmBaseUrl =\n  'https://unpkg.com/@ffmpeg/core@0.12.6/dist/umd';\nexport const appDirectory = 'starp';\n\nexport const encoderProjectTypes = [\n  FolderType.encoder,\n  FolderType.editor,\n];\nexport const googleDocumentKey = 'google_document';\nexport const defaultFolders = [\n  'demo',\n  'new',\n  'nearby',\n  publicPartyPref,\n  'tutorial',\n  'new_editor',\n  'new_media',\n  'new_chat',\n  'new_encoder',\n];\nexport const loaderURI =\n  'https://raw.githubusercontent.com/AboutReact/sampleresource/master/old_logo.png';\n\nexport const MEDIA = [\n  {\n    id: 'sintel',\n    title: 'Sintel',\n    thumbnail: 'https://starpy.me/webapp/sintel.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:08ada5a7a6183aae1e09d831df6748d566095a10&dn=Sintel&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fsintel.torrent',\n  },\n  {\n    id: 'tears',\n    title: 'Tears of Steel',\n    thumbnail: 'https://starpy.me/webapp/tearsOfSteel.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:209c8226b299b308beaf2b9cd3fb49212dbd13ec&dn=Tears+of+Steel&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Ftears-of-steel.torrent',\n  },\n  {\n    id: 'cosmoslaundromat',\n    title: 'Cosmos Laundromat',\n    thumbnail: 'https://starpy.me/webapp/cosmosLaundromat.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:c9e15763f722f23e98a29decdfae341b98d53056&dn=Cosmos+Laundromat&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fcosmos-laundromat.torrent',\n  },\n  {\n    id: 'bbb',\n    title: 'Big Buck Bunny',\n    thumbnail: 'https://starpy.me/webapp/bigBuckBunny.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:dd8255ecdc7ca55fb0bbf81323d87062db1f6d1c&dn=Big+Buck+Bunny&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fbig-buck-bunny.torrent',\n  },\n];\n\nconst FOLDERS = [\n  {\n    id: 'wired',\n    title: 'The WIRED CD - Rip. Sample. Mash. Share',\n    posterFileName: 'wiredCd.jpg',\n    torrentFileName: 'wiredCd.torrent',\n  },\n];\n\nexport const colors = {\n  textColor: 'white',\n  backgroundColor: 'black',\n  mediaItemTextColor: 'palegoldenrod',\n  mediaBackgroundColor: '#2b2b2b',\n  mediaBorderColor: 'black',\n  navTextColor: '#e1d76a',\n  navInactiveColor: '#585858',\n  folderColor: '#585858',\n  folderTextColor: 'black',\n  deleteBackgroundColor: 'red',\n  deleteTextColor: 'black',\n  navBorderColor: '#585858',\n  contactItemBackgroundColor: '#2b2b2b',\n  contactItemTitleColor: '#e1d76a',\n  contactItemOnlineColor: 'green',\n  theme: 'dark',\n  currentUserColor: '#585858',\n  remoteUserColor: 'cornflowerblue',\n};\n","import {migrationKey, MEDIA} from './defaults';\nexport * from './defaults';\n\nimport {faker} from '@faker-js/faker';\n\nimport uuid from 'react-native-uuid';\n\nimport {\n  UserInfo,\n  DocsGeneric,\n  DocsGenericArray,\n  FolderType,\n} from '../types';\n\nconst baseFolder = {\n  id: 'folder01',\n  title: 'My First Folder',\n  isFolder: true,\n};\n\nexport const createUser = async (): Promise<UserInfo> => {\n  const photo = faker.image.cats();\n  const name = faker.name.fullName();\n  const description = faker.animal.cat();\n  const year = '19' + new Date(faker.date.birthdate()).getFullYear();\n  const id = uuid.v4().toString();\n  const handle =\n    '@' + (name + description + year).replace(/[^A-Z0-9]+/gi, '');\n  return {\n    handle,\n    photo,\n    name,\n    description,\n    year,\n    id,\n    idHash: id,\n    userDoc: true,\n    version: migrationKey,\n    prevVersion: '',\n  };\n};\n\nexport const createNewUser = async (writeItem: any) => {\n  try {\n    const newUser = await createUser();\n    console.info('==== creating temp user ====', newUser);\n    await writeItem(newUser);\n    return newUser;\n  } catch (err) {\n    console.error('==== error on creating a new user ====', err);\n  }\n};\n\nexport const doInitialMigration = async (\n  writeItem: any,\n  getUserData: any,\n) => {\n  console.info('==== do migration ====');\n  try {\n    let user = await getUserData();\n    console.info('initialMigrationUserCheck', user);\n    if (user && user.id) {\n      return user;\n    }\n\n    if (!user || !user.id) {\n      user = await createNewUser(writeItem);\n    }\n\n    const userId = user.id;\n    await Promise.all([\n      writeItem({\n        ...baseFolder,\n        title: 'Demo',\n        id: 'demo',\n        folderType: FolderType.media,\n        date: new Date().toISOString(),\n        userId,\n      }),\n      ...MEDIA.map(async media =>\n        writeItem({\n          ...media,\n          isMediaNew: true,\n          folderId: 'demo',\n          date: new Date().valueOf(),\n        }),\n      ),\n    ]);\n  } catch (err) {\n    console.error('====migration err===', err);\n  }\n  console.info('==== after migration ====');\n};\n","import {UseFoldersState, useFolders} from './useFolders';\n\nimport {Folder, FolderType, Contact} from '../types';\n\nexport interface UseContactsState extends UseFoldersState<Contact> {}\n\nexport const useContacts = (\n  getFoldersByType: (folderType: FolderType) => Promise<Folder[]>,\n  getFolderContent: (folderId: string) => Promise<Contact[]>,\n  writeItem: any,\n): UseContactsState => {\n  const getContactsFolders = async () => {\n    const contacts = await getFoldersByType(FolderType.contact);\n    return contacts;\n  };\n\n  const getContactsFolderContent = async (folderId: string) => {\n    const content = await getFolderContent(folderId);\n    return content;\n  };\n\n  const useFoldersState = useFolders<Contact>(\n    FolderType.contact,\n    getContactsFolders,\n    getContactsFolderContent,\n    writeItem,\n  );\n\n  return useFoldersState;\n};\n","import {useMutation, useQuery, useQueryClient} from 'react-query';\nimport {\n  CurrentUserData,\n  Folder,\n  Media,\n  EditorProject,\n  EditorLayer,\n} from '../types';\nimport {useMediaPlayer} from './useMediaPlayer';\nimport {useContext, useMemo, useRef, useState} from 'react';\nimport {UserDataDispatch, UserDataState} from '../ctx';\nimport {UserDataAction, UserDataActionType} from './useUserData';\nimport {TextInput} from 'react-native-gesture-handler';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {useRoute} from '@react-navigation/native';\nimport {Clipboard} from 'react-native';\nimport {\n  DocumentPicker,\n  domain,\n  genMnemonic,\n  getById as getByIdMain,\n  writeItem as writeItemMain,\n  getFolderContent as getFolderContentMain,\n  getUserData,\n  removeObject,\n} from '../api';\nimport {startOnboarding} from '../store/slices/upload';\nimport uuid from 'react-native-uuid';\nimport {\n  setAppDialogParams,\n  setFolderMenuItemId,\n  setToastText,\n} from '../store/slices/ui';\n\nexport function useFolder(\n  folderId: string,\n  getFolderContentProxy: (folderId: string) => Promise<[]>,\n  getByIdProxy: (folderId: string) => Promise<any>,\n  folderType: string,\n  writeItemProxy?: any,\n  mnemonic?: string,\n  title?: string,\n  userId?: string,\n) {\n  const getFolderContent =\n    getFolderContentProxy || getFolderContentMain;\n  const getById = getByIdProxy || getByIdMain;\n  const writeItem = writeItemProxy || writeItemMain;\n  const route = useRoute();\n  const mediaPlayer = useMediaPlayer(folderId);\n  const dispatch = useAppDispatch();\n  const queryKey = 'folderContent_' + folderId;\n  const queryClient = useQueryClient();\n  const folderContentQuery = useQuery(\n    queryKey,\n    async () => {\n      // console.info('useFolder', folderId, mnemonic);\n      let folder;\n      try {\n        folder = await getById(folderId);\n        // console.info('folder', folder);\n      } catch (err) {\n        console.error(err);\n      }\n      // console.info('mnemonic', mnemonic, title);\n      if (mnemonic && title && !folder?.id) {\n        folder = await writeItem({\n          id: folderId,\n          mnemonic,\n          title,\n          isFolder: true,\n          folderId: 'new_' + folderType,\n          folderType,\n          userId,\n        });\n        // console.info('after create new folder, nf', folder);\n      }\n      // console.info('folder', folder);\n      const content = await getFolderContent(folderId);\n      return {folder, content};\n    },\n    {\n      refetchOnWindowFocus: true,\n      refetchOnMount: true,\n    },\n  );\n  const deleteFolderMutation = useMutation(\n    async (folderId: string) => {\n      const folder = (await getById(folderId)) as Folder;\n      try {\n        await removeObject(folder);\n      } catch (err) {\n        console.error('removeObject error', err);\n      }\n\n      await writeItem({\n        ...folder,\n        isDeleted: true,\n      });\n\n      await folderContentQuery.refetch();\n      if (route.params?.projectId) {\n        const {projectId} = route.params;\n        await queryClient.refetchQueries(['folderData_' + projectId]);\n      }\n    },\n  );\n  const folderContent = folderContentQuery.data?.content;\n  const folder = folderContentQuery.data?.folder;\n  const isLoadingFolderContent = folderContentQuery.isFetching;\n  const writeItemMutation = useMutation(item => writeItem(item));\n\n  const folderFiles =\n    folder && folder.files\n      ? (folder?.files?.map((file: string) => ({\n          id: file,\n          url: file,\n          title: file,\n          filename: file,\n          isMediaNew: true,\n          folderId: folder!.id,\n          _id: file,\n          date: (folder! as any as Media).date,\n          originalId: (folder! as any as Media).originalId,\n          webpage_url: (folder! as any as Media).webpage_url,\n          thumbnail: (folder! as any as Media).thumbnail,\n          extractor: (folder! as any as Media).extractor,\n        })) as Media[])\n      : [];\n  const userState = useContext(UserDataState) as CurrentUserData;\n  const userDispatch = useContext(\n    UserDataDispatch,\n  ) as React.Dispatch<UserDataAction>;\n  const isEditingFolder = userState.isEditingFolder[folderId];\n  const folderNameInputRef = useRef<TextInput | null>(null);\n  const [currentFolderEditorName, setFolderEditorName] = useState('');\n  const editableFolder = folderContent?.find(\n    (f: Folder) => f.id === isEditingFolder,\n  );\n\n  const content =\n    isLoadingFolderContent || folderContent === undefined\n      ? undefined\n      : folderFiles.concat(folderContent!);\n\n  const updateFolderTitleMutation = useMutation(\n    async (folder: Folder) => await writeItem(folder),\n  );\n  const closeDialog = () =>\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: false,\n        appDialogBody: undefined,\n        appDialogControls: undefined,\n        appDialogIcon: undefined,\n        appDialogTitle: undefined,\n        appDialogOnSelectLeftt: undefined,\n        appDialogOnSelectRight: undefined,\n      }),\n    );\n  const onRemoveFolder = async (folder: Folder) => {\n    console.info('onRemoveFolder', folder);\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: true,\n        appDialogTitle: 'Delete Folder',\n        appDialogIcon: 'delete',\n        appDialogOnSelectRight: async () => {\n          await deleteFolderMutation.mutateAsync(folder.id);\n          closeDialog();\n        },\n        appDialogOnSelectLeftt: undefined,\n        appDialogBody:\n          'This folder will remain for other users who may have access',\n        appDialogControls: undefined,\n      }),\n    );\n    console.info('after delete mutation');\n  };\n\n  const abortEditFolder = () =>\n    userDispatch({\n      actionType: UserDataActionType.setEditingFolder,\n      folderId: undefined,\n      folderType: folderId as any,\n    });\n\n  const editFolder = (fId: string) =>\n    userDispatch({\n      actionType: UserDataActionType.setEditingFolder,\n      folderId: fId,\n      folderType: folderId as any,\n    });\n\n  const onFolderActionPress = async (folderId: string) => {\n    console.info(\n      'isEditingFolder: ' + (folderId === isEditingFolder),\n      folderId,\n    );\n    if (editableFolder?.id === folderId) {\n      editableFolder.title = currentFolderEditorName;\n      await updateFolderTitleMutation.mutateAsync(editableFolder);\n      abortEditFolder();\n      await folderContentQuery.refetch();\n      return;\n    }\n    editFolder(folderId);\n  };\n\n  const onReordered = async (start: number, end: number) => {\n    console.info('dragend', start, end);\n\n    if (start === end) return;\n    content[start].orderId = end + 1;\n    const didEnd = content[end]\n      ? (content[end].orderId = start + 1)\n      : undefined;\n\n    await writeItemMutation.mutateAsync(content[start]);\n    didEnd ? await writeItemMutation.mutateAsync(content[end]) : null;\n  };\n\n  const onShareFolder = async (folder: Folder) => {\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n    const {id, title, userId} = folder;\n    const folderPref =\n      domain +\n      'webapp/' +\n      folderType +\n      '/folder/' +\n      id +\n      '?title=' +\n      title +\n      '&userId=' +\n      userId +\n      '&mnemonic=';\n    if (folder.mnemonic) {\n      console.info('folder has mnemonic');\n      const folderUrl =\n        folderPref + encodeURIComponent(folder.mnemonic);\n      console.info(folderUrl);\n      Clipboard.setString(folderUrl);\n    }\n    if (!folder.mnemonic) {\n      const mnemonic = genMnemonic();\n      folder.mnemonic = mnemonic;\n      await updateFolderTitleMutation.mutateAsync(folder);\n      const folderUrl = folderPref + encodeURIComponent(mnemonic);\n      console.info(folderUrl);\n      Clipboard.setString(folderUrl);\n    }\n    dispatch(setToastText('Link to folder has been copied'));\n  };\n\n  const addMedia = async () => {\n    const pickerResult = await DocumentPicker.pickSingle({\n      presentationStyle: 'fullScreen',\n    });\n    console.info('pickerResult', pickerResult);\n    // setMediaModalVisible(true)\n    if (!pickerResult) return;\n    const user = await getUserData();\n    const url = pickerResult.uri;\n    let fId = folderId;\n    const nd: Media = {\n      id: uuid.v4().toString(),\n      url,\n      title: pickerResult.name,\n      originalId: pickerResult.name,\n      filename: pickerResult.name,\n      fileType: pickerResult.type,\n      folderId: fId,\n      userId: user.id,\n      date: new Date().valueOf(),\n      type: pickerResult.file.type,\n      size: pickerResult.file.size,\n      extractor: 'local',\n    };\n    dispatch(startOnboarding({file: pickerResult.file, media: nd}));\n  };\n\n  return {\n    isLoadingFolderContentError: folderContentQuery.error,\n    isLoadingFolderContent,\n    folderContentQuery,\n    folder,\n    folderContent: content,\n    isEditingFolder,\n    abortEditFolder,\n    folderNameInputRef,\n    currentFolderEditorName,\n    setFolderEditorName,\n    onFolderActionPress,\n    onRemoveFolder,\n    onShareFolder,\n    folderType,\n    getContentItem: (_data: unknown, index: number) => content[index],\n    getContentCount: () => content?.length || 0,\n    ...mediaPlayer,\n    onReordered,\n    addMedia,\n  };\n}\n","import {useState, useRef, useContext} from 'react';\nimport {\n  Contact,\n  Folder,\n  FolderType,\n  Media,\n  CurrentUserData,\n} from '../types';\nimport {Clipboard, TextInput} from 'react-native';\nimport {UserDataState, UserDataDispatch} from '../ctx';\nimport {UserDataAction, UserDataActionType} from './useUserData';\nimport {UseQueryResult, useMutation, useQuery} from 'react-query';\nimport {useIsFocused, useRoute} from '@react-navigation/native';\nimport {\n  domain,\n  genMnemonic,\n  getFolderContent,\n  getFoldersByType,\n  writeItem as superWriteItem,\n  writeItem,\n} from '../api';\nimport {FolderParams} from '../types/nav';\n\nexport type FolderPreviewContentType = Media | Contact | Folder;\n\nexport type getItem = (data: any, index: number) => Folder;\n\nexport type getContentItem = (\n  data: any,\n  index: number,\n) => FolderPreviewContentType;\n\nexport interface FoldersState<T extends FolderPreviewContentType> {\n  folderType: FolderType;\n  isEditingFolder?: string;\n  newFolderName?: string;\n  currentContentId?: string;\n}\n\nexport enum FoldersActionType {\n  edit = 'edit',\n  select = 'select',\n  deselect = 'deselect',\n  abortEdit = 'abortEdit',\n}\n\nexport type FolderGenericActions =\n  | FoldersActionType.abortEdit\n  | FoldersActionType.deselect;\n\nexport interface FolderSelect {\n  actionType: FoldersActionType.select;\n  folderId: string | undefined;\n}\n\nexport interface FolderEdit {\n  actionType: FoldersActionType.edit;\n  folderId: string;\n}\n\nexport type FoldersAction =\n  | {actionType: FolderGenericActions}\n  | FolderSelect\n  | FolderEdit;\n\nexport interface UseFoldersState<T extends FolderPreviewContentType>\n  extends FoldersState<T> {\n  selectFolder: (folderId: string) => Promise<void>;\n  getItem: getItem;\n  getItemCount: () => number;\n  getContentCount: () => number;\n  getContentItem: getContentItem;\n  editFolder: (folderId: string) => void;\n  abortEditFolder: () => void;\n  currentFolderEditorName: string;\n  setFolderEditorName: (newFolderName: string) => void;\n  onFolderActionPress: (folderId: string) => void;\n  onFolderPress: (folderId: string) => void;\n  onRemoveFolder: (folder: Folder) => void;\n  onShareFolder: (folder: Folder) => void;\n  folderNameInputRef: React.MutableRefObject<TextInput | null>;\n  userState: CurrentUserData;\n  userDispatch: React.Dispatch<UserDataAction>;\n  currentFolderId?: string;\n  isFocused: boolean;\n  folderContent: T[];\n  loadingContent: boolean;\n  loadingFolders: boolean;\n  isLoadingFolder?: boolean;\n  folders: Folder[];\n  folderContentQuery: UseQueryResult<T[], unknown>;\n}\nexport const useFolders = <T extends FolderPreviewContentType>(\n  folderType: FolderType,\n  disabled: boolean,\n): UseFoldersState<T> => {\n  const route = useRoute();\n  const params = route.params as FolderParams;\n  const routeFolderId = params?.folderId;\n  const userState = useContext(UserDataState) as CurrentUserData;\n  const userDispatch = useContext(\n    UserDataDispatch,\n  ) as React.Dispatch<UserDataAction>;\n  const currentFolderId = userState.currentFolderIds[folderType];\n  const isEditingFolder = userState.isEditingFolder[folderType];\n  const folderNameInputRef = useRef<TextInput | null>(null);\n  const [currentFolderEditorName, setFolderEditorName] = useState('');\n  const isFocused = useIsFocused();\n\n  const foldersQuery = useQuery(\n    'folders_' + folderType,\n    async () => {\n      const data = await getFoldersByType(folderType);\n\n      const hasNew = data.find(i => i.id === 'new_' + folderType);\n      if (!hasNew && folderType !== FolderType.database)\n        data.unshift({\n          id: 'new_' + folderType,\n          title: 'New',\n          isFolder: true,\n          date: new Date().valueOf(),\n          userId: '',\n          folderType,\n          orderId: 0,\n        });\n      return data;\n    },\n    {\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n      retry: true,\n      enabled: !disabled,\n    },\n  );\n  const loadingFolders = foldersQuery.isFetching;\n  const folders = foldersQuery?.data || [\n    {\n      id: 'new_' + folderType,\n      title: 'New',\n      isFolder: true,\n      date: new Date().valueOf(),\n      userId: '',\n      folderType,\n    },\n  ];\n\n  const editableFolder = folders?.find(f => f.id === isEditingFolder);\n  const folderContentQuery = useQuery(\n    'folderContent_' + folderType,\n    () => getFolderContent(currentFolderId!),\n    {\n      enabled: false,\n      retry: true,\n      refetchOnWindowFocus: false,\n      enabled: !disabled,\n    },\n  );\n  const loadingContent =\n    folderContentQuery.isLoading || folderContentQuery.isFetching;\n  const folderContent = folderContentQuery?.data || [];\n  // console.info(writeItem)\n  const deleteFolderMutation = useMutation(\n    async (folderId: string) =>\n      await writeItem({id: folderId, isDeleted: true}),\n  );\n\n  const updateFolderTitleMutation = useMutation(\n    async (folder: Folder) => await writeItem(folder),\n  );\n  const deselectFolder = () =>\n    userDispatch({\n      actionType: UserDataActionType.setActiveFolder,\n      folderId: undefined,\n      folderType,\n    });\n\n  const selectFolder = async (folderId: string) => {\n    deselectFolder();\n    if (currentFolderId !== folderId) {\n      userDispatch({\n        actionType: UserDataActionType.setActiveFolder,\n        folderId,\n        folderType,\n      });\n    }\n  };\n\n  const editFolder = (folderId: string) =>\n    userDispatch({\n      actionType: UserDataActionType.setEditingFolder,\n      folderId,\n      folderType,\n    });\n\n  const abortEditFolder = () =>\n    userDispatch({\n      actionType: UserDataActionType.setEditingFolder,\n      folderId: undefined,\n      folderType,\n    });\n\n  const onFolderActionPress = async (folderId: string) => {\n    console.info(\n      'isEditingFolder: ' + (folderId === isEditingFolder),\n      folderId,\n    );\n    if (editableFolder?.id === folderId) {\n      editableFolder.title = currentFolderEditorName;\n      await updateFolderTitleMutation.mutateAsync(\n        editableFolder as Folder,\n      );\n      abortEditFolder();\n      await foldersQuery.refetch();\n      return;\n    }\n    editFolder(folderId);\n  };\n\n  const onFolderPress = (folderId: string) => {\n    selectFolder(folderId);\n  };\n\n  const onRemoveFolder = async (folder: Folder) => {\n    console.info('onRemoveFolder', folder);\n    await deleteFolderMutation.mutateAsync(folder.id);\n    await foldersQuery.refetch();\n    console.info('after delete mutation');\n  };\n\n  const onShareFolder = async (folder: Folder) => {\n    console.info('onShareFolder', folder);\n    const {id, title, userId} = folder;\n    const folderPref =\n      domain +\n      'webapp/' +\n      folderType +\n      '/folder/' +\n      id +\n      '?title=' +\n      title +\n      '&userId=' +\n      userId +\n      '&mnemonic=';\n    if (folder.mnemonic) {\n      console.info('folder has mnemonic');\n      const folderUrl =\n        folderPref + encodeURIComponent(folder.mnemonic);\n      console.info(folderUrl);\n      Clipboard.setString(folderUrl);\n    }\n    if (!folder.mnemonic) {\n      const mnemonic = genMnemonic();\n      folder.mnemonic = mnemonic;\n      await updateFolderTitleMutation.mutateAsync(folder);\n      const folderUrl = folderPref + encodeURIComponent(mnemonic);\n      console.info(folderUrl);\n      Clipboard.setString(folderUrl);\n    }\n  };\n\n  return {\n    folderType,\n    selectFolder,\n    currentFolderId: routeFolderId,\n    getItem: (_data: unknown, index: number) =>\n      folders[index] as Folder,\n    getItemCount: () => folders.length,\n    getContentItem: (_data: unknown, index: number) =>\n      folderContent[index],\n    getContentCount: () => folderContent.length,\n    folderContent,\n    loadingContent,\n    loadingFolders,\n    folders: folders as Folder[],\n    onRemoveFolder,\n    editFolder,\n    abortEditFolder,\n    onShareFolder,\n    folderContentQuery,\n    currentFolderEditorName,\n    setFolderEditorName,\n    folderNameInputRef,\n    onFolderPress,\n    onFolderActionPress,\n    userState,\n    userDispatch,\n    isFocused,\n    isLoadingFolder: foldersQuery.isLoading,\n    isEditingFolder,\n  };\n};\n","import {useEffect} from 'react';\nimport {Keyboard} from 'react-native';\nimport {useAppDispatch} from '../store/hooks';\nimport {setKeyboardHeight} from '../store/slices/ui';\n\nexport function useKeyboardDispatcher() {\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    Keyboard.addListener('keyboardDidShow', e =>\n      dispatch(\n        setKeyboardHeight({keyboardHeight: e.endCoordinates.height}),\n      ),\n    );\n    Keyboard.addListener('keyboardDidHide', () =>\n      dispatch(setKeyboardHeight({keyboardHeight: 0})),\n    );\n\n    return () => {\n      Keyboard.removeAllListeners('keyboardDidShow');\n      Keyboard.removeAllListeners('keyboardDidHide');\n    };\n  }, []);\n}\n","import {useFolders} from './useFolders';\n\nimport {Folder, FolderType, Media} from '../types';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {stop} from '../store/slices/media';\nimport {useCallback} from 'react';\nimport {useMediaPlayer} from './useMediaPlayer';\nimport {getFolderContent, getFoldersByType, writeItem} from '../api';\n\nexport const useMedia = (\n  getFoldersByTypeProxy: (\n    folderType: FolderType,\n  ) => Promise<Folder[]>,\n  getFolderContentProxy: (folderId: string) => Promise<Media[]>,\n  writeItemProxy?: any,\n) => {\n  const mediaPlayer = useMediaPlayer();\n  const useFoldersState = useFolders<Media>(\n    FolderType.media,\n    getFoldersByTypeProxy || getFoldersByType,\n    getFolderContentProxy || getFolderContent,\n    writeItemProxy || writeItem,\n  );\n\n  return {\n    ...useFoldersState,\n    ...mediaPlayer,\n  };\n};\n","import {MediaActionType} from '../store/slices/media';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {play, stop, loaded} from '../store/slices/media';\nimport {\n  downloadFileById,\n  exportFile,\n  getById,\n  removeObject,\n  writeItem,\n} from '../api';\nimport {setDownloadingProgress} from '../store/slices/fs';\nimport {Media} from '../types';\nimport {\n  setAppDialogParams,\n  setFolderMenuItemId,\n} from '../store/slices/ui';\nimport {useMutation, useQueryClient} from 'react-query';\n\nexport const useMediaPlayer = (folderId?: string) => {\n  const mediaState = useAppSelector(state => state.media);\n  const queryClient = useQueryClient();\n  const downloads = useAppSelector(\n    state => state.fs.downloadingProgress,\n  );\n  const dispatch = useAppDispatch();\n\n  const onMediaPress = async (media: Media) => {\n    console.info('mediapress', media);\n    try {\n      const mediaId = media.id;\n      dispatch(stop());\n      if (mediaState.currentMediaId !== mediaId && mediaId !== '') {\n        dispatch(\n          play({actionType: MediaActionType.play, mediaId, media}),\n        );\n      }\n    } catch (err) {\n      console.error('mediapress error', err);\n    }\n  };\n  const deleteMediaMutation = useMutation(async (mediaId: string) => {\n    const media = (await getById(mediaId, folderId)) as Media;\n    try {\n      await removeObject(media);\n    } catch (err) {\n      console.error('removeObject error', err);\n    }\n\n    await writeItem({\n      ...media,\n      isDeleted: true,\n    });\n\n    await queryClient.refetchQueries('folderData_' + folderId);\n  });\n\n  const deleteFileMutation = useMutation(async (mediaId: string) => {\n    const media = (await getById(mediaId, folderId)) as Media;\n    try {\n      await removeObject(media);\n    } catch (err) {\n      console.error('removeObject error', err);\n    }\n\n    await queryClient.refetchQueries('folderData_' + folderId);\n    await queryClient.refetchQueries([\n      'isDownloaded',\n      mediaId,\n      media.isDownloaded,\n    ]);\n  });\n  const exportFileMutation = useMutation(async (mediaId: string) => {\n    const media = (await getById(mediaId, folderId)) as Media;\n    await exportFile(media);\n  });\n\n  const closeDialog = () =>\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: false,\n        appDialogBody: undefined,\n        appDialogControls: undefined,\n        appDialogIcon: undefined,\n        appDialogTitle: undefined,\n        appDialogOnSelectLeftt: undefined,\n        appDialogOnSelectRight: undefined,\n      }),\n    );\n  const onRemoveMediaPress = (mediaId: string) => {\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: true,\n        appDialogTitle: 'Delete Media',\n        appDialogIcon: 'delete',\n        appDialogOnSelectRight: async () => {\n          await deleteMediaMutation.mutateAsync(mediaId);\n          closeDialog();\n        },\n        appDialogOnSelectLeftt: undefined,\n        appDialogBody:\n          'This media will be removed for you and other users who may have access',\n        appDialogControls: undefined,\n      }),\n    );\n  };\n  const onExportFile = (mediaId: string) => {\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: true,\n        appDialogTitle: 'Export Media',\n        appDialogIcon: 'share',\n        appDialogOnSelectRight: async () => {\n          await exportFileMutation.mutateAsync(mediaId);\n          closeDialog();\n        },\n        appDialogOnSelectLeftt: undefined,\n        appDialogBody:\n          'This media will be unencrypted and exported to your device',\n        appDialogControls: undefined,\n      }),\n    );\n  };\n\n  const onRemoveFile = (mediaId: string) => {\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: true,\n        appDialogTitle: 'Delete Media',\n        appDialogIcon: 'delete',\n        appDialogOnSelectRight: async () => {\n          await deleteFileMutation.mutateAsync(mediaId);\n          closeDialog();\n        },\n        appDialogOnSelectLeftt: undefined,\n        appDialogBody:\n          'Only the media file will be removed and only from this device',\n        appDialogControls: undefined,\n      }),\n    );\n  };\n\n  const onDownloadMediaPress = async (mediaId: string) => {\n    console.info('onDownloadMediaPress', mediaId);\n    const itemId = mediaId;\n    if (downloads[itemId]) return;\n    dispatch(setDownloadingProgress({itemId, progress: 0.001}));\n    try {\n      await downloadFileById(mediaId, folderId, progress =>\n        dispatch(\n          setDownloadingProgress({\n            itemId,\n            progress,\n          }),\n        ),\n      );\n    } catch (err) {\n      console.error(err);\n    }\n    dispatch(\n      setDownloadingProgress({itemId: mediaId, progress: undefined}),\n    );\n  };\n\n  const onCopyLinkPress = (mediaId: string) => {\n    console.info('onShareMediaPress', mediaId);\n  };\n\n  const onEditMediaPress = (mediaId: string) => {\n    console.info('onEditMediaPress', mediaId);\n  };\n\n  return {\n    ...mediaState,\n    onMediaPress,\n    onRemoveMediaPress,\n    onDownloadMediaPress,\n    onCopyLinkPress,\n    onRemoveFile,\n    onExportFile,\n    onEditMediaPress,\n  };\n};\n","import {getPublicMessages, sendChatMessage} from '../api/';\nimport {useMutation, useQuery} from 'react-query';\nimport {\n  CommonActions,\n  useIsFocused,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {setPaginationState} from '../store/slices/chat';\nimport {ChatParams} from '../types/nav';\n\nexport const useMessages = (chatId: string) => {\n  const isLoadingEarlier = useAppSelector(\n    state => state.chat.loadingPagination[chatId],\n  );\n  const dispatch = useAppDispatch();\n\n  const route = useRoute();\n  const focused = useIsFocused();\n  const navigation = useNavigation();\n  const params = route.params as ChatParams;\n  const mnemonic = params?.mnemonic;\n  const pageIndex = params?.page || 1;\n  const perPage = 25;\n  const messagesQuery = useQuery(\n    'chatMessages_' + chatId,\n    async () => {\n      const [messages] = await Promise.all([\n        getPublicMessages(chatId, mnemonic, perPage * pageIndex, 0),\n      ]);\n      return {messages};\n    },\n    {\n      retry: true,\n      refetchInterval: 1000,\n      enabled: focused,\n    },\n  );\n  const loadingMessages =\n    messagesQuery.isFetching || isLoadingEarlier;\n\n  const sendMessageMutation = useMutation(\n    async (text: string) => {\n      try {\n        const message = await sendChatMessage(chatId, text, mnemonic);\n        await messagesQuery.refetch();\n        return message;\n      } catch (err) {\n        console.error('==== sendMessage error ===', err);\n      }\n    },\n    {retry: true},\n  );\n\n  const messages = messagesQuery.data?.messages || [];\n\n  const nextPage = async () => {\n    if (isLoadingEarlier) return;\n\n    const nPage = parseInt(pageIndex.toString(), 10) + 1;\n    console.info('nextPage', nPage, loadingMessages);\n    dispatch(setPaginationState({[chatId]: true}));\n    navigation.dispatch({\n      ...CommonActions.setParams({page: nPage}),\n      source: route.key,\n    });\n    await messagesQuery.refetch();\n    setTimeout(() => {\n      dispatch(setPaginationState({[chatId]: false}));\n    }, 2000);\n  };\n\n  return {\n    messages,\n    nextPage,\n    loadingMessages,\n    sendingMessage: sendMessageMutation.isLoading,\n    messagesError: messagesQuery.error as string | undefined,\n    sendMessage: sendMessageMutation.mutate,\n    isLoadingEarlier,\n  };\n};\n","import {useMutation, useQueryClient} from 'react-query';\nimport {Contact, UserInfo} from '../types';\nimport {useMemo} from 'react';\nimport {\n  NavigationProp,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport {ChatParams, ChatStackParams} from '../types/nav';\nimport {sendChatMessage, writeItem} from '../api';\n\nexport const useRouteContact = (\n  contact: Contact | undefined,\n  isLoading: boolean,\n  user: UserInfo,\n  routeParams: ChatParams,\n) => {\n  const queryClient = useQueryClient();\n  const navigation = useNavigation<NavigationProp<ChatStackParams>>();\n  const route = useRoute();\n  const {chatId, name, mnemonic} =\n    routeParams || (route.params as ChatParams);\n  const folderId = 'new_contact';\n  const createContactMutation = useMutation(\n    async () => {\n      const ncontact = {\n        id: chatId,\n        isContact: true,\n        folderId,\n        name,\n        mnemonic,\n      };\n      console.info('ncotanct', ncontact);\n      await writeItem(ncontact);\n    },\n    {\n      retry: true,\n      onSuccess: async () => {\n        try {\n          await queryClient.refetchQueries('contact_' + chatId);\n          navigation.navigate('Chat', {\n            chatId,\n            name,\n            parentFolderId: folderId,\n            mnemonic,\n          });\n          await sendChatMessage(\n            chatId,\n            user.name + ' has joined',\n            mnemonic,\n            {\n              system: true,\n            },\n          );\n          await queryClient.refetchQueries(\n            'folderContent_' + folderId,\n          );\n        } catch (err) {\n          console.error('onadd contact error', err);\n        }\n      },\n    },\n  );\n\n  useMemo(() => {\n    console.info('useRouteContact Memo', isLoading, contact);\n    if (!isLoading && !contact && !createContactMutation.isLoading) {\n      createContactMutation.mutateAsync().then(async () => {\n        console.info('after create contact');\n      });\n    }\n  }, [isLoading, contact, createContactMutation]);\n};\n","import {useReducer} from 'react';\nimport {CurrentUserData, FolderType, UserInfo} from '../types';\nimport {useQuery} from 'react-query';\n\nexport enum UserDataActionType {\n  setUser = 'setUser',\n  setTheme = 'setTheme',\n  setActiveFolder = 'setActiveFolder',\n  setEditingFolder = 'setEditingFolder',\n  setFolderType = 'setFolderType',\n}\n\nexport type UserDataGenericAction = UserDataActionType.setTheme;\n\nexport interface UserDataSet {\n  actionType: UserDataActionType.setUser;\n  currentUserId: string;\n  userData: UserInfo;\n}\n\nexport interface SetActiveFolder {\n  actionType: UserDataActionType.setActiveFolder;\n  folderId: string | undefined;\n  folderType: FolderType;\n}\n\nexport interface SetEditingFolder {\n  actionType: UserDataActionType.setEditingFolder;\n  folderId: string | undefined;\n  folderType: FolderType;\n}\n\nexport interface SetFolderType {\n  actionType: UserDataActionType.setFolderType;\n  folderType: FolderType;\n}\n\nexport type UserDataAction =\n  | {actionType: UserDataGenericAction}\n  | UserDataSet\n  | SetActiveFolder\n  | SetFolderType\n  | SetEditingFolder;\n\nexport interface UserDataResponse {\n  userDataState: CurrentUserData;\n  userDataDispatch: React.Dispatch<UserDataAction>;\n}\n\nconst userDataReducer = (\n  state: CurrentUserData,\n  action: UserDataAction,\n): CurrentUserData => {\n  const {actionType} = action;\n  switch (actionType) {\n    case UserDataActionType.setUser:\n      return {\n        ...state,\n        user: action.userData,\n      };\n    case UserDataActionType.setActiveFolder:\n      return {\n        ...state,\n        currentFolderIds: {\n          ...(state.currentFolderIds || {}),\n          [action.folderType]: action.folderId,\n        },\n        isEditingFolder: {\n          ...(state.isEditingFolder || {}),\n          [action.folderType]: undefined,\n        },\n      };\n    case UserDataActionType.setFolderType:\n      return {\n        ...state,\n        currentFolderType: action.folderType,\n      };\n    case UserDataActionType.setEditingFolder:\n      return {\n        ...state,\n        isEditingFolder: {\n          ...(state.isEditingFolder || {}),\n          [action.folderType]: action.folderId,\n        },\n        currentFolderIds: {\n          ...(state.currentFolderIds || {}),\n          [action.folderType]: action.folderId,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useUserData = (): UserDataResponse => {\n  // const user = useQuery(\"UserData\", async ()=>await getUserData(), {refetchOnMount:false, refetchOnReconnect:false, refetchOnWindowFocus:false})\n  const [userDataState, userDataDispatch] = useReducer(\n    userDataReducer,\n    {\n      user: {},\n      currentFolderIds: {},\n      colors: {},\n      isEditingFolder: {},\n    },\n  );\n\n  return {\n    userDataState,\n    userDataDispatch,\n  };\n};\n","import React from 'react';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport ContactsView from '../components/contacts/contacts';\nimport Chat from '../components/contacts/chat';\nimport {FolderType} from '../types';\nimport FolderPage from '../components/folder/folderpage';\nimport {ChatStackParams} from '../types/nav';\n\nconst ChatStack = createStackNavigator<ChatStackParams>();\n\nexport const createChatStack = () => {\n  const ChatComponent = () => <Chat />;\n  const FolderComponent = () => {\n    return <FolderPage folderType={FolderType.contact} />;\n  };\n\n  const ContactsComponent = () => <ContactsView />;\n  const ChatStackScreen = () => {\n    return (\n      <ChatStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <ChatStack.Screen\n          name=\"Contacts\"\n          component={ContactsComponent}\n          options={{\n            freezeOnBlur: true,\n          }}\n        />\n        <ChatStack.Screen\n          name=\"Chat\"\n          component={ChatComponent}\n          options={({route}) => ({\n            freezeOnBlur: true,\n          })}\n        />\n        <ChatStack.Screen\n          name=\"Folder\"\n          component={FolderComponent}\n          options={({route}) => ({\n            freezeOnBlur: true,\n          })}\n        />\n      </ChatStack.Navigator>\n    );\n  };\n  return ChatStackScreen;\n};\n","import React, {memo} from 'react';\n\nimport FolderPage from '../components/folder/folderpage';\nimport {FolderType} from '../types';\nimport FolderLibrary from '../components/folder/folderlibrary';\nimport {useFolders} from '../hooks/useFolders';\nimport EditorProject from '../components/editor/editorproject';\nimport {getFolderContent, getFoldersByType, writeItem} from '../api';\nimport {EditorStackParams} from '../types/nav';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\n\nconst folderType = FolderType.editor;\nconst EditorStack = createNativeStackNavigator<EditorStackParams>();\n\nconst FolderComponent = memo(() => (\n  <FolderPage folderType={folderType} />\n));\nconst FolderLibraryComponent = memo(() => (\n  <FolderLibrary\n    dataHook={useFolders(\n      folderType,\n      getFoldersByType,\n      getFolderContent,\n      writeItem,\n    )}\n  />\n));\nexport const createEditor = () => {\n  const EditorProjectScreen = memo(() => <EditorProject />);\n  const EditorStackScreen = () => {\n    return (\n      <EditorStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <EditorStack.Screen\n          name=\"EditorProjects\"\n          options={{orientation: 'portrait'}}\n          component={FolderLibraryComponent}\n        />\n        <EditorStack.Screen\n          name=\"EditorProject\"\n          options={{orientation: 'all'}}\n          component={EditorProjectScreen}\n        />\n        <EditorStack.Screen\n          name=\"Folder\"\n          options={{orientation: 'portrait'}}\n          component={FolderComponent}\n        />\n      </EditorStack.Navigator>\n    );\n  };\n  return EditorStackScreen;\n};\n","import React, {memo} from 'react';\nimport {createStackNavigator} from '@react-navigation/stack';\n\nimport FolderPage from '../components/folder/folderpage';\nimport {FolderType} from '../types';\nimport FolderLibrary from '../components/folder/folderlibrary';\nimport {useFolders} from '../hooks/useFolders';\nimport EncoderProject from '../components/encoder/encoderproject';\nimport {useRoute} from '@react-navigation/native';\nimport {getFolderContent, getFoldersByType, writeItem} from '../api';\nimport {EncoderStackParams} from '../types/nav';\nconst folderType = FolderType.encoder;\n\nconst EncoderStack = createStackNavigator<EncoderStackParams>();\n\nconst FolderComponent = memo(() => (\n  <FolderPage folderType={folderType} />\n));\nconst FolderLibraryComponent = memo(() => (\n  <FolderLibrary\n    dataHook={useFolders(\n      folderType,\n      getFoldersByType,\n      getFolderContent,\n      writeItem,\n    )}\n  />\n));\nexport const createEncoder = () => {\n  const EncoderProjectScreen = memo(() => (\n    <EncoderProject\n      writeItem={writeItem}\n      routeParams={useRoute().params}\n    />\n  ));\n  const EncoderStackScreen = () => {\n    return (\n      <EncoderStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <EncoderStack.Screen\n          name=\"EncoderProjects\"\n          component={FolderLibraryComponent}\n        />\n        <EncoderStack.Screen\n          name=\"EncoderProject\"\n          component={EncoderProjectScreen}\n        />\n        <EncoderStack.Screen\n          name=\"Folder\"\n          component={FolderComponent}\n        />\n      </EncoderStack.Navigator>\n    );\n  };\n  return EncoderStackScreen;\n};\n","import React from 'react';\nimport FolderPage from '../components/folder/folderpage';\nimport HomeView from '../components/media/home';\nimport {FolderType} from '../types';\nimport {FileStackParams} from '../types/nav';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\n\nconst FolderComponent = () => (\n  <FolderPage folderType={FolderType.media} />\n);\n\nconst HomeComponent = () => <HomeView />;\n\nconst FileStack = createNativeStackNavigator<FileStackParams>();\n\nexport const createFileStack = () => {\n  const FileStackScreen = () => {\n    return (\n      <FileStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <FileStack.Screen\n          name=\"Files\"\n          options={{orientation: 'portrait'}}\n          component={HomeComponent}\n          options={{\n            freezeOnBlur: true,\n          }}\n        />\n        <FileStack.Screen\n          name=\"Folder\"\n          options={{orientation: 'portrait'}}\n          component={FolderComponent}\n          options={({route}) => ({\n            freezeOnBlur: true,\n          })}\n        />\n      </FileStack.Navigator>\n    );\n  };\n  return FileStackScreen;\n};\n","import React from 'react';\nimport {createStackNavigator} from '@react-navigation/stack';\n\nimport SettingsView from '../components/settings/settings';\nimport DevicesScreen from '../components/settings/devices';\nimport DatabasesScreen from '../components/settings/databases';\nimport {SettingsStackParams} from '../types/nav';\n\nconst RenderSettings = (props: any) => <SettingsView {...props} />;\nconst Devices = (props: any) => <DevicesScreen {...props} />;\nconst Databases = (props: any) => <DatabasesScreen {...props} />;\n\nconst SettingsStack = createStackNavigator<SettingsStackParams>();\n\nexport const createSettings = () => {\n  const SettingsStackScreen = () => {\n    return (\n      <SettingsStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <SettingsStack.Screen\n          name=\"Settings\"\n          component={RenderSettings}\n        />\n        <SettingsStack.Screen name=\"Devices\" component={Devices} />\n        <SettingsStack.Screen name=\"Drive\" component={Devices} />\n        <SettingsStack.Screen\n          name=\"Databases\"\n          component={Databases}\n        />\n      </SettingsStack.Navigator>\n    );\n  };\n  return SettingsStackScreen;\n};\n","const config = {\n  screens: {\n    Starp: {\n      path: 'webapp',\n      screens: {\n        FilesTab: {\n          path: 'media',\n          screens: {\n            Folder: {\n              path: 'folder/:folderId',\n              // exact:true\n            },\n            Files: {\n              path: '/',\n            },\n          },\n        },\n        SettingsTab: {\n          path: 'settings',\n          screens: {\n            Devices: {\n              path: 'devices',\n              // exact:true\n            },\n            Drive: {\n              path: 'drive',\n              // exact:true\n            },\n            Databases: {\n              path: 'databases',\n              // exact:true\n            },\n            Settings: {\n              path: '/',\n              // exact:true\n            },\n          },\n        },\n        ContactsTab: {\n          path: 'contact',\n          screens: {\n            Chat: {\n              path: 'chat/:chatId',\n              // exact:true\n            },\n            Contacts: {\n              path: '/',\n              // exact:true\n            },\n            Folder: {\n              path: 'folder/:folderId',\n              // exact:true\n            },\n          },\n        },\n        EncoderTab: {\n          path: 'encoder',\n          screens: {\n            EncoderProjects: {\n              path: '/',\n              // exact:true\n            },\n            EncoderProject: {\n              path: 'project/:projectId',\n              // exact:true\n            },\n            Folder: {\n              path: 'folder/:folderId',\n              // exact:true\n            },\n          },\n        },\n        EditorTab: {\n          path: 'editor',\n          screens: {\n            EditorProjects: {\n              path: '/',\n              // exact:true\n            },\n            EditorProject: {\n              path: 'project/:projectId',\n              // exact:true\n            },\n            Folder: {\n              path: 'folder/:folderId',\n              // exact:true\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const linking = {\n  prefixes: [\n    'starpy://',\n    'https://www.starpy.me',\n    /* your linking prefixes */\n  ],\n  config,\n};\n","import {useDispatch, useSelector} from 'react-redux';\nimport type {TypedUseSelectorHook} from 'react-redux';\nimport type {RootState, AppDispatch} from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> =\n  useSelector;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport type {RootState} from '../store';\nimport {act} from 'react-test-renderer';\n\nexport interface ChatsState {\n  loadingPagination: {[key: string]: boolean};\n}\n\nconst initialState: ChatsState = {\n  loadingPagination: {},\n};\n\nexport const chatSlice = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    setPaginationState: (\n      state,\n      action: PayloadAction<{[key: string]: boolean}>,\n    ) => {\n      const key = Object.keys(action.payload)[0];\n      state.loadingPagination[key] = action.payload[key];\n    },\n  },\n});\n\nexport const {setPaginationState} = chatSlice.actions;\n\nexport default chatSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport {EncoderProject} from '../../types';\n\nexport interface EditorState {\n  encoderProgress: number;\n  caretPosition: number;\n  scrollPosition: number;\n  pixelsPerSecond: number;\n  jobs: BackgroundRenderJob[];\n  jobsProgress: {[key: string]: number};\n  isPlaying: boolean;\n  videoScrollPosition: number;\n  videoCaretPosition: number;\n  scrollParams: {\n    totalWidth: number;\n    totalScroll: number;\n  };\n  canScroll: boolean;\n  activeLayer: string;\n  prevActiveLayer: string;\n  scroll: number;\n  totalTime: number;\n  showEditor: boolean;\n  showComments: boolean;\n  isRendering: boolean;\n  renderProgress: number;\n  renderTime: number;\n  renderOutputURL?: string;\n  ffmpegLogs: string;\n  ffmpegError: boolean;\n}\n\nexport interface BackgroundRenderJob {\n  id: string;\n  encoder?: EncoderProject;\n  progress?: number;\n}\n\nconst initialState: EditorState = {\n  encoderProgress: 0,\n  caretPosition: 0,\n  scrollPosition: 0,\n  pixelsPerSecond: 8,\n  jobs: [],\n  jobsProgress: {},\n  isPlaying: false,\n  videoCaretPosition: 0,\n  videoScrollPosition: 0,\n  scrollParams: {\n    totalWidth: 0,\n    totalScroll: 0,\n  },\n  canScroll: true,\n  activeLayer: '1',\n  prevActiveLayer: '1',\n  scroll: 0,\n  totalTime: 0,\n  showEditor: true,\n  showComments: false,\n  isRendering: false,\n  renderProgress: 0,\n  renderTime: 0,\n  ffmpegLogs: '',\n  ffmpegError: false,\n};\n\nexport const editorSlice = createSlice({\n  name: 'editor',\n  initialState,\n  reducers: {\n    setEncoderProgress: (state, action: PayloadAction<number>) => {\n      state.encoderProgress = action.payload;\n    },\n    setActiveLayer: (\n      state,\n      action: PayloadAction<{\n        activeLayerId: string;\n        caretPosition: number;\n        scrollPosition: number;\n      }>,\n    ) => {\n      if (state.isPlaying === true) {\n        state.videoCaretPosition = action.payload.caretPosition;\n        state.videoScrollPosition = action.payload.scrollPosition;\n        state.activeLayer = action.payload.activeLayerId;\n        // console.info(\"active update video\", state.videoCaretPosition, state.videoScrollPosition)\n      }\n    },\n    setCaretPosition: (state, action: PayloadAction<number>) => {\n      state.caretPosition = action.payload;\n      if (state.isPlaying === false) {\n        state.videoCaretPosition = action.payload;\n      }\n    },\n    setScrollPosition: (state, action: PayloadAction<number>) => {\n      state.scrollPosition = action.payload;\n      if (state.isPlaying === false) {\n        state.videoScrollPosition = action.payload;\n      }\n    },\n    setPixelsPerSecond: (state, action: PayloadAction<number>) => {\n      state.pixelsPerSecond = action.payload;\n    },\n    createBackgroundRenderJob: (\n      state,\n      action: PayloadAction<BackgroundRenderJob>,\n    ) => {\n      state.jobs.push(action.payload);\n    },\n    setJobProgress: (\n      state,\n      action: PayloadAction<BackgroundRenderJob>,\n    ) => {\n      state.jobsProgress[action.payload.id] =\n        action.payload.progress!;\n    },\n    setIsPlaying: (state, action: PayloadAction<boolean>) => {\n      state.isPlaying = action.payload;\n      if (action.payload === false) {\n        state.videoCaretPosition = state.caretPosition;\n        state.videoScrollPosition = state.scrollPosition;\n      }\n    },\n    setTotalTime: (state, action: PayloadAction<number>) => {\n      state.totalTime = action.payload;\n    },\n    setScrollParams: (\n      state,\n      action: PayloadAction<{\n        totalWidth: number;\n        totalScroll: number;\n      }>,\n    ) => {\n      state.scrollParams = action.payload;\n      const canScroll =\n        state.scrollParams.totalScroll >\n        state.scrollParams.totalWidth;\n      const newscroll =\n        state.scrollParams.totalScroll -\n        state.scrollParams.totalWidth;\n      if (\n        state.canScroll !== canScroll &&\n        state.isPlaying === false\n      ) {\n        // console.info('update scroll', newscroll, canScroll)\n        state.canScroll = canScroll;\n      }\n      if (state.scroll !== newscroll && !isNaN(newscroll)) {\n        state.scroll = newscroll;\n      }\n    },\n    setShowEditor: (state, action: PayloadAction<boolean>) => {\n      state.showEditor = action.payload;\n    },\n    setShowComments: (state, action: PayloadAction<boolean>) => {\n      state.showComments = action.payload;\n    },\n    setIsRendering: (state, action: PayloadAction<boolean>) => {\n      state.isRendering = action.payload;\n      if (state.isRendering) {\n        state.ffmpegLogs = '';\n        state.ffmpegError = false;\n      }\n    },\n    setRenderUrl: (\n      state,\n      action: PayloadAction<string | undefined>,\n    ) => {\n      state.renderOutputURL = action.payload;\n    },\n    setRenderProgress: (\n      state,\n      action: PayloadAction<{progress: number; time: number}>,\n    ) => {\n      state.renderProgress = action.payload.progress;\n      state.renderTime = action.payload.time / 1000000;\n      // console.info('renderTime', state.renderTime)\n      state.caretPosition = state.renderTime * state.pixelsPerSecond;\n      state.videoCaretPosition = state.caretPosition;\n    },\n    addNewLogLine: (state, action: PayloadAction<string>) => {\n      state.ffmpegLogs += '\\n' + action.payload;\n      if (action.payload.toLowerCase().search('error') > -1)\n        state.ffmpegError = true;\n    },\n  },\n});\n\nexport const {\n  setEncoderProgress,\n  setCaretPosition,\n  setScrollPosition,\n  setPixelsPerSecond,\n  setIsPlaying,\n  setScrollParams,\n  setActiveLayer,\n  setShowComments,\n  setShowEditor,\n  setIsRendering,\n  setRenderUrl,\n  setRenderProgress,\n  addNewLogLine,\n} = editorSlice.actions;\n\nexport default editorSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport type {RootState} from '../store';\nimport {act} from 'react-test-renderer';\n\nexport interface EncoderState {\n  encoderProgress: number;\n}\n\nconst initialState: EncoderState = {\n  encoderProgress: 0,\n};\n\nexport const encoderSlice = createSlice({\n  name: 'encoder',\n  initialState,\n  reducers: {\n    setEncoderProgress: (state, action: PayloadAction<number>) => {\n      state.encoderProgress = action.payload;\n    },\n  },\n});\n\nexport const {setEncoderProgress} = encoderSlice.actions;\n\nexport default encoderSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\n\nexport interface FileSystemState {\n  isDeleting: boolean;\n  deleteItemId?: string;\n  downloadingProgress: {[key: string]: number | undefined};\n  sharing: {[key: string]: true | undefined};\n}\n\nconst initialState: FileSystemState = {\n  isDeleting: false,\n  downloadingProgress: {},\n  sharing: {},\n};\n\nexport const FileSystemSlice = createSlice({\n  name: 'fs',\n  initialState,\n  reducers: {\n    setDeleteItem: (\n      state,\n      {\n        payload: {deleteItemId},\n      }: PayloadAction<{deleteItemId: string}>,\n    ) => {\n      state.isDeleting = deleteItemId ? true : false;\n      state.deleteItemId = deleteItemId;\n    },\n    setSharing: (\n      state,\n      {\n        payload: {itemId, status},\n      }: PayloadAction<{\n        itemId: string;\n        status: true | undefined;\n      }>,\n    ) => {\n      state.sharing[itemId] = status;\n    },\n    setDownloadingProgress: (\n      state,\n      {\n        payload: {itemId, progress},\n      }: PayloadAction<{\n        itemId: string;\n        progress: number | undefined;\n      }>,\n    ) => {\n      state.downloadingProgress[itemId] = progress;\n    },\n  },\n});\n\nexport const {setDeleteItem, setDownloadingProgress, setSharing} =\n  FileSystemSlice.actions;\n\nexport default FileSystemSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport type {RootState} from '../store';\nimport {Media} from '../../types';\n\nexport interface MediaState {\n  currentMediaPlaying?: string;\n  currentMediaId?: string;\n  isMediaPlaying?: boolean;\n  isMediaPaused?: boolean;\n  isMediaPreloadingPlayback?: boolean;\n  isMediaDownloading?: boolean;\n  isLoadingMedia?: boolean;\n  currentMedia?: Media;\n}\n\nexport enum MediaActionType {\n  stop = 'stop',\n  play = 'play',\n  loaded = 'loaded',\n  pause = 'pause',\n}\n\nexport interface MediaPlayAction {\n  actionType: MediaActionType.play;\n  mediaId: string;\n  media: Media;\n}\nexport interface MediaPauseAction {\n  actionType: MediaActionType.pause;\n  pause: boolean;\n}\n\nexport interface MediaLoadedAction {\n  actionType: MediaActionType.loaded;\n  mediaId: string;\n}\n\nexport type MediaGenericActions = MediaActionType.stop;\n\nexport type MediaAction =\n  | {actionType: MediaGenericActions}\n  | MediaPlayAction\n  | MediaLoadedAction;\n\nconst initialState: MediaState = {};\n\nexport const mediaSlice = createSlice({\n  name: 'media',\n  initialState,\n  reducers: {\n    stop: state => {\n      state.isLoadingMedia = undefined;\n      state.currentMediaId = undefined;\n    },\n    play: (state, action: PayloadAction<MediaPlayAction>) => {\n      state.currentMediaId = action.payload.mediaId;\n      state.currentMedia = action.payload.media;\n      state.isLoadingMedia = true;\n    },\n    togglePause: (state, action: PayloadAction<MediaPauseAction>) => {\n      state.isMediaPaused = action.payload.pause;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    loaded: (state, _action: PayloadAction<MediaLoadedAction>) => {\n      state.isLoadingMedia = false;\n      state.isMediaPlaying = true;\n    },\n  },\n});\n\nexport const {stop, play, loaded, togglePause} = mediaSlice.actions;\n\nexport const selectCurrentMediaId = (state: RootState) =>\n  state.media.currentMediaId;\n\nexport const selectIsLoadingMedia = (state: RootState) =>\n  state.media.isLoadingMedia;\n\nexport const selectIsPlayingMedia = (state: RootState) =>\n  state.media.isMediaPlaying;\n\nexport default mediaSlice.reducer;\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {\n  RootStackRouteNames,\n  StackRouteName,\n  UnifiedStackParam,\n} from '../../types/nav';\nimport {Folder, FolderType} from '../../types';\n\nexport interface AppDialog {\n  appDialogVisible: boolean;\n  appDialogBody: React.Component | string | undefined;\n  appDialogIcon: string | undefined;\n  appDialogTitle: string | undefined;\n  appDialogControls: React.Component | undefined;\n  appDialogOnSelectRight: (() => Promise<void>) | undefined;\n  appDialogOnSelectLeftt: (() => Promise<void>) | undefined;\n}\n\nexport interface UIState extends AppDialog {\n  isTabBarHidden: boolean;\n  isKeyboardOpen: boolean;\n  keyboardHeight: number;\n  currentPage: StackRouteName;\n  parentName: RootStackRouteNames;\n  params: UnifiedStackParam;\n  isReady: boolean;\n  isSignedIn: boolean;\n  isBackEnabled: boolean;\n  isEditing: boolean;\n  toastText: string | undefined;\n  toastIcon: string;\n  editingMode:\n    | 'party'\n    | 'folder'\n    | 'media'\n    | 'search'\n    | 'database'\n    | undefined;\n  folderType: FolderType;\n  folderItemMenuOpen: string | undefined;\n}\n\nconst initialState: UIState = {\n  isTabBarHidden: false,\n  isKeyboardOpen: false,\n  keyboardHeight: 0,\n  currentPage: 'FilesTab',\n  isReady: false,\n  isSignedIn: false,\n  params: undefined,\n  isBackEnabled: false,\n  folderType: FolderType.media,\n  isEditing: false,\n  editingMode: undefined,\n  parentName: 'FilesTab',\n  folderItemMenuOpen: undefined,\n  appDialogVisible: false,\n  appDialogBody: undefined,\n  appDialogIcon: undefined,\n  appDialogTitle: undefined,\n  appDialogControls: undefined,\n  appDialogOnSelectRight: undefined,\n  appDialogOnSelectLeftt: undefined,\n  toastText: undefined,\n  toastIcon: 'check-circle',\n};\n\nconst PagesWithoutTabBar = ['Chat', 'EditorProject'];\n\nconst PagesWithBackEnabled = [\n  'Devices',\n  'Databases',\n  'Drive',\n  'Folder',\n  'Chat',\n  'EncoderProject',\n  'EditorProject',\n];\n\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    setCurrentPage(\n      state,\n      {\n        payload: {currentPage, params, parentName},\n      }: PayloadAction<{\n        currentPage: StackRouteName;\n        params: UnifiedStackParam;\n        parentName: RootStackRouteNames;\n      }>,\n    ) {\n      console.info({currentPage, parentName});\n      state.currentPage = currentPage;\n      state.params = params;\n      state.parentName = parentName;\n\n      if (PagesWithoutTabBar.includes(currentPage)) {\n        state.isTabBarHidden = true;\n      } else {\n        state.isTabBarHidden = false;\n      }\n\n      if (PagesWithBackEnabled.includes(currentPage)) {\n        state.isBackEnabled = true;\n      } else {\n        state.isBackEnabled = false;\n      }\n\n      let folderType = FolderType.media;\n\n      if (currentPage === 'FilesTab') folderType = FolderType.media;\n      if (currentPage === 'ContactsTab')\n        folderType = FolderType.contact;\n      if (currentPage === 'ContactsTab')\n        folderType = FolderType.contact;\n      if (currentPage === 'Contacts') folderType = FolderType.contact;\n      if (currentPage === 'Chat') folderType = FolderType.contact;\n      if (currentPage === 'SettingsTab')\n        folderType = FolderType.settings;\n      if (currentPage === 'EncoderTab')\n        folderType = FolderType.encoder;\n      if (currentPage === 'EncoderProject')\n        folderType = FolderType.encoder;\n      if (currentPage === 'EditorTab') folderType = FolderType.editor;\n      if (currentPage === 'EditorProject')\n        folderType = FolderType.editor;\n      if (currentPage === 'Devices') folderType = FolderType.settings;\n      if (currentPage === 'Databases')\n        folderType = FolderType.settings;\n      if (currentPage === 'Drive') folderType = FolderType.settings;\n      if (currentPage === 'Settings')\n        folderType = FolderType.settings;\n\n      if (currentPage === 'Folder') {\n        if (parentName === 'EditorTab')\n          folderType = FolderType.editor;\n        if (parentName === 'EncoderTab')\n          folderType = FolderType.encoder;\n        if (parentName === 'ContactsTab')\n          folderType = FolderType.contact;\n        if (parentName === 'SettingsTab')\n          folderType = FolderType.settings;\n        if (parentName === 'FilesTab') folderType = FolderType.media;\n      }\n\n      state.folderType = folderType;\n    },\n    setFolderMenuItemId(\n      state,\n      {\n        payload: {itemId},\n      }: PayloadAction<{itemId: string | undefined}>,\n    ) {\n      state.folderItemMenuOpen = itemId;\n    },\n    setAppDialogParams(\n      state,\n      {\n        payload: {\n          appDialogVisible,\n          appDialogBody,\n          appDialogIcon,\n          appDialogControls,\n          appDialogOnSelectLeftt,\n          appDialogOnSelectRight,\n          appDialogTitle,\n        },\n      }: PayloadAction<AppDialog>,\n    ) {\n      state.appDialogVisible = appDialogVisible;\n      state.appDialogBody = appDialogBody;\n      state.appDialogIcon = appDialogIcon;\n      state.appDialogControls = appDialogControls;\n      state.appDialogOnSelectLeftt = appDialogOnSelectLeftt;\n      state.appDialogOnSelectRight = appDialogOnSelectRight;\n      state.appDialogTitle = appDialogTitle;\n    },\n    setToastText(state, {payload}: {payload: string | undefined}) {\n      state.toastText = payload;\n    },\n    setToastIcon(state, {payload}: {payload: string | undefined}) {\n      state.toastIcon = payload;\n    },\n    setKeyboardHeight(\n      state,\n      {\n        payload: {keyboardHeight},\n      }: PayloadAction<{keyboardHeight: number}>,\n    ) {\n      state.keyboardHeight = keyboardHeight;\n      if (keyboardHeight === 0) {\n        state.isKeyboardOpen = false;\n      } else {\n        state.isKeyboardOpen = true;\n      }\n    },\n    setEditingMode(\n      state,\n      {payload}: PayloadAction<UIState['editingMode']>,\n    ) {\n      state.editingMode = payload;\n      if (payload === undefined || payload === 'media')\n        state.isEditing = false;\n      else state.isEditing = true;\n    },\n    setIsReady(state, {payload}: PayloadAction<boolean>) {\n      state.isReady = payload;\n    },\n    setIsSigned(state, {payload}: PayloadAction<boolean>) {\n      state.isSignedIn = payload;\n    },\n  },\n});\nexport const {\n  setCurrentPage,\n  setKeyboardHeight,\n  setIsReady,\n  setIsSigned,\n  setEditingMode,\n  setFolderMenuItemId,\n  setAppDialogParams,\n  setToastText,\n  setToastIcon,\n} = uiSlice.actions;\nexport default uiSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport type {RootState} from '../store';\nimport {Media} from '../../types';\nimport {AxiosProgressEvent} from 'axios';\n\nexport interface UploadState {\n  file?: FileReader;\n  media?: Media;\n  modalVisible: boolean;\n  uploadToCloud: boolean;\n  shareToWT: boolean;\n  encryption: boolean;\n  persist: boolean;\n  fileUploadProgress: AxiosProgressEvent | undefined;\n  isUploadInProgress: boolean;\n  totalChunks: number;\n}\n\nexport interface UploadAction {\n  file: FileReader;\n  media: Media;\n}\n\nexport interface UploadContinueAction extends UploadAction {\n  uploadId: string;\n}\n\nexport interface UploadStopAction {\n  uploadId: string;\n}\n\nconst initialState: UploadState = {\n  modalVisible: false,\n  uploadToCloud: false,\n  persist: true,\n  shareToWT: false,\n  encryption: false,\n  fileUploadProgress: undefined,\n  isUploadInProgress: false,\n  totalChunks: 0,\n};\n\nexport const uploadSlice = createSlice({\n  name: 'upload',\n  initialState,\n  reducers: {\n    startOnboarding: (state, action: PayloadAction<UploadAction>) => {\n      console.info('start onboarding', action);\n      state.file = action.payload.file;\n      state.media = action.payload.media;\n      state.modalVisible = true;\n    },\n    continue: (\n      state,\n      action: PayloadAction<UploadContinueAction>,\n    ) => {},\n    cancel: state => {\n      state.modalVisible = false;\n    },\n    setMediaModalVisible: (state, action: PayloadAction<boolean>) => {\n      state.modalVisible = action.payload;\n      if (!action.payload) {\n        state.file = undefined;\n      }\n    },\n    setFileUploadProgress: (\n      state,\n      action: PayloadAction<AxiosProgressEvent>,\n    ) => {\n      state.fileUploadProgress = action.payload;\n    },\n    setUploadInProgress: (state, action: PayloadAction<boolean>) => {\n      state.isUploadInProgress = action.payload;\n    },\n    setShareToWt: (state, action: PayloadAction<boolean>) => {\n      state.shareToWT = action.payload;\n    },\n    setUploadToCloud: (state, action: PayloadAction<boolean>) => {\n      state.uploadToCloud = action.payload;\n    },\n    setEncrypt: (state, action: PayloadAction<boolean>) => {\n      state.encryption = action.payload;\n    },\n    setMetaForCloud: (state, action: PayloadAction<string>) => {\n      state.media!.webpage_url = action.payload;\n      state.media!.hasCloud = true;\n      state.media!.extractor = 'cloud';\n      state.media!.url = action.payload;\n    },\n  },\n});\n\nexport const {\n  startOnboarding,\n  cancel,\n  setMediaModalVisible,\n  setFileUploadProgress,\n  setUploadInProgress,\n  setUploadToCloud,\n  setEncrypt,\n  setShareToWt,\n  setMetaForCloud,\n} = uploadSlice.actions;\n\nexport const selectCurrentMediaId = (state: RootState) =>\n  state.media.currentMediaId;\n\nexport const selectIsLoadingMedia = (state: RootState) =>\n  state.media.isLoadingMedia;\n\nexport const selectIsPlayingMedia = (state: RootState) =>\n  state.media.isMediaPlaying;\n\nexport default uploadSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport mediaReducer from './slices/media';\nimport uploadReducer from './slices/upload';\nimport editorReducer from './slices/editor';\nimport chatReducer from './slices/chat';\nimport fsReducer from './slices/fs';\nimport encoderReducer from './slices/encoder';\nimport uiReducer from './slices/ui';\nexport const store = configureStore({\n  reducer: {\n    media: mediaReducer,\n    upload: uploadReducer,\n    encoder: encoderReducer,\n    chat: chatReducer,\n    fs: fsReducer,\n    editor: editorReducer,\n    ui: uiReducer,\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import {IMessage} from 'react-native-gifted-chat';\n\nexport interface Contact {\n  id: string;\n  isContact: boolean;\n  name: string;\n  photo: string;\n  date: number;\n  description: string;\n  email?: string;\n  originalId: string;\n  folderId: string;\n  online?: boolean;\n  lastSeen?: number;\n  thumbnail?: string;\n  unread?: number;\n  partyId?: string;\n  mnemonic: string;\n}\n\nexport interface ContactRes {\n  docs: Contact[];\n}\n\nexport interface ChatRoom {\n  userIds: string[];\n  _id: string;\n  created: number;\n  admins: string[];\n  userId: string[];\n}\n\nexport interface ChatRoomRes {\n  docs: ChatRoom[];\n}\n\nexport enum ChatMessageType {\n  media = 'media',\n  call = 'call',\n  text = 'text',\n  party_request = 'party_request',\n  party_confirmation = 'party_confirmation',\n  party_start = 'party_start',\n  party_join = 'party_join',\n  party_stop = 'party_stop',\n  party_quit = 'party_quit',\n  party_media = 'party_media',\n  party_stop_media = 'party_media_stop',\n  party_media_pause = 'party_media_pause',\n  party_media_unpause = 'party_media_unpause',\n  party_media_sync = 'party_media_sync',\n}\n\nexport interface ChatMessage extends IMessage {\n  id: string;\n  created: number;\n  roomId: string;\n  userId: string;\n  readByUserIds: string[];\n  jwt: string;\n  messageStatus: ChatMessageStatus;\n  text: string;\n  pushed?: boolean;\n  encryptedContent?: string;\n  messageType?: ChatMessageType;\n  partyId?: string;\n  createdAt: number;\n  userName: string;\n  message: {\n    type: 'media' | 'call' | 'text';\n    data: string;\n  };\n  orderId: number;\n}\n\nexport enum ChatMessageStatus {\n  created = 'created',\n  sent = 'sent',\n  delivered = 'delivered',\n  read = 'read',\n}\n\nexport interface ChatMessageRes {\n  docs: ChatMessage[];\n}\n","export interface Folder {\n  id: string;\n  isFolder: boolean;\n  userId: string;\n  folderType: FolderType;\n  title: string;\n  isOpen?: boolean;\n  date: number;\n  isEditing?: boolean;\n  isInfoOpen?: boolean;\n  sortId?: number;\n  thumbnail?: string;\n  files?: string[];\n  folderId?: string;\n  orderId: number;\n  mnemonic?: string;\n  isShared?: boolean;\n}\n\nexport enum FolderType {\n  contact = 'contact',\n  media = 'media',\n  settings = 'settings',\n  encoder = 'encoder',\n  editor = 'editor',\n  database = 'database',\n}\n\nexport interface FolderRes {\n  docs: Folder[];\n}\n","import {Contact} from './Contact';\nimport {Folder} from './Folder';\n\nexport interface ExtractorResponse {\n  id: string;\n  url: string;\n  extractor: string;\n  _has_drm?: boolean;\n  _filename?: string;\n  _type?: string;\n  _version?: string;\n}\n\nexport interface MediaStateType {\n  currentVideo: Media | null;\n  currentVideoId: string | null;\n  isLoading: boolean;\n  isPlaying: boolean;\n  openItemId: string | null;\n  enqMedia: (media: Media) => Promise<any>;\n  setOpenItem: (i: Media) => void;\n  webViewUrl?: string | null;\n  host?: string;\n  fileParam?: string;\n  webViewRef?: any;\n  magnetURI?: string | null;\n  onUpdateMagnet?: () => Promise<any>;\n}\n\nexport interface Media extends ExtractorResponse {\n  _id?: string;\n  _rev?: string;\n  _deleted?: boolean;\n  date: number;\n  isMediaNew: boolean;\n  folderId: string;\n  originalId: string;\n  webpage_url?: string;\n  title: string;\n  isPlaying?: boolean;\n  isDownloaded?: boolean;\n  isDownloading?: boolean;\n  isOpen?: boolean;\n  isInfoOpen?: boolean;\n  thumbnail?: string;\n  currentPosition?: number;\n  local?: string;\n  torrentFileName?: string;\n  files?: IFile[];\n  magnetURI?: string;\n  infoHash?: string;\n  description?: string;\n  filename: string;\n  fileType: string;\n  userId: string;\n  size?: number;\n  type?: string;\n  hasCloud?: boolean;\n  isEncoderProject?: boolean;\n  width: number;\n  height: number;\n  orderId: number;\n  duration?: number;\n  isCopy?: string;\n  mnemonic: string;\n  torrentFile?: ArrayBuffer;\n}\n\nexport enum FFMpegPreset {\n  ultrafast = 'ultrafast',\n  superfast = 'superfast',\n  veryfast = 'veryfast',\n  faster = 'faster',\n  fast = 'fast',\n  medium = 'medium',\n}\n\nexport enum FFMpegOutputType {\n  mp4 = 'mp4',\n  gif = 'gif',\n}\n\nexport interface EncoderProject extends Media {\n  encoding: {\n    outputFilePath?: string;\n    compressionLevel: number;\n    width: number;\n    height: number;\n    crf: number;\n    preset: FFMpegPreset;\n    output: FFMpegOutputType;\n    code: String[];\n    lastUpdated: number;\n    start?: number;\n    end?: number;\n    soundVolume?: number;\n  };\n}\n\nexport interface EditorComment extends EncoderProject, Contact {\n  description: string;\n}\n\nexport interface EditorProject extends Folder {\n  isEditorProject?: boolean;\n  editor: {\n    length: number;\n    width: number;\n    height: number;\n    lastUpdated: number;\n    start?: number;\n    end?: number;\n    outputFilePath?: string;\n    compressionLevel: number;\n    framerate?: number;\n    aspectRatio?: string;\n    preset: FFMpegPreset;\n    output: FFMpegOutputType;\n    code?: string[];\n  };\n}\n\nexport interface EditorLayer extends Folder {\n  isEditorLayer?: boolean;\n  editor: {\n    muted?: boolean;\n    videoDisabled?: boolean;\n    isCommentLayer?: boolean;\n  };\n  media?: EncoderProject[];\n}\n\nexport interface MediaRes {\n  docs: Media[];\n}\n\nexport interface IFile {\n  url: string;\n  name: string;\n  type: string;\n}\n","export * from './Contact';\nexport * from './Media';\nexport * from './UserInfo';\nexport * from './Folder';\n\nimport {Contact} from './Contact';\nimport {Media} from './Media';\nimport {UserInfo} from './UserInfo';\nimport {Folder} from './Folder';\nimport {Platform} from 'react-native';\nimport {useMedia} from '../hooks/useMedia';\nimport {useContacts} from '../hooks/useContacts';\nimport {useFolders} from '../hooks/useFolders';\nimport {useFolder} from '../hooks/useFolder';\n\nexport enum FTSIndex {\n  title = 'titleFTSIndex',\n  name = 'nameFTSIndex',\n  text = 'textFTSIndex',\n}\n\nexport interface DocsGeneric {\n  docs: (Folder | Media | Contact | UserInfo)[];\n  rows: {\n    _id: string;\n    doc: Folder | Media | Contact | UserInfo;\n  }[];\n}\n\nexport interface Device {\n  id: string;\n  manufacturer: string;\n  createdAt: number;\n  isDevice: boolean;\n  model: string;\n  ip?: string;\n  userAgent: string;\n  os: string;\n  platform: typeof Platform.OS;\n}\n\nexport type DataHook = ReturnType<\n  | typeof useFolders\n  | typeof useMedia\n  | typeof useContacts\n  | typeof useFolder\n>;\n\nexport type DataHookFolders = ReturnType<\n  typeof useFolders | typeof useMedia | typeof useContacts\n>;\n\nexport type DocsGenericArray = (\n  | Folder\n  | Media\n  | Contact\n  | UserInfo\n)[];\n","import {\n  DrawerNavigationState,\n  EventArg,\n  TabNavigationState,\n} from '@react-navigation/native';\n\nexport type SettingsStackParams = {\n  Settings: undefined;\n  Databases: undefined;\n  Devices: undefined;\n  Drive: undefined;\n};\n\nexport type FileStackParams = {\n  Files: undefined;\n  Folder: FolderParams;\n};\n\nexport type EncoderStackParams = {\n  EncoderProjects: undefined;\n  Folder: FolderParams;\n  EncoderProject: ProjectParams;\n};\n\nexport type EditorStackParams = {\n  EditorProjects: undefined;\n  Folder: FolderParams;\n  EditorProject: ProjectParams;\n};\n\nexport type ChatStackParams = {\n  Contacts: undefined;\n  Folder: FolderParams;\n  Chat: ChatParams;\n};\nexport interface ProjectParams {\n  projectId: string;\n  mnemonic?: string;\n  parentFolderId: string;\n  folderId: string;\n  encoder?: string;\n}\n\nexport interface FolderParams {\n  folderId: string;\n  mnemonic?: string;\n  parentFolderId?: string;\n  userId?: string;\n  title: string;\n}\n\nexport interface ChatParams {\n  parentFolderId: string;\n  name: string;\n  mnemonic: string;\n  chatId: string;\n  page?: number;\n}\n\nexport interface RootStackParams {\n  Starp: {\n    screen: RootStackRouteNames;\n    params: {\n      screen: keyof UnifiedStackParams;\n      params: UnifiedStackParam;\n    };\n  };\n}\n\nexport type ProjectsStackedParams = EditorStackParams &\n  EncoderStackParams;\n\nexport type NavigationStackParams = EditorStackParams &\n  EncoderStackParams &\n  FileStackParams &\n  ChatStackParams &\n  SettingsStackParams;\n\nexport type UnifiedStackParams = NavigationStackParams &\n  RootStackParams;\n\nexport type ExtendedNavState = EventArg<\n  'state',\n  undefined,\n  {\n    state:\n      | DrawerNavigationState<NavigationStackParams>\n      | TabNavigationState<NavigationStackParams>;\n  }\n>;\n\nexport type UnifiedStackParam =\n  NavigationStackParams[keyof NavigationStackParams];\n\nexport type RootStackRouteNames =\n  | 'FilesTab'\n  | 'ContactsTab'\n  | 'EditorTab'\n  | 'EncoderTab'\n  | 'SettingsTab';\n\nexport const RootStackName = 'Starp';\n\nexport type StackRouteName =\n  | keyof UnifiedStackParams\n  | RootStackRouteNames;\n\nexport const RootScreens: {\n  [key in RootStackRouteNames]: keyof UnifiedStackParams;\n} = {\n  ContactsTab: 'Contacts',\n  EditorTab: 'EditorProjects',\n  FilesTab: 'Files',\n  EncoderTab: 'EncoderProjects',\n  SettingsTab: 'Settings',\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"StarpyApp:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkStarpyApp\"] = self[\"webpackChunkStarpyApp\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [681,588,335], () => (__webpack_require__(130512)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_Ionicons","_interopRequireDefault","_MaterialCommunityIcons","_Ionicons2","_App","iconFontStyles","iconFont","style","document","createElement","type","styleSheet","cssText","appendChild","createTextNode","head","initUserData","then","createRoot","getElementById","render","App","_react","_LogBox","_Platform","_app","LogBox","ignoreAllLogs","theme","Object","assign","MD3DarkTheme","fonts","configureFonts","config","default","fontFamily","fontWeight","letterSpacing","lineHeight","fontSize","isV3","_exports","_useUserData","useUserData","userDataState","userDataDispatch","_reactRedux","Provider","store","_reactQuery","QueryClientProvider","client","queryClient","_ctx","UserCtx","value","UserData","UserDataState","UserDataDispatch","_reactNativeSafeAreaContext","SafeAreaProvider","_reactNativePaper","PaperProvider","Fragment","require","db","_getRequireWildcardCache","e","WeakMap","r","t","SQLite","__esModule","has","get","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_ref","_asyncToGenerator2","openDatabaseAsync","execAsync","_ref2","writeBlob","_writeBlob","id","blob","runAsync","_x","_x2","apply","arguments","readBlobs","_readBlobs","data","getAllAsync","deletequery","map","join","_x3","_reactNativeUuid","sendChatMessage","chatId","text","mnemonic","message","getUserData","uuid","v4","userId","folderId","messageStatus","userName","name","createdAt","Date","valueOf","ndata","nEvolu","createDBConn","writeItem","_x4","genMnemonic","limit","offset","_e","_e2","_data$rows","folder","getById","query","createQuery","selectFrom","selectAll","where","orderBy","loadQuery","rows","item","err","console","error","_x5","_x6","_x7","_x8","_ref3","party","info","user","contact","authorId","authorName","isContact","system","_x9","faker","animal","bird","split","toLowerCase","color","human","fish","insect","hacker","noun","QueryClient","defaultOptions","queries","refetchOnWindowFocus","refetchOnMount","refetchOnReconnect","Database","database","ItemTable","dbConns","window","dbMnemoCons","defaultDBName","dbname","index","ops","syncUrl","createEvolu","socket","Promise","res","indexAllFoldersForDB","subscribeSyncState","getSyncState","_tag","isFirstSync","refetchQueries","folderPromises","isDeleted","filter","all","getFolderContent","_ref4","apiKey","_localStorage","localStorage","getItem","_yield$findBy","findBy","userData","_slicedToArray2","devices","_ref5","evolu","getFoldersByType","_ref6","_ref7","_ref8","_window","parentFolderId","URL","location","toString","searchParams","isFolder","isEditorLayer","isEditorProject","isMediaNew","isEncoderProject","extractor","createOrUpdate","title","isDevice","userDoc","folderType","orderId","lastUpdated","_ref9","_ref10","key","_x10","_x11","_ref11","_e3","_e4","_item$row","row","undefined","_x12","_x13","_ref12","_databases","databases","FolderType","length","exists","find","ndb","isDatabase","date","added","_x14","_x15","_x16","initDatabaseRecord","getOwner","SomeJson","S","Struct","foo","String","bar","Boolean","ItemId","table","String1000","isCompleted","SqliteBoolean","ExpoFileSystem","ffmpeg","FFmpeg","util","fetchFile","toBlobURL","cachedMedia","cancelEncoding","terminate","createFFmpeg","cb","_resolve","_reject","_require","imported","on","log","params","load","coreURL","ffMpegWasmBaseUrl","wasmURL","encodeMedia","media","isPrerender","isCopy","nmedia","fileId","filename","encoding","cachedId","outFileId","output","getFileOpfs","dirCore","navigator","storage","getDirectory","appDirectory","dir","getDirectoryHandle","cache","getFileHandle","file","getFile","createObjectURL","opfsFile","dlFIle","downloadFileById","progress","time","execCmd","genExecCmd","execEncode","files","encoded","mediaOut","cmd","_yield$writeFileOpfs","fs","writeFile","exec","readFile","writeFileOpfs","genRenderCmd","projectData","layers","logs","_projectData$editor","editor","medias","_projectData$editor2","_medias$map","_medias$map2","_encoding$compression","_encoding$framerate","threads","hardwareConcurrency","extraCode","code","trim","replace","layer","_layer$media","m","flat","_e$encoding","_e$encoding2","hasAudio","reduce","_layer$editor","muted","hasVideo","_layer$editor2","videoDisabled","audioOutput","audioMap","videoOutput","videoMap","aspectRatio","scale","width","height","filterTrim","_e$encoding3","_e$encoding4","_e$layer","_e$layer2","trimV","start","parseInt","end","duration","trimA","videosLength","_i$layer","audiosLength","_i$layer2","filterConcat","_a$layer","_a$layer2","push","concat","_toConsumableArray2","compressionLevel","preset","framerate","_encoding$compression2","prerenderOptionalCode","genExecTime","seconds","comma","endMins","endSeconds","getActiveProjectLayer","currentPosition","activeMedia","layerCount","_activeMedia","_layer","_layer2","_media$encoding","_media$encoding2","activeLayer","getNextActiveProjectMedia","startPosition","_media$encoding3","_media$encoding4","nextPosition","next","getTotalTime","_layer$media2","agv","_media$encoding5","_media$encoding6","_layer$editor3","_getActiveProjectLaye","offsetPosition","parseFloat","totalTime","encode","url","streamFileChunks","_streamFileChunks","_wrapAsyncGenerator2","path","bytesOffset","chunkSize","byteEnd","currentOffset","buf","Buffer","from","_awaitAsyncGenerator2","FileSystem","readFileChunk","ExpoDocumentPicker","streamFile","iterator","streamGen","stream","ReadableStream","pull","_pull","controller","_yield$iterator$next","done","close","enqueue","clone","create","fileHandle","writable","createWritable","write","isDownloaded","getFileReaderOpfs","objectItem","removeEntry","recursive","body","download","href","click","chunksCount","savePromises","savesCompleted","saveFileToData","fileUri","saveCount","resolve","rej","createBlobDB","blobs","bbs","buffers","_appendBuffer","Uint8Array","nfile","getBlobForArrayBuffer","buffer","fr","FileReader","onload","result","appendFile","readAsDataURL","_x17","buffer1","buffer2","tmp","byteLength","pickSingle","_pickSingle","fileInput","addEventListener","_fileInput$files","_fileInput$files2","size","originalId","_x18","keys","_defaults","forEach","prototype","_exportNames","enumerable","_db","_media","_chat","_fs","ExpoDevice","domain","isEditingFolder","colors","searchItems","currentFolderIds","_ExpoDevice$designNam","doInitialMigration","userAgent","designName","os","osName","browserName","brand","deviceId","device","manufacturer","ndevice","model","platform","link","_media$files","_media$files2","getWT","magnetURI","infoHash","_wt","_encoder","recursiveShare","shareFileToWT","innerContent","enqMedia","cast","mediaId","playMediaLink","isOpera","opr","addons","opera","indexOf","InstallTrigger","test","HTMLElement","safari","pushNotification","isIE","documentMode","StyleMedia","chrome","isChrome","CSS","units","x","l","toFixed","mediaClient","mediaWorker","rtcConfig","iceServers","urls","username","credential","sdpSemantics","bundlePolicy","iceCandidatePoolSize","iceTransportPolicy","iceCandidatePoolsize","announce","createMediaClient","WebTorrent","tracker","resolveWorker","reg","worker","active","waiting","installing","resolvd2","checkState","state","loadWorker","target","prs","serviceWorker","register","progressCB","wt","mediaClientFiles","mediaData","getVideoWT","torrent","bytes","fetch","arrayBuffer","File","streamUrls","mobileStreamingForFileIsRunning","processWT","_wt$files","_file","_file2","_file$name","_file$name2","_file$name3","_file$name4","endsWith","isVideo","Error","reject","_file3","getStreamURL","catch","torrentFileName","torrentBuffer","torrentFile","values","add","streamUrl","isSharing","magnet","_ref13","onProgress","_ref14","shareFile","_x19","_x20","_worklet_2113387270167_init_data","anonymous","seed","_ref15","search","_x21","__closure","__workletHash","__initData","_Text","_nav","_reactNativeGestureHandler","GestureHandlerRootView","_native","NavigationContainer","linking","fallback","_chatview","_View","_useWindowDimensions","_contentitem","isEmbed","useRoute","userQuery","useQuery","onError","contactQuery","isLoading","isFetched","useWindowDimensions","parentFolderHook","useFolder","useRouteContact","isMobile","flexDirection","backgroundColor","_foldernavigator","FolderNavigator","renderContent","dataHook","styles","_TouchableOpacity","chatViewParams","_useMessages","useMessages","messages","sendMessage","nextPage","isLoadingEarlier","current","useContext","useTheme","composerRef","useRef","surface","_reactNativeGiftedChat","GiftedChat","scrollToBottom","renderLoading","ActivityIndicator","_id","onSend","avatar","photo","renderBubble","props","Bubble","_extends2","textStyle","left","textAccentColor","wrapperStyle","right","alignSelf","maxWidth","timeTextStyle","renderAvatar","_props$currentMessage","GiftedAvatar","currentMessage","avatarStyle","borderWidth","borderColor","listViewProps","scrollEventThrottle","onEndReached","loadEarlier","onLoadEarlier","renderLoadEarlier","renderChatEmpty","transform","scaleY","List","Item","p","Icon","icon","titleStyle","ProgressBar","indeterminate","visible","renderInputToolbar","inputProps","InputToolbar","containerStyle","primaryStyle","renderComposer","Composer","ref","textInputStyle","padding","multiline","textInputAutoFocus","textInputProps","blurOnSubmit","onSubmitEditing","_props$text","setTimeout","nativeEvent","focus","renderSend","onPress","placeholder","showUserAvatar","_folderlibrary","memo","useContacts","_contactlibrary","showPublicParty","container","flex","paddingTop","marginTop","paddingLeft","tinyLogo","scroll","display","position","_useWindowDimensions2","_encoderproject","_editorform","_editorvideo","projectId","routeParams","enabled","video2","mediaRes","layersQuery","margin","className","Banner","marginHorizontal","paddingHorizontal","overflow","contentStyle","alignItems","borderLeftWidth","borderRightWidth","borderLeftColor","borderRightColor","_editorplaycontrols","EditorPlayControls","Divider","ScrollView","marginRight","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","projectQuery","encoder","_Animated","dispatch","useAppDispatch","caretPosition","useAppSelector","translateX","Animated","Value","onGestureEvent","event","translationX","listener","useNativeDriver","cursor","PanGestureHandler","onHandlerStateChange","oldState","State","ACTIVE","newOffset","fullOffset","setOffset","setValue","setCaretPosition","View","opacity","justifyContent","interpolate","inputRange","outputRange","extrapolate","_item$encoding","_item$encoding2","onDragEnd","onDragStart","layerIndex","parentDataHook","nav","useNavigation","route","pixelsPerSecond","useQueryClient","maxDuration","currentDuration","writeItemMutation","useMutation","combIndex","deleteItem","onRemoveFolder","_item$encoding3","_item$encoding4","newvalue","_value","mutateAsync","top","zIndex","borderRadius","bottom","rotate","setParams","_item$title","_item$title2","TouchableOpacity","onPressIn","onPressOut","pointerEvents","IconButton","Avatar","Text","label","marginLeft","_SafeAreaView","_Clipboard","_reactNativeSyntaxHighlighter","_reactNativeCodeEditor","scrollPosition","isPlaying","isRendering","renderOutputURL","renderProgress","ffmpegLogs","ffmpegError","_useState","useState","_useState2","showCode","setShowCode","codeEditorRef","inputWidth","codeWidth","_useState3","_useState4","outputMenuVisible","setOutputMenuVisible","_useState5","_useState6","presetMenuVisible","setPresetMenuVisible","outputTypes","FFMpegOutputType","codeString","closeMenu","projectWriteMutation","onSuccess","refetch","processKey","useCallback","ev","_video2$current5","_video2$current6","_video2$current7","_video2$current","_video2$current2","paused","pause","setScrollPosition","_video2$current3","_video2$current4","play","useEffect","onkeyup","selectValue","valueType","np","shouldRerender","includes","isNaN","_video2$current8","setActiveLayer","activeLayerId","Button","setIsRendering","encodeProject","renderParams","setRenderProgress","logLine","addNewLogLine","setRenderUrl","loading","disabled","mode","TextInput","dense","textAlign","keyboardType","onChangeText","_mediaRes$editor","_mediaRes$editor2","_mediaRes$editor3","_mediaRes$editor4","_mediaRes$editor5","Menu","onDismiss","anchor","_mediaRes$editor6","FFMpegPreset","_codeEditorRef$curren","_mediaRes$editor7","inputLineHeight","highlighterLineHeight","language","syntaxStyle","CodeEditorSyntaxStyles","xonokai","initialValue","onChange","_mediaRes$editor8","autoFocus","showLineNumbers","Clipboard","setString","highlighter","customStyle","userSelect","itemId","showComments","isCommentLayer","onClickAddContent","_dataHook$folder2","pickerResult","DocumentPicker","presentationStyle","uri","fId","nd","fileType","startOnboarding","folderContent","_reactNativeDraglist","horizontal","renderItem","_editorcontentitem","keyExtractor","onReordered","toggleLayerProp","propName","_defineProperty2","folderData","muteLayer","hideLayer","Controls","iconSize","parentHook","folderContentQuery","_dataHook$folder","setIsPlaying","_VirtualizedList","_editorcaret","scrollParams","getByIdCallback","onClickAddLayer","horizontalScroll","contentContainerWidth","controlsContainerWidth","_editorlayer","EditorLayerHeaderComponent","onScroll","contentOffset","_horizontalScroll$cur","_horizontalScroll$cur2","_horizontalScroll$cur3","totalWidth","clientWidth","totalScroll","scrollWidth","setScrollParams","scrollTo","EditorLayerBodyComponent","getContentItem","getItemCount","getContentCount","showEditor","isRefreshing","setRefreshing","menuOpen","setMenuOpen","forgetEverything","folders","f","onClickSetScale","nscale","setPixelsPerSecond","onClickCopy","onClickCut","currentData","nitem","JSON","parse","stringify","onClickRefresh","onClickShowComments","setShowComments","onClickAddComment","_layers$","comment","partyId","isParty","createNewParty","Appbar","Action","leadingIcon","_StyleSheet","StyleSheet","video","chip","_encodedMediaQuery$da2","_encodedMediaQuery$da3","_encodedMediaQuery$da6","_encodedMediaQuery$da7","encoderProgress","videoCaretPosition","videoScrollPosition","canScroll","focused","useIsFocused","encodedMediaQuery","getProjectMedia","setEncoderProgress","keepPreviousData","_encodedMediaQuery$da","queryPosition","onTimeUpdate","currentTime","_encodedMediaQuery$da4","_encodedMediaQuery$da5","newtime","newoffset","layerSwitched","nscrollPosition","ncaretPosition","diff","isFetching","controls","src","onPlaying","onPause","onEnded","_mediaRes$encoding","_mediaRes$encoding2","localMediaQuery","encodedFileSize","_head$headers$get","headers","retry","mediaLoading","mediaSrc","video1","Chip","niceBytes","_e$nativeEvent$target","Math","abs","_video1$current","_video1$current2","_video1$current3","_video1$current4","_ImageBackground","source","resizeMode","project","afterWrite","ni","clearTimeout","queryKey","resetQueries","exact","_projectData$encoding","_projectData$encoding2","_projectData$encoding3","_projectData$encoding4","soundVolume","_projectData$encoding5","_projectData$encoding6","_projectData$encoding7","_projectData$encoding8","_projectData$encoding9","_projectData$encoding10","_folderitem","folderLibraryProps","dim","drawerOffset","navigation","currentFolderId","currentFolderEditorName","setFolderEditorName","folderNameInputRef","onFolderActionPress","loadingContent","loadingFolders","abortEditFolder","initialNumToRender","isOpen","isInfoOpen","iconColor","isLoadingContent","onFolderPress","navigate","onShareFolder","renderFolder","getItemLayout","_parentFolderHook$fol","foldersHook","useFolders","isLoadingFolder","scrollEnabled","pagingEnabled","onScrollToTop","_data","isFocused","isLoadingFolderContent","addMedia","mstyles","paddingBottom","ListEmptyComponent","contactItemProps","children","Accordion","expanded","_mediaitem","_contactitem","_projectitem","enableMove","ContentItemProps","showMenu","setFolderMenuItemId","hideMenu","onMediaPress","onRemoveMediaPress","onDownloadMediaPress","onCopyLinkPress","onEditMediaPress","isLoadingMedia","onRemoveFile","currentContentId","currentMediaId","onExportFile","itemLoading","isSecondLevel","folderIcon","folderAccesory","isDefaultFolder","defaultFolders","touchableStyle","isMenuOpen","ui","folderItemMenuOpen","useMemo","remove","edit","_folderNameInputRef$c","leftItem","ellipsizeMode","titleColor","numberOfLines","flexWrap","setToastText","column","customTitle","additionalPadding","image","thisItemIsLoading","onCellPress","onRemove","isDownloading","downloadingProgress","sharing","isDownloadedQuery","getFileStats","onep","staleTime","Infinity","onDownloadToggle","iconName","thumbnail","extractorIcon","downloadText","animating","description","descriptionColor","gap","setSharing","status","resizeMethod","imageStyle","projectType","projectIcon","_medialibrary","mediaPlayer","currentMedia","isImage","updateMediaTime","mediaQuery","loaded","actionType","MediaActionType","bannerHeight","objectFit","togglePause","onResize","onLoadedData","isMediaPaused","el","kind","srcLang","flexBasis","useMedia","_appnav","_drawer2","DrawerNav","createDrawerNavigator","Tab","createMaterialBottomTabNavigator","RootStack","createNativeStackNavigator","FileStack","createFileStack","ChatStackScreen","createChatStack","SettingsStack","createSettings","EncoderStack","createEncoder","EditorStack","createEditor","TabNav","isNavHidden","isTabBarHidden","useKeyboardDispatcher","screenStateListener","navState","_navState$data","_navState$data$state","_currentTab$state","_currentTab$state2","currentTab","routes","currentNavPage","parentName","currentPage","setCurrentPage","SafeAreaInsetsContext","Consumer","insets","collapsedDrawerWidth","max","Navigator","screenOptions","drawerStyle","drawerPosition","drawerType","detachInactiveScreens","defaultStatus","screenListeners","drawerContent","Screen","component","options","headerShown","drawerIcon","barStyle","tabBarLabel","tabBarIcon","header","RootStackName","orientation","freezeOnBlur","_userData$data","enableAudio","Audio","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","InterruptionModeIOS","DuckOthers","playsInSilentModeIOS","staysActiveInBackground","interruptionModeAndroid","InterruptionModeAndroid","shouldDuckAndroid","searchValue","setSearch","editingMode","userState","isLocked","setLocked","newFolderType","encoderProjectTypes","extractLink","exData","extractMedia","showFullSearchBar","addFolderPlaceholder","chatPlacehoder","Header","_navinput","NavInput","_actions","Actions","Searchbar","searchContactsPlaceholderText","defaulPlaceHolderText","inputStyle","_bannercontainer","BannerContainer","appDialogOnSelectLeftt","appDialogOnSelectRight","appDialogVisible","appDialogBody","appDialogTitle","setAppDialogParams","appDialogControls","appDialogIcon","Portal","Dialog","Title","Content","_pickerFileMeta$size","hideMedialModal","routeName","uploadState","upload","mediaModalVisible","modalVisible","pickerFile","pickerFileMeta","uploadToCloud","shareToWt","shareToWT","fileUploadProgress","encryption","isUploadInProgress","uuidFilename","authToken","videoMeta","setVideoMeta","uploadFileMutation","axios","request","method","withCredentials","onUploadProgress","setFileUploadProgress","attempts","writeItemToLocalStoreMutation","meta","writingItem","peerShared","confirmFile","_folder","_folder2","_folder3","_folder4","comment_layer","setUploadInProgress","setMediaModalVisible","fileUrl","cdndomain","webpage_url","hasCloud","Card","subtitle","animatedValue","Modal","Section","onLoadedMetadata","videoWidth","videoHeight","_expoAv","Video","onLoad","onReadyForDisplay","naturalSize","durationMillis","_axios","superfast","mp4","toastText","toastIcon","React","Snackbar","isEditing","addFileEnabled","addFolderEnabled","settings","showScaleControls","onClickFile","setEditingMode","Tooltip","_editortoolbar","folderParams","screen","RootScreens","useMediaPlayer","_fileupload","cancel","_mediabanner","_encoderbanner","_editorbanner","_choosedialog","ChooseDialog","_toastdialog","ToastDialog","textValue","setText","back","isBackEnabled","getHeaderTitle","placeholderText","onClickExtra","nFolder","showTextField","_backbutton","BackButton","textAlignVertical","maxLength","DrawerCollapsedItemsData","focusedIcon","unfocusedIcon","preference","paddingVertical","v3Preference","badge","collapsedSection","annotation","marginVertical","drawerItemIndex","_drawer","DrawerContentScrollView","alwaysBounceVertical","Drawer","CollapsedItem","DatabaseItemComponent","_getOwner","showMnemonic","totalLength","currentMnemonic","isCurrent","loginMutation","restoreOwner","toDateString","dbReq","getDatabases","dbs","setShowMnemonic","dbName","setDbName","dbMnemonic","setDbMnemonic","createDBMutation","showCreate","userLoading","RegExp","_Pressable","userDataQuery","isLoadingUserData","onEditProfile","Image","slice","toUpperCase","createContext","migrationKey","publicPartyPref","textColor","mediaItemTextColor","mediaBackgroundColor","mediaBorderColor","navTextColor","navInactiveColor","folderColor","folderTextColor","deleteBackgroundColor","deleteTextColor","navBorderColor","contactItemBackgroundColor","contactItemTitleColor","contactItemOnlineColor","currentUserColor","remoteUserColor","baseFolder","createUser","cats","fullName","cat","year","birthdate","getFullYear","handle","idHash","version","prevVersion","createNewUser","newUser","toISOString","MEDIA","getContactsFolders","getContactsFolderContent","getFolderContentProxy","getByIdProxy","writeItemProxy","_folderContentQuery$d","_folderContentQuery$d2","_folder$files","getFolderContentMain","getByIdMain","writeItemMain","content","deleteFolderMutation","_route$params","removeObject","folderFiles","userDispatch","editableFolder","updateFolderTitleMutation","_appDialogOnSelectRight","UserDataActionType","setEditingFolder","editFolder","didEnd","folderPref","folderUrl","encodeURIComponent","isLoadingFolderContentError","FoldersActionType","routeFolderId","foldersQuery","unshift","selectFolder","setActiveFolder","Keyboard","addListener","setKeyboardHeight","keyboardHeight","endCoordinates","removeAllListeners","getFoldersByTypeProxy","useFoldersState","mediaState","downloads","stop","deleteMediaMutation","deleteFileMutation","exportFileMutation","exportFile","closeDialog","setDownloadingProgress","_appDialogOnSelectRight3","_appDialogOnSelectRight2","_messagesQuery$data","chat","loadingPagination","pageIndex","page","messagesQuery","_yield$Promise$all","getPublicMessages","refetchInterval","loadingMessages","sendMessageMutation","nPage","setPaginationState","CommonActions","sendingMessage","messagesError","mutate","createContactMutation","ncontact","_onSuccess","userDataReducer","action","setUser","setFolderType","currentFolderType","_useReducer","useReducer","_useReducer2","_contacts","_folderpage","ChatStack","createStackNavigator","ChatComponent","FolderComponent","ContactsComponent","_editorproject","FolderLibraryComponent","EditorProjectScreen","EncoderProjectScreen","_home","HomeComponent","_settings","_devices","RenderSettings","Devices","Databases","prefixes","screens","Starp","FilesTab","Folder","Files","SettingsTab","Drive","Settings","ContactsTab","Chat","Contacts","EncoderTab","EncoderProjects","EncoderProject","EditorTab","EditorProjects","EditorProject","useDispatch","useSelector","chatSlice","createSlice","initialState","reducers","payload","actions","reducer","editorSlice","jobs","jobsProgress","prevActiveLayer","renderTime","createBackgroundRenderJob","setJobProgress","setTotalTime","newscroll","setShowEditor","_editorSlice$actions","encoderSlice","FileSystemSlice","isDeleting","setDeleteItem","deleteItemId","_ref2$payload","_ref3$payload","_FileSystemSlice$acti","mediaSlice","_action","isMediaPlaying","_mediaSlice$actions","isKeyboardOpen","isReady","isSignedIn","PagesWithoutTabBar","PagesWithBackEnabled","uiSlice","_ref$payload","setToastIcon","setIsReady","setIsSigned","_uiSlice$actions","persist","totalChunks","uploadSlice","continue","setShareToWt","setUploadToCloud","setEncrypt","setMetaForCloud","_uploadSlice$actions","_upload","_editor","_ui","configureStore","mediaReducer","uploadReducer","encoderReducer","chatReducer","fsReducer","editorReducer","uiReducer","ChatMessageType","ChatMessageStatus","_Contact","_Media","_UserInfo","_Folder","FTSIndex","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","j","every","splice","getter","d","definition","o","chunkId","promises","miniCssF","g","globalThis","this","Function","obj","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","setAttribute","onScriptComplete","prev","onerror","doneFns","parentNode","removeChild","bind","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","b","baseURI","self","installedChunks","installedChunkData","promise","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}