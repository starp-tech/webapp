{"version":3,"file":"main.js","mappings":"sHAgCE,K,wDAhCFA,EAAAC,EAAAD,GACAE,EAAAD,EAAAC,GAGAC,EAAAF,EAAAE,GAqBAC,EAAAH,EAAAG,GAhBA,IAAMC,EAAc,4BACPC,EAAAA,QAAQ,kCAIfC,EAAQC,SAASC,cAAc,SACrCF,EAAMG,KAAO,WAETH,EAAMI,WACRJ,EAAMI,WAAWC,QAAUP,EAE3BE,EAAMM,YAAYL,SAASM,eAAeT,IAI5CG,SAASO,KAAKF,YAAYN,IAK1B,EAAAS,EAAAA,gBAAeC,MAAK,YACL,EAAAC,EAAAA,YAAWV,SAASW,eAAe,SAC3CC,QAAO,EAAAX,EAAAA,eAAcY,EAAAA,SAC5B,GAAE,4B,8ICiDgB,K,oIA/ElBC,EAAArB,EAAAqB,GAA0BC,EAAAtB,EAAAsB,GAAAC,EAAAvB,EAAAuB,GAM1BC,EAAAxB,EAAAwB,GAFAC,EAAAA,QAAOC,gBAgBP,IAAMC,EAAKC,OAAAC,OAAA,GACNC,EAAAA,aAAa,CAChBC,OAAO,EAAAC,EAAAA,gBAAe,CACpBC,OAAQ,CACNC,QAAS,CACPC,WACO,yDAKPC,WAAY,MACZC,cAAe,GACfC,WAAY,GACZC,SAAU,KAGdC,MAAM,MAwCRC,EAAAA,QA9BU,WACV,IAAAC,GAA0C,EAAAC,EAAAA,eAAnCC,EAAaF,EAAbE,cAAeC,EAAgBH,EAAhBG,iBACtB,OACExB,EAAAa,QAAA1B,cAACsC,EAAAC,SAAQ,CAACC,MAAOA,EAAAA,OACf3B,EAAAa,QAAA1B,cAACyC,EAAAC,oBAAmB,CAACC,OAAQC,EAAAA,aAC3B/B,EAAAa,QAAA1B,cAAC6C,EAAAC,QAAQP,SAAQ,CAACQ,MAAOC,EAAAA,UACvBnC,EAAAa,QAAA1B,cAAC6C,EAAAI,cAAcV,SAAQ,CAACQ,MAAOX,GAC7BvB,EAAAa,QAAA1B,cAAC6C,EAAAK,iBAAiBX,SAAQ,CAACQ,MAAOV,GAChCxB,EAAAa,QAAA1B,cAACmD,EAAAC,iBAAgB,KACfvC,EAAAa,QAAA1B,cAACqD,EAAAC,cAAa,CAACnC,MAAOA,GACpBN,EAAAa,QAAA1B,cAACa,EAAAa,QAAM6B,SAAQ,KAEX1C,EAAAa,QAAA1B,cAAA,SAAOC,KAAK,YAAU,oIAGXuD,EAAQ,OAA6F,oEAIlH3C,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,OAEF1C,EAAAa,QAAA1B,cAACgB,EAAAU,QAAY,YAS/B,CAEkB,4B,gEC5ChB,K,qCAlCE+B,E,WAHkC,SAAAC,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,8EAAtCI,EAAsC,SAAAJ,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAAtCU,CAAAd,GAAsChD,EAAAvB,EAAAuB,IAI1B,eAAA+D,GAAA,EAAAC,EAAArD,UAAG,YACb+B,QAAWM,EAAOiB,kBAAkB,iBAE9BvB,EAAGwB,UAAU,4IAIrB,GAPY,KAWahD,EAAAA,aAAA,eAAAiD,GAAA,EAAAH,EAAArD,UAAG,YAC1B,MAAO,CACLyD,UAAU,WAAD,IAAAC,GAAA,EAAAL,EAAArD,UAAE,UAAO2D,EAAYC,GAAgB,aACtC7B,EAAG8B,SACP,iDACAF,EACAC,EACD,oBAAAE,EAAAC,GAAA,OAAAL,EAAAM,MAAA,KAAAC,UAAA,EALO,GAMVC,UAAU,WAAD,IAAAC,GAAA,EAAAd,EAAArD,UAAE,UAAO2D,GAChB,IAAMS,QAAarC,EAAGsC,YACpB,kEACA,CAACV,IAGGW,EAAW,kCADKF,EAAKG,KAAI,SAAAtB,GAAC,OAAIA,EAAEU,EAAE,IACkBa,KACxD,KACD,IAGD,aADMzC,EAAG8B,SAASS,GACXF,CACT,IAAC,gBAAAK,GAAA,OAAAN,EAAAH,MAAA,KAAAC,UAAA,EAZS,GAcd,IAAC,kBAtBwB,OAAAT,EAAAQ,MAAA,KAAAC,UAAA,IAsBvB,4B,yECwEA,K,sLAnGFS,EAAA5G,EAAA4G,GAKO,IAAMC,EAAepE,EAAAA,gBAAA,eAAA6C,GAAA,EAAAC,EAAArD,UAAG,UAC7B4E,EACAC,EACAC,EACAC,QAAO,IAAPA,IAAAA,EAAU,CAAC,GAEX,IAAMjC,QAAoB,EAAAkC,EAAAA,eAEpBZ,EAAO,CACXT,GAFSsB,EAAAA,QAAKC,KAGdL,KAAAA,EACAM,OAAQrC,EAAEa,GACViB,OAAAA,EACAQ,SAAUR,EACVS,cAAe,OACfC,SAAUxC,EAAEyC,KACZC,WAAW,IAAIC,MAAOC,WAElBC,EAAKjG,OAAAC,OAAA,GAAOyE,EAASW,GACrBa,QAAe,EAAAC,EAAAA,cAAajB,EAAQE,GAE1C,aADM,EAAAgB,EAAAA,WAAUH,EAAOC,GAChBD,CACT,IAAC,gBAtB2B7B,EAAAC,EAAAU,EAAAsB,GAAA,OAAA3C,EAAAY,MAAA,KAAAC,UAAA,KA+Ef+B,GAvDiBzF,EAAAA,kBAAA,eAAAiD,GAAA,EAAAH,EAAArD,UAAG,UAC/B4E,EACAE,EACAmB,EACAC,QADa,IAAbD,IAAAA,EAAgB,SACF,IAAdC,IAAAA,EAAiB,GAEjB,IAAK,IAADC,EAAAC,EAAAC,EAEEpE,EADEqE,QAAgB,EAAAC,EAAAA,SAAQ3B,IAEzB0B,GAAUA,EAAOxB,UAAaA,KACjC7C,QAAU,EAAA4D,EAAAA,cACRjB,GACM,MAAN0B,OAAM,EAANA,EAAQxB,WAAYA,GACpB,IAGJ,IAAM0B,EAAS,OAAJL,EAAGlE,QAAC,EAADkE,EAAGM,aAAY,SAAA1E,GAAE,OAC7BA,EACG2E,WAAW,QACXC,YACAC,MAAM,SAAU,IAAKhC,GACrBiC,QAAQ,YAAa,QACrBZ,MAAMA,GACNC,OAAOA,EAAO,IAEb9B,EAAOoC,UAAiB,OAAZJ,EAAWnE,QAAC,EAADmE,EAAGU,UAAUN,IAC1C,OAAW,MAAJpC,GAAU,OAANiC,EAAJjC,EAAM2C,WAAI,EAAVV,EAAY9B,KAAI,SAAAtB,GAAC,OAAIA,EAAE+D,IAAI,GACpC,CAAE,MAAOC,GACPC,QAAQC,MAAM,0BAA2BF,EAC3C,CACA,MAAO,EACT,IAAC,gBA/B6BG,EAAAC,EAAAC,EAAAC,GAAA,OAAA/D,EAAAQ,MAAA,KAAAC,UAAA,KAiCH1D,EAAAA,eAAA,eAAAiH,GAAA,EAAAnE,EAAArD,UAAG,UAAOyH,GACnCP,QAAQQ,KAAK,iBAAkBD,GAC/B,IAAME,QAAa,EAAA3C,EAAAA,eACbJ,EAAS6C,EAAM9D,GACfiE,EAAOlI,OAAAC,OAAA,GACR8H,EAAM,CACT9D,GAAIiB,EACJiD,SAAUF,EAAKhE,GACfmE,WAAYH,EAAKpC,KACjBwC,WAAW,EACXjD,SAAUkB,YAEO,EAAAF,EAAAA,WAAU8B,GAO7B,aANMjD,EACJC,EACA+C,EAAKpC,KAAO,qBAAuBkC,EAAMlC,KACzCqC,EAAQ9C,SACR,CAACkD,QAAQ,IAEJJ,CACT,IAAC,gBApB0BK,GAAA,OAAAT,EAAAxD,MAAA,KAAAC,UAAA,KAsBH1D,EAAAA,YAAG,WACzB,MAAO,CACL2H,EAAAA,MAAMC,OAAOC,OAAOC,MAAM,KAAK7D,KAAK,IAAI8D,cACxCJ,EAAAA,MAAMC,OAAOC,OAAOC,MAAM,KAAK7D,KAAK,IAAI8D,cACxCJ,EAAAA,MAAMK,MAAMC,QAAQH,MAAM,KAAK7D,KAAK,IAAI8D,cACxCJ,EAAAA,MAAMK,MAAMC,QAAQH,MAAM,KAAK7D,KAAK,IAAI8D,cACxCJ,EAAAA,MAAMK,MAAMC,QAAQH,MAAM,KAAK7D,KAAK,IAAI8D,cACxCJ,EAAAA,MAAMC,OAAOM,OAAOJ,MAAM,KAAK7D,KAAK,IAAI8D,cACxCJ,EAAAA,MAAMC,OAAOM,OAAOJ,MAAM,KAAK7D,KAAK,IAAI8D,cACxCJ,EAAAA,MAAMC,OAAOM,OAAOJ,MAAM,KAAK7D,KAAK,IAAI8D,cACxCJ,EAAAA,MAAMC,OAAOO,SAASL,MAAM,KAAK7D,KAAK,IAAI8D,cAC1CJ,EAAAA,MAAMS,OAAOC,OAAOP,MAAM,KAAK7D,KAAK,IAAI8D,cACxCJ,EAAAA,MAAMS,OAAOC,OAAOP,MAAM,KAAK7D,KAAK,IAAI8D,cACxCJ,EAAAA,MAAMS,OAAOC,OAAOP,MAAM,KAAK7D,KAAK,IAAI8D,eACxC9D,KAAK,IACT,EAAE,4B,4GCsN2B,K,8WAxT7BE,EAAA5G,EAAA4G,GAAqCrF,EAAAvB,EAAAuB,GAsB9B,IAAM6B,EAAWX,EAAAA,YAAG,IAAIsI,EAAAA,YAAY,CACzCC,eAAgB,CACdC,QAAS,CACPC,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAoB,MAKpBC,GAAW,EAAAC,EAAAA,UAAS,CACxBpC,KAAMqC,EAAAA,YAKFC,EAA4C,CAAC,EAItCC,EAA6ChJ,EAAAA,YAAG,CAAC,EAEnDiJ,EAAajJ,EAAAA,cAAG,UAEdsF,EAAYtF,EAAAA,aAAG,SAC1BkJ,EACA3E,EACA4E,GAEA,QAJM,IAAND,IAAAA,EAAM,GAAMD,GAIRF,EAAQG,GAAS,OAAOH,EAAQG,GACpC,GAAI3E,GAAYyE,EAAYzE,GAAW,OAAOyE,EAAYzE,GAC1D,IAAM6E,EAAsC,CAACpE,KAAMkE,GAC/C3E,IAAU6E,EAAI7E,SAAWA,GAC7B,IAAM/C,GAAK,EAAA6H,EAAAA,aAAYT,EAAUQ,GAGjC,OAFAL,EAAQG,GAAU1H,EACd+C,IAAUyE,EAAYzE,GAAY/C,IACxB,IAAV2H,EACK,IAAIG,SAAQ,SAAAC,GACjBC,EAAqBhI,GAAIjD,MAAK,kBAAMgL,EAAI/H,EAAG,IAE3CA,EAAGiI,oBAAmB,EAAD3G,EAAArD,UAAC,YACpB,IAAMiK,EAAQlI,EAAGmI,eACE,sBAAfD,EAAME,OACHC,EAAYX,KACfW,EAAYX,IAAU,GAExBvC,QAAQQ,KAAK,QAASuC,EAAOR,GAC7BvI,EAAYmJ,eAAe,iBAAmBZ,GAC9CM,EAAqBhI,GAEzB,IACF,IAEKA,CACT,EACMqI,EAAwC,CAAC,EAElCL,EAAoBxJ,EAAAA,qBAAA,eAAAiD,GAAA,EAAAH,EAAArD,UAAG,UAAOiC,GACzC,IACE,IAAMuE,EAAS,MAADvE,OAAC,EAADA,EAAGwE,aAAY,SAAA1E,GAAE,OAC7BA,EACG2E,WAAW,QACXC,YACAC,MAAM,WAAY,SAAU,MAC5BA,MAAM,YAAa,KAAM,KAAK,IAE7B0D,QAAiB,MAADrI,OAAC,EAADA,EAAG6E,UAAUN,GACnCU,QAAQQ,KAAK,UAAW4C,EAAQvD,MAChC,IAAMwD,EAAiBD,EAAQvD,KAAKxC,IAAI,WAAD,IAAAiD,GAAA,EAAAnE,EAAArD,UAAC,UAAMgH,GACvCoD,EAAYpD,EAAKrD,MACpByG,EAAYpD,EAAKrD,KAAM,EACvB2F,EAAQtC,EAAKrD,IAAM1B,SAEff,EAAYmJ,eAAe,iBAAmBrD,EAAKrD,GAC3D,IAAG,OAAF,SAAAI,GAAA,OAAAyD,EAAAxD,MAAA,KAAAC,UAAE,CAAF,CANuC,UAOlC4F,QAAQW,IAAID,EACpB,CAAE,MAAOtD,GACPC,QAAQC,MAAMF,EAChB,CACF,IAAC,gBAtBgCnD,GAAA,OAAAN,EAAAQ,MAAA,KAAAC,UAAA,KAgDpBwG,GAxBWlK,EAAAA,YAAA,eAAAmK,GAAA,EAAArH,EAAArD,UAAG,UACzB2K,GAE4B,IAADC,EACpBD,IAAQA,EAAqB,OAAfC,EAAGC,mBAAY,EAAZD,EAAcE,QAAQ,cAQ9C,IACAC,QAAyBC,EAAO,WAAW,GAApCC,GAAyC,EAAAC,EAAAlL,SAAA+K,EAAA,GAAjC,GACTI,QAAgBH,EAAO,YAAY,GAEzC,OAAAtL,OAAAC,OAAA,GACKsL,EALY,CAAC,EAMJ,CAEZE,QAAAA,GAEJ,IAAC,gBAtBuB1G,GAAA,OAAAiG,EAAA1G,MAAA,KAAAC,UAAA,KAwBK1D,EAAAA,iBAAA,eAAA6K,GAAA,EAAA/H,EAAArD,UAAG,UAAOoF,GAAsB,IAADe,EAAAC,EACpDE,QAAuBC,EAAQnB,GACjCnD,EAAIoJ,EACJ/E,GAAUA,EAAOxB,WACnB7C,QAAU4D,EAAaT,EAAUkB,EAAOxB,UAAU,IAGpD,IAAM0B,EAAS,OAAJL,EAAGlE,QAAC,EAADkE,EAAGM,aAAY,SAAA1E,GAAE,OAC7BA,EACG2E,WAAW,QACXC,YACAC,MAAM,WAAY,IAAKxB,GACvBwB,MAAM,YAAa,KAAM,MACzBC,QAAQ,UAAW,OACnBA,QAAQ,cAAe,OAAO,IAInC,aAFoB,OAAVT,EAASnE,QAAC,EAADmE,EAAGU,UAAUN,IAEpBO,KAAKxC,KAAI,SAAAtB,GAAC,OAAIA,EAAE+D,IAAI,GAClC,IAAC,gBAnB4BjB,GAAA,OAAAqF,EAAApH,MAAA,KAAAC,UAAA,MA0BhBqH,GALsB/K,EAAAA,uBAAA,eAAAgL,GAAA,EAAAlI,EAAArD,UAAG,UAAOoF,GAE3C,OAAOqF,EAAiBrF,EAC1B,IAAC,gBAHkCgC,GAAA,OAAAmE,EAAAvH,MAAA,KAAAC,UAAA,KAKN1D,EAAAA,iBAAA,eAAAiL,GAAA,EAAAnI,EAAArD,UAAG,UAC9BzB,GAEA,IAAMiI,EAAa,MAAL6E,OAAK,EAALA,EAAO5E,aAAY,SAAA1E,GAAE,OACjCA,EACG2E,WAAW,QACXC,YACAC,MAAM,aAAc,IAAKrI,GACzBqI,MAAM,WAAY,KAAM,MACxBA,MAAM,YAAa,KAAM,KAAK,IAInC,aAFwB,MAALyE,OAAK,EAALA,EAAOvE,UAAUN,IAExBO,KAAKxC,KAAI,SAAAtB,GAAC,OAAIA,EAAE+D,IAAI,GAClC,IAAC,gBAd4BK,GAAA,OAAAmE,EAAAxH,MAAA,KAAAC,UAAA,MAgBhB6B,EAASvF,EAAAA,UAAA,eAAAkL,GAAA,EAAApI,EAAArD,UAAG,UAAOoE,EAAWnC,GAAyB,IAADyJ,EAC3DC,EAEA,IAAIC,IAAU,OAAPF,EAACG,SAAgB,OAAVH,EAANA,EAAQI,eAAQ,EAAhBJ,EAAkBK,YAAYC,aAAaxJ,IACjD,kBAIR,GAAI4B,EAAKgB,UAAYuG,EAAgB,CACnC,IAAMrF,QAAuBC,EAC3BnC,EAAKgB,UAAYuG,GAEfrF,GAAUA,EAAOxB,WACnB7C,EAAI4D,EAAazB,EAAKgB,SAAUkB,EAAOxB,WAErCV,EAAK6H,UACL7H,EAAK8H,eACL9H,EAAK+H,mBAEL/H,EAAKU,SAAWwB,EAAOxB,SACvBwE,EAAQlF,EAAKT,IAAM1B,GACA,IAEjBmC,EAAKgI,YAAchI,EAAKiI,oBAC1BjI,EAAKkI,UAAY,MAGvB,CACApF,QAAQQ,KAAK,iBAAkBtD,GAC/B,IAAM4C,QAAc/E,GAAKoJ,GAAOkB,eAAe,OAAQ,CACrD5I,GAAIS,EAAKT,GACT6I,MAAOpI,EAAKoI,MACZjH,KAAMnB,EAAKmB,KACXyB,KAAM5C,EACN6H,SAAU7H,EAAK6H,SACflE,UAAW3D,EAAK2D,UAChBqE,WAAYhI,EAAKgI,WACjBK,SAAUrI,EAAKqI,SACfC,QAAStI,EAAKsI,QACdtH,SAAUhB,EAAKgB,SACfuH,WAAYvI,EAAKuI,WACjB/H,OAAQR,EAAKQ,OACbY,UAAWpB,EAAKoB,UAChBoH,UAAWxI,EAAKwI,UAChBT,gBAAiB/H,EAAKwI,UACtBV,cAAe9H,EAAKwI,UACpBC,QAASzI,EAAKyI,SAAW,EACzB/H,SAAUV,EAAKU,SACfgI,aAAa,IAAIrH,MAAOC,YAM1B,OAJItB,EAAKU,UAAYV,EAAK6H,WAAahK,IACrCiF,QAAQQ,KAAK,uCACbzF,QAAU4D,EAAazB,EAAKT,GAAIS,EAAKU,UAAU,IAE1CkC,CACT,IAAC,gBAvDqBM,EAAAC,GAAA,OAAAkE,EAAAzH,MAAA,KAAAC,UAAA,KA4DT+G,GAHgBzK,EAAAA,iBAAA,eAAAwM,GAAA,EAAA1J,EAAArD,UAAG,UAAO2D,GAAU,OAC/CqH,EAAO,aAAcrH,EAAI,IAAD,gBADGsE,GAAA,OAAA8E,EAAA/I,MAAA,KAAAC,UAAA,KAGV1D,EAAAA,OAAA,eAAAyM,GAAA,EAAA3J,EAAArD,UAAG,UACpBiN,EACA5L,GAEA,IAAMmF,EAAa,MAAL6E,OAAK,EAALA,EAAO5E,aAAY,SAAA1E,GAAE,OACjCA,EAAG2E,WAAW,QAAQC,YAAYC,MAAMqG,EAAK,IAAK5L,EAAM,IAEpD+C,QAAkB,MAALiH,OAAK,EAALA,EAAOvE,UAAUN,GAEpC,OADAU,QAAQQ,KAAK,SAAUtD,GAChBA,EAAK2C,KAAKxC,KAAI,SAAAtB,GAAC,OAAIA,EAAE+D,IAAI,GAClC,IAAC,gBAVkBkG,EAAAC,GAAA,OAAAH,EAAAhJ,MAAA,KAAAC,UAAA,MAYNsC,EAAOhG,EAAAA,QAAA,eAAA6M,GAAA,EAAA/J,EAAArD,UAAG,UACrB2D,EACAyB,GACgD,IAADiI,EAAAC,EAAAC,EAC3CtL,EAAIoJ,EACR,GAAIjG,KACFnD,EAAIqH,EAAQlE,KACFzB,IAAOyB,EAAU,CACzB,IAAMkB,QAAuBC,EAAQnB,GAEnCnD,EADQ,MAANqE,GAAAA,EAAQxB,eACAe,EAAaS,EAAO3C,GAAI2C,EAAOxB,UAErCuG,CAER,CAEF,IAAM7E,EAAS,OAAJ6G,EAAGpL,QAAC,EAADoL,EAAG5G,aAAY,SAAA1E,GAAE,OAC7BA,EAAG2E,WAAW,QAAQC,YAAYC,MAAM,KAAM,IAAKjD,EAAG,IAElDqD,QAAc,OAAVsG,EAASrL,QAAC,EAADqL,EAAGxG,UAAUN,GAC1BvD,EAAQ,MAAJ+D,GAAS,OAALuG,EAAJvG,EAAMwG,UAAG,EAATD,EAAWvG,KAMrB,OALK,MAAD/D,GAAAA,EAAGgJ,UAAa,MAADhJ,GAAAA,EAAGiJ,eAAkB,MAADjJ,GAAAA,EAAGkJ,mBACnC7C,EAAQrG,EAAEU,KAAOV,EAAE6B,WACtBwE,EAAQrG,GAAKhB,IAGZgB,GAAY,KAAPU,QAAoB8J,IAAP9J,GAA2B,OAAPA,GACrC2F,EAAQ3F,IAAOA,IAAOyB,QAAuBmB,EAAQ5C,EAAIA,GASxDV,CACT,IAAC,gBArCmByK,EAAAC,GAAA,OAAAP,EAAApJ,MAAA,KAAAC,UAAA,KAuEdoH,GAhCyB9K,EAAAA,mBAAA,eAAAqN,GAAA,EAAAvK,EAAArD,UAAG,UAChCyJ,EACA3E,EACA7C,GACI,IAAD4L,EACCC,EACJ,IAAK7L,IACHiF,QAAQQ,KACN,+CACA8B,IAEFsE,QAAkBxC,EAAiByC,EAAAA,WAAW3E,WAChC4E,QAAQ,CACpB,IAAMC,EAASH,EAAUI,MAAK,SAAAjL,GAAC,OAAIA,EAAE6B,WAAaA,CAAQ,IAC1D,GAAImJ,EAAQ,OAAOA,CACrB,CAEF,IAAMtK,EAAKsB,EAAAA,QAAKC,KAAK6G,WACfoC,EAAoB,CACxBxK,GAAAA,EACA6I,MAAU/C,EAAM,IAAI9F,EACpBmB,SAAAA,EACAsJ,YAAY,EACZzB,WAAYoB,EAAAA,WAAW3E,SACvBiF,MAAM,IAAI5I,MAAOC,UACjB4I,OAAO,IAAI7I,MAAOC,UAAUqG,WAC5Bc,SAAkB,OAATgB,EAAAC,QAAS,EAATD,EAAWG,QAAS,GAAK,EAClC7I,OAAQ,SAEV,aAAaW,EAAUqI,EAAKlM,EAC9B,IAAC,gBA9B8BsM,EAAAC,EAAAC,GAAA,OAAAb,EAAA5J,MAAA,KAAAC,UAAA,KAgCpB1D,EAAAA,MAAGsF,IAAe,4B,+DCpT3B,K,8HAZuBtF,EAAAA,aAAA,eAAA6C,GAAA,EAAAC,EAAArD,UAAG,YAC1B,IACMqL,EAAAA,cACI,EAAAqD,EAAAA,oBAAmB,UAAWrD,EAAAA,MAAMsD,WAAW7J,UAEzD,CAAE,MAAOmC,GACPC,QAAQC,MAAMF,EAChB,CAEA,aAAc,EAAAqE,EAAAA,kBACZyC,EAAAA,WAAW3E,SAEf,IAAC,kBAZwB,OAAAhG,EAAAY,MAAA,KAAAC,UAAA,IAYvB,4B,uDCwBC,K,+BAvCwC,SAAAjC,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,oEAW3C,IAAM2M,GAXNC,EAA2C,SAAA5M,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAA3CU,CAAA0L,IAWmBC,OAAO,CAACC,IAAKF,EAAEG,OAAQC,IAAKJ,EAAEK,UAI3CC,GAAS,EAAAxL,EAAAA,IAAG,QAIIpD,EAAAA,WAAG,EAAA6O,EAAAA,OAAM,CAC7BzL,GAAIwL,EACJ5J,KAAM8J,EAAAA,WACN7C,MAAO6C,EAAAA,WACPC,YAAaC,EAAAA,cACbvI,KAAM4H,EACNxC,WAAYmD,EAAAA,cACZxH,UAAWwH,EAAAA,cACXnK,SAAUiK,EAAAA,WACV5C,SAAU8C,EAAAA,cACVtD,SAAUsD,EAAAA,cACV5C,WAAY0C,EAAAA,WACZ3C,QAAS6C,EAAAA,cACT3K,OAAQyK,EAAAA,WACRxC,QAASwC,EAAAA,WACTvC,YAAauC,EAAAA,WACblD,gBAAiBoD,EAAAA,cACjBrD,cAAeqD,EAAAA,cACfnB,WAAYmB,EAAAA,cACZzK,SAAUuK,EAAAA,YACT,4B,+GC2gBD,K,4DAtiBiD,SAAArN,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,UAAAkB,EAAAlB,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,C,ySAAnD+M,EAAArM,EAAAqM,GACA,IAMIC,EAaOC,EACPC,EACOC,EAAWC,EAjBhBC,EAAuC,CAAC,EAOjCC,EAAcxP,EAAAA,eAAG,WAC5B,IACEkP,EAAOO,WACT,CAAE,MAAO/I,GAET,CACF,EAKMgJ,EAAY,eAAA7M,GAAA,EAAAC,EAAArD,UAAG,UAAOkQ,GAEnBR,IACHC,QAAI,IAAA9F,SAAA,SAAAsG,EAAAC,GAAA,OAAAC,EAAAA,EAAAA,KAAAA,MAAAA,WAAA,OAAgB,WAAc,SAAAC,GAAA,OAAAH,EAAAhN,EAAAmN,GAAA,0BAAAF,EAAA,WAAE,IACpC7P,EAAAA,UAAAqP,EAAYD,EAAKC,UACjBrP,EAAAA,UAAAsP,EAAYF,EAAKE,UACjBtP,EAAAA,OAAAmP,SAAS,IAAA7F,SAAC,SAADsG,EAAAC,GAAA,OAAAC,EAAAA,EAAAA,IAAAA,MAAAA,WAAC,OAAa,WAAgB,SAAAC,GAAA,OAAAH,EAAAhN,EAAAmN,GAAA,0BAAAF,EAAA,WAAC,KAAEV,QAE5CD,EAAS,IAAIC,EAEb7D,OAAO4D,OAASA,EAChBA,EAAOc,GAAG,OAAO,SAAA/M,GAAmC,IAAjCuB,EAAOvB,EAAPuB,QACjBmC,QAAQsJ,IAAI,SAAUzL,EACxB,IACA0K,EAAOc,GAAG,YAAY,SAACE,GACrBvJ,QAAQQ,KAAK,kBAAmB+I,GAC5BP,GAAIA,EAAGO,GAAU,EACvB,UACMhB,EAAOiB,KAAK,CAChBC,cAAed,EACVe,EAAAA,kBAAiB,kBACpB,mBAEFC,cAAehB,EACVe,EAAAA,kBAAiB,oBACpB,qBAIR,IAAC,gBA7BiB9M,GAAA,OAAAV,EAAAY,MAAA,KAAAC,UAAA,KA+BL6M,EAAWvQ,EAAAA,YAAA,eAAAiH,GAAA,EAAAnE,EAAArD,UAAG,UACzB+Q,EACAb,EACAc,GAEA,IAAMrN,EAAKoN,EAAME,SAAe,MAALF,OAAK,EAALA,EAAOpN,IAC5BuN,EAAMxR,OAAAC,OAAA,GAAOoR,EAAM,CAACpN,GAAAA,IACpBwN,EAAYxN,EAAE,KAAS,MAALoN,OAAK,EAALA,EAAOK,UACxBC,EAAYN,EAAZM,SACDC,GAAmB,MAARD,OAAQ,EAARA,EAAUvE,cAAe,EAC1C5F,QAAQQ,KAAK,WAAY4J,GACzB,IAGMC,EAAYJ,GAHF,WAAcG,EAAQ,MAC5B,MAARD,OAAQ,EAARA,EAAUG,SAAU,QAGtB,IACE,GAAI1B,EAAYnM,GAAK,OAAOmM,EAAYnM,GACxC,GAAiB,IAAb2N,EAGF,OADAxB,EAAYnM,SAAY,EAAA8N,EAAAA,aAAYP,GAC7BpB,EAAYnM,GAErB,IAAM+N,QAAgB7F,OAAO8F,UAAUC,QAAQC,aAC7CC,EAAAA,cAEIC,QAAYL,EAAQM,mBAAmBd,EAAO9L,UAC9C6M,QAAcF,EAAIG,cAAiBvO,EAAE,IAAI4N,GACzCY,QAAkB,MAALF,OAAK,EAALA,EAAOG,UAC1B,GAAID,EAEF,OADArC,EAAYnM,GAAMiI,IAAIyG,gBAAgBF,GAC/BrC,EAAYnM,EAEvB,CAAE,MAAOsD,GACPC,QAAQC,MAAM,kBAAmBF,EACnC,CACA8I,UACME,EAAaC,GACnB,IACE,IAAIoC,EACJ,IACEA,QAAiB,EAAAb,EAAAA,aAAYP,EAC/B,CAAE,MAAOjK,GACPC,QAAQQ,KAAK,qCAAsCT,GACnD,IAAMsL,QAAe,EAAAC,EAAAA,kBACnBtB,EAAOvN,GACPuN,EAAO9L,SACP8K,GAAO,SAAAuC,GAAQ,OAAIvC,EAAG,CAACuC,SAAAA,EAAUC,KAAM,GAAG,GAI5C,GAFAxL,QAAQQ,KAAK,SAAU6K,GACvBD,EAAW1G,IAAIyG,sBAAsBE,EAAOH,WAC3B,IAAbd,EACF,OAAOR,EAAYC,EAAOb,EAAIc,EAElC,CACA,IAAM2B,EAAUC,EAAW1B,EAAQF,SAC7B6B,EAAW,CACfC,MAAO,CAAC3B,GACR4B,QAAS,CAACT,GACVf,UAAAA,EACAoB,QAAAA,EACAK,SAAU9B,GAEd,CAAE,MAAOjK,GACPC,QAAQC,MAAM,gBAAiBF,EACjC,CACF,IAAC,gBAjEuBlD,EAAAU,EAAAsB,GAAA,OAAAyB,EAAAxD,MAAA,KAAAC,UAAA,KAmEX4O,EAAUtS,EAAAA,WAAA,eAAAmK,GAAA,EAAArH,EAAArD,UAAG,UAAOiT,GAO/B/L,QAAQQ,KAAK,aAAcuL,GAC3B,IAC8B,IAADC,EACnB3B,EAAY0B,EAAI1B,UACtB,UACQ1H,QAAQW,IACZyI,EAAIF,QAAQxO,IAAI,WAAD,IAAA6G,GAAA,EAAA/H,EAAArD,UAAC,UAAOsS,EAAU5I,GAC/B,IAAMyH,EAAS8B,EAAIH,MAAMpJ,GACnByJ,QAAWvD,EAAU0C,SACrB7C,EAAO2D,UAAUjC,EAAQgC,EACjC,IAAC,gBAAA9L,EAAAC,GAAA,OAAA8D,EAAApH,MAAA,KAAAC,UAAA,EAJe,IAMpB,CAAE,MAAOgD,GAEP,MADAC,QAAQC,MAAM,6BAA8BF,GACtCA,CACR,CACAC,QAAQQ,KAAK,kCAAmCuL,EAAIN,SACpD,IAAMU,QAAa5D,EAAO4D,KAAKJ,EAAIN,SACnCzL,QAAQQ,KAAK,aAAc2L,EAAM9B,GACjC,IAAMnN,QAAaqL,EAAO6D,SAAS/B,GACnCrK,QAAQQ,KAAK,mBAAoBtD,GACjCA,EAAKmB,KAAOgM,EACZ,IAAMY,QACmC,OAD/Be,QACF,EAAAK,EAAAA,eAAcN,EAAID,SAAU5O,SAAK,EADtB8O,EAEhBd,UAMH,OALAtC,EAAYmD,EAAID,SAASrP,IAAMiI,IAAIyG,gBAAgBF,GACnDjL,QAAQQ,KACN,0BACAoI,EAAYmD,EAAID,SAASrP,KAEpBmM,EAAYmD,EAAID,SAASrP,GAOpC,CAAE,MAAOsD,GACPC,QAAQC,MAAM,sBAAuBF,EACvC,CACF,IAAC,gBA/CsBG,GAAA,OAAAsD,EAAA1G,MAAA,KAAAC,UAAA,KA+GVuP,GA9DajT,EAAAA,cAAA,eAAAgL,GAAA,EAAAlI,EAAArD,UAAG,UAC3ByT,EACAC,EACA1C,EACAd,EACAyD,GAEA,IAAK,IAADC,EACIX,EAAMO,EAAaC,EAAaC,EAAQ1C,GAExC8B,GADKW,EAAY9P,GACTsP,EAAIH,MAAMe,QAAO,SAAA5Q,GAAC,MAAU,OAANA,CAAU,KAC9CiE,QAAQQ,KACN,gBACA+L,EACAC,EACA1C,EACAiC,GAEiC,OAAlBW,EAAAH,EAAYK,SAAZF,EAAoB9G,YAArC,IAoBMiG,QAAgBlJ,QAAQW,IAC5ByI,EAAIc,OAAOxP,KAAI,SAAAwM,GAAK,OAClBD,EACEC,GACA,SAAA0B,GACEvL,QAAQQ,KAAK,iBAAkBqJ,EAAMpN,GAAI8O,GACrCvC,GAAIA,EAAGuC,EACb,GACAzB,EACD,KAGL9J,QAAQQ,KAAK,UAAWqL,EAASD,EAAOG,EAAIN,SAC5C5C,UACME,EAAaC,GACnB+C,EAAIH,MAAQA,EACZG,EAAIF,QAAUA,EACdE,EAAID,SAAWS,QACTZ,EAAWI,EACnB,CAAE,MAAOhM,GACPC,QAAQC,MAAM,sBAAuBF,EACvC,CACF,IAAC,gBA5DyBM,EAAAU,EAAAiF,EAAAC,EAAAO,GAAA,OAAAnC,EAAAvH,MAAA,KAAAC,UAAA,KA8DD1D,EAAAA,aAAG,SAC1BkT,EACAC,EACA1C,GACI,IAADgD,EAAAC,EAAAC,EAAAC,EAAAC,EACH,QAAwB3G,KAAT,MAAXgG,OAAW,EAAXA,EAAa9P,MAA0B,MAAN+P,OAAM,EAANA,EAAQ1F,QAAS,EACpD,MAAO,CAAC2E,QAAS,GAAIoB,OAAQ,GAAIjB,MAAO,IAC1C,IAAM3B,EAAYsC,EAAY9P,GAAE,IAAI8P,EAAYjH,MACjC6E,EAAYoC,EAApBK,OAIDvC,EAAYJ,GAHF,aAAsB,MAARE,OAAQ,EAARA,EAAUvE,cAAe,GAAC,MAC9C,MAARuE,OAAQ,EAARA,EAAUG,SAAU,QAGhB6C,EAEJxI,OAAO8F,UAAU2C,oBAAoBvI,WACjCwI,EACI,MAARlD,GAAAA,EAAUmD,MAA4B,IAApBnD,EAASmD,KAAK,GAC5BnD,EAASmD,KACNX,QAAO,SAAA5Q,GAAC,MAAU,KAANA,CAAQ,IACpBsB,KAAI,SAAAtB,GAAC,OACJA,EACGwR,OACAC,QAAQ,YAAa,IACrBD,MAAM,IAEb,GACAV,EAAe,MAANL,OAAM,EAANA,EACXnP,KAAI,SAAAoQ,GAAK,IAAAC,EAAA,OAAS,MAALD,GAAY,OAAPC,EAALD,EAAO5D,YAAK,EAAZ6D,EAAcrQ,KAAI,SAAAsQ,GAAC,OAAAnV,OAAAC,OAAA,GAASkV,EAAE,CAACF,MAAAA,GAAK,GAAG,IACrDG,OACAjB,QAAO,SAAA5Q,GAAC,OAAIA,CAAC,IACb4Q,QAAO,SAAA5Q,GAAC,OAAKA,EAAE8E,SAAS,IACrB+K,GACE,MAANiB,OAAM,EAANA,EACIxP,KAAI,SAAAtC,GAAC,IAAA8S,EAAAC,EAAA,MAAI,CACT,MACkB,MAAD/S,OAAC,EAADA,EAAG0B,IAAE,KAAK,MAAD1B,OAAC,EAADA,EAAGmP,UAAQ,aAClC,MAADnP,GAAW,OAAV8S,EAAD9S,EAAGoP,eAAQ,EAAX0D,EAAajI,cAAe,GAAC,MAC1B,MAAD7K,GAAW,OAAV+S,EAAD/S,EAAGoP,eAAQ,EAAX2D,EAAaxD,SAAU,OAC5B,IACAsD,SAAU,GACTG,EAAiB,MAANvB,OAAM,EAANA,EAAQwB,QAAO,SAACvS,EAAGgS,GAAW,IAADQ,EAC5C,OAAU,IAANxS,EAAmBA,IAEH,OAAbwS,EAACR,EAAMb,SAANqB,EAAcC,MACxB,IAAG,GACGC,EAAiB,MAAN3B,OAAM,EAANA,EAAQwB,QAAO,SAACvS,EAAGgS,GAAW,IAADW,EAC5C,OAAU,IAAN3S,EAAmBA,IAEH,OAAb2S,EAACX,EAAMb,SAANwB,EAAcC,cACxB,IAAG,GACGC,EAAcP,EAAW,aAAe,GACxCQ,EAAWR,EAAW,CAAC,OAAQO,GAAe,GAC9CE,EAAcL,EAAW,aAAe,GACxCM,EAAWN,EAAW,CAAC,OAAQK,GAAe,GAC9CE,GAAyB,MAAXnC,GAAmB,OAARO,EAAXP,EAAaK,aAAM,EAAnBE,EAAqB4B,cAAe,OAClDC,EAAK,WAAoB,MAARxE,OAAQ,EAARA,EAAUyE,QAAS,MAAI,MACpC,MAARzE,OAAQ,EAARA,EAAU0E,SAAU,KAAG,WACdH,EACLI,GACE,MAANjC,OAAM,EAANA,EAAQxP,KAAI,SAACtC,EAAGyH,GAAW,IAADuM,EAAAC,EAAAC,EAAAC,EAClBC,EACJ,IAAI3M,EAAK,mBACN,MAADzH,OAAC,EAADA,EAAGoP,SAASiF,QAAS,GAAC,QAChBC,UACL,MAADtU,GAAW,OAAVgU,EAADhU,EAAGoP,eAAQ,EAAX4E,EAAaO,OAAQ,MAADvU,OAAC,EAADA,EAAGwU,WAHzB,wBAMAZ,EAAK,KACAnM,EAAK,IAENgN,EAAK,IAAOhN,EAAK,oBACpB,MAADzH,OAAC,EAADA,EAAGoP,SAASiF,QAAS,GAAC,QAChBC,UACL,MAADtU,GAAW,OAAViU,EAADjU,EAAGoP,eAAQ,EAAX6E,EAAaM,OAAQ,MAADvU,OAAC,EAADA,EAAGwU,WACxB,0BAA0B/M,EAAK,IAE5B+K,EAAO4B,EAAQ,OAASK,EAG5B,OAFK,MAADzU,GAAQ,OAAPkU,EAADlU,EAAG0S,QAAa,OAARwB,EAARA,EAAUrC,SAAVqC,EAAkBf,QAAOX,EAAO4B,GAC/B,MAADpU,GAAQ,OAAPmU,EAADnU,EAAG0S,QAAa,OAARyB,EAARA,EAAUtC,SAAVsC,EAAkBb,gBAAed,EAAOiC,GACrCjC,CACT,MAAM,GAEFkC,GACE,MAAN5C,OAAM,EAANA,EAAQF,QAAO,SAAA5Q,GAAC,IAAA2T,EAAA,OAAwC,KAAnC,MAAD3T,GAAQ,OAAP2T,EAAD3T,EAAG0R,QAAa,OAARiC,EAARA,EAAU9C,aAAM,EAAhB8C,EAAkBrB,cAAsB,IACzDvH,SAAU,EACT6I,GACE,MAAN9C,OAAM,EAANA,EAAQF,QAAO,SAAA5Q,GAAC,IAAA6T,EAAA,OAAgC,KAA3B,MAAD7T,GAAQ,OAAP6T,EAAD7T,EAAG0R,QAAa,OAARmC,EAARA,EAAUhD,aAAM,EAAhBgD,EAAkB1B,MAAc,IAAEpH,SAAU,EAoB5D+I,IAlBG,MAANhD,GAIG,OAJGE,EAANF,EACGxP,KAAI,SAAC5B,EAAGM,GAAO,IAAD+T,EACd,IAAuC,KAA5B,OAAPA,EAAArU,EAAEgS,QAAa,OAARqC,EAAPA,EAASlD,aAAM,EAAfkD,EAAiBzB,eAAwB,MAAM,KAAMtS,EAAC,GAE5D,UAAE,EAJHgR,EAKGJ,QAAO,SAAA5Q,GAAC,OAAIA,CAAC,IACduB,KAAK,MAAO,IAAE,YACLmS,EAAY,WAAWjB,EAWF,SAT1B,MAAN3B,GAIG,OAJGG,EAANH,EACGxP,KAAI,SAAC5B,EAAGM,GAAO,IAADgU,EACd,IAA+B,KAApB,OAAPA,EAAAtU,EAAEgS,QAAa,OAARsC,EAAPA,EAASnD,aAAM,EAAfmD,EAAiB7B,OAAgB,MAAM,KAAMnS,EAAC,GAEpD,MACgB,OADdiR,EAJHA,EAKGL,QAAO,SAAA5Q,GAAC,OAAIA,CAAC,UAAC,EALjBiR,EAMG1P,KAAK,MAAO,IAAE,YACNqS,EAAY,WAAWrB,GAuBrC,OApBAQ,EAAWkB,KAAKH,GAoBT,CAACpE,QAnBe,GAAAwE,QAAA,EAAAC,EAAApX,SAClB8S,GAAK,CACR,QACQ,MAARzB,GAA0B,OAAlB8C,EAAR9C,EAAUgG,uBAAgB,EAA1BlD,EAA4BpI,aAAc,KAC1C,WACAsI,EACA,kBAAkB,GACf2B,EAAWxR,KAAK,OACnB,WACQ,MAAR6M,OAAQ,EAARA,EAAUiG,SAAU,WACpB,YACA,eAAY,EAAAF,EAAApX,SACTuU,GACAoB,EACAF,EAAS,CACZ,MACQ,MAARpE,GAAmB,OAAX+C,EAAR/C,EAAUkG,gBAAS,EAAnBnD,EAAqBrI,aAAc,KAAK,GACvBwF,IAEFwC,OAAAA,EAAQjB,MAAAA,EAAOvB,UAAAA,EAClC,GAEaqB,EAAUrS,EAAAA,WAAG,SACxBkT,EACAzC,GACI,IAADwG,EACH,QAAwB/J,KAAT,MAAXgG,OAAW,EAAXA,EAAa9P,IAAkB,MAAO,GAC1C,IAAMwN,EAAYsC,EAAY9P,GAAE,IAAI8P,EAAYrC,SACzCC,EAAYoC,EAAZpC,SAIDE,EAAYJ,GAHF,aAAsB,MAARE,OAAQ,EAARA,EAAUvE,cAAe,GAAC,MAC9C,MAARuE,OAAQ,EAARA,EAAUG,SAAU,QAGhB6C,EAAUxI,OAAO8F,UAAU2C,oBAAoBvI,WAC/CwI,EACI,MAARlD,GAAAA,EAAUmD,MAA4B,IAApBnD,EAASmD,KAAK,GAC5BnD,EAASmD,KACNX,QAAO,SAAA5Q,GAAC,MAAU,KAANA,CAAQ,IACpBsB,KAAI,SAAAtB,GAAC,OACJA,EACGwR,OACAC,QAAQ,YAAa,IACrBD,MAAM,IAEb,GACAgD,EAAyBzG,EAO3B,GANA,CACE,MACA0G,GAAoB,MAARrG,OAAQ,EAARA,EAAUiF,QAAS,GAC/B,MACAoB,GAAoB,MAARrG,OAAQ,EAARA,EAAUmF,OAAkB,MAAX/C,OAAW,EAAXA,EAAagD,YAsBhD,MAnBa,CACX,KAAK,GACYtF,EACjB,QACQ,MAARE,GAA0B,OAAlBmG,EAARnG,EAAUgG,uBAAgB,EAA1BG,EAA4BzL,aAAc,KAC1C,WACAsI,EACA,kBAAkB,WACD,MAARhD,OAAQ,EAARA,EAAUyE,QAASrC,EAAYqC,OAAK,MACnC,MAARzE,OAAQ,EAARA,EAAU0E,SAAUtC,EAAYsC,QAElC,WACQ,MAAR1E,OAAQ,EAARA,EAAUiG,SAAU,WACpB,YACA,cAAYH,OACTM,GAAsB,EAADL,EAAApX,SACrBuU,GAAS,IACKhD,GAGrB,EAEamG,EAAWnX,EAAAA,YAAG,SAACoX,EAAiBC,GAC3C,IAAMpB,EAAMD,SAASoB,EAAS,IAC1BE,EAAUtB,SAASC,EAAM,GAAI,IAC7BsB,EAAavB,SAASC,EAAgB,GAAVqB,EAAc,IAM9C,OALkC,IAA9BA,EAAQ9L,WAAWiC,SAAc6J,EAAU,IAAMA,GAChB,IAAjCC,EAAW/L,WAAWiC,SACxB8J,EAAa,IAAMA,GAGf,IADcF,EAAQ,GAAK,OACTC,GAFND,EAAQ,IAAM,KAEcE,CAChD,EAEaC,EAAqBxX,EAAAA,sBAAG,SACnCmT,EACAsE,GAOA,IALA,IAAIC,EAGAtD,EAFAuD,EAAa,EACbhS,EAAS,OAGcuH,KAAT,OAAX0K,EAAAF,QAAW,EAAXE,EAAaxU,KAAkB,CAAC,IAADwU,EAAAC,EAAAC,EAGpC,GAFA1D,EAAQjB,EAAOwE,GAEXA,EAAaxE,EAAO1F,OAAS,EAE/B,MADA9G,QAAQC,MAAM,SAAUuM,EAAQwE,GAC1B,iBAGR,QAAkBzK,KAAT,OAAL2K,EAAAzD,QAAK,EAALyD,EAAOzU,IAIX,IAAqC,KAA5B,OAAL0U,EAAA1D,IAAa,OAAR0D,EAALA,EAAOvE,aAAM,EAAbuE,EAAe9C,eAMnB0C,EADmBtD,EAAM5D,MACCmE,QAAO,SAACvS,EAAGoO,GAA2B,IAADuH,EAAAC,EAC7D,OAAI5V,EAAEgB,GAAWhB,GAEjBA,KACQ,MAALoO,GAAe,OAAVuH,EAALvH,EAAOM,eAAQ,EAAfiH,EAAiB9B,OAAY,MAALzF,OAAK,EAALA,EAAO0F,aAC1B,MAAL1F,GAAe,OAAVwH,EAALxH,EAAOM,eAAQ,EAAfkH,EAAiBjC,QAAS,KACpB0B,EAAwBjH,GAEjC7K,EAASvD,EACFA,EACT,GAAG,GACHuV,SAhBEA,SAJAA,GAqBJ,CACA,MAAO,CAAChS,OAAAA,EAAQyO,MAAAA,EAAO6D,YAAaN,EAAYD,YAAAA,EAClD,EAEaQ,EAAyBlY,EAAAA,0BAAG,SACvCmT,EACAgF,EACA3H,GACI,IAAD4H,EAAAC,EAIGC,EAAeH,KAFb,MAAL3H,GAAe,OAAV4H,EAAL5H,EAAOM,eAAQ,EAAfsH,EAAiBnC,OAAY,MAALzF,OAAK,EAALA,EAAO0F,aAC1B,MAAL1F,GAAe,OAAV6H,EAAL7H,EAAOM,eAAQ,EAAfuH,EAAiBtC,QAAS,IAC0B,EACjDwC,EAAOf,EAAsBrE,EAAQmF,GAE3C,OADA3R,QAAQQ,KAAK,eAAgBmR,EAAcC,GACpCA,CACT,EAEaC,EAAYxY,EAAAA,aAAG,SAACmT,GAY3B,OAXaA,EAAOwB,QAAO,SAACvS,EAAGgS,GAAW,IAADqE,EACjC5W,EAAe,OAAd4W,EAAGrE,EAAM5D,YAAK,EAAXiI,EAAa9D,QAAO,SAAC+D,EAAKlI,GAAW,IAADmI,EAAAC,EAI5C,OAHAF,KACQ,MAALlI,GAAe,OAAVmI,EAALnI,EAAOM,eAAQ,EAAf6H,EAAiB1C,OAAY,MAALzF,OAAK,EAALA,EAAO0F,aAC1B,MAAL1F,GAAe,OAAVoI,EAALpI,EAAOM,eAAQ,EAAf8H,EAAiB7C,QAAS,EAE/B,GAAG,GACH,OAAKlU,EACDO,EAAIP,EAAUO,EACdP,EAAIO,EAAUP,OAAlB,EAFeO,CAGjB,GAAG,EAEL,EAE4BpC,EAAAA,gBAAA,eAAAiL,GAAA,EAAAnI,EAAArD,UAAG,UAC7B0T,EACAsE,EACA9H,GACI,IAADkJ,EACHC,EACEtB,EAAsBrE,EAAQsE,GADzB9R,EAAMmT,EAANnT,OAAQyO,EAAK0E,EAAL1E,MAAO6D,EAAWa,EAAXb,YAAaP,EAAWoB,EAAXpB,YAE7BqB,EACJtB,EACA9R,EACAqT,YAAsB,MAAXtB,OAAW,EAAXA,EAAa5G,SAASiF,QAAS,GACtCkD,EAAYT,EAAarF,GAC/BxM,QAAQQ,KACN,yBACA4R,EACAtB,EACA9R,EACA+R,EAAY5G,SAASiF,MACV,MAAX2B,OAAW,EAAXA,EAAatU,IAEf,IAAM8V,EAAM,eAAAhO,GAAA,EAAApI,EAAArD,UAAG,YACb,IAAMiC,EAAI6O,EAAYmH,EAAa/H,GAAI,GACvC,OAAO,IAAIrG,SAAQ,SAAAC,GACjB7H,EAAEnD,KAAK,WAAD,IAAAiO,GAAA,EAAA1J,EAAArD,UAAC,UAAMmC,GACX2H,EAAI3H,GACJ,IACE,IAAM2W,EAAOL,EACX/E,EACAxN,EACA+R,GAEEa,UACIhI,EAAYgI,EAAKb,aAAa,WAAO,IAAG,GAElD,CAAE,MAAOhR,GACPC,QAAQC,MAAM,2BAA4BF,EAC5C,CACF,IAAG,OAAF,SAAAwH,GAAA,OAAA1B,EAAA/I,MAAA,KAAAC,UAAE,CAAF,CAdM,GAeT,GACF,IAAC,kBAnBW,OAAAwH,EAAAzH,MAAA,KAAAC,UAAA,KAqBZ,MAAO,CACLyV,SAF8BjM,KAAT,MAAXwK,OAAW,EAAXA,EAAatU,UAAyB8V,IAAW,KAG3DzB,gBAAiBsB,EACjBlE,MAAY,MAALT,GAAa,OAARyE,EAALzE,EAAOb,aAAM,EAAbsF,EAAehE,MACtB6C,YAAAA,EACAuB,UAAAA,EACAtT,OAAAA,EACAsS,YAAAA,EAEJ,IAAC,gBAlD2B7K,EAAAY,EAAAC,GAAA,OAAAhD,EAAAxH,MAAA,KAAAC,UAAA,IAkD1B,4B,6GCvVA,K,0DArNyD,SAAAjC,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,UAAAkB,EAAAlB,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,C,mKAN3D+M,EAAArM,EAAAqM,GAAmDnQ,EAAAvB,EAAAuB,GAMnDsa,EAAAxW,EAAAwW,GAI0BpZ,EAAAA,cAAA,eAAA6C,GAAA,EAAAC,EAAArD,UAAG,UAC3B+Q,EACAoB,GAGE,IAAMT,QAAgB7F,OAAO8F,UAAUC,QAAQC,eACzCE,QAAYL,EAAQM,mBAAmBjB,EAAM3L,SAAU,CAC3DwU,QAAQ,IAEJzI,EAAYJ,EAAMpN,GAAE,IAAIwO,EAAK5M,KAC7BsU,QAAmB9H,EAAIG,cAAcf,EAAQ,CACjDyI,QAAQ,IAEJE,QAAiBD,EAAWE,iBAQlC,aANMD,EAASE,MAAM7H,SACf2H,EAASG,QACVlJ,EAAMmJ,eACTnJ,EAAMmJ,cAAe,QACf,EAAApU,EAAAA,WAAUiL,IAEX8I,CASX,IAAC,gBA9ByB/V,EAAAC,GAAA,OAAAX,EAAAY,MAAA,KAAAC,UAAA,KAgCF1D,EAAAA,YAAA,eAAAiD,GAAA,EAAAH,EAAArD,UAAG,UACzB+Q,GAEA,IACE7J,QAAQQ,KAAK,WAAYqJ,EAAMpN,IAE/B,IAAMwO,QAAagI,EAAkBpJ,GACrC,GAAoB,kBAAToB,EAAmB,OAAOA,EAErC,IAAKA,EAAM,KAAM,gBAGjB,OADYvG,IAAIyG,gBAAgBF,EAElC,CAAE,MAAOlL,GAEP,MADAC,QAAQC,MAAM,iBAAkBF,GAC1BA,CACR,CACF,IAAC,gBAjBuBxC,GAAA,OAAAjB,EAAAQ,MAAA,KAAAC,UAAA,KAhCjB,IAmDMkW,EAAiB5Z,EAAAA,kBAAA,eAAAiH,GAAA,EAAAnE,EAAArD,UAAG,UAC/B+Q,GAEA,IACE,IAAMI,EAAYJ,EAAMpN,GAAE,IAAIoN,EAAMK,SAE5BM,QAAgB7F,OAAO8F,UAAUC,QAAQC,eACzCE,QAAYL,EAAQM,mBAAmBjB,EAAM3L,SAAU,CAC3DwU,QAAQ,IAEJC,QAAmB9H,EAAIG,cAAcf,GAE3C,aAD6B,MAAV0I,OAAU,EAAVA,EAAYzH,SASnC,CAAE,MAAOnL,GACPC,QAAQC,MAAM,wBAAyBF,EACzC,CACF,IAAC,gBAvB6BlB,GAAA,OAAAyB,EAAAxD,MAAA,KAAAC,UAAA,KAwB1BmW,EAAc,CAAC,EACfC,EAAe,CAAC,EAChBC,EAAiB,CAAC,EACTC,EAAcha,EAAAA,eAAA,eAAAmK,GAAA,EAAArH,EAAArD,UAAG,UAC5BoR,EACAoJ,EACAC,GAQA,GANAvT,QAAQQ,KACN,QACA0J,EACAqJ,EACAH,EAAelJ,IAEbiJ,EAAajJ,GACf,OAAOiJ,EAAajJ,GAAUtS,MAAK,kBACjCyb,EAAenJ,EAAUoJ,EAASC,EAAU,IAG9CJ,EAAajJ,GAAY,IAAIvH,QAAQ,WAAD,IAAAuB,GAAA,EAAA/H,EAAArD,UAAC,UAAO0a,EAASC,GACnD,IACE,IAAOzW,SAAmB,EAAA0W,EAAAA,iBAAnB1W,UACH2W,QAAc3W,EAAUkN,GACxB0J,EAAMD,EAAMtW,KAAI,SAAAtB,GAAC,OAAIA,EAAEmB,IAAI,IAC3B2W,EAAUD,EAAI5F,QAChB,SAACvS,EAAGM,GAAC,OAAK+X,EAAcrY,EAAGsY,WAAWC,KAAKjY,GAAG,GAC9C,IAAIgY,YAEFb,EAAYhJ,GACdgJ,EAAYhJ,IAAayJ,EAAM7M,OAC5BoM,EAAYhJ,GAAYyJ,EAAM7M,OACnC9G,QAAQQ,KACN,oBACA0J,EACA2J,EAAQ/M,OACR6M,EAAM7M,OACN8M,EAAI9M,QAEN9G,QAAQQ,KACN,+BACA0S,EAAYhJ,IAEd,IAAI+J,GAAQ,EAAAC,EAAAA,uBAAsBL,EAAQM,QAG1CF,EAAM5V,KAAO6L,EACb,IAAMkK,EAAK,IAAIC,WACfD,EAAGE,QAAM,EAAAnY,EAAArD,UAAG,YAEV,IACE,IAAMoE,EAAOkX,EAAGG,OAAO/G,QAAQ,oBAAqB,UAC9CgH,EAAAA,WAAWC,WACfnB,EAAQ9F,QAAQ,UAAW,IAC3BtQ,EACA,UAEFsW,EAAQ,KACV,CAAE,MAAOzT,GACP,IAAME,GAAY,MAAHF,OAAG,EAAHA,EAAelC,UAAWkC,EACzCC,QAAQC,MAAM,gBAAiBA,GAC/BwT,EAAIxT,EACN,CACF,IACAmU,EAAGM,cAAcT,EACnB,CAAE,MAAOlU,GACPoT,EAAajJ,GAAY,KACzBlK,QAAQC,MACN,iBACI,MAAHF,OAAG,EAAHA,EAAelC,UAAWkC,GAE7B0T,GAAQ,MAAH1T,OAAG,EAAHA,EAAelC,UAAWkC,EACjC,CACF,IAAG,OAAF,SAAAM,EAAAU,GAAA,OAAAmD,EAAApH,MAAA,KAAAC,UAAE,CAAF,CArDoC,UAsDjCoW,EAAajJ,GACfkJ,EAAelJ,GACjBkJ,EAAelJ,GAAU8F,KAAKuD,GAC3BH,EAAelJ,GAAY,CAACqJ,GACjCJ,EAAajJ,GAAY,IAC3B,IAAC,gBA3E0BhK,EAAAC,EAAAC,GAAA,OAAAoD,EAAA1G,MAAA,KAAAC,UAAA,KA6Ed+W,EAAaza,EAAAA,cAAG,SAC3Bsb,EACAC,GAEA,IAAMC,EAAM,IAAId,WAAWY,EAAQG,WAAaF,EAAQE,YAGxD,OAFAD,EAAI7Y,IAAI,IAAI+X,WAAWY,GAAU,GACjCE,EAAI7Y,IAAI,IAAI+X,WAAWa,GAAUD,EAAQG,YAClCD,CACT,EAE2Bxb,EAAAA,eAAG,CAC5B0b,WAAW,WAAD,IAAAC,GAAA,EAAA7Y,EAAArD,UAAE,mBACV,IAAI6J,QAAQ,WAAD,IAAA2B,GAAA,EAAAnI,EAAArD,UAAC,UAAM0a,GAEd,IAAMyB,EAAY9d,SAASW,eACzB,aAEO,MAATmd,GAAAA,EAAWC,QACF,MAATD,GAAAA,EAAWE,iBAAiB,UAAS,EAADhZ,EAAArD,UAAE,YAAa,IAADsc,EAChD,GAAa,MAATH,GAAgB,OAAPG,EAATH,EAAWrJ,QAAXwJ,EAAkBtO,OAAQ,CAAC,IAADuO,EACtBpK,EAAgB,MAATgK,GAAgB,OAAPI,EAATJ,EAAWrJ,YAAK,EAAhByJ,EAAmB,GAC1BpB,EAAQ,CACZhJ,KAAAA,EACA5T,KAAU,MAAJ4T,OAAI,EAAJA,EAAM5T,KACZiO,MAAW,MAAJ2F,OAAI,EAAJA,EAAM5M,KACbA,KAAU,MAAJ4M,OAAI,EAAJA,EAAM5M,KACZ+G,UAAW,QACXkQ,KAAU,MAAJrK,OAAI,EAAJA,EAAMqK,KACZC,YAAgB,MAAJtK,OAAI,EAAJA,EAAM5M,OAAW,MAAJ4M,OAAI,EAAJA,EAAMqK,OAEjC,OAAO9B,EAAQS,EACjB,CACF,IAqBJ,IAAC,gBAAAjO,GAAA,OAAA1B,EAAAxH,MAAA,KAAAC,UAAA,EAzCW,GAyCV,6BAAAiY,EAAAlY,MAAA,KAAAC,UAAA,EA1CO,GA2CX,4B,qHCvHA,K,6RAjFwC,SAAAjC,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,gVAnB1CvC,OAAAgd,KAAAC,GAAAC,SAAA,SAAA3P,GAAA,YAAAA,GAAA,eAAAA,IAAAvN,OAAAmd,UAAA9Z,eAAAC,KAAA8Z,EAAA7P,IAAAA,KAAA1M,GAAAA,EAAA0M,KAAA0P,EAAA1P,IAAAvN,OAAAkD,eAAArC,EAAA0M,EAAA,CAAA8P,YAAA,EAAAva,IAAA,kBAAAma,EAAA1P,EAAA,QACAvN,OAAAgd,KAAAM,GAAAJ,SAAA,SAAA3P,GAAA,YAAAA,GAAA,eAAAA,IAAAvN,OAAAmd,UAAA9Z,eAAAC,KAAA8Z,EAAA7P,IAAAA,KAAA1M,GAAAA,EAAA0M,KAAA+P,EAAA/P,IAAAvN,OAAAkD,eAAArC,EAAA0M,EAAA,CAAA8P,YAAA,EAAAva,IAAA,kBAAAwa,EAAA/P,EAAA,QACAvN,OAAAgd,KAAAO,GAAAL,SAAA,SAAA3P,GAAA,YAAAA,GAAA,eAAAA,IAAAvN,OAAAmd,UAAA9Z,eAAAC,KAAA8Z,EAAA7P,IAAAA,KAAA1M,GAAAA,EAAA0M,KAAAgQ,EAAAhQ,IAAAvN,OAAAkD,eAAArC,EAAA0M,EAAA,CAAA8P,YAAA,EAAAva,IAAA,kBAAAya,EAAAhQ,EAAA,QACAvN,OAAAgd,KAAAQ,GAAAN,SAAA,SAAA3P,GAAA,YAAAA,GAAA,eAAAA,IAAAvN,OAAAmd,UAAA9Z,eAAAC,KAAA8Z,EAAA7P,IAAAA,KAAA1M,GAAAA,EAAA0M,KAAAiQ,EAAAjQ,IAAAvN,OAAAkD,eAAArC,EAAA0M,EAAA,CAAA8P,YAAA,EAAAva,IAAA,kBAAA0a,EAAAjQ,EAAA,QACAvN,OAAAgd,KAAAS,GAAAP,SAAA,SAAA3P,GAAA,YAAAA,GAAA,eAAAA,IAAAvN,OAAAmd,UAAA9Z,eAAAC,KAAA8Z,EAAA7P,IAAAA,KAAA1M,GAAAA,EAAA0M,KAAAkQ,EAAAlQ,IAAAvN,OAAAkD,eAAArC,EAAA0M,EAAA,CAAA8P,YAAA,EAAAva,IAAA,kBAAA2a,EAAAlQ,EAAA,QAeAmQ,EAA0C,SAAAnb,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAA1CU,CAAAia,GAA0C/d,EAAAvB,EAAAuB,GAQxBge,EAAAA,OAAlB,IAEW/b,EAAyBf,EAAAA,SAAG,CACrCoH,KAAM,CACJhE,GAAI,OACJ4B,KAAM,QAER+X,gBAAiB,CAAC,EAClBC,OAAAA,EAAAA,OACAC,YAAa,GACbC,iBAAkB,CAAC,GAGIld,EAAAA,aAAA,eAAA6C,GAAA,EAAAC,EAAArD,UAAG,YAC1B,IAAK,IAAD0d,EACFpc,EAASqG,WAAa,EAAAgW,EAAAA,oBAAmB7X,EAAAA,UAAWd,EAAAA,aACpD,IAAM4Y,GACiB,OAArBF,EAAAN,EAAWS,iBAAU,EAArBH,EAAuBhJ,QAAQ,YAAa,MAC5C,gBACIoJ,EAAKV,EAAWW,QAAU,aAC1BC,EAAcZ,EAAWa,OAAS,MACxC/W,QAAQQ,KAAK,cAAesW,GAC5B,IAAME,EAAWN,EAAYE,EAAKE,EAE5BG,QAAgB,EAAA5X,EAAAA,SAAQ2X,GAE9B,IAAKC,IAAWA,EAAOC,aAAc,CACnC,IAAMC,EAAkB,CACtB1a,GAAIua,EACJE,aAAcJ,EACdvR,UAAU,EACVmR,UAAAA,EACApY,WAAW,IAAIC,MAAOC,UACtB4Y,MAAON,EACPF,GAAAA,EACAS,SAAS,OAEXrX,QAAQQ,KAAK2W,SACP,EAAAvY,EAAAA,WAAUuY,EAClB,CACAnX,QAAQQ,KAAK,eAAgBpG,SAErB,EAAAkd,EAAAA,sBAEV,CAAE,MAAOvX,GACPC,QAAQC,MAAM,qBAAsBF,EACtC,CACF,IAAC,kBAlCwB,OAAA7D,EAAAY,MAAA,KAAAC,UAAA,KAoCG1D,EAAAA,gBAAG,WAAO,EACfA,EAAAA,WAAG,SAACoD,GAAgB,EACnBpD,EAAAA,YAAG,WAAO,EACXA,EAAAA,WAAG,WAAO,EACRA,EAAAA,aAAG,WAAO,EAELA,EAAAA,kBAAG,WAAO,EACfA,EAAAA,aAAA,eAAAiD,GAAA,EAAAH,EAAArD,UAAG,UAAOye,GAAkB,IAADC,EAAAC,EAC5C5N,QAAc,EAAA6N,EAAAA,OAAMH,GAE1B,OADAvX,QAAQQ,KAAK,UAAWqJ,GACjB,CACL2I,IAAK3I,EAAM8N,UACXrS,MAAOuE,EAAMxL,KACbkX,WAAY1L,EAAM+N,SAClBnb,GAAIoN,EAAM+N,SACV1N,SAAUL,EAAM+B,MAAM,GAAGvN,KACzB+G,UAAW,KACXL,YACE8E,EAAM+B,QAAoB,OAAX4L,EAAA3N,EAAM+B,YAAK,EAAX4L,EAAa1Q,SAAU,SAAWP,EACnDqF,MACE/B,EAAM+B,QAAoB,OAAX6L,EAAA5N,EAAM+B,YAAK,EAAX6L,EAAa3Q,SAAU,EAClC+C,EAAM+B,WACNrF,EAEV,IAAC,gBAjBwB3J,GAAA,OAAAN,EAAAQ,MAAA,KAAAC,UAAA,IAiBvB,4B,2FCGA,K,oSAvGFvE,OAAAgd,KAAAS,GAAAP,SAAA,SAAA3P,GAAA,YAAAA,GAAA,eAAAA,IAAAvN,OAAAmd,UAAA9Z,eAAAC,KAAA8Z,EAAA7P,IAAAA,KAAA1M,GAAAA,EAAA0M,KAAAkQ,EAAAlQ,IAAAvN,OAAAkD,eAAArC,EAAA0M,EAAA,CAAA8P,YAAA,EAAAva,IAAA,kBAAA2a,EAAAlQ,EAAA,QACAvN,OAAAgd,KAAAqC,GAAAnC,SAAA,SAAA3P,GAAA,YAAAA,GAAA,eAAAA,IAAAvN,OAAAmd,UAAA9Z,eAAAC,KAAA8Z,EAAA7P,IAAAA,KAAA1M,GAAAA,EAAA0M,KAAA8R,EAAA9R,IAAAvN,OAAAkD,eAAArC,EAAA0M,EAAA,CAAA8P,YAAA,EAAAva,IAAA,kBAAAuc,EAAA9R,EAAA,QACAvN,OAAAgd,KAAAsC,GAAApC,SAAA,SAAA3P,GAAA,YAAAA,GAAA,eAAAA,IAAAvN,OAAAmd,UAAA9Z,eAAAC,KAAA8Z,EAAA7P,IAAAA,KAAA1M,GAAAA,EAAA0M,KAAA+R,EAAA/R,IAAAvN,OAAAkD,eAAArC,EAAA0M,EAAA,CAAA8P,YAAA,EAAAva,IAAA,kBAAAwc,EAAA/R,EAAA,QAUO,IAAMgS,EAAc1e,EAAAA,eAAA,eAAA6C,GAAA,EAAAC,EAAArD,UAAG,UAC5B+Q,GAEA,GAAKA,EAAgBmJ,aACnB,IAEE,YADA,EAAAgF,EAAAA,eAAcnO,EAAMpN,GAAIoN,EAAM3L,SAEhC,CAAE,MAAO6B,GAET,CAEF,GACG8J,EAAiB9E,UACjB8E,EAAwB5E,iBACxB4E,EAAsB7E,cAHzB,CAKE,IAAMiT,QAAyC,EAAA1U,EAAAA,kBAC7CsG,EAAMpN,UAEFkG,QAAQW,IAAI2U,EAAa5a,IAAI0a,GAErC,MAEF,IAAC,gBAvB0Bnb,GAAA,OAAAV,EAAAY,MAAA,KAAAC,UAAA,KAyBdmb,EAAW7e,EAAAA,YAAA,eAAAiD,GAAA,EAAAH,EAAArD,UAAG,UAAOsG,GAIhC,IAHA,IAAM+Y,QAAoC,EAAA5U,EAAAA,kBACxCnE,EAAO3C,IAEAlB,EAAI,EAAGA,EAAI4c,EAAQrR,OAAQvL,UAE5Bwc,EAAeI,EAAQ5c,GAGjC,IAAC,gBATuBsB,GAAA,OAAAP,EAAAQ,MAAA,KAAAC,UAAA,KAgEXqb,GAtDmB/e,EAAAA,oBAAA,eAAAiH,GAAA,EAAAnE,EAAArD,UAAG,YACjC,IAeE,IAfG,IAADuf,EAEI/Y,SAAe6E,EAAAA,OAAO5E,aAAY,SAAA1E,GAAE,OACxCA,EACG2E,WAAW,QACXC,YACAC,MAAM,WAAY,KAAK,EAAA4Y,EAAAA,OAAK,IAC5B5Y,MAAM,WAAY,SAAU,MAC5BC,QAAQ,YAAa,OAAO,IAG3B4Y,EACgC,OADTF,cACdlU,EAAAA,OAAOvE,UAAUN,KACzB,OAD+B+Y,EADNA,EAE7BxY,WAAI,EAFyBwY,EAEvBhb,KAAI,SAAAtB,GAAC,OAAIA,EAAE+D,IAAI,IAEf/D,EAAI,EAAGA,EAAIwc,EAAczR,OAAQ/K,IAAK,CAC7C,IAAMqD,EAASmZ,EAAcxc,SACvBmc,EAAY9Y,EAEpB,CACA,IAAMoZ,SACE7V,QAAQW,IACZiV,EAAclb,IAAI,WAAD,IAAAmG,GAAA,EAAArH,EAAArD,UAAC,UAAMsG,GACtB,IAAM+Y,QAAoC,EAAA5U,EAAAA,kBACxCnE,EAAO3C,IAEHgc,SACE9V,QAAQW,IAAI6U,EAAQ9a,IAAI0a,KAE7BnK,OACAjB,QAAO,SAAA5Q,GAAC,OAAIA,CAAC,IAChB,OAAO0c,CACT,IAAC,gBAAAlb,GAAA,OAAAiG,EAAA1G,MAAA,KAAAC,UAAA,EAViB,MAYpB6Q,OACF5N,QAAQQ,KAAK,cAAegY,EAC9B,CAAE,MAAOzY,GACPC,QAAQC,MAAM,4BAA6BF,EAC7C,CACF,IAAC,kBAxC+B,OAAAO,EAAAxD,MAAA,KAAAC,UAAA,KA0CL1D,EAAAA,eAAA,eAAA6K,GAAA,EAAA/H,EAAArD,UAAG,UAC5B4f,EACAxO,GAEA,IAAML,QAAsB,EAAAxK,EAAAA,SAAQqZ,GAKpC,OAJA1Y,QAAQQ,KAAK,gBAAiBqJ,GACN,UAApBA,EAAMzE,YACRyE,EAAM2I,UAAa,EAAAjI,EAAAA,aAAYV,IAE1BuO,EAASvO,EAAOK,EACzB,IAAC,gBAV0BrL,EAAAqB,GAAA,OAAAgE,EAAApH,MAAA,KAAAC,UAAA,KAYN1D,EAAAA,SAAA,eAAAgL,GAAA,EAAAlI,EAAArD,UAAG,UAAO+Q,EAAcK,GAC3C,OAAOyO,cAAc9O,EAAM2I,IAAK3I,EAAMiH,gBAAiB5G,EACzD,IAAC,gBAFoB/J,EAAAC,GAAA,OAAAiE,EAAAvH,MAAA,KAAAC,UAAA,KAEnB,4B,2BC/BA,K,gHAxEyB1D,EAAAA,eAAG,WAE5B,IAAMuf,IACDjU,OAAOkU,OAASA,IAAIC,UACrBnU,OAAOoU,OACTtO,UAAUiM,UAAUsC,QAAQ,UAAY,EAC1C,GAAIJ,EAAS,MAAO,QAIpB,GAFmD,qBAA1BjU,OAAOsU,eAEjB,MAAO,UAatB,GATE,eAAeC,KAAKvU,OAAOwU,cAED,wCAEvBxU,OAAe,QACY,qBAAlBA,OAAOyU,QACbzU,OAAe,OAAE0U,kBAJZxU,WAOC,MAAO,eAGrB,IAAMyU,IAA+B3U,OAAOxN,SAASoiB,aAErD,OAAID,EAAa,8BAEDA,IAAU3U,OAAO6U,WAKhB7U,OAAO8U,OAEH,gBAInB9U,OAAO+U,WACuC,GAA9C/U,OAAO8F,UAAUiM,UAAUsC,QAAQ,OAEV,kBAGVrU,OAAO+U,UAAYd,MAAcjU,OAAOgV,IAErC,aAApB,EAjBmB,gBAkBrB,EAlDO,IAoDDC,EAAQ,CACZ,QACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEoBvgB,EAAAA,UAAG,SAACwgB,GAIxB,IAHA,IAAIC,EAAI,EACNve,EAAI8T,SAASwK,EAAG,KAAO,EAElBte,GAAK,QAAUue,GACpBve,GAAQ,KAGV,OAAOA,EAAEwe,QAAQxe,EAAI,IAAMue,EAAI,EAAI,EAAI,GAAK,IAAMF,EAAME,EAC1D,CAAE,U,QAAA,Y,6FC0SA,K,wDAjXiD,SAAAhf,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,8KAAnDuN,EAAmD,SAAAvN,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAAnDU,CAAAqM,GAkBA,IAgBI0R,EAAkBC,EAhBhBC,EAA8B,CAClCC,WAAY,CACV,CACEC,KAAM,CAAC,sBAAuB,uBAC9BC,SAAU,YACVC,WAAY,cAGhBC,aAAc,eACdC,aAAc,aACdC,qBAAsB,EACtBC,mBAAoB,QACpBC,qBAAsB,GASlBC,EAAW,CAAC,yBACZC,EAAiB,eAAA3e,GAAA,EAAAC,EAAArD,UAAG,aAUtBkhB,EAAc,IAAIc,WATR,CACVC,QAAS,CACPb,UAAAA,EACAU,SAAAA,GAGFA,SAAAA,KAiBUvR,GAAG,SAAS,SAAUtJ,GAChCC,QAAQC,MAAM,oBAAsBF,EAAIlC,QAE1C,IAEA,IAAMmd,EAAa,eAAA1e,GAAA,EAAAH,EAAArD,UAAG,UAAMmiB,GAC1B,IAAMC,EAASD,EAAIE,QAAUF,EAAIG,SAAWH,EAAII,iBAC1C,IAAI1Y,SAAQ,SAAA2Y,GAChB,IAAMC,EAAa,SAAAL,GACjBjB,EAAciB,EACd,IAAMtY,EAAuB,cAAjBsY,EAAOnY,MAKnB,OAJIH,IACF5C,QAAQQ,KAAK,qBACbwZ,EAAYwB,WAAWN,EAAQI,IAE1B1Y,CACT,EACK2Y,EAAWL,IACdjB,EAAY9E,iBAAiB,eAAe,SAAA7U,GAAA,IAAEmb,EAAMnb,EAANmb,OAAM,OAClDF,EAAWE,EAAO,GAGxB,GACF,IAAC,gBAlBkB7e,GAAA,OAAAN,EAAAQ,MAAA,KAAAC,UAAA,KAmBb2e,QAAY,IAAI/Y,QAAQ,WAAD,IAAAa,GAAA,EAAArH,EAAArD,UAAC,UAAM0a,GAEhC,IAAMyH,QAAYxQ,UAAUkR,cAAcC,SACxC,oBAEeZ,EAAcC,EAInC,IAAG,OAAF,SAAApe,GAAA,OAAA2G,EAAA1G,MAAA,KAAAC,UAAE,CAAF,CAT6B,IAU9B,OAAO2e,CACT,IAAC,kBA3DsB,OAAAxf,EAAAY,MAAA,KAAAC,UAAA,KA4DvB8d,IAC6BxhB,EAAAA,iBAAA,eAAA6K,GAAA,EAAA/H,EAAArD,UAAG,UAC9B4f,EACAxa,EACA2d,GAEA,IAAMhS,QAAqB,EAAAxK,EAAAA,SAAQqZ,EAASxa,GAC5C,GAAyB,QAAhB,MAAL2L,OAAK,EAALA,EAAOzE,WAAoB,CAE7B,IAAI0W,EACAC,EAGJ,GAAIC,EAAiBtD,GACnBoD,EAAKE,EAAiBtD,OACjB,CACL,IAAMuD,QAAkBC,EAAWrS,GACnCiS,EAAKG,EAAUE,QACfJ,EAASE,EAAUF,MACrB,CACAD,EAAGzS,GAAG,YAAY,SAAA+S,GACZP,GAAYA,EAAWC,EAAGvQ,SAChC,IAEE,IAAM7O,cAAoB2f,MAAMN,IAASO,cACnCrR,EAAO,IAAIsR,KAAK,CAAC7f,GAAOmN,EAAMK,UACpC,aAAa,EAAAmC,EAAAA,eAAcxC,EAAOoB,EAEtC,CACF,IAAC,gBA5B4B1N,EAAAsB,EAAAqB,GAAA,OAAAgE,EAAApH,MAAA,KAAAC,UAAA,KAAtB,IAoCDif,EAAmB,CAAC,EACpBQ,EAAkD,CAAC,EACnDC,EAEF,CAAC,EACCC,EAAS,eAAArY,GAAA,EAAAlI,EAAArD,UAAG,UAChBgjB,EACA5R,GACiC,IAADyS,EAAAC,EAAAC,EAC5B5R,EAAOf,EACP4R,EAAGlQ,MAAM5E,MAAK,SAAAjL,GAAC,OAAIA,EAAEsC,MAAQtC,EAAEmO,WAAaA,CAAQ,IACpD4R,EAAGlQ,MAAM5E,MAAK,SAAAiE,GAAI,OAjBR,SAACA,GAAS,IAAA6R,EAAAC,EAAAC,EAAAC,EAAA,OACpB,MAAJhS,GAAU,OAAN6R,EAAJ7R,EAAM5M,WAAI,EAAVye,EAAYI,SAAS,WACjB,MAAJjS,GAAU,OAAN8R,EAAJ9R,EAAM5M,WAAI,EAAV0e,EAAYG,SAAS,YACjB,MAAJjS,GAAU,OAAN+R,EAAJ/R,EAAM5M,WAAI,EAAV2e,EAAYE,SAAS,WACjB,MAAJjS,GAAU,OAANgS,EAAJhS,EAAM5M,WAAI,EAAV4e,EAAYC,SAAS,QAAO,CAaFC,CAAQlS,EAAK,IAIvC,IAFKA,GAAgB,OAAZ0R,EAAIb,EAAGlQ,QAAH+Q,EAAU7V,SAAQmE,EAAO6Q,EAAGlQ,MAAM,IAE3C4Q,EAAWvR,EAAK5M,MAAO,OAAOme,EAAWvR,EAAK5M,MAElD,GAAIoe,EAAgCxR,EAAK5M,MACvC,aAAaoe,EAAgCxR,EAAK5M,MAEpD,GAAS,OAALue,EAAC3R,KAAA2R,EAAMve,KAAM,MAAM,IAAI+e,MAAM,6BAyEjC,OAvEApd,QAAQQ,KAAK,kBAAuB,OAANqc,EAAE5R,QAAI,EAAJ4R,EAAMxe,MAEtCoe,EAAgCxR,EAAK5M,MAAQ,IAAIsE,QAAQ,WAAD,IAAA2B,GAAA,EAAAnI,EAAArD,UACtD,UAAO0a,EAAS6J,GACd,IACE,IAK2BC,EACrB,OAAJA,EAAArS,IAAAqS,EAAMC,cANQ,SAACxd,EAAYyS,GAC3B,GAAIzS,EAAK,OAAOsd,EAAOtd,GACvByT,EAAQhB,EACV,GAiDF,CAAE,MAAOzS,GACP0c,EAAgCxR,EAAK5M,WAAQkI,EAC7CvG,QAAQC,MAAM,iBAAkBF,EAClC,CACF,IAAC,gBAAAM,EAAAU,GAAA,OAAAuD,EAAAxH,MAAA,KAAAC,UAAA,EA3DsD,IA4DvDygB,OAAM,SAAAzd,GACN0c,EAAgCxR,EAAK5M,WAAQkI,EAC7CvG,QAAQC,MAAM,uBAAwBF,EACxC,IAEAyc,EAAWvR,EAAK5M,YAAcoe,EAC5BxR,EAAK5M,MAEP2B,QAAQQ,KAAK,mBAAoBgc,EAAWvR,EAAK5M,OAC1Cme,EAAWvR,EAAK5M,KACzB,IAAC,gBAzFc8B,EAAAC,GAAA,OAAAiE,EAAAvH,MAAA,KAAAC,UAAA,KA2FFmf,EAAU7iB,EAAAA,WAAA,eAAAwM,GAAA,EAAA1J,EAAArD,UAAG,UACxB+Q,EACAK,GAMA,OAJAlK,QAAQQ,KAAK,eAAgBqJ,EAAMK,UAC9B8P,UACGa,KAED,IAAIlY,QAAQ,WAAD,IAAAmD,GAAA,EAAA3J,EAAArD,UAAC,UAAO0a,EAAS6J,GACjC,IACE,GAAIrB,EAAiBnS,EAAMpN,IAQzB,YAPA+W,EAAQ,CACNuI,aAAcW,EACZV,EAAiBnS,EAAMpN,IACvByN,GAEFiS,QAASH,EAAiBnS,EAAMpN,MAKpC,IAAMghB,EAAkB,gBAAkB5T,EAAMpN,GAC1CihB,EACC,MAAL7T,GAAAA,EAAO8T,YACH,IAAIpB,KACF,CACExI,WAAWC,KAAKxb,OAAOolB,OAAO/T,EAAM8T,cACjCxJ,QAELsJ,IAEG,MAAL5T,OAAK,EAALA,EAAO8T,cACP5J,WAAWC,KAAKxb,OAAOolB,OAAO/T,EAAM8T,cAI1C3d,QAAQQ,KAAK,cAAekd,GAE5B1D,EAAY6D,IAAIH,GAAiB7T,EAAM2I,KAAK,SAAAsJ,GAC1C,IACEE,EAAiBnS,EAAMpN,IAAMqf,EAC7B9b,QAAQQ,KAAK,wBAAyBqJ,EAAMK,SAAU4R,GACtDY,EAAUZ,EAAI5R,GACXtS,MAAK,SAAAkmB,GAAS,OACbtK,EAAQ,CAACuI,OAAQ+B,EAAW3B,QAASL,GAAI,IAE1C0B,OAAM,SAAAzd,GAAG,OAAIsd,EAAOtd,EAAI,GAC7B,CAAE,MAAOA,GACPC,QAAQC,MAAM,iBAAkBF,GAChCsd,EAAOtd,EACT,CACF,GACF,CAAE,MAAOA,GACPC,QAAQC,MAAM,mBAAoBF,GAClCsd,EAAOtd,EACT,CACF,IAAG,OAAF,SAAAyG,EAAAC,GAAA,OAAAX,EAAAhJ,MAAA,KAAAC,UAAE,CAAF,CAhDkB,GAiDrB,IAAC,gBAzDsBiJ,EAAAC,GAAA,OAAAJ,EAAA/I,MAAA,KAAAC,UAAA,KAqGrBghB,GA1CgB1kB,EAAAA,MAAA,eAAA6M,GAAA,EAAA/J,EAAArD,UAAG,UAAOklB,GAI1B,OAHKhE,UACGa,WAEK,IAAIlY,QAAQ,WAAD,IAAA+D,GAAA,EAAAvK,EAAArD,UAAC,UAAO0a,EAAS6J,GACvCrD,EAAY6D,IAAIG,EAAO,WAAD,IAAAC,GAAA,EAAA9hB,EAAArD,UAAE,UAAMgjB,GAAE,OAAItI,EAAQsI,EAAG,oBAAAoC,GAAA,OAAAD,EAAAnhB,MAAA,KAAAC,UAAE,CAAF,CAAxB,GACzB,IAAG,OAAF,SAAAuK,EAAAC,GAAA,OAAAb,EAAA5J,MAAA,KAAAC,UAAE,CAAF,CAFwB,GAG3B,IAAC,gBAPiBsK,GAAA,OAAAnB,EAAApJ,MAAA,KAAAC,UAAA,KASQ1D,EAAAA,cAAA,eAAA8kB,GAAA,EAAAhiB,EAAArD,UAAG,UAC3B4f,EACAxa,GAGK8b,UACGa,KAER,IAAMhR,QAAqB,EAAAxK,EAAAA,SAAQqZ,EAASxa,GACxC+M,QAAa,EAAAgI,EAAAA,mBAAkBpJ,GAoBnC,GAnBA7J,QAAQQ,KAAK,WAAYyK,GAkBzBjL,QAAQQ,KAAK,gBAAiByK,IACzBA,EAAM,KAAM,UAEjBmT,EAAUnT,EAAM2P,EAAU/Q,EAE5B,IAAC,gBAjCyBwU,EAAAC,GAAA,OAAAH,EAAArhB,MAAA,KAAAC,UAAA,KAiCxB,CAAAuQ,KAAA,6kBACI8Q,EAAY,eAAAG,EAAA,SAChBtT,EACA2P,EACA/Q,GAGA,IAAIlH,SAAQ,SAAC6Q,EAAS6J,GACpB,IACErD,EAAYwE,KAAKvT,EAAM,CAAC2P,SAAAA,GAAU,WAAD,IAAA6D,GAAA,EAAAtiB,EAAArD,UAAE,UAAMgjB,GACvC,IAEE,GADA9b,QAAQQ,KAAK,kBAAmBsb,GAEV,OAApBjS,EAAMzE,WACNyE,EAAM2I,MAC2B,IAAjC3I,EAAM2I,IAAIkM,OAAO,WAEjB,OAAOlL,EAAQ3J,GACjBA,EAAM8T,YAAc7B,EAAG6B,YACvB9T,EAAM2I,IAAMsJ,EAAGnE,UACf9N,EAAMzE,UAAY,KAClByE,EAAMmJ,cAAe,QAEf,EAAApU,EAAAA,WAAUiL,GAChB2J,EAAQ3J,EACV,CAAE,MAAO9J,GACPC,QAAQC,MAAM,gBAAiBF,GAC/Bsd,EAAOtd,EACT,CACF,IAAG,OAAF,SAAA4e,GAAA,OAAAF,EAAA3hB,MAAA,KAAAC,UAAE,CAAF,CApBiC,GAqBpC,CAAE,MAAOgD,GACPC,QAAQC,MAAM,gBAAiBF,GAC/Bsd,EAAOtd,EACT,CACF,GACF,EAZyB,OAYxBwe,EAAAK,UAAA,CAAA5E,YA1BKA,EAAWpb,UAcDA,EAAAA,WAAS2f,EAAAM,cAAA,cAAAN,EAAAO,WAAAf,EAAAQ,CAAA,CAtBP,EAkChB,4B,gGClVyB,K,0HAhC3BtmB,EAAArB,EAAAqB,GAMe8mB,EAAAnoB,EAAAmoB,GAMfC,EAAApoB,EAAAooB,GAkBE3lB,EAAAA,QAZmB,WACnB,OACEpB,EAAAa,QAAA1B,cAAC6nB,EAAAC,uBAAsB,CAAChoB,MAAO,CAAC0X,MAAO,OAAQC,OAAQ,SACrD5W,EAAAa,QAAA1B,cAAC+nB,EAAAC,oBAAmB,CAElB7mB,MAAOG,EAAAA,aACP2mB,QAASA,EAAAA,QACTC,SAAUrnB,EAAAa,QAAA1B,cAAC2nB,EAAAjmB,QAAI,KAAC,eAChBb,EAAAa,QAAA1B,cAAC4nB,EAAAlmB,QAAY,OAIrB,CAE2B,4B,wJC6DR,K,sIA7FnBb,EAAArB,EAAAqB,GACAsnB,EAAA3oB,EAAA2oB,GAAkCC,EAAA5oB,EAAA4oB,GAAAC,EAAA7oB,EAAA6oB,GAWlCC,EAAA9oB,EAAA8oB,GA+ECrmB,EAAAA,QA5ED,SAAa6C,GAAkC,IAAhCyjB,EAAOzjB,EAAPyjB,QAEPpW,GADQ,EAAAqW,EAAAA,YACOrW,OACf7L,EAAS6L,EAAO7L,OAChBmiB,GAAY,EAAAC,EAAAA,UAAS,YAAY,kBAAM,EAAAhiB,EAAAA,cAAa,GAAE,CAC1DiE,gBAAgB,EAChBC,oBAAoB,EACpBF,sBAAsB,EACtBie,QAAO,SAAChgB,GACNC,QAAQC,MAAM,uBAAwBF,EACxC,IAEIigB,GAAe,EAAAF,EAAAA,UACnB,WAAapiB,GACb,kBAAM,EAAA2B,EAAAA,SAAQ3B,EAAO,GACrB,CACEqE,gBAAgB,EAChBC,oBAAoB,EACpBF,sBAAsB,EACtBie,QAAO,SAAChgB,GACNC,QAAQC,MAAM,uBAAwBF,EACxC,IAGEkgB,GAAaJ,EAAUK,YAAcF,EAAaE,UAClDxf,EAAsB,MAAZsf,OAAY,EAAZA,EAAc9iB,KACxBuD,EAAgB,MAATof,OAAS,EAATA,EAAW3iB,KAEjB0R,GADK,EAAAuR,EAAAA,WACLvR,MAEDnK,GACE,MAAN8E,OAAM,EAANA,EAAQ9E,kBACF,MAAN8E,OAAM,EAANA,EAAQ9E,iBACN/D,GAAWA,EAAQxC,SACjBkiB,GAAmB,EAAAC,EAAAA,WACvB5b,EACAlB,EAAAA,iBACAlE,EAAAA,QACAwH,EAAAA,WAAWnG,UAGb,EAAA4f,EAAAA,iBAAgB5f,EAASuf,EAAWxf,EAAM8I,GAC1C,IAAMgX,IAAW3R,EAAQ,MAAQ+Q,GACjC,OACE1nB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL0X,MAAO,OACPC,OAAQ,OACR2R,cAAe,MACfC,gBAAiB,UAEjBF,EAeE,KAdFtoB,EAAAa,QAAA1B,cAACspB,EAAAC,gBAAe,CACdlb,WAAYoB,EAAAA,WAAWnG,QACvBkgB,cAAe,SAAAtkB,GAAA,IAAEwD,EAAIxD,EAAJwD,KAAI,OACnB7H,EAAAa,QAAA1B,cAACsoB,EAAA5mB,QAAW,CACViD,EAAG+D,EACHiG,IAAKjG,EAAKrD,GACVokB,SAAUT,EACVU,OAAQA,EAAAA,OACRlS,MAAQ2R,EAAgC3R,EAApBA,EAAQ,IAAO,IACnC,EAEJnK,eAAgBA,EAChB2b,iBAAkBA,IAGtBnoB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAO2R,EAAW,OAAS,QAIvCtoB,EAAAa,QAAA1B,cAACmoB,EAAAzmB,QAAQ,CAACyQ,OAAQ,CAAC9I,KAAAA,EAAMC,QAAAA,GAAUhD,OAAQA,KAKnD,CAEmB,4B,uICsHI,K,gJAnNvBzF,EAMe,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CANfU,CAAAhE,GAMeunB,EAAA5oB,EAAA4oB,GAAAuB,EAAAnqB,EAAAmqB,GAAA5oB,EAAAvB,EAAAuB,GAAA,SAAA2C,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,CA2Mb1B,EAAAA,QAxKe,SAAC2nB,GAChB,IAAOtjB,EAAkBsjB,EAAlBtjB,OAEA+C,EAFkBugB,EAAVzX,OAER9I,KACPwgB,GACE,EAAAC,EAAAA,aAAYxjB,GADPyjB,EAAQF,EAARE,SAAUC,EAAWH,EAAXG,YAAaC,EAAQJ,EAARI,SAAUC,EAAgBL,EAAhBK,iBAKlCC,GAAU,EAAAC,EAAAA,YAAWtnB,EAAAA,SA2BpBunB,GADO,EAAAC,EAAAA,YACUrL,OAAjBoL,QACP,OACExpB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACLupB,gBAAiBc,EAASlL,OAAOoK,gBACjC5R,OAAQ,OACRD,MAAO,OACP4R,cAAe,QAEjBvoB,EAAAa,QAAA1B,cAACuqB,EAAAC,WAAU,CACTC,gBAAgB,EAChBC,cAAe,kBAAM7pB,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAACzM,KAAM,IAAM,EACpD6L,SAAUA,EAAS9jB,KAAI,SAACsQ,GAEtB,OAAAnV,OAAAC,OAAA,GACKkV,EAAE,CACLqU,IAAKrU,EAAElR,GACPgE,KAAM,CACJuhB,IAAKrU,EAAE1P,OACPI,KAAMsP,EAAEvP,WAGd,IACA6jB,OAAQ,SAAA/lB,GAAA,IApDEyB,EAoDAE,GAAF,EAAAmG,EAAAlL,SAAAoD,EAAA,GAAS,UApDPyB,EAoDoBE,EAAQF,KApDXyjB,EAAYzjB,EAoDI,EAC3C8C,KAAM,CACJuhB,IAAS,MAAJvhB,OAAI,EAAJA,EAAMhE,GACXylB,OAAY,MAAJzhB,OAAI,EAAJA,EAAM0hB,OAEhBC,aArDe,SACnBC,GAEA,OACEpqB,EAAAa,QAAA1B,cAACuqB,EAAAW,QAAM,EAAAC,EAAAzpB,SAAA,GACDupB,EAAK,CACTG,UAAW,CACTC,KAAM,CAACphB,MAAOqhB,EAAAA,kBAEhBC,aAAc,CACZC,MAAO,CACLnC,gBAAiB,UACjBoC,UAAW,OACXC,SAAU,OAEZL,KAAM,CACJhC,gBAAiB,UACjBoC,UAAW,OACXC,SAAU,UAKpB,EA+BMC,cAAe,CAAC,EAChBC,aAAc,SAAAX,GAAK,IAAAY,EAAA,OACjBhrB,EAAAa,QAAA1B,cAACuqB,EAAAuB,cAAY,EAAAX,EAAAzpB,SAAA,GACPupB,EAAK,CACT5hB,KAAW,MAAL4hB,GAAqB,OAAhBY,EAALZ,EAAOc,qBAAc,EAArBF,EAAuBxiB,KAC7B2iB,YAAa,CACX3C,gBAAiB,cACjB4C,YAAa,EACbC,YAAa7B,KAEf,EAEJ8B,cAAe,CACbC,oBAAqB,IACrBC,aAAc,WACZzjB,QAAQQ,KAAK,yBAA0B8gB,IACd,IAArBA,GACJD,GACF,GAEFC,iBAAkBA,EAClBoC,aAAa,EACbC,cAAe,kBAAMtC,GAAU,EAC/BuC,kBAAmB,SAAAvB,GAAK,OACtBpqB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC2X,OAAQ,IAAKD,MAAO,SAC/ByT,EAAMf,iBACLrpB,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAACzM,KAAM,KAEzBrd,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC2X,OAAQ,OAEnB,EAETgV,gBAAiB,kBACf5rB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC4sB,UAAW,CAAC,CAACC,QAAS,MAClC9rB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRxB,KAAM,SAAAyB,GAAC,OACLjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GACJorB,EAAC,CACL7iB,MAAOqhB,EAAAA,gBACP0B,KAAM,SACN,EAEJC,WAAY,CAAChjB,MAAOqhB,EAAAA,iBACpBpd,MAAO,2BAETrN,EAAAa,QAAA1B,cAACqD,EAAA6pB,YAAW,CAACC,eAAa,EAACC,SAAS,IAC/B,EAETC,mBAAoB,SAAAC,GAAU,OAC5BzsB,EAAAa,QAAA1B,cAACuqB,EAAAgD,cAAY,EAAApC,EAAAzpB,SAAA,GACP4rB,EAAU,CACdE,eAAgB,CACdnE,gBAAiB,QACjB6C,YAAa,QAEfuB,aAAc,CAACvB,YAAa,SAC5BwB,eAAgB,SAAAzC,GAAK,OACnBpqB,EAAAa,QAAA1B,cAACuqB,EAAAoD,UAAQ,EAAAxC,EAAAzpB,SAAA,GACHupB,EAAK,CACT2C,eAAgB,CACd3jB,MAAOqhB,EAAAA,gBACPuC,QAAS,IAEXC,WAAW,EACXC,oBAAoB,EACpBC,eAAc5sB,OAAAC,OAAA,GACT4pB,EAAM+C,eAAe,CAExBC,cAAa,EACbC,gBAAiB,WACkC,IAADC,EAA5ClD,EAAM1kB,MAAS0kB,EAAqBJ,QACrCI,EAAqBJ,OACpB,CAAC,CAACtkB,KAAgB,OAAZ4nB,EAAElD,EAAM1kB,WAAI,EAAV4nB,EAAYhY,UACpB,EAIN,MAEF,EAEJiY,WAAY,SAAAnD,GAAK,OACfpqB,EAAAa,QAAA1B,cAAC2pB,EAAAjoB,QAAgB,CACf2sB,QAAS,WACNpD,EAAqBJ,OACpB,CAAC,CAACtkB,KAAM0kB,EAAM1kB,QACd,EAEJ,GACA1F,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,CACR5B,MAAO,CAAC+tB,QAAS,KACb5C,EAAK,CACT+B,KAAM,UAES,IAErB,EAEJsB,YAAY,qBACZC,gBAAgB,IAIxB,CAEuB,4B,yEC/LY,K,kDAjBiB,SAAA7qB,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,kEAHpD9C,EAGoD,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAHpDU,CAAAhE,GAGA2tB,EAAAhvB,EAAAgvB,GAeEvsB,EAAAA,SAEa,EAAAwsB,EAAAA,OAVQ,WACrB,IAAMhF,GAAW,EAAAiF,EAAAA,aACf1hB,EAAAA,iBACAb,EAAAA,iBACA3E,EAAAA,WAGF,OAAO3G,EAAAa,QAAA1B,cAACwuB,EAAA9sB,QAAa,CAAC+nB,SAAUA,GAClC,GAEmC,4B,wECDR,K,2HAnB3B5oB,EAAArB,EAAAqB,GAA0BunB,EAAA5oB,EAAA4oB,GAI1BuG,EAAAnvB,EAAAmvB,GAcE1sB,EAAAA,QAZmB,SAACgpB,GACpB,OACEpqB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL2X,OAAQ,OACRD,MAAO,SAET3W,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,KACHb,EAAAa,QAAA1B,cAAC2uB,EAAAjtB,SAAc,EAAAypB,EAAAzpB,SAAA,GAAKupB,EAAK,CAAE2D,iBAAiB,MAIpD,CAC2B,4B,2BCYc,K,8GA/BtB3sB,EAAAA,OAAG,CACpB4sB,UAAW,CACTC,KAAM,EACNC,WAAY,EACZC,UAAW,GAEbtmB,KAAM,CACJqmB,WAAY,GACZE,YAAa,EACbltB,SAAU,GACV0V,OAAQ,IACRxN,MAAO,QACPuN,MAAO,IAET0X,SAAU,CACRF,UAAW,EACXxX,MAAO,GACPC,OAAQ,IAEV0X,OAAQ,CACN1X,OAAQ,OACR2X,QAAS,OACTC,SAAU,WACVhG,gBAAiB,QAEjB7R,MAAO,QAETwV,KAAM,CACJiC,YAAa,KAGWhtB,EAAAA,gBAAG,SAAU,U,QAAA,Y,mKC2KR,K,sEAhMG,SAAAyB,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,yEAVpC9C,EAUoC,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAVpCU,CAAAhE,GAA0CE,EAAAvB,EAAAuB,GAAAqnB,EAAA5oB,EAAA4oB,GAAAkH,EAAA9vB,EAAA8vB,GAK1CC,EAAA/vB,EAAA+vB,GACAC,EAAAhwB,EAAAgwB,GACAC,EAAAjwB,EAAAiwB,GAGA7Q,EAAApf,EAAAof,GA8LC3c,EAAAA,SAEc,EAAAwsB,EAAAA,OA7Lf,SAAqB3pB,GAQjB,IAPF4qB,EAAS5qB,EAAT4qB,UACAjY,EAAM3S,EAAN2S,OACAkY,EAAW7qB,EAAX6qB,YAMMxuB,GAAQ,EAAAmpB,EAAAA,YACRzF,GAAY,EAAA6D,EAAAA,UAChB,CAAC,cAAegH,IAAW,EAAD3qB,EAAArD,UAC1B,yBAAkB,EAAAuG,EAAAA,SAAQynB,EAAU,IACpC,CACEE,UAASF,IAGPG,GAAS,EAAAC,EAAAA,UACTC,EAA0BlL,EAAU/e,KAEpCkqB,GAAc,EAAAtH,EAAAA,UAClB,CAAC,gBAAiBgH,IAAW,EAAD3qB,EAAArD,UAC5B,YACE,IAAMoE,QAAa,EAAAqG,EAAAA,kBAAiBujB,GAC9BnZ,QAAUhL,QAAQW,IACtBpG,EAAKG,IAAI,WAAD,IAAAmG,GAAA,EAAArH,EAAArD,UAAC,UAAMiD,GACb,OAAAvD,OAAAC,OAAA,GACKsD,EAAE,CACL8N,YAAa,EAAAtG,EAAAA,kBAAkB,MAADxH,OAAC,EAADA,EAAGU,KAErC,IAAC,gBAAAG,GAAA,OAAA4G,EAAA1G,MAAA,KAAAC,UAAA,EALQ,KAOX,OAAO4Q,CACT,KAEKiB,GAAS,EAAAuR,EAAAA,WAATvR,MAEDpC,EAA+C,MAAX4a,OAAW,EAAXA,EAAalqB,KACjDqjB,EAAW3R,EAAQ,MAAG,EAC5B,OAAI2R,EAEAtoB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CAACmwB,OAAQ,EAAGpC,QAAS,EAAGuB,QAAS,QACxCc,UAAU,gBAEVrvB,EAAAa,QAAA1B,cAACqD,EAAA8sB,OAAM,CACL/C,UAASsC,EACTvuB,MAAOA,EACPrB,MAAO,CACLupB,gBAAiB,QACjBwE,QAAS,EACToC,OAAQ,EAERzY,MAAAA,EACA4Y,iBAAkB,EAClBC,kBAAmB,EACnBC,SAAU,SACVlB,QAAS,OACThG,cAAe,OAEjBmH,aAAc,CACZ/Y,MAAAA,EACAsX,KAAM,EACNrX,OAAQ,OACRoW,QAAS,EACToC,OAAQ,EACRb,QAAS,OACThG,cAAe,MACfoH,WAAY,UACZF,SAAU,SACVF,iBAAkB,EAClBC,kBAAmB,IAErBxvB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL0X,MAAO,OACPC,OAAQ0R,EAAW1R,EAAS,IAAMA,EAAS,EAC3CgZ,gBAAiBtH,EAAW,EAAI,EAChCuH,iBAAkBvH,EAAW,EAAI,EACjC8G,OAAQ,EACRpC,QAAS,EACT8C,gBAAiB,kBACjBC,iBAAkB,kBAClBxB,QAAS,QAEXzgB,IAAK,GACL9N,EAAAa,QAAA1B,cAACyvB,EAAA/tB,QAAoB,CACnBmuB,OAAQA,EACRH,UAAWA,EACXK,SAAUA,EACV3a,OAAQA,IAEVvU,EAAAa,QAAA1B,cAAC6wB,EAAAC,mBAAkB,SAO3BjwB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CAACmwB,OAAQ,EAAGb,QAAS,QAC5Bc,UAAU,gBACVrvB,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MACRlwB,EAAAa,QAAA1B,cAACqD,EAAA8sB,OAAM,CACL/C,UAASsC,EACTvuB,MAAOA,EACPrB,MAAO,CACLupB,gBAAiB,QACjBwE,QAAS,EACToC,OAAQ,EACRxY,OAAQ,OACR6Y,SAAU,SACVlB,QAAS,OACThG,cAAe,OAEjBmH,aAAc,CACZ/Y,MAAO,OACPC,OAAQ,OACRiU,SAAU,OACVmC,QAAS,EACToC,OAAQ,EACRb,QAAS,OACThG,cAAe,MACfoH,WAAY,UACZF,SAAU,WAEZzvB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACLsvB,QAAS,OACThG,cAAe,MACf5R,MAAO,OACPC,OAAQ,SAEV5W,EAAAa,QAAA1B,cAAC6nB,EAAAmJ,WAAU,CACTlxB,MAAO,CACL0X,MAAO,MACPC,OAAQA,EAAS,EACjB2X,QAAS,OACT6B,YAAa,GAEftiB,IAAK,EACLuiB,gCAAgC,EAChCC,8BAA8B,GAC9BtwB,EAAAa,QAAA1B,cAACwvB,EAAA9tB,QAAU,CACTguB,UAAWA,EACXK,SAAUA,EACVF,OAAQA,EACRza,OAAQA,EACRgc,aAAcvM,EACdrd,UAAWA,EAAAA,aAGf3G,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL0X,MAAO,MACPC,OAAQA,EAAS,EACjBgZ,gBAAiB,EACjBC,iBAAkB,EAClBC,gBAAiB,kBACjBC,iBAAkB,kBAClBxB,QAAS,QAEXzgB,IAAK,GACL9N,EAAAa,QAAA1B,cAACyvB,EAAA/tB,QAAoB,CACnBmuB,OAAQA,EACRH,UAAWA,EACXK,SAAUA,EACV3a,OAAQA,KAGZvU,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL0X,MAAO,MACPC,OAAQA,EAAS,EACjB2X,QAAS,QAEXzgB,IAAK,IACO,MAAXghB,OAAW,EAAXA,EAAa0B,UACZxwB,EAAAa,QAAA1B,cAACuvB,EAAA7tB,QAAc,CAACyQ,OAAQwd,KAEd,MAAXA,OAAW,EAAXA,EAAarpB,SAAUzF,EAAAa,QAAA1B,cAAC4e,EAAAld,QAAI,SAInCb,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MAGd,GAEiC,4B,oGCtHP,K,0HApF1BlwB,EAAArB,EAAAqB,GAA0BywB,EAAA9xB,EAAA8xB,GAAAhC,EAAA9vB,EAAA8vB,GAAAlH,EAAA5oB,EAAA4oB,GAmFzBnmB,EAAAA,QApED,WACE,IAAMsvB,GAAW,EAAAC,EAAAA,kBACXC,GAAgB,EAAAC,EAAAA,iBACpB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOic,aAAa,IAErCpJ,GAAwB,EAAAU,EAAAA,WAAjBvR,EAAK6Q,EAAL7Q,MAAOC,EAAM4Q,EAAN5Q,OACRka,EAAa,IAAIC,EAAAA,QAASC,MAAM,GAChCC,EAAiBF,EAAAA,QAASG,MAC9B,CACE,CACEC,YAAa,CACXC,aAAcN,KAIpB,CACEO,SAAU,SAAAH,GAEV,EACAI,iBAAiB,IAkBrB,OACEtxB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAACsyB,OAAQ,UAAW3a,OAAQ,IACvC5W,EAAAa,QAAA1B,cAAC6nB,EAAAwK,kBAAiB,CAChBP,eAAgBA,EAChBQ,qBAlBuB,SAC3BP,GAEA,GAAIA,EAAMC,YAAYO,WAAaC,EAAAA,MAAMC,OAAQ,CAC/C,IAAMC,EAAYX,EAAMC,YAAYC,aAChCU,EAAalB,EAAgBiB,EAMjC,OALIC,EAAa,IAAGA,EAAa,GAEjChB,EAAWiB,UAAUD,GACrBhB,EAAWkB,SAAS,GACpBtB,GAAS,EAAAuB,EAAAA,kBAAiBH,IACnBA,CACT,CACF,GAMM9xB,EAAAa,QAAA1B,cAACsxB,EAAA5vB,QAASqxB,KAAI,CACZjzB,MAAO,CACL,CACE0X,MAAO,GACPwb,QAAS,GACTvb,OAAQA,EAAS,EACjBwb,eAAgB,SAChBzC,WAAY,SACZnH,gBAAiB,MACjB+I,OAAQ,WAEV,CACE1F,UAAW,CACT,CACEiF,WAAYA,EAAWuB,YAAY,CACjCC,WAAY,CAAC,EAAG3b,GAChB4b,YAAa,CAAC3B,EAAeja,GAC7B6b,YAAa,kBASjC,CAC0B,4B,qHCiIM,K,mJAtMhCxyB,EAAArB,EAAAqB,GAoMEoB,EAAAA,QAjMwB,SAAH6C,GAWhB,IAADwuB,EAAAC,EAVJ7qB,EAAI5D,EAAJ4D,KACA8qB,EAAS1uB,EAAT0uB,UACAC,EAAW3uB,EAAX2uB,YACAroB,EAAKtG,EAALsG,MACAsoB,EAAU5uB,EAAV4uB,WACAlsB,EAAS1C,EAAT0C,UACAmsB,EAAc7uB,EAAd6uB,eAKMC,GAAM,EAAAC,EAAAA,iBACNC,GAAQ,EAAAtL,EAAAA,YACR5lB,GAAc,EAAAmxB,EAAAA,kBAEbC,GADQ,EAAAtC,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAM6J,MAAM,IAC5Cwe,gBACAtE,EAAaoE,EAAM3hB,OAAnBud,UACDuE,KAAoB,MAAJvrB,OAAI,EAAJA,EAAMyP,WAAY,GAAK,GAAK6b,EAC5Chc,GAAqB,OAAbsb,EAAA5qB,EAAKqK,eAAQ,EAAbugB,EAAetb,QAAS,EAChCE,GAAmB,OAAbqb,EAAA7qB,EAAKqK,eAAQ,EAAbwgB,EAAerb,MAAOxP,EAAKyP,SACnC+b,EAAkBhc,GACjBA,EAAMF,GAASgc,EAChBC,EAGAzc,EAAQ,IAAIoa,EAAAA,QAASC,MAAMqC,GACzBC,GAAoB,EAAAC,EAAAA,cACxB,SAAC1rB,GAAoB,OAAKlB,EAAUkB,EAAK,GACzC,CACE2rB,UAAU,WAAD,IAAAC,GAAA,EAAAvvB,EAAArD,UAAE,kBACHkB,EAAYmJ,eAAe,CAC/B,gBACA2jB,UAEI9sB,EAAYmJ,eAAe,CAAC,eAAgB2jB,UAC5C9sB,EAAYmJ,eAAe,CAAC,WAAa2jB,GACjD,IAAC,yBAAA4E,EAAA5uB,MAAA,KAAAC,UAAA,EAPS,KAyBR4uB,GAfiB3C,EAAAA,QAASG,MAC9B,CACE,CACEC,YAAa,CACXC,aAAcza,KAIpB,CACE0a,SAAU,SAAAH,GAEV,EACAI,iBAAiB,IAGH/mB,EAAQsoB,GACtBrK,EAAkBkL,EAAY,EAAI,WAAa,QAC/CA,EAAY,EAAI,IAAGlL,EAAkB,iBAEzC,IAAMmL,EAAU,eAAAtvB,GAAA,EAAAH,EAAArD,UAAG,YACjBiyB,EAAec,eAAe/rB,EAChC,IAAC,kBAFe,OAAAxD,EAAAQ,MAAA,KAAAC,UAAA,KAGV2sB,EAAoB,eAAAppB,GAAA,EAAAnE,EAAArD,UAAG,UAAMqwB,GACjC,GAAIA,EAAMC,YAAYO,WAAaC,EAAAA,MAAMC,OAAQ,CAAC,IAADiC,EAAAC,EAC3CC,EAAWpd,EAAMqd,OAEjBD,EAAWX,IAAaW,EAAWX,GACnCW,EArEU,KAqEcA,EArEd,IAuEVpd,EAAMqd,SAAWD,GAAUpd,EAAMqb,SAAS+B,GAEzClsB,EAAKqK,WAAUrK,EAAKqK,SAAW,CAAC,IACrC6hB,GAAsBZ,IACM,OAAhBU,EAAGhsB,EAAKqK,eAAQ,EAAb2hB,EAAe1c,SAC5B4c,GAAyB,OAAjBD,EAAIjsB,EAAKqK,eAAQ,EAAb4hB,EAAe3c,OAC7BtP,EAAKqK,SAASmF,IAAM0c,QAEdT,EAAkBW,YAAYpsB,EACtC,CACF,IAAC,gBAjByBlD,GAAA,OAAA0D,EAAAxD,MAAA,KAAAC,UAAA,KAkB1B,OACE9E,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAACiN,IAAKjG,EAAKrD,GAAIvF,MAAO,CAAC2X,OAAQ,GAAI4X,SAAU,aAChDxuB,EAAAa,QAAA1B,cAACsxB,EAAA5vB,QAASqxB,KAAI,CACZjzB,MAAO,CACL0X,MAAQ9O,EAAKe,UAMT,GALA+N,EAAM0b,YAAY,CAChBC,WAAY,CAACnb,EAAOic,GACpBb,YAAa,CAACpb,EAAOic,GACrBZ,YAAa,UAGnB5b,OAAQ,OACRsd,IAAK,EACLlH,QAAS,EACToC,OAAQ,EACR5E,KAAM3iB,EAAKgR,gBACPsa,EAAkBtrB,EAAKgR,gBACvB,EACJ2V,SAAU3mB,EAAKgR,gBAAkB,WAAa,WAC9C2P,gBAAAA,EACA2L,OAAQ,EACR/I,YACEvjB,EAAKrD,KAAOyuB,EAAM3hB,OAAOkf,SACzB3oB,EAAKrD,KAAOyuB,EAAM3hB,OAAO7L,OACrB,EACA,EACN2uB,aAAcvsB,EAAKe,UAAY,IAAM,EACrCyiB,YAAa,WAEbxjB,EAAKe,WACL5I,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAAC6nB,EAAAwK,kBAAiB,CAEhBC,qBAAsBA,GACtBzxB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACLuvB,SAAU,WACVhE,KAAM,EACN6J,OAAQ,EACRxI,UAAW,CAAC,CAACyI,OAAQ,UACrB/C,OAAQ,UACR4C,OAAQ,MAEVn0B,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,KAAI,CACRC,KAAM,sBACNltB,MAAO,CAAC+tB,QAAS,EAAGoC,OAAQ,OAIlCpvB,EAAAa,QAAA1B,cAAC6nB,EAAAwK,kBAAiB,CAEhBC,qBAAsBA,GACtBzxB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACLuvB,SAAU,WACV7D,MAAO,EACP0J,OAAQ,EACR9C,OAAQ,UACR4C,OAAQ,MAEVn0B,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,KAAI,CACRC,KAAM,sBACNltB,MAAO,CAAC+tB,QAAS,EAAGoC,OAAQ,QAMtCpvB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRwB,QAAS,kBACPuF,EAAIwB,UAASh0B,OAAAC,OAAC,CAAC,EACVyyB,EAAM3hB,OAAO,CAChBkf,SAAU3oB,EAAKe,WAAaf,EAAKrD,GACjCiB,OAAQoC,EAAKe,WAAaf,EAAKrD,KAC/B,EAEJvF,MAAO,CAAC2X,OAAQ,QAChBvJ,MAAOxF,EAAKe,UAAY,GAAKf,EAAKwF,MAClCsd,MAAO,eAAA6J,EAAAC,EAAA,OACLz0B,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,MACImF,EAAKe,WACL5I,EAAAa,QAAA1B,cAAC6nB,EAAA0N,iBAAgB,CACfC,UAAW/B,EACXgC,WAAYjC,EACZ1zB,MAAO,CAAC41B,cAAe,SACvB70B,EAAAa,QAAA1B,cAACqD,EAAAsyB,WAAU,CAACzX,KAAM,GAAI8O,KAAM,UAG/BtkB,EAAKe,WACJ5I,EAAAa,QAAA1B,cAACqD,EAAAuyB,OAAOC,KAAI,CACV3X,KAAM,GACN4X,MAAO,CACK,OADLT,EACL3sB,EAAKwF,YAAK,EAAVmnB,EAAYtrB,MAAM,KAAK,GAAG,GAChB,OADkBurB,EAC5B5sB,EAAKwF,YAAK,EAAVonB,EAAYvrB,MAAM,KAAK,GAAG,IAC1B7D,KAAK,IACPpG,MAAO,CACLi2B,YAAa,GACb/G,UAAW,EACX3F,gBAAiB,iBAIvBxoB,EAAAa,QAAA1B,cAACqD,EAAAsyB,WAAU,CACTzX,KAAM,GACN8O,KAAM,SACNqB,QAASmG,IAEV,KAMf,CAEgC,4B,6MC4VP,K,gFAtgBmB,SAAA9wB,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,UAAAkB,EAAAlB,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,C,uFA3C5CtD,EAAAgE,EAAAhE,GAAsEm1B,EAAAx2B,EAAAw2B,GAAA5N,EAAA5oB,EAAA4oB,GAAAkH,EAAA9vB,EAAA8vB,GAAA2G,EAAAz2B,EAAAy2B,GAAAl1B,EAAAvB,EAAAuB,GAuCtEm1B,EAAA12B,EAAA02B,GAEAC,EAAAtxB,EAAAsxB,GAsgBCl0B,EAAAA,QAlgBD,SAAoBgpB,GAIlB,IAAO8E,EAA0C9E,EAA1C8E,SAAUF,EAAgC5E,EAAhC4E,OAAQza,EAAwB6V,EAAxB7V,OAAQgc,EAAgBnG,EAAhBmG,aAE3BG,GAAW,EAAAC,EAAAA,kBACXC,GAAgB,EAAAC,EAAAA,iBACpB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOic,aAAa,IAE/B2E,GAAiB,EAAA1E,EAAAA,iBACrB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAO4gB,cAAc,IAEhCpC,GAAkB,EAAAtC,EAAAA,iBACtB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOwe,eAAe,IAEjC9Z,GAAc,EAAAwX,EAAAA,iBAClB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAO0E,WAAW,IAE7Bmc,GAAY,EAAA3E,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAO6gB,SAAS,IAC1DC,GAAc,EAAA5E,EAAAA,iBAClB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAO8gB,WAAW,IAE7BC,GAAkB,EAAA7E,EAAAA,iBACtB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAO+gB,eAAe,IAEjCC,GAAiB,EAAA9E,EAAAA,iBACrB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOghB,cAAc,IAEhCC,GAAa,EAAA/E,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOihB,UAAU,IAC5DC,GAAc,EAAAhF,EAAAA,iBAClB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOkhB,WAAW,IAE7Bxb,EAAkB,MAAN9F,GAAAA,EAAQ1F,QAAS,EAAA+K,EAAAA,cAAarF,GAAU,EAC1DuhB,GAAgC,EAAAC,EAAAA,WAAS,GAAMC,GAAA,EAAAjqB,EAAAlL,SAAAi1B,EAAA,GAAxCG,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACrBrf,GAAS,EAAAuR,EAAAA,WAATvR,MACDwf,GAAgB,EAAAlH,EAAAA,UAChBpW,GACH+X,EAAgB2E,GAAkBpC,EAC/BjyB,EAAW,GACXk1B,EAAa,IACbC,EAAoB,IAAR1f,EAAe,GACjC2f,GAAkD,EAAAP,EAAAA,WAAS,GAAMQ,GAAA,EAAAxqB,EAAAlL,SAAAy1B,EAAA,GAA1DE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAC9CG,GAAkD,EAAAX,EAAAA,WAAS,GAAMY,GAAA,EAAA5qB,EAAAlL,SAAA61B,EAAA,GAA1DE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GACxCG,EAAcv2B,OAAOgd,KAAKwZ,EAAAA,kBAE1BC,IADU,EAAA3iB,EAAAA,cAAa6a,EAAU3a,GAAQ,GAAMf,QAC1BnO,KAAK,MAC1B4xB,GAAY,WAChBR,GAAqB,GACrBI,GAAqB,EACvB,EACMK,IAAuB,EAAA3D,EAAAA,cAC3B,SAAC1rB,GAAmB,OAAK,EAAAlB,EAAAA,WAAUkB,EAAK,GACxC,CACE2rB,UAAW,WACTzrB,QAAQQ,KAAK,yBACbgoB,EAAa4G,SACf,IAGEC,IAAa,EAAAC,EAAAA,cACjB,SAAAC,GACE,IAyByBC,EAAAC,EAAAC,EAxBzB,GAAgB,cAAZH,EAAGjiB,KAAsB,CAAC,IAADqiB,EACEC,EAA7B,GAAmB,OAAfD,EAAC1I,EAAO1F,WAAPoO,EAAgBE,OACL,OAAdD,EAAA3I,EAAO1F,UAAPqO,EAAgBE,QAElB9vB,QAAQQ,KACN,2CACAqoB,EACA2E,GAGE7E,EADJE,EAAgB,GACH,EAAAqB,EAAAA,kBAAiBrB,EAXnB,IAYE,EAAAkH,EAAAA,mBAAkBvC,EAZpB,GAab,CACA,GAAgB,eAAZ+B,EAAGjiB,KAAuB,CAAC,IAAD0iB,EACCC,EAA7B,GAAmB,OAAfD,EAAC/I,EAAO1F,WAAPyO,EAAgBH,OACL,OAAdI,EAAAhJ,EAAO1F,UAAP0O,EAAgBH,QAElB9vB,QAAQQ,KACN,4CACAqoB,EACA2E,GAEF7E,GAAS,EAAAuB,EAAAA,kBAAiBrB,EAvBf,GAwBb,CACgB,UAAZ0G,EAAGjiB,OACa,OAAlBkiB,EAAIvI,EAAO1F,UAAPiO,EAAgBK,OAAsB,OAAdJ,EAAAxI,EAAO1F,UAAPkO,EAAgBS,OACzB,OAAdR,EAAAzI,EAAO1F,UAAPmO,EAAgBI,QAEzB,GACA,CAACjH,EAAe2E,KAElB,EAAA2C,EAAAA,YAAU,WAENh5B,SAASi5B,QAAU,SAAAb,GAAE,OAAIF,GAAWE,EAAI,CAE5C,GAAG,CAACF,KACJ,IAAMgB,GAAc,SAClBC,EACAn2B,GAEA,IAAMo2B,EAAKpJ,EASLqJ,GADiB,CAAC,QAAS,OACMC,SAASH,GAR3B,CACnB,QACA,SACA,QACA,MACA,aAIeG,SAASH,IAAcI,MAAMv2B,GAC5C6F,QAAQQ,KAAK,iBAGV+vB,EAAG3jB,SACN2jB,EAAG3jB,OAAS,CAAC,GAEf2jB,EAAG3jB,OAAO0jB,GAAan2B,EAEnBq2B,IAAgBD,EAAG3jB,OAAOhH,aAAc,IAAIrH,MAAOC,WAEvD2wB,GAAqBjD,YAAYqE,GACjCrB,KACF,EACA,OACEj3B,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRxB,KAAM,SAAAyB,GAAC,OACLjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEhtB,MAAO,CAACiC,SAAAA,GAAWirB,KAAM,UAAW,EAExD9e,OAAO,EAAAkL,EAAAA,aAAYM,GACnB8R,MAAO,SAAAsB,GAAC,OACNjsB,EAAAa,QAAA1B,cAACqD,EAAAsyB,YAAU,EAAAxK,EAAAzpB,SAAA,GACLorB,EAAC,CACL5O,KAAMnc,EACNirB,KAAOqJ,EAAqB,QAAT,OACnBhI,QAAS,WAAO,IAADkL,GACmB,KAAtB,MAAN1J,GAAe,OAAT0J,EAAN1J,EAAQ1F,cAAO,EAAfoP,EAAiBd,SAEnBlH,GACE,EAAAiI,EAAAA,gBAAe,CACbC,cAAevf,EACfuX,cAAAA,EACA2E,eAAAA,KAGE,MAANvG,GAAAA,EAAQ1F,QAAQ2O,QAEV,MAANjJ,GAAAA,EAAQ1F,QAAQuO,OAGpB,IACA,IAGN73B,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,mBACd9N,EAAAa,QAAA1B,cAACqD,EAAAq2B,OAAM,CACL1M,KAAM,QACNltB,MAAO,CAAC41B,cAAe,OAAQtD,OAAQ,WACvC/D,SAAO,EAAAtpB,EAAArD,UAAE,YACP6vB,GAAS,EAAAoI,EAAAA,iBAAe,IACxB,IAAMh5B,QAAe,EAAAi5B,EAAAA,eACnB7J,EACA3a,GACA,GACA,SAAAykB,GAAY,OAAItI,GAAS,EAAAuI,EAAAA,mBAAkBD,GAAc,IACzD,SAAAE,GAAO,OAAIxI,GAAS,EAAAyI,EAAAA,eAAcD,GAAS,IAE7CxI,GAAS,EAAA0I,EAAAA,cAAat5B,IACtB4wB,GAAS,EAAAoI,EAAAA,iBAAe,GAC1B,IACAO,QAAS5D,EACT6D,SAAU7D,EACV8D,KAAM,YACL9D,EAAW,sBACcre,UACF,IAAjBue,GAAsB/oB,WACvB,IACD,IACDipB,EACA,qCACA,kBAEN71B,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,qBACb4nB,GACC11B,EAAAa,QAAA1B,cAAA,KACEq6B,KAAM9D,EACN+D,UAAU,EACVx6B,MAAO,CAAC0X,MAAO,SACf3W,EAAAa,QAAA1B,cAACqD,EAAAq2B,OAAM,CACL1M,KAAM,OACNltB,MAAO,CACL41B,cAAe,OACftD,OAAQ,UACR5a,MAAO,QAET4iB,KAAM,YAAY,mBAKxBv5B,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,UACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,QACL0c,KAAM,SAAAyB,GAAC,OACLjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEhtB,MAAO,CAACiC,SAAAA,GAAWirB,KAAM,eAAgB,EAE7DC,WAAY,CAAClrB,SAAAA,GACbmM,MAAO,QACPsd,MAAO,SAAAsB,GAAC,OACNjsB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRC,OAAO,EACPJ,KAAK,WACLr3B,MAAO,EACPjD,MAAO,CAAC26B,UAAW,QAAS/E,cAAe,QAC3CgF,aAAa,UACbC,aAAc,SAAAp0B,GAAI,OAChB0yB,GAAY,QAAShhB,SAAS1R,EAAM,IAAI,IAGvC,IAGX1F,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,SACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,MACL0c,KAAM,SAAAyB,GAAC,OACLjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEhtB,MAAO,CAACiC,SAAAA,GAAWirB,KAAM,gBAAiB,EAE9DC,WAAY,CAAClrB,SAAAA,GACbmM,MAAK,MACLsd,MAAO,SAAAsB,GAAC,OACNjsB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRC,OAAO,EACPJ,KAAK,WACLr3B,OAAO,EAAAqW,EAAAA,aAAY8B,IAAc,EACjCpb,MAAO,CAAC26B,UAAW,QAAS/E,cAAe,QAC3CgF,aAAa,UACbC,aAAc,SAAAp0B,GAAI,OAChB0yB,GAAY,MAAOhhB,SAAS1R,EAAM,IAAI,IAGrC,IAGX1F,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,SACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,QACL0c,KAAM,SAAAyB,GAAC,OACLjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEhtB,MAAO,CAACiC,SAAAA,GAAWirB,KAAM,UAAW,EAExD9e,MAAK,QACL+e,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,SAAAsB,GAAC,IAAA8N,EAAA,OACN/5B,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRC,OAAO,EACPJ,KAAK,WACLr3B,MAAe,MAARgtB,GAAgB,OAAR6K,EAAR7K,EAAUva,aAAM,EAAhBolB,EAAkBpjB,MACzB1X,MAAO,CAAC26B,UAAW,QAAS/E,cAAe,QAC3CgF,aAAa,UACbC,aAAc,SAAAp0B,GAAI,OAChB0yB,GAAY,QAAShhB,SAAS1R,EAAM,IAAI,IAGvC,IAGX1F,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,SACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,SACL0c,KAAM,SAAAyB,GAAC,OACLjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEhtB,MAAO,CAACiC,SAAAA,GAAWirB,KAAM,UAAW,EAExD9e,MAAK,SACL+e,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,SAAAsB,GAAC,IAAA+N,EAAA,OACNh6B,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRC,OAAO,EACPJ,KAAK,WACLr3B,MAAe,MAARgtB,GAAgB,OAAR8K,EAAR9K,EAAUva,aAAM,EAAhBqlB,EAAkBpjB,OACzB3X,MAAO,CAAC26B,UAAW,QAAS/E,cAAe,QAC3CgF,aAAa,UACbC,aAAc,SAAAp0B,GAAI,OAChB0yB,GAAY,SAAUhhB,SAAS1R,EAAM,IAAI,IAGxC,IAGX1F,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,cACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,SACL0c,KAAM,SAAAyB,GAAC,OACLjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GACJorB,EAAC,CACLhtB,MAAO,CAACiC,SAAAA,GACRirB,KAAM,iBACN,EAEJC,WAAY,CAAClrB,SAAAA,GACbmM,MAAO,eACPsd,MAAO,SAAAsB,GAAC,IAAAgO,EAAA,OACNj6B,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRC,OAAO,EACPJ,KAAK,WACLr3B,OAAe,MAARgtB,GAAgB,OAAR+K,EAAR/K,EAAUva,aAAM,EAAhBslB,EAAkBxjB,cAAe,OACxCxX,MAAO,CAAC26B,UAAW,QAAS/E,cAAe,QAC3CgF,aAAa,UACbC,aAAc,SAAAp0B,GAAI,OAAI0yB,GAAY,cAAe1yB,EAAK,IAEnD,IAGX1F,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,YACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,SACL0c,KAAM,SAAAyB,GAAC,OACLjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEhtB,MAAO,CAACiC,SAAAA,GAAWirB,KAAM,eAAgB,EAE7DC,WAAY,CAAClrB,SAAAA,GACbmM,MAAO,aACPsd,MAAO,SAAAsB,GAAC,IAAAiO,EAAA,OACNl6B,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRC,OAAO,EACPJ,KAAK,WACLr3B,OAAe,MAARgtB,GAAgB,OAARgL,EAARhL,EAAUva,aAAM,EAAhBulB,EAAkB9hB,YAAa,GACtCnZ,MAAO,CAAC26B,UAAW,QAAS/E,cAAe,QAC3CgF,aAAa,UACbC,aAAc,SAAAp0B,GAAI,OAChB0yB,GAAY,YAAahhB,SAAS1R,EAAM,IAAI,IAG3C,IAGX1F,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,SACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,SACL0c,KAAM,SAAAyB,GAAC,OACLjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEhtB,MAAO,CAACiC,SAAAA,GAAWirB,KAAM,gBAAiB,EAE9D9e,MAAO,SACP+e,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,SAAAsB,GAAC,IAAAkO,EAAA,OACNn6B,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAI,CACH7N,QAASiK,EACT6D,UAAWpD,GACXqD,OACEt6B,EAAAa,QAAA1B,cAACqD,EAAAq2B,OAAM,CACLU,KAAK,WACL/L,QAAS,kBAAMiJ,GAAqB,EAAK,GAChC,MAARvH,GAAgB,OAARiL,EAARjL,EAAUva,aAAM,EAAhBwlB,EAAkB9nB,SAGvBrS,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACGo0B,EAAY1xB,KAAI,SAAAyC,GAAI,OACnB7H,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAKpO,KAAI,CACRle,IAAKjG,EACL2lB,QAAS,kBAAM4K,GAAY,SAAUvwB,EAAK,EAC1CwF,MAAOxF,GACP,MAIH,IAGX7H,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,cACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,SACL0c,KAAM,SAAAyB,GAAC,OACLjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEhtB,MAAO,CAACiC,SAAAA,GAAWirB,KAAM,gBAAiB,EAE9D9e,MAAO,SACP+e,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,SAAAsB,GAAC,IAAAsO,EAAA,OACNv6B,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAI,CACH7N,QAASqK,EACTyD,UAAWpD,GACXqD,OACEt6B,EAAAa,QAAA1B,cAACqD,EAAAq2B,OAAM,CACLU,KAAK,WACL/L,QAAS,kBAAMqJ,GAAqB,EAAK,GAChC,MAAR3H,GAAgB,OAARqL,EAARrL,EAAUva,aAAM,EAAhB4lB,EAAkBpiB,SAGvBnY,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACGnC,OAAOgd,KAAKid,EAAAA,cAAcp1B,KAAI,SAAAyC,GAAI,OACjC7H,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAKpO,KAAI,CACRle,IAAKjG,EACL2lB,QAAS,kBAAM4K,GAAY,SAAUvwB,EAAK,EAC1CwF,MAAOxF,GACP,MAIH,IAGX7H,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,kBACd9N,EAAAa,QAAA1B,cAACqD,EAAAq2B,OAAM,CACL1M,KAAM,gBACNqB,QAAS,kBAAM0I,GAAaD,EAAS,GAAE,qBAG3B,IAAbA,EACCj2B,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,KACHb,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,iBACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,OACL0c,KAAM,SAAAyB,GAAC,OAAIjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,kBAAmB,EACtD9e,MAAO,GACP+e,WAAY,CAAClrB,SAAAA,GACbssB,QAAS,eAAAiN,EAAA,OAAmB,MAAbtE,GAAsB,OAATsE,EAAbtE,EAAe7M,cAAO,EAAtBmR,EAAwBC,OAAO,EAC9C/P,MAAO,SAAAsB,GAAC,IAAA0O,EAAA,OACN36B,EAAAa,QAAA1B,cAACg2B,EAAAt0B,QAAY,CAAC5B,MAAO,CAAC0X,MAAO0f,EAAWlC,OAAQ,KAC9Cn0B,EAAAa,QAAA1B,cAACm2B,EAAAz0B,QAAU,CACTwuB,UAAW,aACXuL,IAAKzE,EACLl3B,MAAO,CACLiC,SAAAA,EACA25B,gBAAiB35B,EACjB45B,sBAAuB55B,EACvBg0B,WAAY,GAEd6F,SAAS,OACTC,YAAaC,EAAAA,uBAAuBC,QACpCC,cACiB,OAAfR,EAAAzL,EAASva,SAAY,OAANgmB,EAAfA,EAAiBtlB,WAAI,EAArBslB,EAAuBt1B,KAAK,OAAQ,GAEtC+1B,SAAU,SAAA11B,GAAS,IAAD21B,EAEd31B,KAAwB,OAApB21B,EAAKnM,EAASva,SAAY,OAAN0mB,EAAfA,EAAiBhmB,WAAI,EAArBgmB,EAAuBh2B,KAAK,OAIvC+yB,GAAY,OAAQ1yB,EAAKwD,MAAM,KACjC,EACAoyB,WAAW,EACXC,iBAAe,IAEJ,IAGnBv7B,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,kBACbkpB,IACCh3B,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,cACL0c,KAAM,SAAAyB,GAAC,OAAIjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,cAAe,EAClD9e,MAAM,GACNmgB,QAAS,kBAAMgO,EAAAA,QAAUC,UAAUzE,GAAW,EAC9C5K,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,kBACL3qB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAO0f,IACnBr2B,EAAAa,QAAA1B,cAACk2B,EAAAx0B,QAAiB,CAChBk6B,SAAS,OACT97B,MAAOi8B,EAAAA,QACPh6B,SAAUA,EACV2zB,eAAe,EACfvG,QAAQ,EACRoN,YAAa,SACZ1E,IACkB,IAChB,IAIbh3B,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,YACbkpB,IACCh3B,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,cACL0c,KAAM,SAAAyB,GAAC,OACLjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,qBAAsB,EAEhD9e,MAAM,GACNmgB,QAAS,kBAAMgO,EAAAA,QAAUC,UAAU7F,EAAW,EAC9CxJ,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,kBACL3qB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CAAC0X,MAAO0f,EAAWxB,cAAe,SACzC70B,EAAAa,QAAA1B,cAACk2B,EAAAx0B,QAAiB,CAChBk6B,SAAS,OACT97B,MAAOi8B,EAAAA,QACPS,YAAa,CACX9G,cAAe,OACf+G,WAAY,OAEd16B,SAAUA,EACV06B,YAAY,EACZ/G,eAAe,EACfvG,QAAQ,EACRoN,YAAa,SACZ9F,GACkB,IAChB,IAIb51B,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,UAEd,KAGV,CAEyB,4B,oLCnTxB,K,sJAxHM,SAAkCsc,GACvC,IAAMsG,GAAW,EAAAC,EAAAA,kBACX/H,GAAW,EAAAR,EAAAA,WACfgC,EAAMnkB,SACNqF,EAAAA,kBACA,SAAAuwB,GAAM,OAAI,EAAAz0B,EAAAA,SAAQy0B,EAAQzR,EAAM5d,eAAe,GAC/CoC,EAAAA,WAAW+F,OACXhO,EAAAA,WAEIQ,EAASyhB,EAASzhB,OAClBqO,EAAc,MAANrO,OAAM,EAANA,EAAQwN,OAChBmnB,GAAe,EAAAjL,EAAAA,iBACnB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOmnB,YAAY,IAE9BC,OACWztB,KAAT,MAANnH,OAAM,EAANA,EAAQ3C,MAAyB,MAALgR,OAAK,EAALA,EAAOumB,gBACrC,GAAIA,IAAmBD,EAAc,OAAO97B,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,MAE5C,IAkBMs5B,EAAiB,eAAAzwB,GAAA,EAAArH,EAAArD,UAAG,YAAa,IAADo7B,EAC9BC,QAAqBC,EAAAA,eAAerf,WAAW,CACnDsf,kBAAmB,eAIrB,GAFAr0B,QAAQQ,KAAK,eAAgB2zB,EAActT,EAASzhB,QAE/C+0B,EAAL,CACA,IAAM3hB,EAAM2hB,EAAaG,IACrBC,EAAMlS,EAAMnkB,SACVs2B,EAAY,CAChB/3B,GAAIsB,EAAAA,QAAKC,KAAK6G,WACd2N,IAAAA,EACAlN,MAAO6uB,EAAa91B,KACpBkX,WAAY4e,EAAa91B,KACzB6L,SAAUiqB,EAAa91B,KACvBo2B,SAAUN,EAAa98B,KACvB6G,SAAUq2B,EACVt2B,OAAQokB,EAAMpkB,OACdkJ,MAAM,IAAI5I,MAAOC,UACjB0G,YAAY,EACZC,kBAAkB,EAClB9N,KAAM88B,EAAalpB,KAAK5T,KACxBie,KAAM6e,EAAalpB,KAAKqK,KACxBlQ,UAA0B,OAAf8uB,EAAArT,EAASzhB,SAAT80B,EAAiBt2B,SAAW,KAAO,SAEhD+qB,GAAS,EAAA+L,EAAAA,iBAAgB,CAACzpB,KAAMkpB,EAAalpB,KAAMpB,MAAO2qB,IAnBjC,CAoB3B,IAAC,kBA1BsB,OAAAhxB,EAAA1G,MAAA,KAAAC,UAAA,KA2BjBG,EAAO2jB,EAAS8T,cACtB,OACE18B,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAACsvB,QAAS,OAAQhG,cAAe,QAC5CvoB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CAAC0X,MAAO,MAAO4X,QAAS,OAAQhG,cAAe,SACpDwT,QAA2BztB,IAATrJ,GAClBjF,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACw9B,EAAA97B,QAAQ,CACP+7B,YAAY,EACZC,WAtDU,SAAHx0B,GAAA,IACjBR,EAAIQ,EAAJR,KACA8qB,EAAStqB,EAATsqB,UACAC,EAAWvqB,EAAXuqB,YACAroB,EAAKlC,EAALkC,MAAK,OAILvK,EAAAa,QAAA1B,cAAC29B,EAAAj8B,QAAiB,CAChB8xB,UAAWA,EACXC,YAAaA,EACb/qB,KAAMA,EACN0C,MAAOA,EACPsoB,WAAYzI,EAAMyI,WAClBlsB,UAAWA,EAAAA,UACXmsB,eAAgBlK,GAChB,EAuCQmU,aAAc,SAAAl1B,GAAI,OAAIA,EAAKrD,IAAMqD,EAAKqH,KAAKtC,UAAU,EACrD3H,KAAMA,EACN+3B,YAAapU,EAASoU,YACtB/9B,MAAO,CAAC0X,MAAO,QACf0Z,gCAAgC,EAChCC,8BAA8B,IAEhCtwB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR3e,MAAO,cACP+e,WAAY,CAAClrB,SAAU,IACvBjC,MAAO,CAAC41B,cAAe,QACvBrH,QAAS,kBAAMwO,GAAmB,EAClCrR,MAAO,SAAAP,GAAK,OACVpqB,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAAsyB,YAAU,EAAAxK,EAAAzpB,SAAA,GACLupB,EAAK,CACT+B,KAAM,OACNqB,QAAS,kBAAMwO,GAAmB,EAClCzC,KAAM,cAEP,KAKVwC,QAA2BztB,IAATrJ,GACjBjF,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACO,MAAJuC,OAAI,EAAJA,EAAMG,KAAI,SAACyC,EAAM0C,GAAK,OACrBvK,EAAAa,QAAA1B,cAAC29B,EAAAj8B,QAAiB,CAChBgH,KAAMA,EACN0C,MAAOA,EACPsoB,WAAYzI,EAAMyI,WAClBlsB,UAAWA,EAAAA,UACXmsB,eAAgBlK,GAChB,IAEJ5oB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR3e,MAAO,GACP+e,WAAY,CAAClrB,SAAU,IACvBjC,MAAO,CAAC41B,cAAe,OAAQje,OAAQ,QAQrD,E,6BAjOO,SAAoCwT,GACzC,IAAMxB,GAAW,EAAAR,EAAAA,WACfgC,EAAMnkB,SACNqF,EAAAA,kBACA,SAAAuwB,GAAM,OAAI,EAAAz0B,EAAAA,SAAQy0B,EAAQzR,EAAM5d,eAAe,GAC/CoC,EAAAA,WAAW+F,OACXhO,EAAAA,WAGI2hB,GADU,EAAAJ,EAAAA,WAATvR,MACkB,IACnBxP,EAASyhB,EAASzhB,OAClBqO,EAAc,MAANrO,OAAM,EAANA,EAAQwN,OAChBmnB,GAAe,EAAAjL,EAAAA,iBACnB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOmnB,YAAY,IAE9BmB,EAAe,eAAAh5B,GAAA,EAAAC,EAAArD,UAAG,UAAOq8B,SACvB,EAAAv2B,EAAAA,WAASpG,OAAAC,OAAC,CAAC,EACZooB,EAASzhB,OAAO,CACnBwN,OAAMpU,OAAAC,OAAA,GACAgV,GAAS,CAAC,GAAC,EAAA2nB,EAAAt8B,SAAA,GACdq8B,GAAW1nB,IAA6B,IAApBA,EAAM0nB,QAG/BtU,EAASwU,WAAWjG,SACtB,IAAC,gBAToBxyB,GAAA,OAAAV,EAAAY,MAAA,KAAAC,UAAA,KAWfu4B,EAAY,SAACr2B,GAAyB,OAC1Ci2B,EAAgB,QAAS,EAErBK,EAAY,SAACt2B,GAAyB,OAC1Ci2B,EAAgB,gBAAiB,EAE7BlB,OACWztB,KAAT,MAANnH,OAAM,EAANA,EAAQ3C,MAAyB,MAALgR,OAAK,EAALA,EAAOumB,gBAErC,GAAIA,IAAmBD,EAAc,OAAO97B,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,MAC5C,IAAM66B,EAAW,SAACtR,GAAM,YAAL,IAADA,IAAAA,EAAI,CAAC,GACrBjsB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAACspB,cAAe,MAAOyE,QAAS,IAC3ChtB,EAAAa,QAAA1B,cAACqD,EAAAsyB,YAAU,EAAAxK,EAAAzpB,SAAA,GACLorB,EAAC,CACL5O,KAAMmgB,EACNrR,KAAW,MAAL3W,GAAAA,EAAOS,MAAQ,aAAe,cACpCsjB,KAAM,WACN/L,QAAS6P,KAEXr9B,EAAAa,QAAA1B,cAACqD,EAAAsyB,YAAU,EAAAxK,EAAAzpB,SAAA,CACTwc,KAAMmgB,GACFvR,EAAC,CACLsN,KAAM,WACNpN,KAAW,MAAL3W,GAAAA,EAAOY,cAAgB,YAAc,QAC3CoX,QAAS8P,KAEXt9B,EAAAa,QAAA1B,cAACqD,EAAAsyB,YAAU,EAAAxK,EAAAzpB,SAAA,CACTwc,KAAMmgB,GACFvR,EAAC,CACLE,KAAM,SACNqB,SAAO,EAAAtpB,EAAArD,UAAE,kBACD+nB,EAASgL,eAAe,CAC5BpvB,GAAI4lB,EAAMnkB,WAEZmkB,EAAMqT,WAAWC,mBAAmBvG,SACtC,IACAoC,KAAM,cAEH,EAEHiE,EAAWlV,EAAW,GAAK,GACjC,OACEtoB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAACsvB,QAAS,OAAQhG,cAAe,MAAO3R,OAAQ,KAC3D5W,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAO,SACnB3W,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MACRlwB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR3e,MAAO,eAAAswB,EAAA,OACLrV,EACEtoB,EAAAa,QAAA1B,cAACo+B,EAAQ,MAETv9B,EAAAa,QAAA1B,cAAC6nB,EAAA0N,iBAAgB,CACfC,UAAWvK,EAAMwI,YACjBgC,WAAYxK,EAAMuI,UAClB1zB,MAAO,CAAC41B,cAAe,SACvB70B,EAAAa,QAAA1B,cAACqD,EAAAwyB,KAAI,CAAC/1B,MAAO,CAACiC,SAAU,KACN,OADUy8B,EACzB/U,EAASzhB,aAAM,EAAfw2B,EAAiBtwB,OAGvB,EAEHsd,MAAO,SAAAsB,GACL,OAAI3D,EAAiB,KAChByT,EAGH/7B,EAAAa,QAAA1B,cAACqD,EAAAsyB,YAAU,EAAAxK,EAAAzpB,SAAA,CACTwc,KAAMmgB,GACFvR,EAAC,CACLsN,KAAM,WACNpN,KAAM,WAPkBnsB,EAAAa,QAAA1B,cAACo+B,EAAQ,KAUvC,KAKV,E,qBApIAv9B,EAAArB,EAAAqB,GAA0BunB,EAAA5oB,EAAA4oB,GAAAkH,EAAA9vB,EAAA8vB,GAe1BkO,EAAAh+B,EAAAg+B,GAIAp3B,EAAA5G,EAAA4G,GAQAu3B,EAAAn+B,EAAAm+B,EAmOC,4B,6GChLA,K,gIApEM,WACL,IAAOnmB,GAAS,EAAAuR,EAAAA,WAATvR,MACD+Z,GAAW,EAAAC,EAAAA,kBACXC,GAAgB,EAAAC,EAAAA,iBACpB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOic,aAAa,IAE/B2E,GAAiB,EAAA1E,EAAAA,iBACrB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAO4gB,cAAc,IAEhCpC,GAAkB,EAAAtC,EAAAA,iBACtB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOwe,eAAe,IAEjCqC,GAAY,EAAA3E,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAO6gB,SAAS,IAI1Dnc,GAAc,EAAAwX,EAAAA,iBAClB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAO0E,WAAW,IAE7BR,GACH+X,EAAgB2E,GAAkBpC,EACrC,OACEnzB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR/sB,MAAO,CACL0X,MAAAA,EACAC,OAAQ,GACR4X,SAAU,WACV6F,OAAQ,EACR7J,KAAM,EACNhC,gBAAiB,cACjB2L,OAAQ,KAEV3J,KAAM,SAAAyB,GAAC,OAAIjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,UAAW,EAC9C9e,OAAO,EAAAkL,EAAAA,aAAYM,GACnB8R,MAAO,SAAAsB,GAAC,OACNjsB,EAAAa,QAAA1B,cAACqD,EAAAsyB,YAAU,EAAAxK,EAAAzpB,SAAA,GACLorB,EAAC,CAELsN,KAAK,YACLpN,KAAOqJ,EAAqB,QAAT,OACnBhI,SAAO,EAAAtpB,EAAArD,UAAE,YACP,KAEoB,IAAd20B,GACFztB,QAAQQ,KAAK,cAEbmoB,GACE,EAAAiI,EAAAA,gBAAe,CACbC,cAAevf,EACfuX,cAAAA,EACA2E,eAAAA,KAGJ7E,GAAS,EAAAkN,EAAAA,eAAa,KAItBlN,GAAS,EAAAkN,EAAAA,eAAa,GAG1B,CAAE,MAAO91B,GACPC,QAAQC,MAAMF,EAChB,CACF,MACA,GAIV,E,cA9EA9H,EAAArB,EAAAqB,GAA0ByuB,EAAA9vB,EAAA8vB,EA8EzB,4B,6MCqJoC,K,gFA3MG,SAAA5rB,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,gFAxBxC9C,EAwBwC,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAxBxCU,CAAAhE,GAA4DunB,EAAA5oB,EAAA4oB,GAAAkH,EAAA9vB,EAAA8vB,GAAAoP,EAAAl/B,EAAAk/B,GAW5DlB,EAAAh+B,EAAAg+B,GAUAp3B,EAAA5G,EAAA4G,GAGAu4B,EAAAn/B,EAAAm/B,GAMA,IAAMtwB,EAAaoB,EAAAA,WAAW+F,OAmM7BvT,EAAAA,QAjMD,SAAgCgpB,GAC9B,IAAOzT,GAAS,EAAAuR,EAAAA,WAATvR,MACD2R,EAAW3R,EAAQ,IACnBsc,GAAQ,EAAAtL,EAAAA,YACP3hB,EAAUokB,EAAVpkB,OACDuvB,GAAiB,EAAA1E,EAAAA,iBACrB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAO4gB,cAAc,IAEhCwI,GAAe,EAAAlN,EAAAA,iBACnB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOopB,YAAY,IAEpC95B,EAAoCgvB,EAAM3hB,OAAnCud,EAAS5qB,EAAT4qB,UAAWriB,EAAcvI,EAAduI,eAEZwxB,GAAkB,EAAA3G,EAAAA,cACtB,SAAAwE,GAAM,OAAI,EAAAz0B,EAAAA,SAAQy0B,EAAQrvB,EAAe,GACzC,CAACA,IAEGkkB,GAAW,EAAAC,EAAAA,kBACX/H,GAAW,EAAAR,EAAAA,WACfyG,EACAvjB,EAAAA,iBACA0yB,EACApvB,EAAAA,WAAW+F,OACXhO,EAAAA,YAEF,EAAAuxB,EAAAA,YAAU,WAKR,OAJAnwB,QAAQQ,KAAK,SACbmoB,GAAS,EAAAkN,EAAAA,eAAa,IACtBlN,GAAS,EAAAoH,EAAAA,mBAAkB,IAC3BpH,GAAS,EAAAuB,EAAAA,kBAAiB,IACnB,WACLvB,GAAS,EAAAkN,EAAAA,eAAa,IACtBlN,GAAS,EAAAoH,EAAAA,mBAAkB,IAC3BpH,GAAS,EAAAuB,EAAAA,kBAAiB,GAE5B,CACF,GAAG,CAACpD,IACJ,IAAMyE,GAAoB,EAAAC,EAAAA,cAAY,SAAC1rB,GAAiB,OACtD,EAAAlB,EAAAA,WAAUkB,EAAK,IAEXo2B,EAAe,eAAA55B,GAAA,EAAAH,EAAArD,UAAG,YAAa,IAAD88B,EAC5BnoB,EAAqB,CACzBhR,GAAIsB,EAAAA,QAAKC,KAAK6G,WACdS,MAAO,QAAU+J,SAASwR,EAAS8T,cAAc7tB,OAAS,GAC1D5I,SAAU4oB,EACV7oB,OAAAA,EACA+G,eAAe,EACfW,QAASkb,EAAS8T,cAAc7tB,OAAS,EACzCrB,WAAAA,EACAV,UAAU,EACVoC,MAAM,IAAI5I,MAAOC,UACjBZ,SAAyB,OAAjBg4B,EAAE/U,EAASzhB,aAAM,EAAfw2B,EAAiBh4B,gBAEvB2tB,EAAkBW,YAAYze,GACpCoT,EAAS8U,mBAAmBvG,SAC9B,IAAC,kBAfoB,OAAA9yB,EAAAQ,MAAA,KAAAC,UAAA,KAmCfo5B,GAAmB,EAAAjP,EAAAA,UAGnBkP,EAAwB7V,EAExB,MAEF,MACE8V,EAAyB9V,EAEzB,MAEF,MACJ,OACEtoB,EAAAa,QAAA1B,cAAC6nB,EAAAmJ,WAAU,CACTlxB,MAAO,CAAC0X,MAAAA,EAAOC,OAAQ,OAAQ4X,SAAU,YACzC6B,gCAAgC,EAChCC,8BAA8B,GAC9BtwB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAACsvB,QAAS,OAAQhG,cAAe,WAC5CvoB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAO,OAAQ4R,cAAe,QAC1CvoB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOynB,SACS9vB,IAA3Bsa,EAAS8T,eACR18B,EAAAa,QAAA1B,cAACw9B,EAAA97B,QAAQ,CACPg8B,WA1CQ,SAAHx0B,GAAA,IACjBR,EAAIQ,EAAJR,KACA8qB,EAAStqB,EAATsqB,UACAC,EAAWvqB,EAAXuqB,YACAroB,EAAKlC,EAALkC,MAAK,OAILvK,EAAAa,QAAA1B,cAACk/B,EAAAC,4BAA0B,EAAAhU,EAAAzpB,SAAA,GACrBupB,EAAK,CACTtc,IAAKjG,EAAKrD,GACVmuB,UAAWA,EACXC,YAAaA,EACb3sB,SAAU4B,EAAKrD,GACfquB,WAAYtoB,EACZkzB,WAAY7U,EACZpc,eAAgBA,IAChB,EA0BUuwB,aAAc,SAAAl1B,GAAI,OAAIA,EAAKrD,IAAMqD,EAAKqH,KAAKtC,UAAU,EACrD3H,KAAM2jB,EAAS8T,cACfM,YAAW,eAAAzxB,GAAC,EAADrH,EAAArD,UAAE,UAAOsW,EAAOE,SACnBuR,EAASoU,YAAY7lB,EAAOE,EACpC,IAAC,gBAAA1S,EAAAC,GAAA,OAAA2G,EAAA1G,MAAA,KAAAC,UAAA,EAFU,GAGXurB,gCAAgC,EAChCC,8BAA8B,KAIpCtwB,EAAAa,QAAA1B,cAAC6nB,EAAAmJ,WAAU,CACTyM,YAAY,EACZ39B,MAAO,CACL0X,MAAOwnB,EACP5P,QAAS,OACThG,cAAe,MACf3R,OAAQ,QAEV2nB,SAAU,SAAAz7B,GACR4tB,GACE,EAAAoH,EAAAA,mBAAkBh1B,EAAEquB,YAAYqN,cAAc5c,GAElD,EACAgZ,IAAK,SAAA93B,GAAM,IAAD27B,EAAAC,EAAAC,EACRT,EAAiB5U,QAAUxmB,EAC3B,IAAM87B,EACY,MAAhBV,GAAyB,OAATO,EAAhBP,EAAkB5U,cAAO,EAAzBmV,EAA2BI,YACvBC,EACoB,OADTJ,EACfR,EAAiB5U,cAAO,EAAxBoV,EAA0BK,YAE1BhB,EAAae,cAAgBA,GAC7Bf,EAAaa,aAAeA,GAE5BlO,GACE,EAAAsO,EAAAA,iBAAgB,CACdJ,WAAAA,EACAE,YAAAA,KAIU,MAAhBZ,GAAyB,OAATS,EAAhBT,EAAkB5U,UAAlBqV,EAA2BM,SAAS,CAClCrd,EAAG2T,GAEP,EACAhK,oBAAqB,GACrB8E,gCAAgC,EAChCC,8BAA8B,GAC9BtwB,EAAAa,QAAA1B,cAAC0+B,EAAAh9B,QAAe,CACdg8B,WAAY,SAAA5wB,GAAA,IAAEpE,EAAIoE,EAAJpE,KAAM0C,EAAK0B,EAAL1B,MAAK,OACvBvK,EAAAa,QAAA1B,cAACk/B,EAAAa,0BAAwB,EAAA5U,EAAAzpB,SAAA,GACnBupB,EAAK,CACTtc,IAAKjG,EAAKrD,GACVyB,SAAU4B,EAAKrD,GACfquB,WAAYtoB,EACZiC,eAAgBA,IAChB,EAEJuwB,aAAc,SAAAl1B,GAAI,OAAIA,EAAKrD,IAAMqD,EAAKqH,KAAKtC,UAAU,EACrDjB,QAASid,EAASuW,eAClBC,aAAcxW,EAASyW,gBACvBp6B,KAAM2jB,EAAS8T,cACfrM,gCAAgC,EAChCC,8BAA8B,MAIpCtwB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOynB,IACnBp+B,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MACRlwB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRI,WAAY,CAAClrB,SAAU,IACvBssB,QAAS,kBAAMyQ,GAAiB,EAChCtT,MAAO,SAAAP,GAAK,OACVpqB,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAAsyB,YAAU,EAAAxK,EAAAzpB,SAAA,GACLupB,EAAK,CACT+B,KAAM,OACNoN,KAAM,cAEP,KAITv5B,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL0X,MAAOwnB,EACP3P,SAAU,WACV5X,OAAQ,EACR4T,KAAM4T,IAERp+B,EAAAa,QAAA1B,cAAC2+B,EAAAj9B,QAAW,QAKtB,CAEqC,4B,uIC8EpC,K,gEA3RoC,SAAAgC,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,2DAGtB,SAAuBsnB,GACpC,IAAOyE,EAA0BzE,EAA1ByE,UACA2B,EAD0BpG,EAAf0E,YACX0B,QACDE,GAAW,EAAAC,EAAAA,kBACX5uB,GAAc,EAAAmxB,EAAAA,kBACdtC,GAAgB,EAAAC,EAAAA,iBACpB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOic,aAAa,IAE/B2E,GAAiB,EAAA1E,EAAAA,iBACrB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAO4gB,cAAc,IAEhCpC,GAAkB,EAAAtC,EAAAA,iBACtB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOwe,eAAe,IAEjC2I,GAAe,EAAAjL,EAAAA,iBACnB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOmnB,YAAY,IAG9BxT,GADU,EAAAJ,EAAAA,WAATvR,MACkB,MAAG,EACtB2oB,GAAa,EAAAzO,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAO2qB,UAAU,IAC5DzmB,GACH+X,EAAgB2E,GAAkBpC,EACrC2C,GAAsC,EAAAC,EAAAA,WAAS,GAAMC,GAAA,EAAAjqB,EAAAlL,SAAAi1B,EAAA,GAA9CyJ,EAAYvJ,EAAA,GAAEwJ,EAAaxJ,EAAA,GAClCM,GAAgC,EAAAP,EAAAA,WAAS,GAAMQ,GAAA,EAAAxqB,EAAAlL,SAAAy1B,EAAA,GAAxCmJ,EAAQlJ,EAAA,GAAEmJ,EAAWnJ,EAAA,GAItBpH,GAAc,EAAAtH,EAAAA,UAClB,CAAC,uBAAwBgH,IAAW,EAAD3qB,EAAArD,UACnC,YACE,IAAMoE,QAAa,EAAAqG,EAAAA,kBAAiBujB,GAC9BnZ,QAAUhL,QAAQW,IACtBpG,EAAKG,IAAI,WAAD,IAAAf,GAAA,EAAAH,EAAArD,UAAC,UAAMiD,GACb,OAAAvD,OAAAC,OAAA,GACKsD,EAAE,CACL8N,YAAa,EAAAtG,EAAAA,kBAAkB,MAADxH,OAAC,EAADA,EAAGU,KAErC,IAAC,gBAAAG,GAAA,OAAAN,EAAAQ,MAAA,KAAAC,UAAA,EALQ,KAOX,OAAO4Q,CACT,KAEInB,EAAoC4a,EAAYlqB,KAChD06B,EAAgB,eAAAt3B,GAAA,EAAAnE,EAAArD,UAAG,kBACjBsuB,EAAYgI,gBACZp1B,EAAYmJ,eAAe,CAAC,cAAgB2jB,GAAY,CAAC,SACzD9sB,EAAYmJ,eAAe,CAAC,iBAAmB2jB,UAC/C9sB,EAAYmJ,eAAe,CAAC,WAAa2jB,UACzC9sB,EAAYmJ,eAAe,CAAC,gBAAiB2jB,UAC7C9sB,EAAYmJ,eAAe,CAAC,eAAgB2jB,UAC5C9sB,EAAYmJ,eAAe,CAC/B,iBAAmB2jB,EAAY,cAEjC,IAAM1jB,EAAgB,MAANoJ,OAAM,EAANA,EAAQnP,KAAI,SAAAoQ,GAAK,OAAIA,EAAMhR,EAAE,IAE7C,GADAuD,QAAQQ,KAAK,kBAAmB4C,GACrB,MAAPA,GAAAA,EAAS0D,OACX,IAAK,IAAI+wB,EAAI,EAAGA,EAAIz0B,EAAQ0D,OAAQ+wB,IAAK,CACvC,IAAMtD,EAAMnxB,EAAQy0B,GACpB79B,EAAYmJ,eAAe,CAAC,iBAAmBoxB,GACjD,CACJ,IAAC,kBAjBqB,OAAAj0B,EAAAxD,MAAA,KAAAC,UAAA,KAmBhB+6B,EAAkB,SAACnpB,GACvB,IAAIopB,EACQ,MAAVppB,EAAkC,KAAlByc,EAA2C,IAAlBA,EACvC2M,EAAS,KAAKA,EAAS,IAC3BpP,GAAS,EAAAqP,EAAAA,oBAAmBD,GAC9B,EAEME,EAAW,eAAAz0B,GAAA,EAAArH,EAAArD,UAAG,YAClB,IAAI0+B,EAAJ,CAGAC,GAAc,GACd,IACE,IAAM33B,QAAa,EAAAT,EAAAA,SAAQopB,EAAS3B,GACpChnB,EAAKiK,OAASjK,EAAKiK,QAAUjK,EAAKrD,GAClCqD,EAAKrD,GAAKsB,EAAAA,QAAKC,KAAK6G,WACpB/E,EAAK6F,SAAW,EAChB7F,EAAKxB,WAAY,IAAIC,MAAOC,UAAUqG,WACtC7E,QAAQQ,KAAK,aAAc,CAACioB,QAAAA,EAAS3X,gBAAAA,EAAiBhR,KAAAA,UAChD,EAAAlB,EAAAA,WAAUkB,SACV9F,EAAYmJ,eAAe,CAAC,gBAAiB2jB,UAC7C9sB,EAAYmJ,eAAe,CAC/B,iBAAmBrD,EAAK5B,iBAEpB05B,GACR,CAAE,MAAO73B,GACPC,QAAQC,MAAM,eAAgBF,EAChC,CACA03B,GAAc,EAlBd,CAmBF,IAAC,kBAtBgB,OAAAj0B,EAAA1G,MAAA,KAAAC,UAAA,KAwBXm7B,EAAU,eAAAh0B,GAAA,EAAA/H,EAAArD,UAAG,YACjB,IAAI0+B,EAAJ,CAGAC,GAAc,GACd,IACE,IAAMU,GAAc,EAAAtnB,EAAAA,uBAClBrE,EACAsE,GAEIhR,QAA6B,EAAAT,EAAAA,SAAQopB,EAAS3B,GAC9C1U,EACJtB,EACAqnB,EAAYn5B,QACXc,EAAKqK,SAASiF,OAAS,GAEpBgpB,EAAQC,KAAKC,MAAMD,KAAKE,UAAS//B,OAAAC,OAAC,CAAC,EAAGqH,KAC5Cs4B,EAAMruB,OAASjK,EAAKiK,QAAUjK,EAAKrD,GACnC27B,EAAM37B,GAAKsB,EAAAA,QAAKC,KAAK6G,WACrBuzB,EAAMzyB,SAAW,EACjByyB,EAAMjuB,SAASiF,MAAQgD,EACvBgmB,EAAMjuB,SAASmF,IAAMxP,EAAKqK,SAASmF,KAAOxP,EAAKyP,UAAY,EAC3D6oB,EAAM95B,WAAY,IAAIC,MAAOC,UAAUqG,WAEvC/E,EAAKqK,SAASmF,IAAM8C,QACd,EAAAxT,EAAAA,WAAUkB,SACV,EAAAlB,EAAAA,WAAUw5B,SACVR,GACR,CAAE,MAAO73B,GACPC,QAAQC,MAAM,cAAeF,EAC/B,CACA03B,GAAc,EA5Bd,CA6BF,IAAC,kBAhCe,OAAAvzB,EAAApH,MAAA,KAAAC,UAAA,KAkCVy7B,EAAc,eAAAn0B,GAAA,EAAAlI,EAAArD,UAAG,YACrB,IACE,GAAI0+B,EACF,OAEFC,GAAc,SAERG,GACR,CAAE,MAAO73B,GACPC,QAAQC,MAAM,iBAAkBF,EAClC,CACA03B,GAAc,EAChB,IAAC,kBAZmB,OAAApzB,EAAAvH,MAAA,KAAAC,UAAA,KAad07B,EAAsB,WAAH,OACvB9P,GAAS,EAAA+P,EAAAA,kBAAiB3E,GAAe,EAErC4E,EAAiB,eAAAr0B,GAAA,EAAAnI,EAAArD,UAAG,YAAa,IAAD8/B,EAC9Bn4B,QAAa,EAAA3C,EAAAA,eACbrB,EAAKsB,EAAAA,QAAKC,KAAK6G,WACfjH,EAAoB,OAAZg7B,EAAGpsB,EAAO,SAAE,EAATosB,EAAWh7B,SACtBi7B,EAAyB,CAC7Bp8B,GAAAA,EACAq8B,QAASr8B,EACTwB,OAAQwC,EAAKhE,GACb6I,MAAO7E,EAAKpC,KACZyS,gBAAAA,EACAjQ,WAAW,EACXk4B,SAAS,EACTn4B,WAAYH,EAAKpC,KACjBA,KAAMoC,EAAKpC,KACXT,SAAAA,EACAM,SAAU4oB,EAAY,YACtB/hB,UAAU,EACVwK,SAAU,GACVpF,SAAU,CACRiF,MAAO,EACPE,IAAK,WAGH,EAAA0pB,EAAAA,gBAAeH,SACfjB,IACN53B,QAAQQ,KAAK5C,SACP,EAAAH,EAAAA,iBACJo7B,EAAQp8B,GACRgE,EAAKpC,KAAO,uBACZT,EACA,CAACkD,QAAQ,GAEb,IAAC,kBAhCsB,OAAAwD,EAAAxH,MAAA,KAAAC,UAAA,KAsCvB,OACE9E,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACI4lB,EA2CAtoB,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAI,CACH7N,QAASkT,EACTpF,UA5MW,WAAH,OAASqF,GAAY,EAAO,EA6MpCpF,OACEt6B,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOC,OAAM,CAAC9U,KAAM,YAAaqB,QA7M3B,WAAH,OAASkS,GAAY,EAAM,KA+MjC1/B,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAKpO,KAAI,CACRkV,YAAY,UACZ7zB,MAAM,UACNisB,SAAUiG,EACV/R,QAAS,kBAAM+S,GAAgB,IAEjCvgC,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAKpO,KAAI,CACRkV,YAAY,eACZ7zB,MAAM,cACNmgB,QAAS,kBAAMkT,GAAmB,IAEpC1gC,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAKpO,KAAI,CACR3e,MAAM,kBACN6zB,YACEpF,EAAe,cAAgB,sBAEjCtO,QAAS,kBAAMgT,GAAqB,IAEtCxgC,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAKpO,KAAI,CACR3e,MAAM,mBACN6zB,YAAY,uBACZ1T,QAAS,kBAAMqS,EAAgB,IAAI,IAErC7/B,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAKpO,KAAI,CACR3e,MAAM,iBACN6zB,YAAY,wBACZ1T,QAAS,kBAAMqS,EAAgB,IAAI,IAEpCP,GACCt/B,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAKpO,KAAI,CACR3e,MAAM,cACNisB,SAAUiG,EACV2B,YAAY,cACZ1T,QAAS,kBAAMyS,GAAY,IAG9BX,GACCt/B,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAKpO,KAAI,CACR3e,MAAM,eACNisB,SAAUiG,EACV2B,YAAY,eACZ1T,QAAS,kBAAMwS,GAAa,KAzFlChgC,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOC,OAAM,CACZ9U,KAAK,UACLmN,SAAUiG,EACV/R,QAAS,kBAAM+S,GAAgB,IAEhCzE,EACC97B,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOC,OAAM,CACZ9U,KAAK,eACLqB,QAAS,kBAAMkT,GAAmB,IAElC,KACJ1gC,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOC,OAAM,CACZ9U,KACE2P,EAAe,cAAgB,sBAEjCtO,QAAS,kBAAMgT,GAAqB,IAEtCxgC,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOC,OAAM,CACZ9U,KAAK,uBACLqB,QAAS,kBAAMqS,EAAgB,IAAI,IAErC7/B,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOC,OAAM,CACZ9U,KAAK,wBACLqB,QAAS,kBAAMqS,EAAgB,IAAI,IAEpCP,GACCt/B,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOC,OAAM,CACZ3H,SAAUiG,EACVpT,KAAK,cACLqB,QAAS,kBAAMyS,GAAY,IAG9BX,GACCt/B,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOC,OAAM,CACZ3H,SAAUiG,EACVpT,KAAK,eACLqB,QAAS,kBAAMwS,GAAa,KA2D1C,E,cAjTAhgC,EAsBqC,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAtBrCU,CAAAhE,GAsBAuF,EAAA5G,EAAA4G,GAAqCrF,EAAAvB,EAAAuB,GAAAuuB,EAAA9vB,EAAA8vB,EA2RpC,4B,gJCjDkC,K,kEAhQ8B,SAAA5rB,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,yEAAjE9C,EAAiE,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAAjEU,CAAAhE,GAAiEE,EAAAvB,EAAAuB,GAAAihC,EAAAxiC,EAAAwiC,GAAA1S,EAAA9vB,EAAA8vB,GA0BjE,IAAM5F,EAASuY,EAAAA,QAAW3mB,OAAO,CAC/B4mB,MAAO,CACL1qB,MAAO,OACPC,OAAQ,OACR4X,SAAU,WACV0F,IAAK,EACLG,OAAQ,EACR7J,KAAM,EACNG,MAAO,GAET2W,KAAM,CACJpgC,SAAU,MA0NbE,EAAAA,QAvND,SAA6B6C,GAUzB,IAADs9B,EAAAC,EAAAC,EAAAC,EATD1S,EAAM/qB,EAAN+qB,OACAE,EAAQjrB,EAARirB,SACA3a,EAAMtQ,EAANsQ,OACAsa,EAAS5qB,EAAT4qB,UAOM6B,GAAW,EAAAC,EAAAA,kBACXgR,GAAkB,EAAA9Q,EAAAA,iBACtB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOgtB,eAAe,IAEjCxO,GAAkB,EAAAtC,EAAAA,iBACtB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOwe,eAAe,IAEjCvC,GAAgB,EAAAC,EAAAA,iBACpB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOitB,kBAAkB,IAEpCrM,GAAiB,EAAA1E,EAAAA,iBACrB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOktB,mBAAmB,IAGrCrM,IADS,EAAAvG,EAAAA,WACG,EAAA4B,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAO6gB,SAAS,KAC1DsM,GAAY,EAAAjR,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAOmtB,SAAS,IAC1DxT,GAAS,EAAAuC,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAO2Z,MAAM,IACpDjV,GAAc,EAAAwX,EAAAA,iBAClB,SAAA/lB,GAAK,OAAIA,EAAM6J,OAAO0E,WAAW,IAE7B0oB,GAAU,EAAAC,EAAAA,gBACVnpB,GACH+X,EAAgB2E,GAAkBpC,GAAmB,EAClD8O,GAAoB,EAAApa,EAAAA,UACxB,CAAC,eAAgBgH,EAAWhW,EAAiBQ,IAAa,EAADnV,EAAArD,UACzD,yBACQ,EAAAqhC,EAAAA,iBACJ3tB,EACAsE,GACA,SAACvF,GAA0B,OACzBod,GAAS,EAAAyR,EAAAA,oBAAmB7uB,EAASA,UAAU,GAClD,IACH,CACEyb,eACmBzgB,KAAT,MAAR4gB,OAAQ,EAARA,EAAU1qB,KAA0B,MAAN+P,IAAAA,EAAQ1F,SAAUkzB,GAGlDK,kBAAkB,EAClB5O,UAAW,WAAO,IAAD6O,EACft6B,QAAQQ,KAAK,eACH,MAANymB,GAAAA,EAAQ1F,UACV0F,EAAO1F,QAAQzQ,iBACS,OAAtBwpB,EAAAJ,EAAkBh9B,WAAI,EAAtBo9B,EAAwBxpB,kBAAmB,EACjD,IAIEypB,GACkB,OAAtBf,EAAAU,EAAkBh9B,WAAI,EAAtBs8B,EAAwB1oB,kBAAmB,EACvCsB,GAAuC,OAAtBqnB,EAAAS,EAAkBh9B,WAAI,EAAtBu8B,EAAwBz6B,SAAU,EAGnDw7B,GAAe,EAAAlL,EAAAA,cACnB,SAACmL,EAAqB5K,GACpB,IAAK,IAAD6K,EAAAC,EAAAxoB,EAMgDwd,EAL5CiL,GACHxoB,GAAkB,GACnBqoB,IACuB,OAAtBC,EAAAR,EAAkBh9B,WAAI,EAAtBw9B,EAAwB3pB,YAAY5G,SAASiF,QAAS,GAEzD,GAAIwrB,IAAiC,OAA1BD,EAAIT,EAAkBh9B,WAAI,EAAtBy9B,EAAwBroB,WACI,OAAdqd,EAAA1I,EAAO1F,UAAPoO,EAAgBG,QAE3CnH,GAAS,EAAAkN,EAAAA,eAAa,IAGxB,IAAMgF,EAAYD,EAAUxP,EACtByF,EAAuD,OAA1C1e,GAAG,EAAAtB,EAAAA,uBAAsBrE,EAASouB,KACtC,OAD8CzoB,EAAvCA,EAClBpB,kBAAW,EADOoB,EACL1V,GACXq+B,EACJjK,GAAiBA,IAAkBvf,EACjCypB,EAAkB,EAClBC,EAAiBnS,EAErB,IAAKgH,EAAQ,CACX,GAAIkK,EAAW,CACb,IAAM/6B,EAAS67B,EAAYtU,EAE3B,GADAvmB,QAAQQ,KAAK,SAAUxB,EAAQunB,EAAQsU,GACnC77B,EAAS,EAAG,CACd,IAAMi8B,EAAOJ,EAAY77B,EACzBgB,QAAQQ,KAAK,OAAQy6B,EAAMj8B,EAAQunB,EAAQsU,GAC3CE,EAAkBE,EAClBD,EAAiBh8B,CACnB,MACE+7B,EAAkBF,EAAYhS,CAElC,MACEmS,EAAiBH,EAEnBlS,GAAS,EAAAkN,EAAAA,eAAa,IACtBlN,GAAS,EAAAuB,EAAAA,kBAAiB8Q,IAC1BrS,GAAS,EAAAoH,EAAAA,mBAAkBgL,GAC7B,CACIlL,GAAUpC,GACZ9E,GAAS,EAAAkN,EAAAA,eAAa,IACpBiF,GAEFnS,GACE,EAAAiI,EAAAA,gBAAe,CACbC,cAAAA,EACArD,eAAgBuN,EAChBlS,cAAemS,IAIvB,CAAE,MAAOj7B,GACPC,QAAQC,MAAM,kBAAmBF,EACnC,CACF,GACA,CAACm6B,EAAmBH,EAAWtM,EAAWjhB,EAAQ4F,IAEpDqN,GAAwB,EAAAU,EAAAA,WAExB,OAFYV,EAAL7Q,MAAa6Q,EAAN5Q,OAGZ5W,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACIi/B,GAAuC,IAApBA,GACrBM,EAAkBgB,WAChBjjC,EAAAa,QAAA1B,cAACqD,EAAA6pB,YAAW,CACVptB,MAAO,CACL2X,OAAQ,OACRD,MAAO,OACP6X,SAAU,WACV0F,IAAK,GAEP5gB,SAAUquB,IAGZ3hC,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KAEI1C,EAAAa,QAAA1B,cAAA,SACE+jC,UAAU,EACVjkC,MAAO4pB,EAAOwY,MACd8B,KAA4B,OAAvB1B,EAACQ,EAAkBh9B,WAAI,EAAtBw8B,EAAwBlnB,MAAkB,GAChDtE,MAA6B,OAAxByrB,EAAEO,EAAkBh9B,WAAI,EAAtBy8B,EAAwBzrB,MAC/B2kB,IAAK,SAAA93B,GAGCA,IACFA,EAAE0/B,YAAcF,EAChBtT,EAAO1F,QAAUxmB,EACb0yB,GAAW1yB,EAAEm1B,OAErB,EACAmL,UAAW,SAAAtgC,GACT4tB,GAAS,EAAAkN,EAAAA,eAAa,GACxB,EACAyF,QAAS,SAAAvgC,GACP4tB,GAAS,EAAAkN,EAAAA,eAAa,GACxB,EACA0F,QAAS,SAAArX,GACPlkB,QAAQQ,KAAK,QAAS0jB,EACxB,EACAsW,aAAc,SAAAz/B,GAAC,OACby/B,EAEIz/B,EAAEquB,YACC3N,OACHgf,YAEA1/B,EAAEquB,YACC3N,OACHoU,OACH,KA0CjB,CACmC,4B,+IC0BlC,K,kEA1RmC,SAAA/0B,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,2DAsCrB,SAAsBmB,GAQjC,IAADs/B,EAAAC,EAPD3U,EAAS5qB,EAAT4qB,UACAjY,EAAM3S,EAAN2S,OACA3Q,EAAQhC,EAARgC,SAMMyqB,GAAW,EAAAC,EAAAA,kBACX7lB,GAAQ,EAAA+lB,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAM0lB,OAAO,IAC7ClwB,GAAQ,EAAAmpB,EAAAA,YAERzF,IADc,EAAAkP,EAAAA,mBACF,EAAArL,EAAAA,UAChB,CAAC,cAAegH,IAAW,EAAD3qB,EAAArD,UAC1B,yBAAkB,EAAAuG,EAAAA,SAAQynB,EAAW5oB,EAAS,IAC9C,CACE8oB,UAASF,KAGPkT,GAAU,EAAAC,EAAAA,gBAEV9S,EAAWlL,EAAU/e,KAGrBw+B,GAAkB,EAAA5b,EAAAA,UACtB,CAAC,aAAcgH,IAAW,EAAD3qB,EAAArD,UACzB,YACE,GAAa,MAARquB,GAAAA,EAAU1qB,GAAf,CAEA,IAAIwO,EACJ,IACEA,QAAa,EAAAV,EAAAA,aAAY4c,EAC3B,CAAE,MAAOpnB,GACPC,QAAQC,MAAMF,EAChB,CAKA,MAH2B,OAAvBonB,EAAS/hB,WAAuB6F,IAClCA,QAAa,EAAAiR,EAAAA,YAAWiL,IAEnBlc,CAZ4B,CAarC,IACA,CACE+b,WACE/K,EAAUiE,YAAa8Z,QAA4BzzB,KAAT,MAAR4gB,OAAQ,EAARA,EAAU1qB,OAM5Cy9B,GAAoB,EAAApa,EAAAA,UACxB,CAAC,eAAgBgH,IAAW,EAAD3qB,EAAArD,UAC3B,mBACU,MAARquB,OAAQ,EAARA,EAAU1qB,MACV,EAAAmN,EAAAA,aAAYud,GAAU,SAAA5d,GAAM,OAC1Bof,GAAS,EAAAyR,EAAAA,oBAAmB7wB,EAAOgC,UAAU,GAC9C,IACH,CACEyb,WACE/K,EAAUiE,YAAa8Z,QAA4BzzB,KAAT,MAAR4gB,OAAQ,EAARA,EAAU1qB,OAM5Ck/B,GAAkB,EAAA7b,EAAAA,UACtB,CAAC,kBAAmBgH,IAAW,EAAD3qB,EAAArD,UAC9B,YAAa,IAAD8iC,EAEV,OAAK1B,EAAkBh9B,KAKkB,OAAzC0+B,SAJmBvf,MAAM6d,EAAkBh9B,KAAM,CAC/C6N,MAAO,cAGG8wB,QAAQvgC,IAAI,wBAAiB,EAAlCsgC,EAAoC/2B,WALP,GAMtC,IACA,CACEmiB,YACG/K,EAAUif,YACXlB,GACAE,EAAkBh9B,MAClBg9B,EAAkBh9B,KAAKwhB,OAAO,SAAW,GAI3Cod,OAAO,IAILC,EACJ9f,EAAUif,YAAcQ,EAAgBR,WAC1Cl7B,QAAQQ,KAAK,kBAAmBm7B,EAAgBz+B,MAChD,IAAM8+B,EAAWN,EAAgBx+B,KAC3B+pB,GAAS,EAAAC,EAAAA,UACT+U,GAAS,EAAA/U,EAAAA,UACf,IAAKC,EACH,OAAOlvB,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAACzM,KAAM,KAElC,OACErd,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MACRlwB,EAAAa,QAAA1B,cAACqD,EAAA8sB,OAAM,CACL/C,UAASsC,EACTvuB,MAAOA,EACPrB,MAAO,CACLupB,gBAAiB,QACjBwE,QAAS,EACToC,OAAQ,GAEVM,aAAc,CACZ/Y,MAAO,OACPC,OAAQ,OACRiU,SAAU,OACVmC,QAAS,EACToC,OAAQ,IAEVpvB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL0X,MAAO,MACPC,OAAQA,EAAS,EACjBiZ,iBAAkB,EAClBE,iBAAkB,oBAEpB/vB,EAAAa,QAAA1B,cAACqD,EAAAwyB,KAAI,CAAC/1B,MAAO,CAAC26B,UAAW,OAAQzF,OAAQ,KACvCn0B,EAAAa,QAAA1B,cAACqD,EAAAyhC,KAAI,CAAC1Z,UAAW1B,EAAOyY,MAAM,YACX,MAARpS,OAAQ,EAARA,EAAU7R,QAAQ,EAAA6mB,EAAAA,WAAUhV,EAAS7R,QAGjDymB,EAAe9jC,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAACzM,KAAM,KAAS,KAEjDwR,IAAciV,GAAgB/B,EAC7B/hC,EAAAa,QAAA1B,cAAA,SACE+jC,UAAU,EACVjkC,MAAO4pB,EAAOwY,MACd+B,UAAW,SAAAtgC,GACT,IAAO0/B,EAAe1/B,EAAEquB,YAAY3N,OAA7Bgf,YACP91B,OAAOs3B,OAASlhC,EAAEquB,YAAY3N,OAC1BwL,EAAO1F,UACT0F,EAAO1F,QAAQkZ,YAAcA,GAC3BxT,EAAO1F,SAAW0F,EAAO1F,QAAQsO,QACnC5I,EAAO1F,QAAQ2O,MACnB,EACAoL,QAAS,SAAAvgC,GACP,IAAO0/B,EAAe1/B,EAAEquB,YAAY3N,OAA7Bgf,YACHxT,EAAO1F,UACT0F,EAAO1F,QAAQkZ,YAAcA,GAC3BxT,EAAO1F,UAAY0F,EAAO1F,QAAQsO,QACpC5I,EAAO1F,QAAQuO,OACnB,EACAyL,QAAS,SAAArX,GACPlkB,QAAQQ,KAAK,QAAS0jB,EACxB,EACAsW,aAAc,SAAAz/B,GACZ,IAAAqhC,EAA8BrhC,EAAEquB,YAAY3N,OAArCgf,EAAW2B,EAAX3B,YAAa5K,EAAMuM,EAANvM,OAChB5I,EAAO1F,SAAWsO,IACpB5I,EAAO1F,QAAQkZ,YAAcA,EACjC,EACA5H,IAAKoJ,EACLb,IAAKY,IAEL,MAEN/jC,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL0X,MAAO,MACPC,OAAQA,EAAS,EACjBgZ,gBAAiB,EACjBE,gBAAiB,oBAElBmS,EAAkBgB,WACjBjjC,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAAwyB,KAAI,CAAC/1B,MAAO,CAAC26B,UAAW,QAASzF,OAAQ,KAAK,KAC/Cn0B,EAAAa,QAAA1B,cAACqD,EAAA6pB,YAAW,CACVptB,MAAO,CACL2X,OAAQ,OACR4X,SAAU,WACV0F,KAAM,IAER5gB,SAAUxI,EAAM62B,kBAElB3hC,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACLuvB,SAAU,WACV0F,IAAK,MACL3F,QAAS,OACT5X,MAAO,SAET3W,EAAAa,QAAA1B,cAACqD,EAAAwyB,KAAI,CAAC/1B,MAAO,CAAC26B,UAAW,SAAUxwB,MAAO,UAAU,UAC1C,IACPgR,WACCgqB,KAAKC,IAA4B,IAAxBv5B,EAAM62B,kBACf7f,QAAQ,GAAG,OAMnB9hB,EAAAa,QAAA1B,cAACqD,EAAAwyB,KAAI,CAAC/1B,MAAO,CAAC26B,UAAW,QAASzF,OAAQ,KACxCn0B,EAAAa,QAAA1B,cAACqD,EAAAyhC,KAAI,CAAC1Z,UAAW1B,EAAOyY,MAAM,SACrB,KACLoC,EAAgBT,YAChBS,EAAgBz+B,OAChB,EAAAi/B,EAAAA,WAAUR,EAAgBz+B,OAE9BjF,EAAAa,QAAA1B,cAAA,KAAGq6B,KAAMyI,EAAkBh9B,KAAMw0B,UAAU,GACzCz5B,EAAAa,QAAA1B,cAACqD,EAAAyhC,KAAI,CAAC1Z,UAAW1B,EAAOyY,KAAM9T,QAAS,WAAO,GAAG,cAOtDqB,IAAcoT,EAAkBgB,YAAclB,EAC7C/hC,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACkC,SAAvB,MAARwsB,GAAkB,OAAVqU,EAARrU,EAAUhd,eAAQ,EAAlBqxB,EAAoBlxB,SACnBrS,EAAAa,QAAA1B,cAAA,SACE+jC,UAAU,EACVjkC,MAAO4pB,EAAOwY,MACd+B,UAAW,SAAAtgC,GAAM,IAADwhC,EAAAC,EACI,OAAlBD,EAAIN,EAAO1a,UAAPgb,EAAgB1M,SACJ,OAAd2M,EAAAP,EAAO1a,UAAPib,EAAgBtM,OACpB,EACAoL,QAAS,SAAAvgC,GAAM,IAAD0hC,EAAAC,EACO,OAAfD,EAACR,EAAO1a,UAAPkb,EAAgB5M,QACL,OAAd6M,EAAAT,EAAO1a,UAAPmb,EAAgB5M,OACpB,EACA+C,IAAK5L,EACLmU,IAAKlB,EAAkBh9B,OAGK,SAAvB,MAARiqB,GAAkB,OAAVsU,EAARtU,EAAUhd,eAAQ,EAAlBsxB,EAAoBnxB,SACnBrS,EAAAa,QAAA1B,cAACulC,EAAA7jC,QAAe,CACd8jC,OAAQ,CAACtI,IAAK4F,EAAkBh9B,MAChC2/B,WAAW,UACX3lC,MAAO4pB,EAAOwY,SAIlB,OAGRrhC,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MAGd,E,OA1RAlwB,EAAoC,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAApCU,CAAAhE,GAAoC0kC,EAAA/lC,EAAA+lC,GAAAvD,EAAAxiC,EAAAwiC,GAAA5Z,EAAA5oB,EAAA4oB,GAwBpC,IAAMsB,EAASuY,EAAAA,QAAW3mB,OAAO,CAC/B4mB,MAAO,CACL1qB,MAAO,OACPC,OAAQ,OACR4X,SAAU,WACV0F,IAAK,EACLG,OAAQ,EACR7J,KAAM,EACNG,MAAO,GAET2W,KAAM,CACJpgC,SAAU,KAuPb,4B,iLCqHkC,K,0EAjXS,SAAA2B,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,UAAAkB,EAAAlB,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,C,uFA9B5CtD,EAAAgE,EAAAhE,GAMem1B,EAAAx2B,EAAAw2B,GAAA5N,EAAA5oB,EAAA4oB,GAAAkH,EAAA9vB,EAAA8vB,GAoBf4G,EAAA12B,EAAA02B,GAEAC,EAAAtxB,EAAAsxB,GAiXCl0B,EAAAA,SAEc,EAAAwsB,EAAAA,OA/Wf,SAAwBxD,GAEtB,IAAM6I,GAAQ,EAAAtL,EAAAA,YACR5lB,GAAc,EAAAmxB,EAAAA,kBACpB4C,GAAgC,EAAAC,EAAAA,WAAS,GAAMC,GAAA,EAAAjqB,EAAAlL,SAAAi1B,EAAA,GAAxCG,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtB1kB,EAAS2hB,EAAM3hB,OACrBvJ,QAAQQ,KAAK,SAAU+I,GACvB,IAAArN,EAAqDqN,GAAU,CAAC,EAA3Dud,EAAS5qB,EAAT4qB,UAAW2B,EAAOvsB,EAAPusB,QAASvqB,EAAQhC,EAARgC,SAAUuG,EAAcvI,EAAduI,eAC/BgkB,IAAS3B,EAAY2B,GACzB,IAAMqU,GAAU,EAAAhd,EAAAA,UACd,WAAagH,GAAU,EAAD3qB,EAAArD,UACtB,yBAAkB,EAAAuG,EAAAA,SAAQynB,EAAWriB,GAAkBvG,EAAS,KAE5DqO,EAAkCuwB,EAAQ5/B,KAChD8C,QAAQQ,KAAK,cAAe+L,GAC5B,IAAMwwB,GAAa,EAAA7V,EAAAA,UACbkH,GAAgB,EAAAlH,EAAAA,UACftY,GAAS,EAAAuR,EAAAA,WAATvR,MACD0f,EAAYjM,EAAMiM,WAAa1f,EAAQ,IACvCugB,GAAuB,EAAA3D,EAAAA,aAAW,eAAAlrB,GAAA,EAAAnE,EAAArD,UACtC,UAAOy3B,GACL,IAAMyM,QAAW,EAAAp+B,EAAAA,WAAU2xB,GAuB3B,OAtBA0M,aAAaF,EAAWxb,SACxBwb,EAAWxb,QAAU2b,YAAW,WAC9BljC,EAAYmJ,eAAe,CACzBg6B,SAAU,CAAC,kBAA8B,MAAX5wB,OAAW,EAAXA,EAAarO,aAE7ClE,EAAYmJ,eAAe,CACzBg6B,SAAU,CAAC,cAAerW,KAE5B9sB,EAAYojC,aAAa,CACvBD,SAAU,CAAC,eAAgBrW,GAC3BuW,OAAO,IAETrjC,EAAYojC,aAAa,CACvBD,SAAU,CAAC,kBAAmBrW,GAC9BuW,OAAO,IAETrjC,EAAYojC,aAAa,CACvBD,SAAU,CAAC,kBAAmBrW,GAC9BuW,OAAO,IAETP,EAAQ1N,SACV,GAAG,KACI4N,CACT,IAAC,gBAAApgC,GAAA,OAAA0D,EAAAxD,MAAA,KAAAC,UAAA,EA1BqC,IA4BxCwxB,GAAkD,EAAAP,EAAAA,WAAS,GAAMQ,GAAA,EAAAxqB,EAAAlL,SAAAy1B,EAAA,GAA1DE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAC9CG,GAAkD,EAAAX,EAAAA,WAAS,GAAMY,GAAA,EAAA5qB,EAAAlL,SAAA61B,EAAA,GAA1DE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GACxCG,EAAcv2B,OAAOgd,KAAKwZ,EAAAA,kBAC1BE,EAAY,WAChBR,GAAqB,GACrBI,GAAqB,EACvB,EACMuB,EAAc,SAClBC,EACAn2B,GAEA,IAAMo2B,EAAKhkB,EAULikB,GADiB,CAAC,QAAS,MAAO,eACDC,SAASH,GAT3B,CACnB,QACA,mBACA,SACA,QACA,MACA,eAIeG,SAASH,IAAcI,MAAMv2B,GAC5C6F,QAAQQ,KAAK,gBAGD,KAAVrG,IAGCo2B,EAAGpmB,WACNomB,EAAGpmB,SAAW,CAAC,GAEjBomB,EAAGpmB,SAASmmB,GAAan2B,EACzB6F,QAAQQ,KAAK+vB,GAETC,IACFD,EAAGpmB,SAASvE,aAAc,IAAIrH,MAAOC,WAEvC2wB,EAAqBjD,YAAYqE,GACjCrB,IACF,EACA,GAAI4N,EAAQ5B,WACV,OAAOjjC,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAACzM,KAAM,KAElC,IACM2Z,GADU,EAAAvjB,EAAAA,YAAWa,GACAjP,KAAK,MAC1BnE,EAAW,GACXk1B,EAAa,IACnB,OACEp2B,EAAAa,QAAA1B,cAAC6nB,EAAAmJ,WAAU,CACTG,8BAA8B,EAC9BD,gCAAgC,GAChCrwB,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,UACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,OACL0c,KAAM,SAAAyB,GAAC,OAAIjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,gBAAiB,EACpD9e,MAAkB,MAAXiH,OAAW,EAAXA,EAAajH,QAEtBrN,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,UACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,QACL0c,KAAM,SAAAyB,GAAC,OAAIjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,eAAgB,EACnD9e,MAAO,QACP+e,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,SAAAsB,GAAC,IAAAoZ,EAAA,OACNrlC,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRC,OAAO,EACPJ,KAAK,WACLr3B,OAAkB,MAAXoS,GAAqB,OAAV+wB,EAAX/wB,EAAapC,eAAQ,EAArBmzB,EAAuBluB,QAAS,EACvClY,MAAO,CAAC26B,UAAW,QAAS/E,cAAe,QAC3CgF,aAAa,UACbC,aAAc,SAAAp0B,GAAI,OAChB0yB,EAAY,QAAShe,WAAW1U,GAAM,IAGrC,IAGX1F,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,SACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,MACL0c,KAAM,SAAAyB,GAAC,OAAIjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,gBAAiB,EACpD9e,MAAK,SAAqB,MAAXiH,OAAW,EAAXA,EAAagD,UAAQ,IACpC8U,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,SAAAsB,GAAC,IAAAqZ,EAAA,OACNtlC,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRC,OAAO,EACPJ,KAAK,WACLr3B,OACa,MAAXoS,GAAqB,OAAVgxB,EAAXhxB,EAAapC,eAAQ,EAArBozB,EAAuBjuB,OAAkB,MAAX/C,OAAW,EAAXA,EAAagD,UAE7CrY,MAAO,CAAC26B,UAAW,QAAS/E,cAAe,QAC3CgF,aAAa,UACbC,aAAc,SAAAp0B,GAAI,OAChB0yB,EAAY,MAAOhe,WAAW1U,GAAM,IAGnC,IAGX1F,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,SACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,KACL0c,KAAM,SAAAyB,GAAC,OAAIjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,YAAa,EAChD9e,MAAO,cACP+e,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,SAAAsB,GAAC,IAAAsZ,EAAA,OACNvlC,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRC,OAAO,EACPJ,KAAK,WACLr3B,MAAkB,MAAXoS,GAAqB,OAAVixB,EAAXjxB,EAAapC,eAAQ,EAArBqzB,EAAuBrtB,iBAC9BjZ,MAAO,CAAC26B,UAAW,QAAS/E,cAAe,QAC3CgF,aAAa,UACbC,aAAc,SAAAp0B,GAAI,OAChB0yB,EAAY,mBAAoBhhB,SAAS1R,EAAM,IAAI,IAGlD,IAGX1F,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,cACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,SACL0c,KAAM,SAAAyB,GAAC,OAAIjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,YAAa,EAChD9e,MAAO,eACP+e,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,SAAAsB,GAAC,IAAAuZ,EAAA,OACNxlC,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRC,OAAO,EACPJ,KAAK,WACLr3B,OAAkB,MAAXoS,GAAqB,OAAVkxB,EAAXlxB,EAAapC,eAAQ,EAArBszB,EAAuBC,cAAe,IAC7CxmC,MAAO,CAAC26B,UAAW,QAAS/E,cAAe,QAC3CgF,aAAa,UACbC,aAAc,SAAAp0B,GAAI,OAChB0yB,EAAY,cAAehhB,SAAS1R,EAAM,IAAI,IAG7C,IAGX1F,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,SACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,QACL0c,KAAM,SAAAyB,GAAC,OAAIjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,UAAW,EAC9C9e,MAAK,UAAsB,MAAXiH,OAAW,EAAXA,EAAaqC,OAAK,IAClCyV,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,SAAAsB,GAAC,IAAAyZ,EAAA,OACN1lC,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRC,OAAO,EACPJ,KAAK,WACLr3B,MAAkB,MAAXoS,GAAqB,OAAVoxB,EAAXpxB,EAAapC,eAAQ,EAArBwzB,EAAuB/uB,MAC9B1X,MAAO,CAAC26B,UAAW,QAAS/E,cAAe,QAC3CgF,aAAa,UACbC,aAAc,SAAAp0B,GAAI,OAChB0yB,EAAY,QAAShhB,SAAS1R,EAAM,IAAI,IAGvC,IAGX1F,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,SACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,SACL0c,KAAM,SAAAyB,GAAC,OAAIjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,UAAW,EAC9C9e,MAAK,WAAuB,MAAXiH,OAAW,EAAXA,EAAasC,QAAM,IACpCwV,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,SAAAsB,GAAC,IAAA0Z,EAAA,OACN3lC,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRC,OAAO,EACPJ,KAAK,WACLr3B,MAAkB,MAAXoS,GAAqB,OAAVqxB,EAAXrxB,EAAapC,eAAQ,EAArByzB,EAAuB/uB,OAC9B3X,MAAO,CAAC26B,UAAW,QAAS/E,cAAe,QAC3CgF,aAAa,UACbC,aAAc,SAAAp0B,GAAI,OAChB0yB,EAAY,SAAUhhB,SAAS1R,EAAM,IAAI,IAGxC,IAGX1F,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,SACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,SACL0c,KAAM,SAAAyB,GAAC,OAAIjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,gBAAiB,EACpD9e,MAAO,SACP+e,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,SAAAsB,GAAC,IAAA2Z,EAAA,OACN5lC,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAI,CACH7N,QAASiK,EACT6D,UAAWpD,EACXqD,OACEt6B,EAAAa,QAAA1B,cAACqD,EAAAq2B,OAAM,CACLU,KAAK,WACL/L,QAAS,kBAAMiJ,GAAqB,EAAK,GAC7B,MAAXniB,GAAqB,OAAVsxB,EAAXtxB,EAAapC,eAAQ,EAArB0zB,EAAuBvzB,SAG5BrS,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACGo0B,EAAY1xB,KAAI,SAAAyC,GAAI,OACnB7H,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAKpO,KAAI,CACRle,IAAKjG,EACL2lB,QAAS,kBAAM4K,EAAY,SAAUvwB,EAAK,EAC1CwF,MAAOxF,GACP,MAIH,IAGX7H,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,QACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,SACL0c,KAAM,SAAAyB,GAAC,OAAIjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,QAAS,EAC5C9e,MAAO,SACP+e,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,SAAAsB,GAAC,IAAA4Z,EAAA,OACN7lC,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAOyf,IACnBp2B,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAI,CACH7N,QAASqK,EACTyD,UAAWpD,EACXqD,OACEt6B,EAAAa,QAAA1B,cAACqD,EAAAq2B,OAAM,CACLU,KAAK,WACL/L,QAAS,kBAAMqJ,GAAqB,EAAK,GAC7B,MAAXviB,GAAqB,OAAVuxB,EAAXvxB,EAAapC,eAAQ,EAArB2zB,EAAuB1tB,SAG5BnY,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACGnC,OAAOgd,KAAKid,EAAAA,cAAcp1B,KAAI,SAAAyC,GAAI,OACjC7H,EAAAa,QAAA1B,cAACqD,EAAA43B,KAAKpO,KAAI,CACRle,IAAKjG,EACL2lB,QAAS,kBAAM4K,EAAY,SAAUvwB,EAAK,EAC1CwF,MAAOxF,GACP,MAIH,KAGG,IAAbouB,EACCj2B,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,KACHb,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,SACd9N,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,OACL0c,KAAM,SAAAyB,GAAC,OAAIjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,kBAAmB,EACtD9e,MAAO,GACP+e,WAAY,CAAClrB,SAAAA,GACbssB,QAAS,eAAAiN,EAAA,OAAmB,MAAbtE,GAAsB,OAATsE,EAAbtE,EAAe7M,cAAO,EAAtBmR,EAAwBC,OAAO,EAC9C/P,MAAO,SAAAsB,GAAC,IAAA6Z,EAAA,OACN9lC,EAAAa,QAAA1B,cAACg2B,EAAAt0B,QAAY,CAAC5B,MAAO,CAAC0X,MAAO0f,EAAWlC,OAAQ,KAC9Cn0B,EAAAa,QAAA1B,cAACm2B,EAAAz0B,QAAU,CACTwuB,UAAW,aACXuL,IAAKzE,EACLl3B,MAAO,CACLiC,SAAAA,EACA25B,gBAAiB35B,EACjB45B,sBAAuB55B,EACvBqtB,QAAS,QAEXwM,SAAS,OACTC,YAAaC,EAAAA,uBAAuBC,QACpCC,cACa,MAAX7mB,GAAqB,OAAVwxB,EAAXxxB,EAAapC,WAAc,OAAN4zB,EAArBA,EAAuBzwB,WAAI,EAA3BywB,EAA6BzgC,KAAK,OAAQ,GAE5C+1B,SAAU,SAAA11B,GAAS,IAADqgC,EAEdrgC,KACa,MAAX4O,GAAqB,OAAVyxB,EAAXzxB,EAAapC,WAAc,OAAN6zB,EAArBA,EAAuB1wB,WAAI,EAA3B0wB,EAA6B1gC,KAAK,OAItC+yB,EAAY,OAAQ1yB,EAAKwD,MAAM,KACjC,EACAoyB,WAAW,EACXC,iBAAe,IAEJ,IAGnBv7B,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,SACbkpB,GACCh3B,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAK,cACL0c,KAAM,SAAAyB,GAAC,OAAIjsB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKorB,EAAC,CAAEE,KAAM,cAAe,EAClD9e,MAAM,GACN+e,WAAY,CAAClrB,SAAAA,GACbypB,MAAO,kBACL3qB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAO0f,IACnBr2B,EAAAa,QAAA1B,cAACk2B,EAAAx0B,QAAiB,CAChBk6B,SAAS,OACT97B,MAAOi8B,EAAAA,QACPQ,YAAa,QACbx6B,SAAUA,GACT81B,GACkB,IAChB,IAIbh3B,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,CAACpiB,IAAK,UAEd,KACJ9N,EAAAa,QAAA1B,cAACqD,EAAAq2B,OAAM,CACL1M,KAAM,gBACNqB,QAAS,kBAAM0I,GAAaD,EAAS,GAAE,oBAK/C,GAEmC,4B,mHC1PP,K,8HArJ5Bj2B,EAAArB,EAAAqB,GAA0Bm1B,EAAAx2B,EAAAw2B,GAAAgM,EAAAxiC,EAAAwiC,GAAA5Z,EAAA5oB,EAAA4oB,GAAAC,EAAA7oB,EAAA6oB,GAAAqW,EAAAl/B,EAAAk/B,GAY1BmI,EAAArnC,EAAAqnC,GAuIE5kC,EAAAA,QA1HoB,SAAC6kC,GACrB,IAAOrd,EAAYqd,EAAZrd,SACDsd,GAAM,EAAAhe,EAAAA,WACLtR,EAAUsvB,EAAVtvB,OACDuvB,EAAeD,EAAIvvB,MAAQ,IAAM,GAAK,EACtCA,EAAQuvB,EAAIvvB,MAAQwvB,EAIpBC,GAAa,EAAApT,EAAAA,iBAEjB7nB,EAaEyd,EAbFzd,QACAk7B,EAYEzd,EAZFyd,gBACA16B,EAWEid,EAXFjd,QACAyzB,EAUExW,EAVFwW,aACAjhB,EASEyK,EATFzK,gBACAmoB,EAQE1d,EARF0d,wBACAC,EAOE3d,EAPF2d,oBACAC,EAME5d,EANF4d,mBACAC,EAKE7d,EALF6d,oBACAC,EAIE9d,EAJF8d,eACAC,EAGE/d,EAHF+d,eACA/S,EAEEhL,EAFFgL,eACAgT,EACEhe,EADFge,gBAEI/d,EAASuY,EAAAA,QAAW3mB,OAAO,CAC/BuT,UAAW,CACTC,KAAM,EACNC,WAAY,EACZC,UAAW,GAEbtmB,KAAM,CACJumB,YAAa,EACbltB,SAAU,GACV0V,OAAQ,IACRxN,MAAO,QACPuN,MAAO,QAET0X,SAAU,CACRF,UAAW,EACXxX,MAAO,GACPC,OAAQ,IAEV0X,OAAQ,CACN1X,OAAQA,EAAS,GACjB2X,QAAS,OACTC,SAAU,WACVhG,gBAAiB,QACjB2F,UAxCY,EAyCZxX,MAAO,QAETwV,KAAM,CACJiC,YAAa,MA6CjB,OAAIuY,EACK3mC,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAACzM,KAAM,KAGhCrd,EAAAa,QAAA1B,cAACg2B,EAAAt0B,QAAY,CAAC5B,MAAKsB,OAAAC,OAAA,GAAMqoB,EAAOyF,SAC9BtuB,EAAAa,QAAA1B,cAAC0+B,EAAAh9B,QAAe,CACd2qB,aAAc,WACZzjB,QAAQQ,KAAK,eACf,EACAtD,KAAMkG,EACN07B,mBAAoB,IACpBhK,WAAY,SAAA54B,GAAM,OArDH,SAAC4D,GAAY,OAChC7H,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAAA,GAAQ7I,IAAKjG,EAAKrD,IAC9BxE,EAAAa,QAAA1B,cAAC6mC,EAAAnlC,QAAU,CACTiN,IAAKjG,EAAKrD,GACV2C,OAAM5G,OAAAC,OAAA,GACDqH,EAAK,CACRi/B,OAAQj/B,EAAKrD,KAAO6hC,IAAoBloB,EACxC4oB,WAAYl/B,EAAKrD,KAAO2Z,IAE1B0K,OAAQA,EACR+d,gBAAiBA,EACjBJ,mBAAoBA,EACpBQ,UA5DY,QA6DZxJ,SA9DW,GA+DX7mB,MAAOA,EACPswB,iBACEZ,IAAoBx+B,EAAKrD,IAAMkiC,EAEjCI,OAAQj/B,EAAKrD,KAAO6hC,EACpBC,wBAAyBA,EACzBC,oBAAqBA,EACrBW,cAAe,WACbd,EAAWe,SAAS,CAClB/gC,KAAM,SACNkL,OAAQ,CACNrL,SAAU4B,EAAKrD,GACf6I,MAAOxF,EAAKwF,MACZ1H,SAAUkC,EAAKlC,SACfK,OAAQ6B,EAAK7B,SAGnB,EACAohC,cAAe,kBAAMxe,EAASwe,cAAcv/B,EAAK,EACjD4+B,oBAAqB,kBAAMA,EAAoB5+B,EAAKrD,GAAG,EACvDovB,eAAgB,kBAAMA,EAAe/rB,EAAK,GACzCA,EAAKrD,KAAO6hC,GAAoBloB,EAE7B,KADFne,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAAA,EAAOC,OAAQ,WAG5B,CAcqBywB,CAANpjC,EAAJ4D,KAA4B,EAC1Ck1B,aAAc,SAACl1B,GAAY,OACzBA,EAAKrD,IAAMqD,EAAKqH,KAAKtC,UAAU,EAEjCwyB,aAAcA,EACdzzB,QAASA,EACT27B,cAAe,SAACriC,EAAMsF,GAAK,MAAM,CAC/BsE,OAAQ,GACR9H,OAAQ,GAAKwD,EACbA,MAAAA,EACD,IAIT,CAE4B,4B,mGC5D1B,K,kIAzFFvK,EAAArB,EAAAqB,GAAkCunB,EAAA5oB,EAAA4oB,GAAAsW,EAAAl/B,EAAAk/B,GAAApP,EAAA9vB,EAAA8vB,GAmBlCd,EAAAhvB,EAAAgvB,GAa4BvsB,EAAAA,gBAAG,SAAH6C,GAUrB,IAADsjC,EATJ/6B,EAAcvI,EAAduI,eACA2b,EAAgBlkB,EAAhBkkB,iBACAQ,EAAa1kB,EAAb0kB,cACAnb,EAAUvJ,EAAVuJ,WAOMg6B,GAAc,EAAAC,EAAAA,YAAWj6B,GAAY,GACpCoJ,GAAU,EAAAsR,EAAAA,WAAVtR,OACP,OACE5W,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAO,MAAOC,OAAQ,SAChCpK,EAEE,KADFxM,EAAAa,QAAA1B,cAACwuB,EAAA9sB,QAAa,CAAC+nB,SAAU4e,IAE1Bh7B,EACCxM,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACIylB,EAAiBuV,mBAAmBuF,YACrC9a,EAAiBuf,iBACY,OADGH,EACjCpf,EAAiBuU,iBAAjB6K,EAAgC14B,OA6B9B7O,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAACzM,KAAM,KA5BzBrd,EAAAa,QAAA1B,cAAC0+B,EAAAh9B,QAAe,CACd2qB,aAAc,WACZzjB,QAAQQ,KAAK,eAEf,EACAo/B,eAAe,EACf1oC,MAAO,CAAC2X,OAAAA,GACR3R,KAAMkjB,EAAiBuU,cACvBkL,eAAe,EACff,mBAAoB,IACpBhK,WAAYlU,EACZoU,aAAc,SAACl1B,GAA8B,OAC3CA,EAAKrD,IAAMqD,EAAKqH,KAAKtC,UAAU,EAEjCyjB,gCAAgC,EAChCC,8BAA8B,EAC9B8O,aAAcjX,EAAiBkX,gBAC/B1zB,QAASwc,EAAiBgX,eAC1B0I,cAAe,WAEf,EACAP,cAAe,SAACQ,EAAOv9B,GAAK,MAAM,CAChCsE,OAAQ,IACR9H,OAAQ,IAAMwD,EACdA,MAAAA,EACD,KAML,KAGV,CAAE,4B,wJCyD6B,K,oEAnIe,SAAA1H,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,kEAf9C9C,EAe8C,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAf9CU,CAAAhE,GAAkCm1B,EAAAx2B,EAAAw2B,GAAA5N,EAAA5oB,EAAA4oB,GAAAkH,EAAA9vB,EAAA8vB,GAAAvuB,EAAAvB,EAAAuB,GASlCy8B,EAAAh+B,EAAAg+B,GAMAlV,EAAA9oB,EAAA8oB,GAiIErmB,EAAAA,SAEa,EAAAwsB,EAAAA,OAhHI,SAACxD,GAClB,IAAO5c,EAAc4c,EAAd5c,WACDu6B,GAAY,EAAA/F,EAAAA,gBAClBxa,GAAwB,EAAAU,EAAAA,WAAjBtR,EAAM4Q,EAAN5Q,OAAQD,EAAK6Q,EAAL7Q,MACT2R,IAAW3R,EAAQ,KAGnBrF,GAFQ,EAAAqW,EAAAA,YAEOrW,OACdrL,EAAqCqL,EAArCrL,SAAUN,EAA2B2L,EAA3B3L,SAAU0H,EAAiBiE,EAAjBjE,MAAOrH,EAAUsL,EAAVtL,OAC5B4iB,GAAW,EAAAR,EAAAA,WACfniB,EACAqF,EAAAA,iBACAlE,EAAAA,QACAoG,EACA7G,EAAAA,UACAhB,EACA0H,EACArH,GAGA02B,EAQE9T,EARF8T,cACAgL,EAOE9e,EAPF8e,gBAGAhK,GAIE9U,EANFof,uBAMEpf,EALFwU,WAKExU,EAJF8U,oBACAv2B,EAGEyhB,EAHFzhB,OACA61B,EAEEpU,EAFFoU,YACAiL,EACErf,EADFqf,SAGEz7B,GACI,MAAN8E,OAAM,EAANA,EAAQ9E,iBAAmBrF,GAAUA,EAAOlB,UAAa,KACvDuG,IAAmBvG,IAAUuG,EAAiB,MAClD,IAAM2b,GAAmB,EAAAC,EAAAA,WACvB5b,EACAlB,EAAAA,iBACAlE,EAAAA,QACAoG,EACA7G,EAAAA,WAGIuhC,EAAUrf,EAAAA,OAIhB,GAHAqf,EAAQrgC,KAAK8O,MAAQA,EAAQ,GAC7BuxB,EAAQ5Z,OAAO1X,OAASA,EAAS,GACjCsxB,EAAQ5Z,OAAOH,UAtCyB,GAuCnC4Z,EAAW,OAAO/nC,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,MACvB,IAAMimB,EAAgB,SAAH1kB,GAAA,IACXH,EAACG,EAAP4D,KACA8qB,EAAS1uB,EAAT0uB,UACAC,EAAW3uB,EAAX2uB,YAAW,OAEX5yB,EAAAa,QAAA1B,cAACsoB,EAAA5mB,QAAW,CACViD,EAAGA,EACHgK,IAAKhK,EAAEU,GACPokB,SAAUA,EACVC,OAAQqf,EACRvxB,MAAQ2R,EAAgC3R,EAApBA,EAAQ,IAAO,GACnCic,YAAaA,EACbD,UAAWA,GACX,EAEJ,OACE3yB,EAAAa,QAAA1B,cAACg2B,EAAAt0B,QAAY,KACXb,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL2X,OAAQ,OACRD,MAAO,OACP4R,cAAe,QAEfD,EAOE,KANFtoB,EAAAa,QAAA1B,cAACspB,EAAAC,gBAAe,CACdlc,eAAgBA,EAChB2b,iBAAkBA,EAClBQ,cAAeA,EACfnb,WAAYA,IAGdk6B,GACDhK,EAAmBuF,iBACF30B,IAAlBouB,EA0BE18B,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAACzM,KAAM,KAzBzBrd,EAAAa,QAAA1B,cAACw9B,EAAA97B,QAAQ,CACPg8B,WAAYlU,EACZoU,aAAc,SAAAl1B,GAAI,OAAQ,MAAJA,OAAI,EAAJA,EAAMrD,MAAU,MAAJqD,OAAI,EAAJA,EAAMqH,KAAKtC,WAAU,EACvD3N,MAAO,CACL0X,MAAO,OACPC,OAAAA,EACAuxB,cAAe,IAEjBljC,KAAMy3B,EACNpM,8BAA8B,EAC9BD,gCAAgC,EAChCsX,eAAe,EACfS,mBAAoB,kBAClBpoC,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR3e,MAAO,4BACPmd,KAAM,kBACJxqB,EAAAa,QAAA1B,cAACqD,EAAAsyB,WAAU,CAAC3I,KAAM,WAAYoN,KAAK,YAAa,EAElDt6B,MAAO,CAAC+tB,QAAS,IACjBQ,QAAS,kBAAMya,GAAU,GACzB,EAEJjL,YAAaA,KAQzB,GAE+B,4B,wEC7FC,K,kDArDE,SAAAn6B,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,yEAAlC9C,EAAkC,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAAlCU,CAAAhE,GAoDEoB,EAAAA,SACa,EAAAwsB,EAAAA,OArCK,SAACya,GACnB,IAAOvkC,EAAKukC,EAALvkC,EAEDwN,GADQ,EAAAqW,EAAAA,YACOrW,OACf80B,GAAa,EAAApT,EAAAA,iBACb8T,GAAe,MAANx1B,OAAM,EAANA,EAAQ7L,UAAW3B,EAAEU,GAC9BiE,EAAU3E,EACVuJ,EAAQvJ,EAAEsC,MAAQtC,EAAEU,GACpB2nB,EAAO2a,EAAS,OAAS,eAazBwB,EAAWxB,EAAS9mC,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,MAAQ,KAClC,OACE1C,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKwc,UAAS,CACbtpC,MAAO,CAAC0X,MAAO,QACf6xB,SAAU1B,EACVz5B,MAAOA,EACPmgB,QAnBiB,WACrB4Y,EAAWe,SAAS,CAClB/gC,KAAM,OACNkL,OAAQ,CACN7L,OAAQgD,EAAQjE,GAChB4B,KAAMqC,EAAQrC,KACdoG,eAAgB/D,EAAQxC,SACxBN,SAAU8C,EAAQ9C,WAGxB,EAUM6kB,KAAM,SAAAJ,GAAK,OAAIpqB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKupB,EAAK,CAAE+B,KAAMA,IAAQ,EACnDxB,MAAO,kBAAM3qB,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KAAK,GACjB4lC,GAEHtoC,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MAGd,GACgC,4B,mGCqGN,K,0HA1J1BlwB,EAAArB,EAAAqB,GAA0BwnB,EAAA7oB,EAAA6oB,GAa1BihB,EAAA9pC,EAAA8pC,GAEAC,EAAA/pC,EAAA+pC,GAEA1C,EAAArnC,EAAAqnC,GAEA2C,EAAAhqC,EAAAgqC,GASA,IAAMC,GAAa,EA4HjBxnC,EAAAA,QAjHkB,SAACynC,GACnB,IAAOjgB,EAAuBigB,EAAvBjgB,SAAUC,EAAaggB,EAAbhgB,OAAQ/kB,EAAK+kC,EAAL/kC,EACnBsiC,GAAa,EAAApT,EAAAA,iBAEb1hB,GADQ,EAAAqW,EAAAA,YACOrW,OACf+0B,EAAwB,MAAN/0B,OAAM,EAANA,EAAQrL,SAE1BkgC,GADM,EAAAje,EAAAA,WACavR,MAAQ,IAAM,GAAK,EACtCA,EAAQkyB,EAAiBlyB,MAAQwvB,EAIvC,GAAKriC,EAAYmJ,WAAY,CAC3B,IAAAhJ,EASI2kB,EARFkgB,EAAY7kC,EAAZ6kC,aACgBC,EAAkB9kC,EAAlC2vB,eACAoV,EAAoB/kC,EAApB+kC,qBACAC,EAAehlC,EAAfglC,gBACAC,EAAgBjlC,EAAhBilC,iBACAC,EAAcllC,EAAdklC,eACAC,EAAgBnlC,EAAhBmlC,iBACAC,EAAcplC,EAAdolC,eAEF,OACErpC,EAAAa,QAAA1B,cAACspC,EAAA5nC,QAAS,CACRiN,IAAKhK,EAAEU,GACPV,EAAGA,EACH6S,MAAOA,EACPmyB,aAAcA,EACdC,mBAAoB,kBAAMA,EAAmBjlC,EAAY,EACzDklC,qBAAsBA,EACtBC,gBAAiBA,EACjBC,iBAAkBA,EAClBI,cACExlC,EAAEU,KAAO6kC,IAAkBF,IACvBE,EAGNvC,OAAQhjC,EAAEU,KAAO4kC,EACjB5T,UACE1xB,EAAEU,KAAO6kC,IAAmBF,EAE9BP,WAAYA,GAGlB,CAEA,GACG9kC,EAAYoJ,kBACZpJ,EAAoBkJ,gBAErB,OACEhN,EAAAa,QAAA1B,cAACwpC,EAAA9nC,QAAW,CACVgH,KAAM/D,EACN0J,WAAYob,EAASpb,WACrBomB,eAAgB,kBAAMhL,EAASgL,eAAe9vB,EAAY,IAKhE,GAAKA,EAAc8E,UACjB,OAAO5I,EAAAa,QAAA1B,cAACupC,EAAA7nC,QAAW,CAACiN,IAAKhK,EAAEU,GAAIV,EAAGA,IAEpC,GAAKA,EAAagJ,SAAU,CAC1B,IAAAzI,EASIukB,EARFgL,EAAcvvB,EAAduvB,eACAzV,EAAe9Z,EAAf8Z,gBACAsoB,EAAmBpiC,EAAnBoiC,oBACAF,EAAmBliC,EAAnBkiC,oBACAD,EAAuBjiC,EAAvBiiC,wBACAE,EAAkBniC,EAAlBmiC,mBACAI,EAAeviC,EAAfuiC,gBACAQ,EAAa/iC,EAAb+iC,cAEF,OACEpnC,EAAAa,QAAA1B,cAAC6mC,EAAAnlC,QAAU,CACTiN,IAAKhK,EAAEU,GACP2C,OAAM5G,OAAAC,OAAA,GACAsD,EAAC,CACLijC,WAAYjjC,EAAEU,KAAO2Z,EACrB2oB,OAAQhjC,EAAEU,KAAO6hC,IAEnBxd,OAAQA,EACR0d,oBAAqBA,EACrBD,wBAAyBA,EACzBE,mBAAoBA,EACpBQ,UA5EY,QA6EZxJ,SA9EW,GA+EXoL,WAAYA,EACZjyB,MAAOA,EACPmwB,OAAQhjC,EAAEU,KAAO6hC,EACjBzS,eAAgB,kBAAMA,EAAe9vB,EAAY,EACjDsjC,cAAe,kBAAMA,EAActjC,EAAY,EAC/C2iC,oBAAqB,kBAAMA,EAAoB3iC,EAAEU,GAAG,EACpD0iC,cAAe,kBACbd,EAAWe,SAAS,CAClB/gC,KAAM,SACNkL,OAAQ,CACNrL,SAAWnC,EAAaU,GACxB6I,MAAQvJ,EAAauJ,MACrBb,eAAgB1I,EAAEmC,SAClBN,SAAW7B,EAAa6B,SACxBK,OAASlC,EAAakC,SAExB,EAEJujC,eAAe,EACf3C,gBAAiB,kBAAMA,GAAiB,GACvC9iC,EAAEU,KAAO6hC,EAAkBrmC,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,MAAQ,KAG1C,CACA,OAAO1C,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACT,CAE0B,4B,oGC8DD,K,wDAxN8B,SAAAG,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,gFAAvD9C,EAAuD,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAAvDU,CAAAhE,GAAuDunB,EAAA5oB,EAAA4oB,GAAAuB,EAAAnqB,EAAAmqB,GAsNrD1nB,EAAAA,QAxKiB,SAACgpB,GAClB,IACEjjB,EAcEijB,EAdFjjB,OACAwP,EAaEyT,EAbFzT,MACAuwB,EAYE9c,EAZF8c,cACAtT,EAWExJ,EAXFwJ,eACA6S,EAUErc,EAVFqc,oBACA8C,EASEnf,EATFmf,cACAjB,EAQEle,EARFke,SACAxB,EAOE1c,EAPF0c,OACAG,EAME7c,EANF6c,iBACAX,EAKElc,EALFkc,wBACAE,EAIEpc,EAJFoc,mBACAD,EAGEnc,EAHFmc,oBACAK,EAEExc,EAFFwc,gBACAQ,EACEhd,EADFgd,cAEI9mC,GAAQ,EAAAmpB,EAAAA,YAEV+f,EAAariC,EAAO2/B,OAAS,cAAgB,iBAC7C2C,EAAiBtiC,EAAO4/B,WACxB,mBACA,iBACA2C,GAAkB,EAClBC,EAAAA,eAAenR,SAASrxB,EAAO3C,MACjCklC,GAAkB,EAClBD,EAAiB,QAEftiC,EAAOxB,WACT6jC,EAAariC,EAAO2/B,OAChB,iBACA,0BAEF3/B,EAAO4/B,aACTyC,EAAa,qBAEf,IAAMI,EAAiB,CACrB/U,cAAe,OACf7H,QAAS8Z,EAAS,EAAI,IAIxB,EAAA+C,EAAAA,UAAQ,WACF1iC,EAAO4/B,YAAYR,EAAoBp/B,EAAOkG,MACpD,GAAG,CAAClG,EAAO4/B,aAEX,IAAM+C,EAAM,eAAA7lC,GAAA,EAAAC,EAAArD,UAAG,YACT+yB,UAAsBA,EAAezsB,GAC3C,IAAC,kBAFW,OAAAlD,EAAAY,MAAA,KAAAC,UAAA,KAGNilC,EAAI,eAAA1lC,GAAA,EAAAH,EAAArD,UAAG,YACP6oC,IAEAjD,UACIA,EAAoBt/B,EAAQoiC,IACpCtE,YAAW,WAAO,IAAD+E,EACG,MAAlBxD,GAA2B,OAATwD,EAAlBxD,EAAoBld,UAApB0gB,EAA6BtP,OAC/B,GAAG,KACL,IAAC,kBARS,OAAAr2B,EAAAQ,MAAA,KAAAC,UAAA,KAUJmlC,EAAW,SAAC7f,GAAU,OAC1B6c,EACEjnC,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAAC7qB,MAAO,CAACmvB,YAAa,MAExCpuB,EAAAa,QAAA1B,cAAC2pB,EAAAjoB,QAAgB,CACf2sB,QAAS,kBAAM0Z,EAAc//B,EAAQoiC,EAAc,EACnDtqC,MAAO,CAAC41B,cAAe,OAAQ3G,WAAY,IAC3CluB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKupB,EAAK,CAAE+B,KAAMqd,KAE9B,EAuBJ,OACExpC,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MACNoY,EA4DAtoC,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKwc,UAAS,CACbC,SAAU1B,EACVz5B,MAAOlG,EAAOkG,MACdpO,MAAO,CAAC0X,MAAAA,GACR6T,KAAMyf,EACNtf,MAAO,kBAAM3qB,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KAAK,EAClB8qB,QAAS,kBAAM0Z,EAAc//B,EAAQoiC,EAAc,EACnDjpC,MAAOA,GACNgoC,GAnEHtoC,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR/sB,MAAO,CAAC0X,MAAAA,GACRtJ,MAAO,SAAAhF,GAAA,IAAE6hC,EAAa7hC,EAAb6hC,cAAsBC,EAAU9hC,EAAjBe,MAAmBlI,EAAQmH,EAARnH,SAAQ,OACjDlB,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACGyE,EAAO4/B,WACN/mC,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRH,KAAK,WACLt6B,MACE,CACE2X,OAAQ,GACRD,MAAO,OACPke,cAAe,QAGnBpH,YAAa,kBACbntB,MAAOA,EACP4B,MAAOokC,EACP1L,IAAK4L,EACL1M,aAAcyM,EACd/b,KACExqB,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAUxN,KAAI,CACbsB,QAAS,kBACPoZ,GAAmBA,EAAgBz/B,EAAO,EAE5CglB,KAAMqd,IAGV7e,MACE3qB,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAUxN,KAAI,CACbsB,QAASuc,EACT5d,KAAMsd,IAGVnO,WAAS,EACT92B,GAAG,eAGLxE,EAAAa,QAAA1B,cAAC2pB,EAAAjoB,QAAgB,CACf5B,MAAO,CAAC41B,cAAe,QACvBrH,QAAS,kBACP0Z,EAAc//B,EAAQoiC,EAAc,GAEtCvpC,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC,GACZe,EAAAa,QAAA1B,cAACqD,EAAAwyB,KAAI,CACHkV,cAAeA,EACfjrC,MAAO,CAACmK,MAAO+gC,EAAYjpC,SAAAA,GAC3BkpC,cAAe,GACdjjC,EAAOkG,SAKf,EAELmd,KAAOrjB,EAAO4/B,WAAwB,kBAAM/mC,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KAAK,EAAtBunC,EAC3Btf,MAhFU,SAACP,GAAU,OAC3BpqB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAACspB,cAAe,MAAO8hB,SAAU,UAC1CljC,EAAO4/B,YACP/mC,EAAAa,QAAA1B,cAAC2pB,EAAAjoB,QAAgB,CAAC2sB,QAASuc,EAAM9qC,MAAO2qC,GACtC5pC,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKupB,EAAK,CAAE+B,KAAMsd,MAG9BC,GAAoBviC,EAAO4/B,WAWzB,KAVF/mC,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAAC2pB,EAAAjoB,QAAgB,CAAC2sB,QAASsc,EAAQ7qC,MAAO2qC,GACxC5pC,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKupB,EAAK,CAAE+B,KAAM,aAE9BnsB,EAAAa,QAAA1B,cAAC2pB,EAAAjoB,QAAgB,CACf2sB,QAAS,kBAAM4Z,GAAiBA,EAAcjgC,EAAO,EACrDlI,MAAO2qC,GACP5pC,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKupB,EAAK,CAAE+B,KAAM,aAI7B,EA8DD7rB,MAAOA,IAiBjB,CAEyB,4B,wICuCD,K,gJA/PxBN,EAAArB,EAAAqB,GAAsCunB,EAAA5oB,EAAA4oB,GAAA4Z,EAAAxiC,EAAAwiC,GAAAuD,EAAA/lC,EAAA+lC,GAAA5b,EAAAnqB,EAAAmqB,GAsCtC,IAAMD,EAASuY,EAAAA,QAAW3mB,OAAO,CAC/BuT,UAAW,CACTC,KAAM,GAER5f,IAAK,CACHka,cAAe,OAEjB+hB,OAAQ,CACN/hB,cAAe,UAEjBgiB,YAAa,CACX5a,WAAY,SACZyC,eAAgB,iBAElBoY,kBAAmB,CACjBtc,WAAY,GAEduc,MAAO,CACL9zB,MAAO,OACPC,OAAQ,OACRub,QAAS,GACT3D,SAAU,WACVoW,WAAY,QACZzQ,QAAS,EACTlG,KAAM,KA+LR7sB,EAAAA,QA3LgB,SAACgpB,GACjB,IACEtmB,EASEsmB,EATFtmB,EACAwlC,EAQElf,EARFkf,YACA3yB,EAOEyT,EAPFzT,MACAmyB,EAME1e,EANF0e,aACAC,EAKE3e,EALF2e,mBACAC,EAIE5e,EAJF4e,qBACAC,EAGE7e,EAHF6e,gBAEAzT,GACEpL,EAFF8e,iBAEE9e,EADFoL,WAEIl1B,GAAQ,EAAAmpB,EAAAA,YAERihB,EAAoB5mC,EAAEU,KAAO8kC,EAG7BqB,EAAc,WAAH,OAAS7B,EAAahlC,EAAG,EACpC8mC,EAAQ,eAAA3mC,GAAA,EAAAC,EAAArD,UAAG,mBAAYkoC,EAAmBjlC,EAAG,IAAD,kBAApC,OAAAG,EAAAY,MAAA,KAAAC,UAAA,KAER+lC,GADU,eAAAxmC,GAAA,EAAAH,EAAArD,UAAG,mBAAYooC,EAAgBnlC,EAAEU,GAAI,GAArC,KACM,EAAAqsB,EAAAA,iBACpB,SAAA/lB,GAAK,OAAIA,EAAMkJ,GAAG82B,oBAAoBhnC,EAAEU,GAAG,KAEvCumC,GAAoB,EAAAljB,EAAAA,UACxB,CAAC,eAAgB/jB,EAAEU,GAAIV,EAAEiX,eAAc,EAAD7W,EAAArD,UACtC,YACE,IACE,IAAMmS,QAAa,EAAAgI,EAAAA,mBAAkBlX,GAErC,OADAiE,QAAQQ,KAAK,UAAWyK,KACpBA,CAKN,CAAE,MAAOlL,GACP,OAAO,CACT,CACF,IACA,CACEgC,gBAAgB,EAChBC,oBAAoB,EACpBF,sBAAsB,EACtBmhC,UAAWC,MAGTlwB,EAAgC,MAAjBgwB,OAAiB,EAAjBA,EAAmB9lC,KAClCimC,EAAgB,eAAA3/B,GAAA,EAAArH,EAAArD,UAAG,mBACvBka,EAAe,KAAOiuB,EAAqBllC,EAAEU,GAAI,IAAD,kBAD5B,OAAA+G,EAAA1G,MAAA,KAAAC,UAAA,KAGlBqmC,GADsBrnC,EAAEsnC,UACb5V,EACX,sBACA,uBAMA6V,EACFN,EAAkB9iB,WAAalN,EAC3B,SACA,yBAKN,IAAIuwB,EAAgBxnC,EAAEqJ,UAAUhE,cACV,OAAlBmiC,IAAwBA,EAAgB,kBACtB,UAAlBA,IAA2BA,EAAgB,QAC/C,IAAM10B,EAAS,IACT20B,OACcj9B,IAAlBu8B,EACI,kBAAM7qC,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAAC0hB,WAAW,EAAMlrC,MAAOA,GAAS,EAC1D+qC,EAEAzB,EAAiB,CACrB/U,cAAe,OACf3G,WAH4B,IAM9B,OACEluB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAAA,EAAOC,OAAAA,IACnB5W,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR/sB,MAAO,CAAC2X,OAAAA,EAAQud,OAAQ,EAAG3F,SAAU,WAAY7X,MAAAA,GACjD6T,KAAM,SAAAJ,GAAK,OACTpqB,EAAAa,QAAA1B,cAAC2pB,EAAAjoB,QAAgB,CACf2sB,QAASmd,EACT1rC,MAAO2qC,GACP5pC,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GACJupB,EAAK,CACT+B,KACEue,EACI,kBACE1qC,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAChB0hB,WAAW,EACXlrC,MAAOA,GACP,EAEJ6qC,KAGS,EAErBxgB,MAAO,SAAAP,GAAK,OACVpqB,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KAIE1C,EAAAa,QAAA1B,cAAC2pB,EAAAjoB,QAAgB,CACf2sB,QAAS0d,EACTjsC,MAAO2qC,GACP5pC,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKupB,EAAK,CAAE+B,KAAMof,MAK9BvrC,EAAAa,QAAA1B,cAAC2pB,EAAAjoB,QAAgB,CACf2sB,QAASod,EACT3rC,MAAO2qC,GACP5pC,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKupB,EAAK,CAAE+B,KAAK,aAE5B,EAEL9e,MAAO,SAAApB,GAAA,IAAEi+B,EAAaj+B,EAAbi+B,cAAsBC,EAAUl+B,EAAjB7C,MAAmBlI,EAAQ+K,EAAR/K,SAAQ,OACjDlB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL4pB,EAAOmF,UACPnF,EAAOxa,IACPwa,EAAO0hB,cAETvqC,EAAAa,QAAA1B,cAACqD,EAAAwyB,KAAI,CACHkV,cAAeA,EACfjrC,MAAO,CAACmK,MAAO+gC,EAAYjpC,SAAAA,GAC3BkpC,cAAe,GACdtmC,EAAEuJ,OAEA,EAGTo+B,YAAa,SAAAr/B,GAAA,IACX89B,EAAa99B,EAAb89B,cACOwB,EAAgBt/B,EAAvBhD,MACAlI,EAAQkL,EAARlL,SAAQ,OAERlB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC4pB,EAAOmF,UAAWnF,EAAOyhB,SACrCtqC,EAAAa,QAAA1B,cAACqD,EAAAwyB,KAAI,CACHoV,cAAe,EACfF,cAAeA,EACfjrC,MAAO,CAACmK,MAAOsiC,EAAkBxqC,SAAAA,IAChC4C,EAAE2nC,aAELzrC,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL4pB,EAAOmF,UACPnF,EAAOxa,IACPwa,EAAO2hB,qBAEPzvB,GACA8vB,GACgB,IAAhBA,EAAsB,GACpB7qC,EAAAa,QAAA1B,cAACqD,EAAAyhC,KAAI,CACH9X,KAAMmf,EACN9d,QAAS,WAAO,EAChBvuB,MAAO,CAAC2X,OAAQ,KAAK,cACT,IACXQ,UAA0B,IAAhByzB,GAAqBj+B,WAAY,IAAI,MAInD,IAGV9I,EAAEsnC,UACDprC,EAAAa,QAAA1B,cAACulC,EAAA7jC,QAAe,CACd8jC,OAAQ,CAACtI,IAAKv4B,EAAEsnC,UAAWt4B,MAAO,eAClC64B,aAAa,SACb/G,WAAW,QACX3lC,MAAKsB,OAAAC,OAAA,GACAqoB,EAAO4hB,MAAM,CAChB7zB,OAAAA,EACAD,MAAAA,IAEFi1B,WAAUrrC,OAAAC,OAAA,GAAMqoB,EAAO4hB,MAAM,CAAC7zB,OAAAA,EAAQD,MAAAA,MAEtC,KACJ3W,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MAGd,CAEwB,4B,uEC1ME,K,oHArD1BlwB,EAAArB,EAAAqB,GAmDCoB,EAAAA,QA3CD,SAAoB6C,GAQhB,IAPF4D,EAAI5D,EAAJ4D,KACA2F,EAAUvJ,EAAVuJ,WACAomB,EAAc3vB,EAAd2vB,eAMMwS,GACJ,EAAApT,EAAAA,iBACI6Y,EACJr+B,IAAeoB,EAAAA,WAAW4hB,QACtB,iBACA,gBACAsb,EACJt+B,IAAeoB,EAAAA,WAAW+F,OAAS,OAAS,SAC9C,OACE3U,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MACRlwB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR/sB,MAAO,CAAC+tB,QAAS,IACjB3f,MAAOxF,EAAKwF,MACZmgB,QAAS,WACP4Y,EAAWe,SAAS,CAClB/gC,KAAMylC,EACNv6B,OAAQ,CACNud,UAAWhnB,EAAKrD,GAChBmB,SAAUkC,EAAKlC,SACf6G,eAAgB3E,EAAK5B,WAG3B,EACAukB,KAAM,kBAAMxqB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,KAAI,CAACC,KAAM2f,GAAe,EAC5CnhB,MAAO,kBACL3qB,EAAAa,QAAA1B,cAACqD,EAAAsyB,WAAU,CACT3I,KAAM,SACNqB,QAAS,kBAAMoG,EAAe/rB,EAAK,GACnC,IAKZ,CAE0B,4B,2BCrBxB,K,4FA9BiBzG,EAAAA,OAAG,CACpB4sB,UAAW,CACTC,KAAM,EACNC,WAAY,EACZC,UAAW,GAEbtmB,KAAM,CACJqmB,WAAY,GACZE,YAAa,EACbltB,SAAU,GACV0V,OAAQ,IACRxN,MAAO,QACPuN,MAAO,IAET0X,SAAU,CACRF,UAAW,EACXxX,MAAO,GACPC,OAAQ,IAEV0X,OAAQ,CACN1X,OAAQ,GACR2X,QAAS,OACTC,SAAU,WACVhG,gBAAiB,QACjB7R,MAAO,OACPwX,UAAW,GAEbhC,KAAM,CACJiC,YAAa,IAEf,U,QAAA,Y,+DCZ2B,K,gDAhBa,SAAAvrB,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,kEAJ1C9C,EAI0C,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAJ1CU,CAAAhE,GAAkCunB,EAAA5oB,EAAA4oB,GAIlCwkB,EAAAptC,EAAAotC,GAcE3qC,EAAAA,SAEa,EAAAwsB,EAAAA,OAdE,WACf,OACE5tB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL2X,OAAQ,OACRD,MAAO,SAET3W,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,KACHb,EAAAa,QAAA1B,cAAC4sC,EAAAlrC,QAAY,OAIrB,GAE6B,4B,yJCkO5B,K,oEAtPmC,SAAAgC,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,2DA8BrB,SAAoBmB,GAM/B,IALF2S,EAAM3S,EAAN2S,OACAo1B,EAAW/nC,EAAX+nC,YAKM1rC,GAAQ,EAAAmpB,EAAAA,YACRiH,GAAW,EAAAC,EAAAA,kBACV0Y,EAAgC2C,EAAhC3C,eAAgB4C,EAAgBD,EAAhBC,aACjBzP,EAAuB,MAAZyP,OAAY,EAAZA,EAAczP,SACzB0P,GAAkB,MAAR1P,OAAQ,EAARA,EAAU/V,OAAO,WAAY,EACtC9P,GAAS,EAAAuR,EAAAA,WAATvR,MACDorB,GAAU,EAAAC,EAAAA,gBACV9S,EAAW+c,EACXE,GAAkB,EAAA5Y,EAAAA,aAAW,eAAAlvB,GAAA,EAAAH,EAAArD,UACjC,UAAO2hC,GAMP,IAAC,gBAAA79B,GAAA,OAAAN,EAAAQ,MAAA,KAAAC,UAAA,EAPgC,GAQjC,CAAC++B,OAAO,IAGJuI,GAAa,EAAAvkB,EAAAA,UACjB,WAAawhB,GAAe,EAADnlC,EAAArD,UAC3B,YACE,IAAImS,EAEJ,IACEA,QAAa,EAAAV,EAAAA,aAAY4c,EAC3B,CAAE,MAAOpnB,GAAM,CAUf,OARKkL,IAAMA,SAAc,EAAAiR,EAAAA,YAAWiL,IAAWpL,QAE/C4M,GACE,EAAA2b,EAAAA,QAAO,CACLC,WAAYC,EAAAA,gBAAgBF,OAC5B5rB,QAAS4oB,KAGNr2B,CACT,IACA,CACE+b,UAASgT,EACTj4B,gBAAgB,IAGdg6B,EAAesI,EAAWpkB,UAC1B+b,EAAqB,MAAVqI,OAAU,EAAVA,EAAYnnC,KACvB4T,GAA0B,MAARqW,OAAQ,EAARA,EAAUrW,kBAAmB,EAC/CyP,EAAW3R,EAAQ,IACnB61B,EAAelkB,EAAW1R,EAAS,EAAIA,EAAS,GACrC,EAAAqY,EAAAA,UACjB,OACEjvB,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAA8sB,OAAM,CACL/C,UAAS8c,EACT/oC,MAAOA,EACPrB,MAAO,CACLupB,gBAAiB,QACjBwE,QAAS,EACToC,OAAQ,EACRzY,MAAAA,EACAC,OAAQ41B,EACRhe,SAAU,SACV0F,IAAK,EACL1J,KAAM,EACNG,MAAO,EACP0J,OAAQ,GAEV3E,aAAc,CACZ/Y,MAAO2R,EAAW3R,EAAQ,OAC1BC,OAAQ41B,EACRxf,QAAS,EACToC,OAAQ,IAEVpvB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL0X,MAAO2R,EAAW3R,EAAQ,OAC1BC,OAAQ41B,EAAe,GACvBhe,SAAU,aAEX0d,GAAW7C,GAAkBtF,GAC5B/jC,EAAAa,QAAA1B,cAACulC,EAAA7jC,QAAe,CACd5B,MAAO,CAAC2X,OAAQ41B,GAChBb,aAAa,SAEbhH,OAAQ,CAACtI,IAAK0H,MAGhBmI,GAAW7C,GAAkBtF,EAE3B/jC,EAAAa,QAAA1B,cAAA,SAEE+jC,UAAU,EACVjkC,MAAO,CACL0X,MAAO,OACPC,OAAQ,OACR61B,UAAW,WAEbrJ,UAAW,SAAAtgC,GACT,IAAO0/B,EAAe1/B,EAAEquB,YACrB3N,OADIgf,YAEP2J,EAAgBlY,YAAYuO,GAC5B9R,GACE,EAAAgc,EAAAA,aAAY,CACV7U,OAAO,EACPyU,WAAYC,EAAAA,gBAAgB1U,QAGlC,EACAwL,QAAS,SAAAvgC,GACP4tB,GACE,EAAAgc,EAAAA,aAAY,CACV7U,OAAO,EACPyU,WAAYC,EAAAA,gBAAgB1U,QAGlC,EACAyL,QAAS,SAAArX,GACPlkB,QAAQQ,KAAK,QAAS0jB,EACxB,EACAsW,aAAc,SAAAz/B,GACZ,IAAO0/B,EAAe1/B,EAAEquB,YACrB3N,OADIgf,YAKLA,EAFsB,GAGtBA,EAAc3pB,EAHQ,IAIrBszB,EAAgBnkB,WAEjBmkB,EAAgBlY,YAAYuO,EAEhC,EACAmK,SAAU,WACR5kC,QAAQQ,KAAK,SACf,EACAqkC,aAAc,SAAA9pC,GACPkpC,EAAYa,eACf/pC,EAAEquB,YAAY3N,OAAOyU,MACzB,EACA2C,IAAK,SAAAkS,GAGDA,GACAA,EAAGlV,QACHkV,EAAGtK,WAIP,EACAW,IAAKY,GACL/jC,EAAAa,QAAA1B,cAAA,SACE81B,MAAM,eACN8X,KAAK,YACLC,QAAQ,KACRnsC,SAAO,KA8BX,KACHijC,EACC9jC,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAChB7qB,MAAO,CAACuvB,SAAU,WAAYye,UAAW,QACzC5vB,KAAM,KAEN,KACJrd,EAAAa,QAAA1B,cAACqD,EAAAsyB,WAAU,CACT71B,MAAO,CACLuvB,SAAU,WACV+C,OAAQ,UACR5G,MAAyC,EACzCuJ,IAAwC,EACxCW,cAAe,OACfV,OAAQ,KAEVhI,KAAM,QACNoN,KAAK,WACLlc,KAAM,GACNmQ,QAAS,kBAAMwe,EAAYlD,aAAa,GAAG,MAIjD9oC,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MAGd,E,OAtPAlwB,EAAoC,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAApCU,CAAAhE,GAAoC0kC,EAAA/lC,EAAA+lC,GAAAxkC,EAAAvB,EAAAuB,GAAAqnB,EAAA5oB,EAAA4oB,GAAAkH,EAAA9vB,EAAA8vB,EAsPnC,4B,yECnOgC,K,kDAjBmB,SAAA5rB,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,kEAFpD9C,EAEoD,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAFpDU,CAAAhE,GAEA2tB,EAAAhvB,EAAAgvB,GAeEvsB,EAAAA,SAEa,EAAAwsB,EAAAA,OAVM,WACnB,IAAMhF,GAAW,EAAAskB,EAAAA,UACf/gC,EAAAA,iBACAb,EAAAA,iBACA3E,EAAAA,WAGF,OAAO3G,EAAAa,QAAA1B,cAACwuB,EAAA9sB,QAAa,CAAC+nB,SAAUA,GAClC,GAEiC,4B,6MCgMN,K,kJAnN3B5oB,EAAArB,EAAAqB,GAIAtB,EAAAC,EAAAD,GAIAyuC,EAAAxuC,EAAAwuC,GAA+CjtC,EAAAvB,EAAAuB,GAAAsnB,EAAA7oB,EAAA6oB,GAI/C4lB,EAAAzuC,EAAAyuC,GAiBA,IAAMC,GAAY,EAAAC,EAAAA,yBAEZC,GAAM,EAAAC,EAAAA,oCAENC,GAAY,EAAAC,EAAAA,8BAEZC,GAAY,EAAAC,EAAAA,mBAEZC,GAAkB,EAAAC,EAAAA,mBAElBC,GAAgB,EAAAC,EAAAA,kBAEhBC,GAAe,EAAAC,EAAAA,iBAEfC,GAAc,EAAAC,EAAAA,gBAEdC,EAAS,WACb,IAAMnI,GAAM,EAAAhe,EAAAA,WACNwI,GAAW,EAAAC,EAAAA,kBACX2d,GAAc,EAAAzd,EAAAA,iBAClB,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAGC,cAAc,KAElC,EAAAC,EAAAA,yBACA,IAAMC,EAAsB,SAACC,GAC3B,IAAK,IAADC,EAAAC,EAAAC,EAAAC,EACIC,GACI,MAARL,GAAc,OAANC,EAARD,EAAU1pC,OAAW,OAAP2pC,EAAdA,EAAgB9jC,YAAK,EAArB8jC,EAAuBK,QACb,MAARN,GAAoB,OAAZE,EAARF,EAAU1pC,KAAK6F,YAAK,EAApB+jC,EAAsBtkC,QAAS,KAC5B,CAAC,EACF2kC,EACM,MAAVF,GAAiB,OAAPF,EAAVE,EAAYlkC,YAAK,EAAjBgkC,EAAmBG,QAAiB,MAAVD,GAAiB,OAAPD,EAAVC,EAAYlkC,YAAK,EAAjBikC,EAAmBxkC,QAAS,GAClD4kC,EAAaH,EAAW5oC,KACxBgpC,EAA4B,MAAdF,OAAc,EAAdA,EAAgB9oC,KAC9BkL,EAAuB,MAAd49B,OAAc,EAAdA,EAAgB59B,OAC/Bof,GAAS,EAAA2e,EAAAA,gBAAe,CAACD,YAAAA,EAAa99B,OAAAA,EAAQ69B,WAAAA,IAChD,CAAE,MAAOrnC,GAAM,CACjB,EACA,OAAIo+B,EAAIvvB,MAAQ,IAEZ3W,EAAAa,QAAA1B,cAACmD,EAAAgtC,sBAAsBC,SAAQ,MAC5B,SAAAC,GACC,IAAAvrC,EAAsBurC,GAAU,CAAChlB,KAAM,EAAGG,MAAO,GAA1CH,EAAIvmB,EAAJumB,KAAMG,EAAK1mB,EAAL0mB,MACP8kB,EAAuB,GAAKrL,KAAKsL,IAAIllB,EAAMG,GAGjD,OACE3qB,EAAAa,QAAA1B,cAACkuC,EAAUsC,UAAS,CAClBC,cAAe,CACbC,YAAa,CACXl5B,MACI84B,GAGNK,eAAgB,OAChBC,WAAY,aAEdC,uBAAuB,EACvBC,cAAc,OACdC,gBAAiB,CACfplC,MAAO,SAAAA,GAAK,OACV4jC,EAAoB5jC,EAA0B,GAElDqlC,cAAe,SAAA/lB,GAAK,OAAIpqB,EAAAa,QAAA1B,cAACiuC,EAAAvsC,QAAgBupB,EAAS,GAClDpqB,EAAAa,QAAA1B,cAACkuC,EAAU+C,OAAM,CACfhqC,KAAK,WACLiqC,UAAW1C,EACX2C,QAAS,CACPC,aAAa,EACbC,WAAY,SAAAnsC,GAAA,IAAE+E,EAAK/E,EAAL+E,MAAW/E,EAAJgZ,KAAI,OACvBrd,EAAAa,QAAA1B,cAACT,EAAAmC,QAAQ,CACPuF,KAAK,iBACLgD,MAAOA,EACPiU,KAAM,IACN,EAEJhQ,MAAO,WAGXrN,EAAAa,QAAA1B,cAACkuC,EAAU+C,OAAM,CACfhqC,KAAK,cACLiqC,UAAWxC,EACXyC,QAAS,CACPC,aAAa,EACbljC,MAAO,cAGXrN,EAAAa,QAAA1B,cAACkuC,EAAU+C,OAAM,CACfhqC,KAAK,aACLiqC,UAAWpC,EACXqC,QAAS,CACPC,aAAa,EACbljC,MAAO,aAGXrN,EAAAa,QAAA1B,cAACkuC,EAAU+C,OAAM,CACfhqC,KAAK,YACLiqC,UAAWlC,EACXmC,QAAS,CACPC,aAAa,EACbljC,MAAO,YAGXrN,EAAAa,QAAA1B,cAACkuC,EAAU+C,OAAM,CACfhqC,KAAK,cACLiqC,UAAWtC,EACXuC,QAAS,CACPC,aAAa,EACbC,WAAY,SAAAnoC,GAAA,IAAEe,EAAKf,EAALe,MAAWf,EAAJgV,KAAI,OACvBrd,EAAAa,QAAA1B,cAACT,EAAAmC,QAAQ,CACPuF,KAAK,iBACLgD,MAAOA,EACPiU,KAAM,IACN,EAEJhQ,MAAO,cAKjB,IAKJrN,EAAAa,QAAA1B,cAACouC,EAAIoC,UAAS,CACZc,SAAU,CAACliB,QAAS+f,EAAc,OAAS,QAC3C4B,gBAAiB,CACfplC,MAAO,SAAAA,GAAK,OACV4jC,EAAoB5jC,EAA0B,IAElD9K,EAAAa,QAAA1B,cAACouC,EAAI6C,OAAM,CACThqC,KAAK,WACLkqC,QAAS,CACPI,YAAa,QACbC,WAAY,UAEdN,UAAW1C,IAEb3tC,EAAAa,QAAA1B,cAACouC,EAAI6C,OAAM,CACThqC,KAAK,cACLiqC,UAAWxC,EACXyC,QAAS,CACPI,YAAa,WACbC,WAAY,cAGhB3wC,EAAAa,QAAA1B,cAACouC,EAAI6C,OAAM,CACThqC,KAAK,YACLiqC,UAAWlC,EACXmC,QAAS,CACPI,YAAa,SACbC,WAAY,sBAGhB3wC,EAAAa,QAAA1B,cAACouC,EAAI6C,OAAM,CACThqC,KAAK,cACLkqC,QAAS,CACPI,YAAa,WACbC,WAAY,OAEdN,UAAWtC,IAInB,EAgBE3sC,EAAAA,QAdmB,WAAH,OAChBpB,EAAAa,QAAA1B,cAACsuC,EAAUkC,UAAS,CAClBC,cAAe,CACbgB,OAAQ,SAAAxmB,GAAK,OAAIpqB,EAAAa,QAAA1B,cAACguC,EAAAtsC,QAAwBupB,EAAS,IAErDpqB,EAAAa,QAAA1B,cAACsuC,EAAU2C,OAAM,CACfhqC,KAAMyqC,EAAAA,cACNR,UAAWhC,EACXiC,QAAS,CACPQ,YAAa,WACbC,cAAc,KAGE,CAGG,4B,mLCzB1B,K,0EA/KoC,SAAAluC,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,2DAmCtB,SAA4BmB,GAEf,IAAD+sC,EADzBV,EAAOrsC,EAAPqsC,SAEA,EAAApY,EAAAA,YAAU,WACR,IAAM+Y,EAAW,eAAA5sC,GAAA,EAAAH,EAAArD,UAAG,kBACZqwC,EAAAA,MAAMC,kBAAkB,CAC5BC,oBAAoB,EACpBC,oBAAqBC,EAAAA,oBAAoBC,WACzCC,sBAAsB,EACtBC,yBAAyB,EACzBC,wBAAyBC,EAAAA,wBAAwBJ,WACjDK,mBAAmB,GAEvB,IAAC,kBATgB,OAAAvtC,EAAAQ,MAAA,KAAAC,UAAA,KAUjBmsC,GACF,GAAG,IACH,IAAM3wC,GAAQ,EAAAmpB,EAAAA,YACR1nB,GAAc,EAAAmxB,EAAAA,kBACpB4C,GAAiC,EAAAC,EAAAA,UAAS,IAAGC,GAAA,EAAAjqB,EAAAlL,SAAAi1B,EAAA,GAAtC+b,EAAW7b,EAAA,GAAE8b,EAAS9b,EAAA,GAC7BxO,GAAwB,EAAAU,EAAAA,WAAjBvR,EAAK6Q,EAAL7Q,MAAOC,EAAM4Q,EAAN5Q,OACR2iB,GAAO,EAAA1I,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAGwD,WAAW,IACnDC,GAAY,EAAAzoB,EAAAA,YAAWnnB,EAAAA,eACvB0J,GAAW,EAAA+b,EAAAA,UAAS,YAAY,kBAAM,EAAAhiB,EAAAA,cAAa,IACnDG,EAAiB,MAAR8F,GAAc,OAANklC,EAARllC,EAAU7G,WAAI,EAAd+rC,EAAgBxsC,GAC/B8xB,GAA8B,EAAAP,EAAAA,WAAS,GAAMQ,GAAA,EAAAxqB,EAAAlL,SAAAy1B,EAAA,GAAtC2b,EAAQ1b,EAAA,GAAE2b,EAAS3b,EAAA,GACpBjD,GAAoB,EAAAC,EAAAA,cACxB,SAAC1rB,GAAoB,OAAK,EAAAlB,EAAAA,WAAUkB,EAAK,GACzC,CAACg8B,OAAO,IAGJvyB,GAAS,EAAAuf,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAGj9B,MAAM,IAChD9D,GAAa,EAAAqjB,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAG/gC,UAAU,IAExDvH,GACG,MAANqL,OAAM,EAANA,EAAyBrL,YAAkB,MAANqL,OAAM,EAANA,EAAQ9E,gBAE1C2lC,EAAgB,OAAS3kC,EACzBN,EAAmBklC,EAAAA,oBAAoB5Z,SAAShrB,GAEhD6kC,EAAW,eAAAhqC,GAAA,EAAAnE,EAAArD,UAAG,YAClB,KACkC,IAAhCgxC,EAAYprB,OAAO,UACe,IAAlCorB,EAAYprB,OAAO,aAGrB1e,QAAQQ,KAAKspC,IAEI,IAAbI,GAAJ,CACAC,GAAU,GACVjN,YAAW,WACTiN,GAAU,EACZ,GAAG,KAEH,IAAII,QAAe,EAAAC,EAAAA,cAAaV,GAChC,GAAIS,GAAUA,EAAO9tC,GAAI,CACvB,IAAOA,EAAM8tC,EAAN9tC,GAEP,IACE,IAAM+3B,EAAgCh8B,OAAAC,OAAA,GACjC8xC,EAAO,CACVh1B,WAAY9Y,EACZA,GAAIsB,EAAAA,QAAKC,KAAK6G,WACd3G,SAAUA,GAAYksC,EACtBnsC,OAAQgsC,EAAUxpC,KAAKhE,GACvB0K,MAAM,IAAI5I,MAAOC,UACjB0G,YAAY,EACZH,YACEwlC,EAAO3+B,QAAS2+B,EAAO3+B,MAAM9E,cAAgBP,EAC/CqF,MACE2+B,EAAO3+B,OACP2+B,EAAO3+B,MAAMvO,KAAI,SAACtB,GAAiC,MAAM,CACvDsC,KAAMtC,EAAEsC,KACRiX,KAAMvZ,EAAE+K,OACT,MAEL9G,QAAQQ,KAAK,YAAag0B,SACpBjJ,EAAkBW,YAAYsI,SAC9Bx6B,EAAYmJ,eAAe,CAC/Bg6B,SAAU,iBAAmB3I,EAAGt2B,WAElC6rC,EAAU,GACZ,CAAE,MAAOhqC,GACPC,QAAQC,MAAM,cAAeF,EAC/B,CACF,CACAoqC,GAAU,EAtCmB,CAuC/B,IAAC,kBA/CgB,OAAA7pC,EAAAxD,MAAA,KAAAC,UAAA,MAiDjB,EAAA+kC,EAAAA,UAAQ,WACNwI,GACF,GAAG,CAACR,IACJ,IAAMW,EAAoB77B,EAAQ,MAAG,EAEf87B,EAAAA,qBAET,UAATlZ,GACgBmZ,EAAAA,eAEP,WAATnZ,GACgB,iBAEpB,OACEv5B,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAO2R,OAAM,CAACryC,MAAOA,GACpBN,EAAAa,QAAA1B,cAACyzC,EAAAC,SAAQ,CACPvC,QAASA,EACTrqC,SAAUA,EACVgsC,SAAUA,EACVJ,YAAaA,EACbC,UAAWA,IAEb9xC,EAAAa,QAAA1B,cAAC2zC,EAAAC,QAAO,CACNP,kBAAmBA,EACnBtlC,iBAAkBA,EAClBlH,OAAQA,IAETwsC,EACCxyC,EAAAa,QAAA1B,cAACqD,EAAAwwC,UAAS,CACR3Z,QAAS4Y,EACT1Y,KAAK,MACL9L,YACEjgB,IAAeoB,EAAAA,WAAWnG,QACtBwqC,EAAAA,8BACAC,EAAAA,sBAEN5yC,MAAOA,EACPrB,MAAO,CAAC2X,OAAQ,GAAID,MAAO,KAC3Bw8B,WAAY,CAAChL,cAAe,IAC5BjmC,MAAO2vC,EACP/X,aAAcgY,IAEd,MAEN9xC,EAAAa,QAAA1B,cAACi0C,EAAAC,gBAAe,CACdrtC,OAAQA,EACRkH,iBAAkBA,EAClB0J,OAAQA,IAIhB,E,cA1LA5W,EAWqC,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAXrCU,CAAAhE,GAAsEE,EAAAvB,EAAAuB,GAAAuuB,EAAA9vB,EAAA8vB,GAWtElpB,EAAA5G,EAAA4G,EA+KC,4B,8MCuMA,K,gFArVoC,SAAA1C,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,2DAQtB,SAAoBsnB,GAAa,IAAD3e,EAAA6nC,EAG3CttC,EAOEokB,EAPFpkB,OACAwH,EAME4c,EANF5c,WACA+lC,EAKEnpB,EALFmpB,gBACAttC,EAIEmkB,EAJFnkB,SACAutC,EAGEppB,EAHFopB,UACA3kB,EAEEzE,EAFFyE,UACA3hB,EACEkd,EADFld,iBAEI5M,GAAQ,EAAAmpB,EAAAA,YACR1nB,GAAc,EAAAmxB,EAAAA,kBACdugB,GAAc,EAAA5iB,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAM4oC,MAAM,IAClDhjB,GAAW,EAAAC,EAAAA,kBACXoC,GAAM,EAAAC,EAAAA,iBACN2gB,EAAoBF,EAAYG,aAChCC,EAAaJ,EAAYzgC,KACzB8gC,EAAiBL,EAAY7hC,MAC7BmiC,EAAgBN,EAAYM,cAC5BC,EAAYP,EAAYQ,UAExBC,GADoBT,EAAYU,WACXV,EAAYS,oBACjCE,EAAqBX,EAAYW,mBACjCC,GAAgC,MAAdP,OAAc,EAAdA,EAAgBtvC,IAAE,KAAkB,MAAdsvC,OAAc,EAAdA,EAAgB7hC,UACxDqiC,EACgC,OAApC7oC,EAAwBC,mBAAY,EAAZD,EAAcE,QAAQ,aAC1C2nB,GAAoB,EAAAC,EAAAA,cACxB,SAAC1rB,GAAkD,OACjD,EAAAlB,EAAAA,WAAUkB,EAAK,IAEnBiuB,GAAkC,EAAAC,EAAAA,UAAS,CAAC,GAAEC,GAAA,EAAAjqB,EAAAlL,SAAAi1B,EAAA,GAAvCye,EAASve,EAAA,GAAEwe,EAAYxe,EAAA,GAExBye,GAAqB,EAAAlhB,EAAAA,cACzB,kBACEmhB,EAAAA,QAAMC,QAAQ,CACZp6B,IAAQ2D,EAAAA,OAAM,wBAAwBm2B,EAAY,cAAcC,EAChEM,OAAQ,MACR3vC,KAAM4uC,EACNgB,iBAAiB,EACjBC,iBAAkB,SAAAxhC,GAAQ,OACxBod,GAAS,EAAAqkB,EAAAA,uBAAsBzhC,GAAU,GAC3C,GACJ,CACEuwB,MAAK,SAACmR,GACJ,GAAIA,EAAW,EAAG,OAAO,CAC3B,IAIEC,GAAgC,EAAA1hB,EAAAA,cAAY,SAAA2hB,GAAI,OACpD,EAAA9gC,EAAAA,eAAa7T,OAAAC,OAAC,CAAC,EAAG00C,EAASX,GAAYV,EAAY,IAG/CsB,EACJ7hB,EAAkBtL,WAAaysB,EAAmBzsB,UAChDotB,EAAapB,EACiB,QAAhB,MAAdF,OAAc,EAAdA,EAAgB3mC,aAClBioC,GAAa,GAEf,IAAMC,GAAW,eAAApxC,GAAA,EAAAC,EAAArD,UAAG,YAClB,IAAK,IAADy0C,EACIJ,EAAc9U,KAAKC,MAAMD,KAAKE,UAAUwT,IACvCn9B,EAAiB49B,EAAjB59B,MAAOC,EAAU29B,EAAV39B,OACRS,EAAMk9B,EAAUj9B,SAAW,EACjCvP,QAAQQ,KAAK,YAAairC,EAAW,aAAchmC,GACnD0nC,EAAKn6B,cAAe,EACpB,IAAI5T,QAAuB,EAAAC,EAAAA,SAAQ8tC,EAAKjvC,UAQxC,GAPKkB,IACHA,QAAgB,EAAAC,EAAAA,SAAQ8tC,EAAKjvC,SAAUA,IAEzC8B,QAAQQ,KAAK,iBAAkBpB,EAAQlB,EAAUivC,EAAKjvC,UAC5C,OAAVqvC,EAAInuC,IAAAmuC,EAAQ3vC,WACVyvC,GAAa,GAGb5nC,IAAeoB,EAAAA,WAAW+F,QACZ,kBAAd6+B,EACA,CAAC,IAAD+B,EAAAC,EAAAC,EACA1tC,QAAQQ,KAAK,2CACb,IAAMoM,EAAwB,CAC5BnQ,GAAIsB,EAAAA,QAAKC,KAAK6G,WACdS,MAAO6nC,EAAK7nC,MACZrH,OAAAA,EACAgH,iBAAiB,EACjBQ,WAAAA,EACAvH,SAAAA,EACAyH,QAAS,EACTZ,UAAU,EACV6H,OAAQ,CACN9F,OAAQ,IACR8H,MAAAA,EACAC,OAAAA,EACAuB,OAAAA,EACA9F,OAAAA,EACA1E,aAAa,IAAIrH,MAAOC,UACxB2R,iBAAAA,EACA7C,KAAM,IAER1P,SAAgB,OAAR4vC,EAAEpuC,QAAM,EAANouC,EAAQ5vC,SAClBuJ,MAAM,IAAI5I,MAAOC,iBAEb+sB,EAAkBW,YAAYtf,GACpC,IAAMa,EAAqB,CACzBhR,GAAIsB,EAAAA,QAAKC,KAAK6G,WACdS,MAAO,UACPpH,SAAU0O,EAAOnQ,GACjBwB,OAAAA,EACA+G,eAAe,EACfW,QAAS,EACTF,WAAAA,EACAV,UAAU,EACVoC,MAAM,IAAI5I,MAAOC,UACjBoO,OAAQ,CACNyB,eAAe,EACfH,OAAO,GAETtQ,SAAgB,OAAR6vC,EAAEruC,QAAM,EAANquC,EAAQ7vC,gBAEd2tB,EAAkBW,YAAYze,GACpC,IAAMkgC,EAA6B,CACjClxC,GAAImQ,EAAOnQ,GAAK,YAChB6I,MAAO,WACPpH,SAAU0O,EAAOnQ,GACjBwB,OAAAA,EACA+G,eAAe,EACfW,QAAS,EACTF,WAAAA,EACAV,UAAU,EACVoC,MAAM,IAAI5I,MAAOC,UACjBoO,OAAQ,CACNyB,eAAe,EACfH,OAAO,EACP8lB,gBAAgB,GAElBp2B,SAAgB,OAAR8vC,EAAEtuC,QAAM,EAANsuC,EAAQ9vC,gBAEd2tB,EAAkBW,YAAYyhB,GACpCR,EAAKjvC,SAAWuP,EAAMhR,GACtB0wC,EAAKjoC,WAAaC,EAClBgoC,EAAKhoC,iBAAmBA,EACxBgoC,EAAKhjC,SAAW,CACdmF,IAAAA,EACAV,MAAAA,EACAC,OAAAA,EACAuB,OAAAA,EACA9F,OAAAA,EACA6F,iBAAAA,EAEJ,CACI1K,IAAeoB,EAAAA,WAAW+F,SAC3BugC,EAAwBhjC,SAAW,CAClCmF,IAAAA,EACAV,MAAAA,EACAC,OAAAA,EACAuB,OAAAA,EACA9F,OAAAA,EACA6F,iBAAAA,IAGJnQ,QAAQQ,KAAK,sBAAuBiF,EAAY0nC,SAC1CD,EAA8BhhB,YAAYihB,SAC1C5hB,EAAkBW,YAAW1zB,OAAAC,OAAC,CAAC,EAAG00C,EAASX,IACjD,IACMa,IAAY,EAAAr1B,EAAAA,eAAcm1B,EAAK1wC,GAAI0wC,EAAKjvC,SAC9C,CAAE,MAAO6B,GACPC,QAAQC,MAAM,oBAAqBF,EACrC,CACA,GAAIisC,EAAe,CACjBrjB,GAAS,EAAAilB,EAAAA,sBAAoB,IAC7BjlB,GAAS,EAAAklB,EAAAA,uBAAqB,UACxBnB,EAAmBxgB,cACzB,IAAM4hB,EAAUC,EAAAA,UAAY9vC,EAAS,IAAMquC,EAC3Ca,EAAKa,YAAcF,EACnBX,EAAKc,UAAW,EAChBd,EAAK/nC,UAAY,QACjB+nC,EAAK36B,IAAMs7B,EACX9tC,QAAQQ,KAAK,6BAA8B2sC,EAC7C,OACMnzC,EAAYmJ,eAAe,CAC/Bg6B,SAAU,CAAC,iBAAmBgQ,EAAKjvC,kBAE/BlE,EAAYmJ,eAAe,CAC/Bg6B,SAAU,CAAC,iBAAmBj/B,WAE1BlE,EAAYmJ,eAAe,CAC/Bg6B,SAAU,CAAC,gBAAiBrW,WAExB9sB,EAAYmJ,eAAe,CAC/Bg6B,SAAU,CAAC,eAAgBrW,KAE7B6B,GAAS,EAAAilB,EAAAA,sBAAoB,IAC7BjlB,GAAS,EAAAklB,EAAAA,uBAAqB,IACzB3vC,GACH8sB,EAAIoU,SAAS,SAAU,CAAClhC,SAAUivC,EAAKjvC,UAE3C,CAAE,MAAO6B,GACPC,QAAQC,MAAM,2BAA4BF,EAC5C,CACF,IAAC,kBA3IgB,OAAA7D,EAAAY,MAAA,KAAAC,UAAA,KA4IjB,OACE9E,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAA8sB,OAAM,CAAChvB,MAAOA,EAAOisB,QAAS6nB,GAC7Bp0C,EAAAa,QAAA1B,cAACqD,EAAAyzC,KAAKC,MAAK,CACT9pB,WAAY,CAAClrB,SAAU,IACvBmM,MAAM,iBACN8oC,SAAwB,MAAdrC,OAAc,EAAdA,EAAgB7hC,SAC1BuY,KAAM,SAAAJ,GAAK,OAAIpqB,EAAAa,QAAA1B,cAACqD,EAAAuyB,OAAO7I,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKupB,EAAK,CAAE+B,KAAK,SAAS,IAEvDnsB,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MACRlwB,EAAAa,QAAA1B,cAACqD,EAAA6pB,YAAW,CACV+pB,eAAiC,MAAlBlC,OAAkB,EAAlBA,EAAoB5gC,WAAY,KAGnDtT,EAAAa,QAAA1B,cAACqD,EAAA6zC,OAAM,KACLr2C,EAAAa,QAAA1B,cAACqD,EAAA8zC,MAAK,CACJ/pB,QAASonB,EACTtZ,UAAWkZ,EACXjzC,MAAOA,EACPrB,MAAO,CAAC+tB,QAAS,KACjBhtB,EAAAa,QAAA1B,cAACqD,EAAAyzC,KAAI,KACHj2C,EAAAa,QAAA1B,cAACqD,EAAAyzC,KAAKC,MAAK,CACT9pB,WAAY,CAAClrB,SAAU,IACvBmM,MAAM,oBACN8oC,SAAS,iBACT3rB,KAAM,SAAAJ,GAAK,OAAIpqB,EAAAa,QAAA1B,cAACqD,EAAAuyB,OAAO7I,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKupB,EAAK,CAAE+B,KAAK,SAAS,IAEvDnsB,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MACRlwB,EAAAa,QAAA1B,cAAC6nB,EAAAC,uBAAsB,CAAChoB,MAAO,CAAC2X,OAAQ,QACtC5W,EAAAa,QAAA1B,cAAC6nB,EAAAmJ,WAAU,KACTnwB,EAAAa,QAAA1B,cAACqD,EAAAyzC,KAAKM,QAAO,KACXv2C,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKyqB,QAAO,KACXx2C,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR3e,MAAO,WACPo+B,YAA2B,MAAdqI,OAAc,EAAdA,EAAgB7hC,WAE/BjS,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR3e,MAAO,SACPo+B,YAA2B,MAAdqI,OAAc,EAAdA,EAAgB10C,OAE/BY,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR3e,MAAO,WACPo+B,YAAsB,MAAT8I,OAAS,EAATA,EAAWj9B,WAE1BtX,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR3e,MAAO,QACPo+B,YAAsB,MAAT8I,OAAS,EAATA,EAAW59B,QAE1B3W,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR3e,MAAO,SACPo+B,YAAsB,MAAT8I,OAAS,EAATA,EAAW39B,SAE1B5W,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR3e,MAAO,OACPo+B,aAAa,EAAAvH,EAAAA,WACG,MAAd4P,GAAoB,OAANR,EAAdQ,EAAgBz2B,WAAI,EAApBi2B,EAAsB1mC,cAG1B5M,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR3e,MAAO,WACPo+B,YAA2B,MAAdqI,OAAc,EAAdA,EAAgB7tC,WAE9B4tC,EACC7zC,EAAAa,QAAA1B,cAAA,SACEF,MAAO,CAACsvB,QAAS,QACjB4U,IAAK12B,IAAIyG,gBAAgB2gC,GACzB4C,iBAAkB,SAAA3zC,GAGhB0xC,EAAa,CACX79B,MAAO7T,EAAEquB,YAAY3N,OAAOkzB,WAC5B9/B,OAAQ9T,EAAEquB,YAAY3N,OAAOmzB,YAC7Br/B,SAAUxU,EAAEquB,YAAY3N,OAAOlM,UAEnC,IAGFtX,EAAAa,QAAA1B,cAACy3C,EAAAC,MAAK,CAEJlS,OAAQ,CAACtI,IAAmB,MAAdyX,OAAc,EAAdA,EAAgBv5B,KAC9Bu8B,OAAQ,SAAAh0C,GAER,EACAi0C,kBAAmB,SAAAj0C,GACjBiF,QAAQQ,KAAK,aAAczF,GAE3B0xC,EAAa,CACX79B,MAAO7T,EAAEk0C,YAAYrgC,MACrBC,OAAQ9T,EAAEk0C,YAAYpgC,OACtBU,SACGxU,EAAEm0C,OACAC,eAAiB,KAE1B,QAsBZl3C,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MACRlwB,EAAAa,QAAA1B,cAACqD,EAAAyzC,KAAKlD,QAAO,CAAC9zC,MAAO,CAAC2X,OAAQ,SAC5B5W,EAAAa,QAAA1B,cAACqD,EAAAq2B,OAAM,CACLS,SAAU6b,EACV3nB,QAAS+lB,GAAiB,UAG5BvzC,EAAAa,QAAA1B,cAACqD,EAAAq2B,OAAM,CACLQ,QAAS/F,EAAkBtL,UAC3BwF,QAAS6nB,IAAa,eAStC,E,qBAjYA8B,EAAAx4C,EAAAw4C,GACAn3C,EA2CqC,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CA3CrCU,CAAAhE,GA2CAuF,EAAA5G,EAAA4G,GAAqCrF,EAAAvB,EAAAuB,GAIrC,IAAMiY,EAASqiB,EAAAA,aAAa4c,UACtB/kC,EAAS0kB,EAAAA,iBAAiBsgB,IAC1Bn/B,EAAmB,EA+UxB,4B,6HC1PA,K,yHA5HM,SAAgBjU,GAQnB,IAPFuuC,EAAiBvuC,EAAjBuuC,kBACAtlC,EAAgBjJ,EAAhBiJ,iBACAlH,EAAM/B,EAAN+B,OAMM0qB,GAAW,EAAAC,EAAAA,kBACXrf,GAAS,EAAAuf,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAGj9B,MAAM,IAChD9D,GAAa,EAAAqjB,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAG/gC,UAAU,IACxDgmC,GAAY,EAAA3iB,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAGa,WAAW,IACxDvgB,EAAmB,MAANvd,OAAM,EAANA,EAA0Bud,UACvC5oB,EAAkB,MAANqL,OAAM,EAANA,EAAyBrL,SACrCqxC,OAC8ChpC,KAAlD,EAAAuiB,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAGwD,WAAW,IAC9ChqC,QAAQQ,KAAK,YAAa+uC,GAC1B,IAAIC,EAAiB,CACnB3oC,EAAAA,WAAWgD,MACXhD,EAAAA,WAAW+F,OACX/F,EAAAA,WAAW4hB,SACXgI,SAAShrB,GAEPgqC,EAAmBhqC,IAAeoB,EAAAA,WAAW6oC,SAC3CC,EAAkC,kBAAdlE,EAEpBrB,EAAgB,OAAS3kC,EAE3BkqC,IACFH,GAAiB,EACjBC,GAAmB,GAGrB,IAAMG,EAAW,eAAAtzC,GAAA,EAAAH,EAAArD,UAAG,YAClB,IAAMq7B,QAAqBC,EAAAA,eAAerf,WAAW,CACnDsf,kBAAmB,eAIrB,GAFAr0B,QAAQQ,KAAK,eAAgB2zB,GAExBA,EAAL,CACA,IAAM3hB,EAAM2hB,EAAaG,IACrBC,EAAMr2B,GAAYksC,EACtBpqC,QAAQQ,KAAK,mBAAoB2E,GACjC,IAAMqvB,EAAY,CAChB/3B,GAAIsB,EAAAA,QAAKC,KAAK6G,WACd2N,IAAAA,EACAlN,MAAO6uB,EAAa91B,KACpBkX,WAAY4e,EAAa91B,KACzB6L,SAAUiqB,EAAa91B,KACvBo2B,SAAUN,EAAa98B,KACvB6G,SAAUq2B,EACVt2B,OAAAA,EACAkJ,MAAM,IAAI5I,MAAOC,UACjB0G,YAAaC,EACbA,iBAAAA,EACA9N,KAAM88B,EAAalpB,KAAK5T,KACxBie,KAAM6e,EAAalpB,KAAKqK,KACxBlQ,UAAW,SAEbujB,GAAS,EAAA+L,EAAAA,iBAAgB,CAACzpB,KAAMkpB,EAAalpB,KAAMpB,MAAO2qB,IApBjC,CAuB3B,IAAC,kBA7BgB,OAAAl4B,EAAAQ,MAAA,KAAAC,UAAA,KA+CjB,OACE9E,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACiB,cAAd8wC,EACCxzC,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOC,OAAM,CACZ9U,KAAM,gBACNqB,QATgB,WACtBkD,GAAS,EAAAknB,EAAAA,gBAAe,YAC1B,IASQ,KACHJ,IAAqBF,EACpBt3C,EAAAa,QAAA1B,cAACqD,EAAAq1C,QAAO,CAACxqC,MAAM,mBACbrN,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOC,OAAM,CACZ9U,KAAK,cACLqB,QAAS,WA3BjBkD,GAAS,EAAAknB,EAAAA,gBAAe,UA2Bc,KAGhC,KACHF,GACC13C,EAAAa,QAAA1B,cAAC24C,EAAAj3C,QAAa,CAACguB,UAAWA,EAAWC,YAAaxd,IAElDgmC,GAA4B,YAAf9pC,EAOX,KANFxN,EAAAa,QAAA1B,cAACqD,EAAAq1C,QAAO,CAACxqC,MAAM,iBACbrN,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOC,OAAM,CACZ9U,KAAK,YACLqB,QAAS,WA9BjBkD,GAAS,EAAAknB,EAAAA,gBAAe,SA8Be,KAIpCL,IAAmBD,EAClBt3C,EAAAa,QAAA1B,cAACqD,EAAAq1C,QAAO,CAACxqC,MAAM,iBACbrN,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOC,OAAM,CACZ9U,KAAK,YACLqB,QAAS,kBAAMmqB,GAAa,KAG9B,KACFnF,GAAsB8E,EAKpB,KAJFt3C,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOC,OAAM,CACZ9U,KAAK,UACLqB,QAAS,WAjDfkD,GAAS,EAAAknB,EAAAA,gBAAe,UAiDY,IAKxC,E,OAvIAryC,EAAA5G,EAAA4G,GACAvF,EAAArB,EAAAqB,GAMA83C,EAAAn5C,EAAAm5C,EAgIC,4B,gFC9EA,K,kHAvCM,SAAmB7zC,GAA0C,IAAxCkD,EAAMlD,EAANkD,OACpBi/B,GACJ,EAAApT,EAAAA,iBACI1hB,GAAS,EAAAuf,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAGj9B,MAAM,IAChD69B,GAAa,EAAAte,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAGY,UAAU,IACxDlpC,EAAkB,MAANqL,OAAM,EAANA,EAAyBrL,SACrCuG,GACG,MAAN8E,OAAM,EAANA,EAA0B9E,kBACpB,MAANrF,OAAM,EAANA,EAAQlB,UA8BX,OAAOjG,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOC,OAAM,CAAC9U,KAAK,eAAeqB,QA7BxB,WAChB,IAAMuqB,EAA6B,CACjC9xC,SAAUuG,EACV7G,UACsC,KAAtB,MAAd6G,OAAc,EAAdA,EAAgBia,OAAO,SACb,MAANtf,OAAM,EAANA,EAAQxB,cACR2I,EACNjB,MAAa,MAANlG,OAAM,EAANA,EAAQkG,OAEjBtF,QAAQQ,KAAK,CAACwvC,aAAAA,IACVA,EAAa9xC,UAAY8xC,EAAa9xC,WAAaA,EACrDmgC,EAAWe,SAAS0J,EAAAA,cAAe,CACjCmH,OAAQ7I,EACR79B,OAAQ,CACN0mC,OAAQ,SACR1mC,OAAQymC,KAMd3R,EAAWe,SAAS0J,EAAAA,cAAe,CACjCmH,OAAQ7I,EACR79B,OAAQ,CACN0mC,OAAQC,EAAAA,YAAY9I,GACpB79B,YAAQhD,IAGd,GAEF,EAzDAtO,EAAArB,EAAAqB,EAyDC,4B,qHCQA,K,+HAtDM,SAAwBiE,GAQ3B,IAPF+B,EAAM/B,EAAN+B,OACAkH,EAAgBjJ,EAAhBiJ,iBACA0J,EAAM3S,EAAN2S,OAMMtF,GAAS,EAAAuf,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAGj9B,MAAM,IAChD9D,GAAa,EAAAqjB,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAG/gC,UAAU,IACxDgmC,GAAY,EAAA3iB,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAGa,WAAW,IACxDvgB,EAAmB,MAANvd,OAAM,EAANA,EAA0Bud,UACvC5oB,EAAkB,MAANqL,OAAM,EAANA,EAAyBrL,SACrCuG,EAAwB,MAAN8E,OAAM,EAANA,EAA0B9E,eAC5CkkB,GAAW,EAAAC,EAAAA,kBAMXqb,GAAc,EAAAkM,EAAAA,kBAEpB,OACEl4C,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC+tB,QAAS,EAAGoC,OAAQ,IAChCpvB,EAAAa,QAAA1B,cAACg5C,EAAAt3C,QAAU,CACTguB,UAAWA,EACX7oB,OAAQA,EACRwH,WAAYA,EACZ+lC,gBAZkB,WACtB7iB,GAAS,EAAA0nB,EAAAA,UACX,EAWMnyC,SAAUA,GAAYuG,EACtBgnC,UAAWA,EACXtmC,iBAAkBA,IAEnB8+B,EAAY3C,eACXrpC,EAAAa,QAAA1B,cAACk5C,EAAAx3C,QAAW,CAAC+V,OAAQA,EAAQo1B,YAAaA,IACxC,KACW,mBAAdwH,EACCxzC,EAAAa,QAAA1B,cAACm5C,EAAAz3C,QAAa,CACZguB,UAAWA,EACXjY,OAAQA,EACR3Q,SAAUA,GAAYuG,IAEtB,KACW,kBAAdgnC,EACCxzC,EAAAa,QAAA1B,cAACo5C,EAAA13C,QAAY,CACXguB,UAAWA,EACXjY,OAAQA,EACRkY,YAAaxd,EACbrL,SAAUA,GAAYuG,IAEtB,KAGV,EAjEAxM,EAAArB,EAAAqB,GAKAu4C,EAAA55C,EAAA45C,GACAD,EAAA35C,EAAA25C,GACAH,EAAAx5C,EAAAw5C,GACAE,EAAA15C,EAAA05C,GAAkD9wB,EAAA5oB,EAAA4oB,EAyDjD,4B,yJCuIA,K,oEArLoC,SAAA1kB,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,4DAuB9B,SAAiBmB,GAYpB,IAAD+sC,EAXDV,EAAOrsC,EAAPqsC,QACArqC,EAAQhC,EAARgC,SACAgsC,EAAQhuC,EAARguC,SACAJ,EAAW5tC,EAAX4tC,YACAC,EAAS7tC,EAAT6tC,UAQM/vC,GAAc,EAAAmxB,EAAAA,kBACdkT,GACJ,EAAApT,EAAAA,iBACI1hB,GAAS,EAAAuf,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAGj9B,MAAM,IAChD9D,GAAa,EAAAqjB,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAG/gC,UAAU,IACxDkjB,GAAW,EAAAC,EAAAA,kBACX2mB,GAAY,EAAAzmB,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAG+I,SAAS,IACtD/d,GAAO,EAAA1I,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAGwD,WAAW,IACzDjc,GAA6B,EAAAC,EAAAA,UAAS,IAAGC,GAAA,EAAAjqB,EAAAlL,SAAAi1B,EAAA,GAAlC0iB,EAASxiB,EAAA,GAAEyiB,EAAOziB,EAAA,GACnBwd,GAAoB,EAAA3iB,EAAAA,iBACxB,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAGa,WAAW,IAEzBtjC,GAAW,EAAA+b,EAAAA,UAAS,YAAY,kBAAM,EAAAhiB,EAAAA,cAAa,IACnDG,EAAiB,MAAR8F,GAAc,OAANklC,EAARllC,EAAU7G,WAAI,EAAd+rC,EAAgBxsC,GACzBlE,GAAQ,EAAAmpB,EAAAA,YACR6J,GAAoB,EAAAC,EAAAA,cACxB,SAAC1rB,GAAoB,OAAK,EAAAlB,EAAAA,WAAUkB,EAAK,GACzC,CAACg8B,OAAO,IAOJ18B,GALkB,EAAA0gB,EAAAA,UACtB,cAAgB5hB,GAAS,EAAD/B,EAAArD,UACxB,yBAAkB,EAAAuG,EAAAA,SAAQnB,EAAmB,IAC7C,CAAC49B,OAAO,EAAM9U,UAAS9oB,IAEMhB,KACzByzC,GAAO,EAAA7nB,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAMyjC,GAAGoK,aAAa,IACrDxG,EAAgB,OAAS3kC,EACzBH,GACG,MAANiE,OAAM,EAANA,EAAuBlL,QACjB,MAANkL,OAAM,EAANA,EAAyBjE,SAC1B,EAAAurC,EAAAA,gBAAetI,EAASkD,GACtBqF,EAAkBpG,EAET,UAATlZ,IACFsf,EAAkBnG,GAEP,WAATnZ,IACFsf,EAAkB,kBAGpB,IAAMC,EAAY,eAAAzwC,GAAA,EAAAnE,EAAArD,UAAG,YACnBkH,QAAQQ,KAAK,OAAQgxB,GACrB,IACE,OAAQA,GACN,IAAK,QACHxxB,QAAQQ,KAAK,kBACb,IAAMs4B,EAAU76B,EAAS,IAAMF,EAAAA,QAAKC,KAC9BuC,QAAc,EAAAy4B,EAAAA,gBAAe,CACjCv8B,GAAIq8B,EACJz6B,KAAMoyC,EACN3X,QAAAA,EACA56B,SAAUA,GAAYksC,IAExB/L,EAAWe,SAAS,OAAQ,CAC1B1hC,OAAQo7B,EACRz6B,KAAMoyC,EACN7yC,SAAU2C,EAAM3C,SAChB6G,eAAgBvG,GAAYksC,IAE9BpqC,QAAQQ,KAAK,sBAAuBD,GACpC,MACF,IAAK,SACH,IACMywC,EAAkB,CACtBv0C,GAFkB,UAAYsB,EAAAA,QAAKC,KAAO,IAAMC,EAGhDqH,MAAOmrC,EACP1rC,UAAU,EACVoC,MAAM,IAAI5I,MAAOC,UACjBP,OAAAA,EACAwH,WAAAA,EACAvH,SAAAA,SAEIqtB,EAAkBW,YAAY8kB,GACpC,MAEF,IAAK,SACHroB,GAAS,EAAAknB,EAAAA,qBAAetpC,IAG9B,CAAE,MAAOxG,GACPC,QAAQC,MAAM,mBAAoBF,EACpC,CAYA,OAXI7B,QACIlE,EAAYmJ,eAAe,CAC/Bg6B,SAAU,iBAAmBj/B,UAGzBlE,EAAYmJ,eAAe,CAC/Bg6B,SAAU,WAAa13B,IAI3BkjB,GAAS,EAAAknB,EAAAA,qBAAetpC,KACjB,CACT,IAAC,kBAtDiB,OAAAjG,EAAAxD,MAAA,KAAAC,UAAA,KAuDZk0C,EAAgB1B,GAAsB,aAAT/d,EACnC,OACEv5B,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,MACIs2C,GAAiBN,EACjB14C,EAAAa,QAAA1B,cAAC85C,EAAAC,WAAU,CAAC/xC,OAAQA,IAClB,KAEF6xC,EAEE,KADFh5C,EAAAa,QAAA1B,cAACqD,EAAAw+B,OAAOuV,QAAO,CAAClpC,MAAOA,EAAO/M,MAAOA,IAEtC04C,EACCh5C,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC0X,MAAO,SACnB3W,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRjM,YAAaorB,EACb/e,aAAc,SAAAzyB,GAAK,MACR,WAATkyB,EAAoBuY,EAAUzqC,GAASoxC,EAAQpxC,EAAM,EAEvDpI,MAAO,CACL0X,MAAO,OACPwiC,kBAAmB,SACnBl4C,WAAY,GACZ+rB,QAAS,GACTpW,OAAQ,IAEVtW,MAAOA,EACP4B,MAAgB,WAATq3B,EAAoBsY,EAAc2G,EACzChuB,KACExqB,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAUxN,KAAI,CACbjtB,MAAO,CAACkvB,UAAW,IACnBhC,KAAK,oBACLqB,QAAS,WACPkD,GAAS,EAAAknB,EAAAA,qBAAetpC,GAC1B,IAGJgtB,WAAS,EACT8d,UAAW,IACXzuB,MACE3qB,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAUxN,KAAI,CACbjtB,MAAO,CAACkvB,UAAW,IACnBX,QAASsrB,EACT3sB,KAAK,eACLkN,QAAS4Y,OAKf,KAGV,E,qHAxMAjyC,EAmBqC,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAnBrCU,CAAAhE,GAAsEunB,EAAA5oB,EAAA4oB,GAmBtEhiB,EAAA5G,EAAA4G,GAiBkCnE,EAAAA,sBAAG,iCAA9B,IACMqxC,EAAoBrxC,EAAAA,qBAAG,0BAGvBsxC,GAF6BtxC,EAAAA,8BACxC,+BACyBA,EAAAA,eAAG,4BAgK7B,4B,kFCrFyB,K,oDAnHK,SAAAyB,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,yEAA/Bu2C,EAA+B,SAAAv2C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAA/BU,CAAAq1C,GAA+BlY,EAAAxiC,EAAAwiC,GAS/B,IAAMmY,EAA2B,CAC/B,CACErkB,MAAO,QACPskB,YAAa,SACbC,cAAe,iBACf1rC,IAAK,EACLkqC,OAAQ,YAEV,CACE/iB,MAAO,OACPskB,YAAa,QACbC,cAAe,gBACf1rC,IAAK,EACLkqC,OAAQ,eAEV,CACE/iB,MAAO,mBACPskB,YAAa,gBACbC,cAAe,gBACf1rC,IAAK,EACLkqC,OAAQ,cAEV,CACE/iB,MAAO,gBACPskB,YAAa,mBACbC,cAAe,mBACf1rC,IAAK,EACLkqC,OAAQ,aAEV,CACE/iB,MAAO,WACPskB,YAAa,MACbC,cAAe,cACf1rC,IAAK,EACLkqC,OAAQ,gBA4CZ,IAAMnvB,EAASuY,EAAAA,QAAW3mB,OAAO,CAC/B01B,cAAe,CACbliB,KAAM,GAERwrB,WAAY,CACVlxB,cAAe,MACf6J,eAAgB,gBAChBzC,WAAY,SACZ+pB,gBAAiB,GACjBlqB,kBAAmB,IAErBmqB,aAAc,CACZ/iC,OAAQ,GACR4Y,kBAAmB,IAErBoqB,MAAO,CACLhvB,UAAW,UAEbivB,iBAAkB,CAChB1rB,UAAW,GACXjtB,SAAU,IAEZ44C,WAAY,CACVvqB,iBAAkB,GAClBwqB,eAAgB,KAEjB34C,EAAAA,QAlEH,SAAqBgpB,GACnB,IAAM2I,EAAM3I,EAAMgc,WACZ4T,EAAkB5vB,EAAMtf,MAAMP,MAC9BjK,GAAQ,EAAAmpB,EAAAA,YAId,OACE4vB,EAAAl6C,cAAC86C,EAAAC,wBAAuB,CACtBC,sBAAsB,EACtBl7C,MAAO,CACL4pB,EAAOsnB,cACP,CACE3nB,gBAAiBloB,EAAM8d,OAAOoL,UAGlC8G,8BAA8B,EAC9BD,gCAAgC,GAE9BgpB,EAAAl6C,cAAAk6C,EAAA32C,SAAA,KACG42C,EAAyBl0C,KAAI,SAACglB,EAAO7f,GAAK,OACzC8uC,EAAAl6C,cAACqD,EAAA43C,OAAO5D,QAAO,CACbv3C,MAAO4pB,EAAOgxB,iBACd/rC,IAAKsc,EAAMtc,KACXurC,EAAAl6C,cAACqD,EAAA43C,OAAOC,eAAa,EAAA/vB,EAAAzpB,SAAA,GACfupB,EAAK,CACTtc,IAAKsc,EAAMtc,IACXoV,OAAQ82B,IAAoBzvC,EAC5BijB,QAAS,WACPuF,EAAIoU,SAAS/c,EAAM4tB,OACrB,KAEa,KAM7B,CA8B0B,4B,0JCiGzB,K,oEApNqC,SAAAn1C,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,CA0B/B,SAASw3C,EAAqBr2C,GAQjC,IAADs2C,EAPD33C,EAAEqB,EAAFrB,GAEA43C,GADWv2C,EAAXw2C,YACYx2C,EAAZu2C,cAMME,EAAmC,OAApBH,EAAGruC,EAAAA,MAAOsD,iBAAU,EAAjB+qC,EAAmB50C,SACrCg1C,EAAY/3C,EAAG+C,WAAa+0C,EAC5B/0C,EAAW/C,EAAG+C,SACdi1C,GAAgB,EAAArnB,EAAAA,cAAW,EAAArvB,EAAArD,UAAC,YAChC,IACOuJ,EAAAA,YAAYzE,WACT,EAAAe,EAAAA,cAAa9D,EAAGyK,MAAOzK,EAAG+C,UAAU,UAEtC,EAAA4J,EAAAA,oBACJ,WACAmrC,EACAtwC,EAAAA,YAAYzE,GAEhB,CAAE,MAAOmC,GACPC,QAAQC,MAAMF,EAChB,CACAoE,EAAAA,MAAM2uC,aAAaj4C,EAAG+C,SACxB,KAKA,OACE3F,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAKlL,EAAG4B,GACRgmB,KAAM,SAAAJ,GAAK,OAAIpqB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKupB,EAAK,CAAE+B,KAAM,aAAc,EACzDxB,MAAO,SAAAP,GAAK,OACVpqB,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,MAUIi4C,GACA36C,EAAAa,QAAA1B,cAACqD,EAAAq2B,QAAM,EAAAvO,EAAAzpB,SAAA,GACDupB,EAAK,CACT+B,KAAM,qBACNoN,KAAK,WACL/L,QAAS,WAtBnBotB,EAAc3mB,aAsB4B,IAAE,UAItCj0B,EAAAa,QAAA1B,cAACqD,EAAAq2B,QAAM,EAAAvO,EAAAzpB,SAAA,GACDupB,EAAK,CACT+B,KAAM,MACNoN,KAAK,WACL/L,QAAS,kBAAMgtB,EAAa53C,EAAG,IAAE,QAGlC,EAEL6oC,YACEzrC,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC67C,IAAK,GAAIvyB,cAAe,QACpCvoB,EAAAa,QAAA1B,cAACqD,EAAAyhC,KAAI,QAAK,IAAI39B,KAAK1D,EAAGsM,MAAM6rC,gBAC3BJ,GACC36C,EAAAa,QAAA1B,cAACqD,EAAAyhC,KAAI,CAAChlC,MAAO,CAACupB,gBAAiB,UAAU,YAI/Cnb,MAAK,GAAKzK,EAAGyK,OAGnB,C,qFAEe,WACb,IAAM2tC,GAAQ,EAAAnzB,EAAAA,UAAS,aAAa,kBAAM,EAAAozB,EAAAA,eAAc,GAAE,CACxDpxC,sBAAsB,IAElBme,EAAYgzB,EAAMhzB,UAClBkzB,EAAMF,EAAM/1C,KAClB6wB,GAAoC,EAAAC,EAAAA,eAClCznB,GACD0nB,GAAA,EAAAjqB,EAAAlL,SAAAi1B,EAAA,GAFMnwB,EAAQqwB,EAAA,GAAEmlB,EAAenlB,EAAA,GAGhCM,GAA4B,EAAAP,EAAAA,UAAiB,IAAGQ,GAAA,EAAAxqB,EAAAlL,SAAAy1B,EAAA,GAAzC8kB,EAAM7kB,EAAA,GAAE8kB,EAAS9kB,EAAA,GACxBG,GAAoC,EAAAX,EAAAA,UAAiB,IAAGY,GAAA,EAAA5qB,EAAAlL,SAAA61B,EAAA,GAAjD4kB,EAAU3kB,EAAA,GAAE4kB,EAAa5kB,EAAA,GAC1B6jB,EAAe,SAAC12C,GAAe,OACnCq3C,EAAgBr3C,EAAE6B,SAAU,EAExB61C,GAAmB,EAAAjoB,EAAAA,cAAW,EAAArvB,EAAArD,UAClC,YAEE,OADAkH,QAAQQ,KAAK,kBACA,EAAAgH,EAAAA,oBAAmB6rC,EAAQE,EAC1C,IACA,CACE9nB,UAAW,WACT9C,GAAS,EAAAknB,EAAAA,qBAAetpC,IACxB0sC,EAAM7jB,SACR,IAGEskB,GAAa,EAAA5qB,EAAAA,iBACjB,SAAA/lB,GAAK,MAA6B,aAAzBA,EAAMyjC,GAAGwD,WAA0B,IAExCrhB,GAAW,EAAAC,EAAAA,kBACjB,OAAI3I,EAAkBhoB,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAACzM,KAAM,KAE7Crd,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKyqB,QAAO,KACP,MAAH0E,OAAG,EAAHA,EAAK91C,KAAI,SAAAxC,GAAE,OACV5C,EAAAa,QAAA1B,cAACm7C,EAAqB,CACpB13C,GAAIA,EACJ63C,YAAaS,EAAIrsC,OACjB2rC,aAAcA,GACd,KAGNx6C,EAAAa,QAAA1B,cAACqD,EAAAk5C,OAAM,CACLz8C,MAAO,CAAC4rB,SAAU,KAClB0B,aAAsBje,IAAb3I,EACT00B,UAAW,kBAAM8gB,OAAgB7sC,EAAU,GAC3CtO,EAAAa,QAAA1B,cAACqD,EAAAk5C,OAAOxF,MAAK,KAAC,YACdl2C,EAAAa,QAAA1B,cAACqD,EAAAk5C,OAAOnF,QAAO,KACbv2C,EAAAa,QAAA1B,cAACqD,EAAAwyB,KAAI,KAAErvB,IAET3F,EAAAa,QAAA1B,cAACqD,EAAAk5C,OAAO3I,QAAO,KACb/yC,EAAAa,QAAA1B,cAACqD,EAAAq2B,OAAM,CACL1M,KAAM,YACNqB,QAAS,kBACPgO,EAAAA,QAAUC,UAAU91B,GACpBw1C,OAAgB7sC,EAAU,GACzB,UAKTtO,EAAAa,QAAA1B,cAACqD,EAAAk5C,OAAM,CACLnvB,QAASkvB,EACTx8C,MAAO,CAAC4rB,SAAU,KAClBwP,UAAW,kBAAM3J,GAAS,EAAAknB,EAAAA,qBAAetpC,GAAW,GACpDtO,EAAAa,QAAA1B,cAACqD,EAAAk5C,OAAOxF,MAAK,KAAC,yBACdl2C,EAAAa,QAAA1B,cAACqD,EAAAk5C,OAAOnF,QAAO,KACbv2C,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRzE,MAAO,gBACP/yB,MAAOk5C,EACPthB,aAAcuhB,IAEhBr7C,EAAAa,QAAA1B,cAACqD,EAAAk3B,UAAS,CACRzE,MAAO,oBACP/yB,MAAOo5C,EACPxhB,aAAcyhB,KAGlBv7C,EAAAa,QAAA1B,cAACqD,EAAAk5C,OAAO3I,QAAO,KACb/yC,EAAAa,QAAA1B,cAACqD,EAAAq2B,OAAM,CACL/qB,IAAK,QACLqe,KAAM,QACNqB,QAAS,WACPkD,GAAS,EAAAknB,EAAAA,qBAAetpC,GAC1B,GAAG,UAGLtO,EAAAa,QAAA1B,cAACqD,EAAAq2B,OAAM,CACL/qB,IAAK,SACLqe,KAAM,SACNqB,QAAS,WACP+tB,GAAc,EAAA10C,EAAAA,eAChB,GAAG,yBAGL7G,EAAAa,QAAA1B,cAACqD,EAAAq2B,OAAM,CACL/qB,IAAK,QACLqe,KAAM,QACNmN,SACE8hB,EAAOvsC,OAAS,GAAsC,KAAjCysC,EAAWpyC,MAAM,KAAK2F,OAE7C2e,QAAS,kBAAMguB,EAAiBvnB,aAAa,EAC7CoF,QAASmiB,EAAiBxzB,WAAW,UAOjD,E,qBApNAhoB,EAAsC,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAAtCU,CAAAhE,GAAsCunB,EAAA5oB,EAAA4oB,GAAA6N,EAAAz2B,EAAAy2B,EAoNrC,4B,kFCtKA,K,+GAxCc,SAAuBhL,GACpC,IAAM5hB,GAAO,EAAAqf,EAAAA,UAAS,YAAY,kBAAMuC,EAAMvkB,aAAa,GAAE,CAC3DgE,sBAAsB,IAElB8xC,EAAcnzC,EAAKwf,UACnBlc,EAAWtD,EAAKvD,KACtB,OAAI02C,EAAoB37C,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAACzM,KAAM,KAE/Crd,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKyqB,QAAO,KACV1qC,EAASE,QAAQ5G,KAAI,SAAC4Z,GAAc,OACnChf,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAACiN,IAAKkR,EAAOxa,IACD,YAAdwa,EAAOxa,IAAoBwa,EAAOC,aACjCjf,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MACRlwB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRle,IAAKkR,EAAOxa,GACZgmB,KAAM,SAAAJ,GAAK,OACTpqB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GACJupB,EAAK,CACT+B,KAAMnN,EAAOC,aAAa9V,gBAC1B,EAEJwhB,MAAO,SAAAP,GAAK,OACVpqB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKupB,EAAK,CAAE+B,KAAM,WAAY,EAE1Csf,YAAW,YAAc,IAAInlC,KAC3B0Y,EAAO3Y,WACP00C,eACF1tC,MAAU2R,EAAOG,MAAM5J,QACrB,IAAIqmC,OAAO,KACX,KACD,OAAO58B,EAAOI,WAEjBpf,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,OAER,KACC,IAIf,E,OA9CAlwB,EAAArB,EAAAqB,GAA0BunB,EAAA5oB,EAAA4oB,EA8CzB,4B,2HC8I0B,K,uIA5L3BvnB,EAAArB,EAAAqB,GAAyCunB,EAAA5oB,EAAA4oB,GAAA4Z,EAAAxiC,EAAAwiC,GAAA0a,EAAAl9C,EAAAk9C,GAAA37C,EAAAvB,EAAAuB,GA4BzC,IAEM2oB,EAASuY,EAAAA,QAAW3mB,OAAO,CAC/BuT,UAAW,CACTC,KAAM,GAER5f,IAAK,CACHka,cAAe,OAEjB+hB,OAAQ,CACN/hB,cAAe,UAEjBgiB,YAAa,CACX5a,WAAY,SACZyC,eAAgB,iBAElBoY,kBAAmB,CACjBtc,WAAY,GAEduc,MAAO,CACL9zB,MAAO,OACPC,OAAQ,OACRub,QAAS,GACT3D,SAAU,WACVoW,WAAY,QACZzQ,QAAS,EACTlG,KAAM,KAoIR7sB,EAAAA,QAjImB,WACnB,IAAM06C,GAAgB,EAAAj0B,EAAAA,UAAS,YAAY,kBAAM,EAAAhiB,EAAAA,cAAa,IACxDk2C,EAAoBD,EAAc9zB,UAClC+K,GAAM,EAAAC,EAAAA,iBACN7wB,EAAW25C,EAAc72C,KAMzB+2C,EAAgB,WACpBj0C,QAAQQ,KAAK,gBACf,EAGMqhC,EAAiB,CACrB/U,cAAe,OACf3G,WAH4B,IAK9B,OACEluB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL2X,OAAQ,OACRD,MAAO,SAERolC,EACC/7C,EAAAa,QAAA1B,cAACqD,EAAAsnB,kBAAiB,CAAC0hB,WAAW,EAAMnuB,KAAM,KAE1Crd,EAAAa,QAAA1B,cAAAa,EAAAa,QAAA6B,SAAA,KACE1C,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKyqB,QAAO,KACXx2C,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACR3e,MAAe,MAARlL,OAAQ,EAARA,EAAUiE,KACjBokB,KAAM,SAAAJ,GAAK,OACD,MAARjoB,GAAAA,EAAU+nB,MACRlqB,EAAAa,QAAA1B,cAACqD,EAAAuyB,OAAOknB,MAAK,CACXh9C,MAAOmrB,EAAMnrB,MACb0lC,OAAQ,CACNtI,IAAa,MAARl6B,OAAQ,EAARA,EAAU+nB,MACfpX,MAAO,eAETuK,KA3BC,KA8BHrd,EAAAa,QAAA1B,cAACqD,EAAAuyB,OAAOC,KAAI,CACV/1B,MAAOmrB,EAAMnrB,MACbg2B,OACW,MAAR9yB,OAAQ,EAARA,EAAUiE,QACD,MAARjE,OAAQ,EAARA,EAAUiE,KAAK81C,MAAM,EAAG,GAAGC,gBAC7B,GAEF9+B,KArCC,IAuCJ,EAEHouB,YAAa,SAAAxnC,GAAA,IACXimC,EAAajmC,EAAbimC,cACOwB,EAAgBznC,EAAvBmF,MACAlI,EAAQ+C,EAAR/C,SAAQ,OAERlB,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CAAC5B,MAAO,CAAC4pB,EAAOmF,UAAWnF,EAAOyhB,SACrCtqC,EAAAa,QAAA1B,cAACqD,EAAAwyB,KAAI,CACHoV,cAAe,EACfF,cAAeA,EACfjrC,MAAO,CAACmK,MAAOsiC,EAAkBxqC,SAAAA,IACxB,MAARiB,OAAQ,EAARA,EAAUspC,aAEbzrC,EAAAa,QAAA1B,cAACooB,EAAA1mB,QAAI,CACH5B,MAAO,CACL4pB,EAAOmF,UACPnF,EAAOxa,IACPwa,EAAO2hB,oBASL,KAEFxqC,EAAAa,QAAA1B,cAACqD,EAAAyhC,KAAI,CACH9X,KAAK,MACLqB,QAAS,WAAO,EAChBvuB,MAAO,CAAC2X,OAAQ,KAAK,QAKtB,EAET+T,MAAO,SAAAP,GAAK,OACVpqB,EAAAa,QAAA1B,cAAC08C,EAAAh7C,QAAS,CACR5B,MAAO2qC,EACPpc,QAASwuB,GACTh8C,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,MAAI,EAAA5B,EAAAzpB,SAAA,GAAKupB,EAAK,CAAE+B,KAAK,oBACjB,IAWhBnsB,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MACRlwB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRwB,QAvGQ,WAAH,OAASuF,EAAIoU,SAAS,UAAW,EAwGtC95B,MAAO,UACPmd,KAAM,SAAAJ,GAAK,OACTpqB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,KAAI,CAACC,KAAK,UAAUltB,MAAOmrB,EAAMnrB,OAAS,IAGpDe,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,MACRlwB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKC,KAAI,CACRwB,QA9GI,WAAH,OAASuF,EAAIoU,SAAS,YAAa,EA+GpC95B,MAAO,YACPmd,KAAM,SAAAJ,GAAK,OACTpqB,EAAAa,QAAA1B,cAACqD,EAAAupB,KAAKG,KAAI,CAACC,KAAK,WAAWltB,MAAOmrB,EAAMnrB,OAAS,IAGrDe,EAAAa,QAAA1B,cAACqD,EAAA0tB,QAAO,QAMpB,CAE2B,4B,8CCrKkC,K,8LAjBzC9uB,EAAAA,SAAG,EAAAg7C,EAAAA,eAAc,MAEhBh7C,EAAAA,UAAG,EAAAg7C,EAAAA,eAAc,MAEjBh7C,EAAAA,UAAG,EAAAg7C,EAAAA,eAAc,MAElBh7C,EAAAA,SAAG,EAAAg7C,EAAAA,eAAsC,MAExCh7C,EAAAA,UAAG,EAAAg7C,EAAAA,eAAc,MAEXh7C,EAAAA,gBAAG,EAAAg7C,EAAAA,gBAAc,GAElBh7C,EAAAA,eAAG,EAAAg7C,EAAAA,eAC3B,MAG2Bh7C,EAAAA,kBAC3B,EAAAg7C,EAAAA,eAAqD,KAAM,4B,6CCvBvC,K,8EAAtB77C,OAAAgd,KAAAvb,GAAAyb,SAAA,SAAA3P,GAAA,YAAAA,GAAA,eAAAA,IAAAA,KAAA1M,GAAAA,EAAA0M,KAAA9L,EAAA8L,IAAAvN,OAAAkD,eAAArC,EAAA0M,EAAA,CAAA8P,YAAA,EAAAva,IAAA,kBAAArB,EAAA8L,EAAA,OAAsB,4B,6CCgGpB,K,0SA9FK,IAAMuuC,EAAYj7C,EAAAA,aAAG,iBAOfk7C,GALIl7C,EAAAA,KAAGi7C,EACGj7C,EAAAA,WAAG,UACPA,EAAAA,OAAG,yBACAA,EAAAA,UAAG,yBACCA,EAAAA,cAAG,WACDA,EAAAA,gBAAG,iBACDA,EAAAA,kBAC5B,iDACuBA,EAAAA,aAAG,QAEIA,EAAAA,oBAAG,CACjCwN,EAAAA,WAAW4hB,QACX5hB,EAAAA,WAAW+F,QAEiBvT,EAAAA,kBAAG,kBACNA,EAAAA,eAAG,CAC5B,OACA,MACA,SACAk7C,EACA,WACA,aACA,YACA,WACA,eAEoBl7C,EAAAA,UACpB,kFAEgBA,EAAAA,MAAG,CACnB,CACEoD,GAAI,SACJ6I,MAAO,SACP+9B,UAAW,sCACXnlC,SAAU,OACVkH,UAAW,KACXoN,IAAK,ggBAEP,CACE/V,GAAI,QACJ6I,MAAO,iBACP+9B,UAAW,4CACXnlC,SAAU,OACVkH,UAAW,KACXoN,IAAK,ghBAEP,CACE/V,GAAI,mBACJ6I,MAAO,oBACP+9B,UAAW,gDACXnlC,SAAU,OACVkH,UAAW,KACXoN,IAAK,shBAEP,CACE/V,GAAI,MACJ6I,MAAO,iBACP+9B,UAAW,4CACXnlC,SAAU,OACVkH,UAAW,KACXoN,IAAK,ihBAaUnZ,EAAAA,OAAG,CACpBm7C,UAAW,QACX/zB,gBAAiB,QACjBg0B,mBAAoB,gBACpBC,qBAAsB,UACtBC,iBAAkB,QAClBC,aAAc,UACdC,iBAAkB,UAClBC,YAAa,UACbC,gBAAiB,QACjBC,sBAAuB,MACvBC,gBAAiB,QACjBC,eAAgB,UAChBC,2BAA4B,UAC5BC,sBAAuB,UACvBC,uBAAwB,QACxB98C,MAAO,OACP+8C,iBAAkB,UAClBC,gBAAiB,iBACjB,4B,0FCJA,K,2OA3FF/8C,OAAAgd,KAAAC,GAAAC,SAAA,SAAA3P,GAAA,YAAAA,GAAA,eAAAA,IAAAvN,OAAAmd,UAAA9Z,eAAAC,KAAA8Z,EAAA7P,IAAAA,KAAA1M,GAAAA,EAAA0M,KAAA0P,EAAA1P,IAAAvN,OAAAkD,eAAArC,EAAA0M,EAAA,CAAA8P,YAAA,EAAAva,IAAA,kBAAAma,EAAA1P,EAAA,QAIAvI,EAAA5G,EAAA4G,GASA,IAAMg4C,EAAa,CACjB/4C,GAAI,WACJ6I,MAAO,kBACPP,UAAU,GAGC0wC,EAAUp8C,EAAAA,WAAA,eAAA6C,GAAA,EAAAC,EAAArD,UAAG,YACxB,IAAMqpB,EAAQnhB,EAAAA,MAAM0hC,MAAMgT,OACpBr3C,EAAO2C,EAAAA,MAAM3C,KAAKs3C,WAClBjS,EAAc1iC,EAAAA,MAAMC,OAAO20C,MAC3BC,EAAO,KAAO,IAAIt3C,KAAKyC,EAAAA,MAAMmG,KAAK2uC,aAAaC,cAC/Ct5C,EAAKsB,EAAAA,QAAKC,KAAK6G,WAGrB,MAAO,CACLmxC,OAFA,KAAO33C,EAAOqlC,EAAcmS,GAAMroC,QAAQ,eAAgB,IAG1D2U,MAAAA,EACA9jB,KAAAA,EACAqlC,YAAAA,EACAmS,KAAAA,EACAp5C,GAAAA,EACAw5C,OAAQx5C,EACR+I,SAAS,EACT0wC,QAAS5B,EAAAA,aACT6B,YAAa,GAEjB,IAAC,kBApBsB,OAAAj6C,EAAAY,MAAA,KAAAC,UAAA,KAsBVq5C,EAAa/8C,EAAAA,cAAA,eAAAiD,GAAA,EAAAH,EAAArD,UAAG,UAAO8F,GAClC,IACE,IAAMy3C,QAAgBZ,IAGtB,OAFAz1C,QAAQQ,KAAK,+BAAgC61C,SACvCz3C,EAAUy3C,GACTA,CACT,CAAE,MAAOt2C,GACPC,QAAQC,MAAM,yCAA0CF,EAC1D,CACF,IAAC,gBATyBnD,GAAA,OAAAN,EAAAQ,MAAA,KAAAC,UAAA,KAWK1D,EAAAA,mBAAA,eAAAiH,GAAA,EAAAnE,EAAArD,UAAG,UAChC8F,EACAd,GAEAkC,QAAQQ,KAAK,0BACb,IACE,IAAIC,QAAa3C,IAEjB,GADAkC,QAAQQ,KAAK,4BAA6BC,GACtCA,GAAQA,EAAKhE,GACf,OAAOgE,EAGJA,GAASA,EAAKhE,KACjBgE,QAAa21C,EAAcx3C,IAG7B,IAAMX,EAASwC,EAAKhE,SACdkG,QAAQW,IAAI,CAChB1E,EAASpG,OAAAC,OAAC,CAAC,EACN+8C,EAAW,CACdlwC,MAAO,OACP7I,GAAI,OACJgJ,WAAYoB,EAAAA,WAAWgD,MACvB1C,MAAM,IAAI5I,MAAO+3C,cACjBr4C,OAAAA,MACAgS,QAAA,EAAAC,EAAApX,SACCy9C,EAAAA,MAAMl5C,IAAI,WAAD,IAAAmG,GAAA,EAAArH,EAAArD,UAAC,UAAM+Q,GAAK,OACtBjL,EAASpG,OAAAC,OAAC,CAAC,EACNoR,EAAM,CACT3E,YAAY,EACZhH,SAAU,OACViJ,MAAM,IAAI5I,MAAOC,YACjB,oBAAAK,GAAA,OAAA2E,EAAA1G,MAAA,KAAAC,UAAA,EANS,MASjB,CAAE,MAAOgD,GACPC,QAAQC,MAAM,uBAAwBF,EACxC,CACAC,QAAQQ,KAAK,4BACf,IAAC,gBAvC8B3D,EAAAU,GAAA,OAAA+C,EAAAxD,MAAA,KAAAC,UAAA,IAuC7B,4B,+DC/DA,K,6HAvBsB1D,EAAAA,YAAG,SACzB+K,EACAb,EACA3E,GAEA,IAAM43C,EAAkB,eAAAt6C,GAAA,EAAAC,EAAArD,UAAG,YAEzB,aADuBsL,EAAiByC,EAAAA,WAAWnG,QAErD,IAAC,kBAHuB,OAAAxE,EAAAY,MAAA,KAAAC,UAAA,KAKlB05C,EAAwB,eAAAn6C,GAAA,EAAAH,EAAArD,UAAG,UAAOoF,GAEtC,aADsBqF,EAAiBrF,EAEzC,IAAC,gBAH6BtB,GAAA,OAAAN,EAAAQ,MAAA,KAAAC,UAAA,KAY9B,OAPwB,EAAA2iC,EAAAA,YACtB74B,EAAAA,WAAWnG,QACX81C,EACAC,EACA73C,EAIJ,CAAE,4B,wJCsPD,K,iIAvPM,SACLV,EACAw4C,EACAC,EACAlxC,EACAmxC,EACAh5C,EACA0H,EACArH,GACC,IAAD44C,EAAAC,EAAAC,EACMxzC,EACJmzC,GAAyBM,EAAAA,iBACrB33C,EAAUs3C,GAAgBM,EAAAA,QAC1Br4C,EAAYg4C,GAAkBM,EAAAA,UAC9BhsB,GAAQ,EAAAtL,EAAAA,YACRqkB,GAAc,EAAAkM,EAAAA,gBAAejyC,GAC7ByqB,GAAW,EAAAC,EAAAA,kBACXuU,EAAW,iBAAmBj/B,EAC9BlE,GAAc,EAAAmxB,EAAAA,kBACdwK,GAAqB,EAAA7V,EAAAA,UACzBqd,GAAS,EAADhhC,EAAArD,UACR,YAAa,IAADy0C,EAENnuC,EACJ,IACEA,QAAeC,EAAQnB,GACvB8B,QAAQQ,KAAK,SAAUpB,EACzB,CAAE,MAAOW,GACPC,QAAQC,MAAMF,EAChB,CAgBA,OAdInC,IAAY0H,GAAgB,OAAPioC,EAACnuC,IAAAmuC,EAAQ9wC,KAChC2C,QAAeR,EAAU,CACvBnC,GAAIyB,EACJN,SAAAA,EACA0H,MAAAA,EACAP,UAAU,EACV7G,SAAU,OAASuH,EACnBA,WAAAA,EACAxH,OAAAA,IAEF+B,QAAQQ,KAAK,8BAA+BpB,IAE9CY,QAAQQ,KAAK,SAAUpB,GAEhB,CAACA,OAAAA,EAAQ+Y,cADM5U,EAAiBrF,GAEzC,IACA,CACE4D,sBAAsB,EACtBC,gBAAgB,IAGdo1C,GAAuB,EAAA3rB,EAAAA,aAAW,eAAAlvB,GAAA,EAAAH,EAAArD,UACtC,UAAOoF,GAAgB,aACfU,EAASpG,OAAAC,OAAC,CAAC,QACL4G,EAAQnB,GAAS,CAC3BwH,WAAW,IACX,oBAAA9I,GAAA,OAAAN,EAAAQ,MAAA,KAAAC,UAAA,EALkC,IAOlC43B,EAAuC,OAA1BkiB,EAAGlhB,EAAmBz4B,WAAI,EAAvB25C,EAAyB1+B,QACzC/Y,EAAgC,OAA1B03C,EAAGnhB,EAAmBz4B,WAAI,EAAvB45C,EAAyB13C,OAClC6gC,EAAyBtK,EAAmBuF,WAC5C3P,GAAoB,EAAAC,EAAAA,cAAY,SAAA1rB,GAAI,OAAIlB,EAAUkB,EAAK,GAAE,CAC7D2rB,UAAU,WAAD,IAAAC,GAAA,EAAAvvB,EAAArD,UAAE,YAAa,IAADs+C,EAGrB,SADMp9C,EAAYmJ,eAAeg6B,GACjB,OAAhBia,EAAIlsB,EAAM3hB,SAAN6tC,EAActwB,UAAW,CAC3B,IAAOA,EAAaoE,EAAM3hB,OAAnBud,UACP9mB,QAAQQ,KAAK,4BAA6BsmB,SACpC9sB,EAAYmJ,eAAe,CAC/B,gBACA2jB,UAGI9sB,EAAYmJ,eAAe,CAAC,eAAgB2jB,GACpD,CACF,IAAC,yBAAA4E,EAAA5uB,MAAA,KAAAC,UAAA,EAbS,KAgBNs6C,EACJj4C,GAAUA,EAAOwM,MACN,MAANxM,GAAa,OAAP23C,EAAN33C,EAAQwM,YAAK,EAAbmrC,EAAe15C,KAAI,SAAC4N,GAAY,MAAM,CACrCxO,GAAIwO,EACJuH,IAAKvH,EACL3F,MAAO2F,EACPf,SAAUe,EACV/F,YAAY,EACZhH,SAAUkB,EAAQ3C,GAClBulB,IAAK/W,EACL9D,KAAO/H,EAAyB+H,KAChCoO,WAAanW,EAAyBmW,WACtCy4B,YAAc5uC,EAAyB4uC,YACvC3K,UAAYjkC,EAAyBikC,UACrCj+B,UAAYhG,EAAyBgG,UACtC,IACD,GACA6kC,GAAY,EAAAzoB,EAAAA,YAAWnnB,EAAAA,eACvBi9C,GAAe,EAAA91B,EAAAA,YACnBlnB,EAAAA,kBAEI8b,EAAkB6zB,EAAU7zB,gBAAgBlY,GAC5CugC,GAAqB,EAAAvX,EAAAA,QAAyB,MACpD6G,GAAuD,EAAAC,EAAAA,UAAS,IAAGC,GAAA,EAAAjqB,EAAAlL,SAAAi1B,EAAA,GAA5DwQ,EAAuBtQ,EAAA,GAAEuQ,EAAmBvQ,EAAA,GAC7CspB,EAA8B,MAAb5iB,OAAa,EAAbA,EAAe3tB,MACpC,SAAC6wB,GAAS,OAAKA,EAAEp7B,KAAO2Z,CAAe,IAGnC+B,EACJ8nB,QAA4C15B,IAAlBouB,OACtBpuB,EACA8wC,EAAYpnC,OAAO0kB,GAEnB6iB,GAA4B,EAAAhsB,EAAAA,aAAW,eAAAlrB,GAAA,EAAAnE,EAAArD,UAC3C,UAAOsG,GAAc,aAAWR,EAAUQ,EAAO,oBAAAvC,GAAA,OAAAyD,EAAAxD,MAAA,KAAAC,UAAA,EADN,IAGvC8uB,EAAc,eAAAroB,GAAA,EAAArH,EAAArD,UAAG,UAAOsG,GAAoB,IAADq4C,EAI/C,GAHAz3C,QAAQQ,KAAK,iBAAkBpB,SACzB+3C,EAAqBjrB,YAAY9sB,EAAO3C,UACxCk5B,EAAmBvG,UACT,OAAhBqoB,EAAIvsB,EAAM3hB,SAANkuC,EAAc3wB,UAAW,CAC3B,IAAOA,EAAaoE,EAAM3hB,OAAnBud,gBACD9sB,EAAYmJ,eAAe,CAAC,cAAgB2jB,GACpD,CACA9mB,QAAQQ,KAAK,wBACf,IAAC,gBATmBjD,GAAA,OAAAiG,EAAA1G,MAAA,KAAAC,UAAA,KAWd8hC,EAAkB,WAAH,OACnByY,EAAa,CACX/S,WAAYmT,EAAAA,mBAAmBC,iBAC/Bz5C,cAAUqI,EACVd,WAAYvH,GACX,EAEC05C,EAAa,SAACrjB,GAAW,OAC7B+iB,EAAa,CACX/S,WAAYmT,EAAAA,mBAAmBC,iBAC/Bz5C,SAAUq2B,EACV9uB,WAAYvH,GACX,EAECwgC,EAAmB,eAAAx6B,GAAA,EAAA/H,EAAArD,UAAG,UAAOoF,GAKjC,GAJA8B,QAAQQ,KACN,qBAAuBtC,IAAakY,GACpClY,IAEgB,MAAdq5C,OAAc,EAAdA,EAAgB96C,MAAOyB,EAKzB,OAJAq5C,EAAejyC,MAAQi5B,QACjBiZ,EAA0BtrB,YAAYqrB,GAC5C1Y,eACMlJ,EAAmBvG,WAG3BwoB,EAAW15C,EACb,IAAC,gBAbwBW,GAAA,OAAAqF,EAAApH,MAAA,KAAAC,UAAA,KAenBk4B,GAAW,eAAA5wB,GAAA,EAAAlI,EAAArD,UAAG,UAAOsW,EAAeE,GAGxC,GAFAtP,QAAQQ,KAAK,UAAW4O,EAAOE,GAE3BF,IAAUE,EAAd,CACA6I,EAAQ/I,GAAOzJ,QAAU2J,EAAM,EAC/B,IAAMuoC,EAAS1/B,EAAQ7I,GAClB6I,EAAQ7I,GAAK3J,QAAUyJ,EAAQ,OAChC7I,QAEEglB,EAAkBW,YAAY/T,EAAQ/I,IAC5CyoC,UAAetsB,EAAkBW,YAAY/T,EAAQ7I,IAP5B,CAQ3B,IAAC,gBAXgBpP,EAAAC,GAAA,OAAAkE,EAAAvH,MAAA,KAAAC,UAAA,KAaXsiC,GAAa,eAAA/6B,GAAA,EAAAnI,EAAArD,UAAG,UAAOsG,GAC3BY,QAAQQ,KAAK,gBAAiBpB,GAC9B,IAAO3C,EAAqB2C,EAArB3C,GAAI6I,EAAiBlG,EAAjBkG,MAAOrH,EAAUmB,EAAVnB,OACZ65C,EACJ3hC,EAAAA,OACA,UACA1Q,EACA,WACAhJ,EACA,UACA6I,EACA,WACArH,EACA,aACF,GAAImB,EAAOxB,SAAU,CACnBoC,QAAQQ,KAAK,uBACb,IAAMu3C,EACJD,EAAaE,mBAAmB54C,EAAOxB,UACzCoC,QAAQQ,KAAKu3C,GACbtkB,EAAAA,QAAUC,UAAUqkB,EACtB,CACA,IAAK34C,EAAOxB,SAAU,CACpB,IAAMA,GAAW,EAAAkB,EAAAA,eACjBM,EAAOxB,SAAWA,QACZ45C,EAA0BtrB,YAAY9sB,GAC5C,IAAM24C,EAAYD,EAAaE,mBAAmBp6C,GAClDoC,QAAQQ,KAAKu3C,GACbtkB,EAAAA,QAAUC,UAAUqkB,EACtB,CACF,IAAC,gBA7BkB33C,GAAA,OAAAkE,EAAAxH,MAAA,KAAAC,UAAA,KA+BbmjC,GAAQ,eAAA37B,GAAA,EAAApI,EAAArD,UAAG,YACf,IAAMq7B,QAAqBC,EAAAA,eAAerf,WAAW,CACnDsf,kBAAmB,eAIrB,GAFAr0B,QAAQQ,KAAK,eAAgB2zB,GAExBA,EAAL,CACA,IAAM1zB,QAAa,EAAA3C,EAAAA,eACb0U,EAAM2hB,EAAaG,IACrBC,EAAMr2B,EACJs2B,EAAY,CAChB/3B,GAAIsB,EAAAA,QAAKC,KAAK6G,WACd2N,IAAAA,EACAlN,MAAO6uB,EAAa91B,KACpBkX,WAAY4e,EAAa91B,KACzB6L,SAAUiqB,EAAa91B,KACvBo2B,SAAUN,EAAa98B,KACvB6G,SAAUq2B,EACVt2B,OAAQwC,EAAKhE,GACb0K,MAAM,IAAI5I,MAAOC,UACjBnH,KAAM88B,EAAalpB,KAAK5T,KACxBie,KAAM6e,EAAalpB,KAAKqK,KACxBlQ,UAAW,SAEbujB,GAAS,EAAA+L,EAAAA,iBAAgB,CAACzpB,KAAMkpB,EAAalpB,KAAMpB,MAAO2qB,IAlBjC,CAmB3B,IAAC,kBAzBa,OAAAjwB,EAAAzH,MAAA,KAAAC,UAAA,KA2Bd,OAAAvE,OAAAC,OAAA,CACEw/C,4BAA6BtiB,EAAmB11B,MAChDggC,uBAAAA,EACAtK,mBAAAA,EACAv2B,OAAAA,EACAu1B,cAAexc,EACf/B,gBAAAA,EACAyoB,gBAAAA,EACAJ,mBAAAA,EACAF,wBAAAA,EACAC,oBAAAA,EACAE,oBAAAA,EACA7S,eAAAA,EACAwT,cAAAA,GACA55B,WAAAA,EACA2xB,eAAgB,SAAC2I,EAAgBv9B,GAAa,OAAK2V,EAAQ3V,EAAM,EACjE80B,gBAAiB,kBAAa,MAAPnf,OAAO,EAAPA,EAASrR,SAAU,CAAC,GACxCm9B,EAAY,CACfhP,YAAAA,GACAiL,SAAAA,IAEJ,E,qBAzPA1iC,EAAA5G,EAAA4G,EAyPC,4B,4HCeC,K,4KA3P2BnE,EAAAA,kBAAA,SAAjB6+C,GAAiB,OAAjBA,EAAiB,YAAjBA,EAAiB,gBAAjBA,EAAiB,oBAAjBA,EAAiB,sBAAjBA,CAAiB,MAqDN7+C,EAAAA,WAAG,SACxBoM,EACA8rB,GAEA,IACMhoB,GADQ,EAAAqW,EAAAA,YACOrW,OACf4uC,EAAsB,MAAN5uC,OAAM,EAANA,EAAQrL,SACxB+rC,GAAY,EAAAzoB,EAAAA,YAAWnnB,EAAAA,eACvBi9C,GAAe,EAAA91B,EAAAA,YACnBlnB,EAAAA,kBAEIgkC,EAAkB2L,EAAU1zB,iBAAiB9Q,GAC7C2Q,EAAkB6zB,EAAU7zB,gBAAgB3Q,GAC5Cg5B,GAAqB,EAAAvX,EAAAA,QAAyB,MACpD6G,GAAuD,EAAAC,EAAAA,UAAS,IAAGC,GAAA,EAAAjqB,EAAAlL,SAAAi1B,EAAA,GAA5DwQ,EAAuBtQ,EAAA,GAAEuQ,EAAmBvQ,EAAA,GAC7C+R,GAAY,EAAA/F,EAAAA,gBAEZme,GAAe,EAAAt4B,EAAAA,UACnB,WAAara,GAAW,EAADtJ,EAAArD,UACvB,YACE,IAAMoE,QAAa,EAAAkH,EAAAA,kBAAiBqB,GAapC,OAXevI,EAAK8J,MAAK,SAAAjL,GAAC,OAAIA,EAAEU,KAAO,OAASgJ,CAAU,KAC3CA,IAAeoB,EAAAA,WAAW3E,UACvChF,EAAKm7C,QAAQ,CACX57C,GAAI,OAASgJ,EACbH,MAAO,MACPP,UAAU,EACVoC,MAAM,IAAI5I,MAAOC,UACjBP,OAAQ,GACRwH,WAAAA,EACAE,QAAS,IAENzI,CACT,IACA,CACE4E,sBAAsB,EACtBC,gBAAgB,EAChB+5B,OAAO,EACP9U,SAAUuK,IAGRqN,EAAiBwZ,EAAald,WAC9B93B,GAAsB,MAAZg1C,OAAY,EAAZA,EAAcl7C,OAAQ,CACpC,CACET,GAAI,OAASgJ,EACbH,MAAO,MACPP,UAAU,EACVoC,MAAM,IAAI5I,MAAOC,UACjBP,OAAQ,GACRwH,WAAAA,IAIE8xC,EAAwB,MAAPn0C,OAAO,EAAPA,EAAS4D,MAAK,SAAA6wB,GAAC,OAAIA,EAAEp7B,KAAO2Z,CAAe,IAC5Duf,GAAqB,EAAA7V,EAAAA,UACzB,iBAAmBra,GACnB,kBAAM,EAAAlC,EAAAA,kBAAiB+6B,EAAiB,GACxC,CACEtX,SAAS,EACT8U,OAAO,EACPh6B,sBAAsB,EACtBklB,SAAUuK,IAGRoN,EACJhJ,EAAmB1V,WAAa0V,EAAmBuF,WAC/CvG,GAAkC,MAAlBgB,OAAkB,EAAlBA,EAAoBz4B,OAAQ,GAE5Ci6C,GAAuB,EAAA3rB,EAAAA,aAAW,eAAAlvB,GAAA,EAAAH,EAAArD,UACtC,UAAOoF,GAAgB,aACf,EAAAU,EAAAA,WAAU,CAACnC,GAAIyB,EAAUwH,WAAW,GAAM,oBAAA9I,GAAA,OAAAN,EAAAQ,MAAA,KAAAC,UAAA,EAFZ,IAKlCy6C,GAA4B,EAAAhsB,EAAAA,aAAW,eAAAlrB,GAAA,EAAAnE,EAAArD,UAC3C,UAAOsG,GAAc,aAAW,EAAAR,EAAAA,WAAUQ,EAAO,oBAAAvC,GAAA,OAAAyD,EAAAxD,MAAA,KAAAC,UAAA,EADN,IAUvCu7C,EAAY,eAAA90C,GAAA,EAAArH,EAAArD,UAAG,UAAOoF,GAN1Bo5C,EAAa,CACX/S,WAAYmT,EAAAA,mBAAmBa,gBAC/Br6C,cAAUqI,EACVd,WAAAA,IAKE64B,IAAoBpgC,GACtBo5C,EAAa,CACX/S,WAAYmT,EAAAA,mBAAmBa,gBAC/Br6C,SAAAA,EACAuH,WAAAA,GAGN,IAAC,gBATiBlI,GAAA,OAAAiG,EAAA1G,MAAA,KAAAC,UAAA,KAWZ66C,EAAa,SAAC15C,GAAgB,OAClCo5C,EAAa,CACX/S,WAAYmT,EAAAA,mBAAmBC,iBAC/Bz5C,SAAAA,EACAuH,WAAAA,GACC,EAECo5B,EAAkB,WAAH,OACnByY,EAAa,CACX/S,WAAYmT,EAAAA,mBAAmBC,iBAC/Bz5C,cAAUqI,EACVd,WAAAA,GACC,EAECi5B,EAAmB,eAAAx6B,GAAA,EAAA/H,EAAArD,UAAG,UAAOoF,GAKjC,GAJA8B,QAAQQ,KACN,qBAAuBtC,IAAakY,GACpClY,IAEgB,MAAdq5C,OAAc,EAAdA,EAAgB96C,MAAOyB,EAOzB,OANAq5C,EAAejyC,MAAQi5B,QACjBiZ,EAA0BtrB,YAC9BqrB,GAEF1Y,eACMuZ,EAAahpB,WAGrBwoB,EAAW15C,EACb,IAAC,gBAfwBW,GAAA,OAAAqF,EAAApH,MAAA,KAAAC,UAAA,KAqBnB8uB,EAAc,eAAAxnB,GAAA,EAAAlI,EAAArD,UAAG,UAAOsG,GAC5BY,QAAQQ,KAAK,iBAAkBpB,SACzB+3C,EAAqBjrB,YAAY9sB,EAAO3C,UACxC27C,EAAahpB,UACnBpvB,QAAQQ,KAAK,wBACf,IAAC,gBALmBN,GAAA,OAAAmE,EAAAvH,MAAA,KAAAC,UAAA,KAOdsiC,EAAa,eAAA/6B,GAAA,EAAAnI,EAAArD,UAAG,UAAOsG,GAC3BY,QAAQQ,KAAK,gBAAiBpB,GAC9B,IAAO3C,EAAqB2C,EAArB3C,GAAI6I,EAAiBlG,EAAjBkG,MAAOrH,EAAUmB,EAAVnB,OACZ65C,EACJ3hC,EAAAA,OACA,UACA1Q,EACA,WACAhJ,EACA,UACA6I,EACA,WACArH,EACA,aACF,GAAImB,EAAOxB,SAAU,CACnBoC,QAAQQ,KAAK,uBACb,IAAMu3C,EACJD,EAAaE,mBAAmB54C,EAAOxB,UACzCoC,QAAQQ,KAAKu3C,GACbtkB,EAAAA,QAAUC,UAAUqkB,EACtB,CACA,IAAK34C,EAAOxB,SAAU,CACpB,IAAMA,GAAW,EAAAkB,EAAAA,eACjBM,EAAOxB,SAAWA,QACZ45C,EAA0BtrB,YAAY9sB,GAC5C,IAAM24C,EAAYD,EAAaE,mBAAmBp6C,GAClDoC,QAAQQ,KAAKu3C,GACbtkB,EAAAA,QAAUC,UAAUqkB,EACtB,CACF,IAAC,gBA7BkB53C,GAAA,OAAAmE,EAAAxH,MAAA,KAAAC,UAAA,KA+BnB,MAAO,CACL0I,WAAAA,EACA6yC,aAAAA,EACAha,gBAAiB6Z,EACjBv0C,QAAS,SAACm8B,EAAgBv9B,GAAa,OACrCY,EAAQZ,EAAM,EAChB60B,aAAc,kBAAMj0B,EAAQ0D,MAAM,EAClCswB,eAAgB,SAAC2I,EAAgBv9B,GAAa,OAC5CmyB,EAAcnyB,EAAM,EACtB80B,gBAAiB,kBAAM3C,EAAc7tB,MAAM,EAC3C6tB,cAAAA,EACAgK,eAAAA,EACAC,eAAAA,EACAx7B,QAASA,EACTyoB,eAAAA,EACA+rB,WAAAA,EACA/Y,gBAAAA,EACAQ,cAAAA,EACA1J,mBAAAA,EACA4I,wBAAAA,EACAC,oBAAAA,EACAC,mBAAAA,EACAU,cAhEoB,SAACjhC,GACrBo6C,EAAap6C,EACf,EA+DEwgC,oBAAAA,EACAuL,UAAAA,EACAqN,aAAAA,EACAtX,UAAAA,EACAL,gBAAiByY,EAAan4B,UAC9B7J,gBAAAA,EAEJ,CAAE,4B,yEC5QD,K,2HAjBM,WACL,IAAMuS,GAAW,EAAAC,EAAAA,mBACjB,EAAAuH,EAAAA,YAAU,WAUR,OATAqoB,EAAAA,QAASC,YAAY,mBAAmB,SAAA19C,GAAC,OACvC4tB,GACE,EAAA+vB,EAAAA,mBAAkB,CAACC,eAAgB59C,EAAE69C,eAAe/pC,SACrD,IAEH2pC,EAAAA,QAASC,YAAY,mBAAmB,kBACtC9vB,GAAS,EAAA+vB,EAAAA,mBAAkB,CAACC,eAAgB,IAAI,IAG3C,WACLH,EAAAA,QAASK,mBAAmB,mBAC5BL,EAAAA,QAASK,mBAAmB,kBAC9B,CACF,GAAG,GACL,E,MAAC,4B,wECMC,K,sGAnBmBx/C,EAAAA,SAAG,SACtBy/C,EAGApC,EACAE,GAEA,IAAM3S,GAAc,EAAAkM,EAAAA,kBACd4I,GAAkB,EAAArZ,EAAAA,YACtB74B,EAAAA,WAAWgD,MACXivC,GAAyB10C,EAAAA,iBACzBsyC,GAAyBnzC,EAAAA,iBACzBqzC,GAAkBh4C,EAAAA,WAGpB,OAAApG,OAAAC,OAAA,GACKsgD,EACA9U,EAEP,CAAE,4B,kFC2CA,K,oIAhEyB5qC,EAAAA,eAAG,SAAC6E,GAC7B,IAAM86C,GAAa,EAAAlwB,EAAAA,iBAAe,SAAA/lB,GAAK,OAAIA,EAAM8G,KAAK,IAChDovC,GAAY,EAAAnwB,EAAAA,iBAChB,SAAA/lB,GAAK,OAAIA,EAAMkJ,GAAG82B,mBAAmB,IAEjCpa,GAAW,EAAAC,EAAAA,kBAEXmY,EAAY,eAAA7kC,GAAA,EAAAC,EAAArD,UAAG,UAAO+Q,GAC1B7J,QAAQQ,KAAK,aAAcqJ,GAC3B,IACE,IAAM6O,EAAU7O,EAAMpN,GACtBksB,GAAS,EAAAuwB,EAAAA,SACLF,EAAW1X,iBAAmB5oB,GAAuB,KAAZA,GAC3CiQ,GACE,EAAAuH,EAAAA,MAAK,CAACqU,WAAYC,EAAAA,gBAAgBtU,KAAMxX,QAAAA,EAAS7O,MAAAA,IAGvD,CAAE,MAAO9J,GACPC,QAAQC,MAAM,mBAAoBF,EACpC,CACF,IAAC,gBAbiBnD,GAAA,OAAAV,EAAAY,MAAA,KAAAC,UAAA,KAmBZkkC,EAAoB,eAAA3kC,GAAA,EAAAH,EAAArD,UAAG,UAAO4f,GAClC1Y,QAAQQ,KAAK,uBAAwBkY,GACrC,IAAMob,EAASpb,EACf,IAAIugC,EAAUnlB,GAAd,CACAnL,GAAS,EAAAwwB,EAAAA,wBAAuB,CAACrlB,OAAAA,EAAQvoB,SAAU,QACnD,UACQ,EAAAD,EAAAA,kBAAiBoN,EAASxa,GAAU,SAAAqN,GAAQ,OAChDod,GACE,EAAAwwB,EAAAA,wBAAuB,CACrBrlB,OAAAA,EACAvoB,SAAAA,IAEH,GAEL,CAAE,MAAOxL,GACPC,QAAQC,MAAMF,EAChB,CACA4oB,GACE,EAAAwwB,EAAAA,wBAAuB,CAACrlB,OAAQpb,EAASnN,cAAUhF,IAfxB,CAiB/B,IAAC,gBApByB1J,GAAA,OAAAP,EAAAQ,MAAA,KAAAC,UAAA,KA8B1B,OAAAvE,OAAAC,OAAA,GACKugD,EAAW,CACdjY,aAAAA,EACAC,mBArCyB,SAACtoB,GAC1B1Y,QAAQQ,KAAK,qBAAsBkY,EACrC,EAoCEuoB,qBAAAA,EACAC,gBAbsB,SAACxoB,GACvB1Y,QAAQQ,KAAK,oBAAqBkY,EACpC,EAYEyoB,iBAVuB,SAACzoB,GACxB1Y,QAAQQ,KAAK,mBAAoBkY,EACnC,GAUF,CAAE,4B,2GCWA,K,qJAtEsBrf,EAAAA,YAAG,SAACqE,GAAoB,IAAD07C,EACvC93B,GAAmB,EAAAwH,EAAAA,iBACvB,SAAA/lB,GAAK,OAAIA,EAAMs2C,KAAKC,kBAAkB57C,EAAO,IAEzCirB,GAAW,EAAAC,EAAAA,kBAEXsC,GAAQ,EAAAtL,EAAAA,YACRoa,GAAU,EAAAC,EAAAA,gBACVoE,GAAa,EAAApT,EAAAA,iBACb1hB,EAAS2hB,EAAM3hB,OACf3L,EAAiB,MAAN2L,OAAM,EAANA,EAAQ3L,SACnB27C,GAAkB,MAANhwC,OAAM,EAANA,EAAQiwC,OAAQ,EAE5BC,GAAgB,EAAA35B,EAAAA,UACpB,gBAAkBpiB,GAAO,EAADvB,EAAArD,UACxB,YACE,IAAA4gD,QAAyB/2C,QAAQW,IAAI,EACnC,EAAAq2C,EAAAA,mBAAkBj8C,EAAQE,EALhB,GAKoC27C,EAAW,KAE3D,MAAO,CAACp4B,UADN,EAAAnd,EAAAlL,SAAA4gD,EAAA,GAFa,GAIjB,IACA,CACE5d,OAAO,EACP8d,gBAAiB,IACjB5yB,QAASgT,IAGP6f,EACJJ,EAAcve,YAAc5Z,EAExBw4B,GAAsB,EAAAtuB,EAAAA,aAAW,eAAAlvB,GAAA,EAAAH,EAAArD,UACrC,UAAO6E,GACL,IACE,IAAME,QAAgB,EAAAJ,EAAAA,iBAAgBC,EAAQC,EAAMC,GAEpD,aADM67C,EAAcrqB,UACbvxB,CACT,CAAE,MAAOkC,GACPC,QAAQC,MAAM,6BAA8BF,EAC9C,CACF,IAAC,gBAAAnD,GAAA,OAAAN,EAAAQ,MAAA,KAAAC,UAAA,EAToC,GAUrC,CAAC++B,OAAO,IAGJ3a,GAA6B,OAAlBi4B,EAAAK,EAAcv8C,WAAI,EAAlBk8C,EAAoBj4B,WAAY,GAE3CE,EAAQ,eAAA/gB,GAAA,EAAAnE,EAAArD,UAAG,YACf,IAAIwoB,EAAJ,CAEA,IAAMy4B,EAAQ1qC,SAASkqC,EAAU10C,WAAY,IAAM,EACnD7E,QAAQQ,KAAK,WAAYu5C,EAAOF,GAChClxB,GAAS,EAAAqxB,EAAAA,qBAAkB,EAAA5kB,EAAAt8B,SAAA,GAAG4E,GAAS,KACvC2gC,EAAW1V,SAAQnwB,OAAAC,OAAC,CAAC,EAChBwhD,EAAAA,cAAcztB,UAAU,CAACgtB,KAAMO,IAAQ,CAC1Cnd,OAAQ1R,EAAMnlB,aAEV0zC,EAAcrqB,UACpB8N,YAAW,WACTvU,GAAS,EAAAqxB,EAAAA,qBAAkB,EAAA5kB,EAAAt8B,SAAA,GAAG4E,GAAS,IACzC,GAAG,IAZyB,CAa9B,IAAC,kBAda,OAAA4C,EAAAxD,MAAA,KAAAC,UAAA,KAgBd,MAAO,CACLokB,SAAAA,EACAE,SAAAA,EACAw4B,gBAAAA,EACAK,eAAgBJ,EAAoB75B,UACpCk6B,cAAeV,EAAcx5C,MAC7BmhB,YAAa04B,EAAoBM,OACjC94B,iBAAAA,EAEJ,CAAE,4B,iFCVA,K,qIA7D0BjoB,EAAAA,gBAAG,SAC7BqH,EACAuf,EACAxf,EACAsmB,GAEA,IAAM/sB,GAAc,EAAAmxB,EAAAA,kBACdkT,GAAa,EAAApT,EAAAA,iBACbC,GAAQ,EAAAtL,EAAAA,YACd1jB,EACE6qB,GAAgBmE,EAAM3hB,OADjB7L,EAAMxB,EAANwB,OAAQW,EAAInC,EAAJmC,KAAMT,EAAQ1B,EAAR0B,SAEfM,EAAW,cACXm8C,GAAwB,EAAA7uB,EAAAA,cAAW,EAAArvB,EAAArD,UACvC,YACE,IAAMwhD,EAAW,CACf79C,GAAIiB,EACJmD,WAAW,EACX3C,SAAAA,EACAG,KAAAA,EACAT,SAAAA,GAEFoC,QAAQQ,KAAK,WAAY85C,SACnB,EAAA17C,EAAAA,WAAU07C,EAClB,IACA,CACExe,OAAO,EACPrQ,UAAU,WAAD,IAAAC,GAAA,EAAAvvB,EAAArD,UAAE,YACT,UACQkB,EAAYmJ,eAAe,WAAazF,GAC9C2gC,EAAWe,SAAS,OAAQ,CAC1B1hC,OAAAA,EACAW,KAAAA,EACAoG,eAAgBvG,EAChBN,SAAAA,UAEI,EAAAH,EAAAA,iBACJC,EACA+C,EAAKpC,KAAO,cACZT,EACA,CACEkD,QAAQ,UAGN9G,EAAYmJ,eAChB,iBAAmBjF,EAEvB,CAAE,MAAO6B,GACPC,QAAQC,MAAM,sBAAuBF,EACvC,CACF,IAAC,yBAAA2rB,EAAA5uB,MAAA,KAAAC,UAAA,EAvBS,MA2Bd,EAAA+kC,EAAAA,UAAQ,WACN9hC,QAAQQ,KAAK,uBAAwByf,EAAWvf,GAC3Cuf,GAAcvf,GAAY25C,EAAsBp6B,WACnDo6B,EAAsBnuB,cAAct0B,MAAK,EAADuE,EAAArD,UAAC,YACvCkH,QAAQQ,KAAK,uBACf,IAEJ,GAAG,CAACyf,EAAWvf,EAAS25C,GAC1B,CAAE,4B,gECsCA,K,6JA1GU3C,EAAkBr+C,EAAAA,mBAAA,SAAlBq+C,GAAkB,OAAlBA,EAAkB,kBAAlBA,EAAkB,oBAAlBA,EAAkB,kCAAlBA,EAAkB,oCAAlBA,EAAkB,8BAAlBA,CAAkB,MA6CxB6C,EAAkB,SACtBx3C,EACAy3C,GAGA,OADqBA,EAAdjW,YAEL,KAAKmT,EAAmB+C,QACtB,OAAAjiD,OAAAC,OAAA,GACKsK,EAAM,CACTtC,KAAM+5C,EAAOz2C,WAEjB,KAAK2zC,EAAmBa,gBACtB,OAAA//C,OAAAC,OAAA,GACKsK,EAAM,CACTwT,iBAAgB/d,OAAAC,OAAA,GACVsK,EAAMwT,kBAAoB,CAAC,GAAC,EAAA6e,EAAAt8B,SAAA,GAC/B0hD,EAAO/0C,WAAa+0C,EAAOt8C,WAE9BkY,gBAAe5d,OAAAC,OAAA,GACTsK,EAAMqT,iBAAmB,CAAC,GAAC,EAAAgf,EAAAt8B,SAAA,GAC9B0hD,EAAO/0C,gBAAac,MAG3B,KAAKmxC,EAAmBgD,cACtB,OAAAliD,OAAAC,OAAA,GACKsK,EAAM,CACT43C,kBAAmBH,EAAO/0C,aAE9B,KAAKiyC,EAAmBC,iBACtB,OAAAn/C,OAAAC,OAAA,GACKsK,EAAM,CACTqT,gBAAe5d,OAAAC,OAAA,GACTsK,EAAMqT,iBAAmB,CAAC,GAAC,EAAAgf,EAAAt8B,SAAA,GAC9B0hD,EAAO/0C,WAAa+0C,EAAOt8C,WAE9BqY,iBAAgB/d,OAAAC,OAAA,GACVsK,EAAMwT,kBAAoB,CAAC,GAAC,EAAA6e,EAAAt8B,SAAA,GAC/B0hD,EAAO/0C,WAAa+0C,EAAOt8C,aAGlC,QACE,OAAO6E,EAEb,EAEwB1J,EAAAA,YAAG,WAEzB,IAAAuhD,GAA0C,EAAAC,EAAAA,YACxCN,EACA,CACE95C,KAAM,CAAC,EACP8V,iBAAkB,CAAC,EACnBF,OAAQ,CAAC,EACTD,gBAAiB,CAAC,IAErB0kC,GAAA,EAAA92C,EAAAlL,SAAA8hD,EAAA,GAED,MAAO,CACLphD,cAXkBshD,EAAA,GAYlBrhD,iBAZoCqhD,EAAA,GAcxC,CAAE,4B,yFC7DA,K,gIAjDF7iD,EAAArB,EAAAqB,GAEA8iD,EAAAnkD,EAAAmkD,GACA/kC,EAAApf,EAAAof,GAEAglC,EAAApkD,EAAAokD,GAGA,IAAMC,GAAY,EAAAC,EAAAA,wBAEU7hD,EAAAA,gBAAG,WAC7B,IAAM8hD,EAAgB,WAAH,OAASljD,EAAAa,QAAA1B,cAAC4e,EAAAld,QAAI,KAAI,EAC/BsiD,EAAkB,WACtB,OAAOnjD,EAAAa,QAAA1B,cAAC4jD,EAAAliD,QAAU,CAAC2M,WAAYoB,EAAAA,WAAWnG,SAC5C,EAEM26C,EAAoB,WAAH,OAASpjD,EAAAa,QAAA1B,cAAC2jD,EAAAjiD,QAAY,KAAI,EAgCjD,OA/BwB,WACtB,OACEb,EAAAa,QAAA1B,cAAC6jD,EAAUrT,UAAS,CAClBC,cAAe,CACbW,aAAa,EACbQ,cAAc,IAEhB/wC,EAAAa,QAAA1B,cAAC6jD,EAAU5S,OAAM,CACfhqC,KAAK,WACLiqC,UAAW+S,EACX9S,QAAS,CACPS,cAAc,KAGlB/wC,EAAAa,QAAA1B,cAAC6jD,EAAU5S,OAAM,CACfhqC,KAAK,OACLiqC,UAAW6S,EACX5S,QAAS,SAAArsC,GAAOA,EAALgvB,MAAK,MAAO,CACrB8d,cAAc,EACf,IAEH/wC,EAAAa,QAAA1B,cAAC6jD,EAAU5S,OAAM,CACfhqC,KAAK,SACLiqC,UAAW8S,EACX7S,QAAS,SAAAjsC,GAAOA,EAAL4uB,MAAK,MAAO,CACrB8d,cAAc,EACf,IAIT,CAEF,CAAE,4B,0GCMA,K,0DAjD6D,SAAAluC,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,uEAN/D9C,EAM+D,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAN/DU,CAAAhE,GAEA+iD,EAAApkD,EAAAokD,GAEAp1B,EAAAhvB,EAAAgvB,GAEA01B,EAAA1kD,EAAA0kD,GAKA,IAAM71C,EAAaoB,EAAAA,WAAW+F,OACxBw5B,GAAc,EAAAT,EAAAA,8BAEdyV,GAAkB,EAAAv1B,EAAAA,OAAK,kBAC3B5tB,EAAAa,QAAA1B,cAAC4jD,EAAAliD,QAAU,CAAC2M,WAAYA,GAAc,IAElC81C,GAAyB,EAAA11B,EAAAA,OAAK,kBAClC5tB,EAAAa,QAAA1B,cAACwuB,EAAA9sB,QAAa,CACZ+nB,UAAU,EAAA6e,EAAAA,YACRj6B,EACArB,EAAAA,iBACAb,EAAAA,iBACA3E,EAAAA,YAEF,IAEqBvF,EAAAA,aAAG,WAC1B,IAAMmiD,GAAsB,EAAA31B,EAAAA,OAAK,kBAAM5tB,EAAAa,QAAA1B,cAACkkD,EAAAxiD,QAAa,KAAG,IA0BxD,OAzB0B,WACxB,OACEb,EAAAa,QAAA1B,cAACgvC,EAAYwB,UAAS,CACpBC,cAAe,CACbW,aAAa,EACbQ,cAAc,IAEhB/wC,EAAAa,QAAA1B,cAACgvC,EAAYiC,OAAM,CACjBhqC,KAAK,iBACLkqC,QAAS,CAACQ,YAAa,YACvBT,UAAWiT,IAEbtjD,EAAAa,QAAA1B,cAACgvC,EAAYiC,OAAM,CACjBhqC,KAAK,gBACLkqC,QAAS,CAACQ,YAAa,OACvBT,UAAWkT,IAEbvjD,EAAAa,QAAA1B,cAACgvC,EAAYiC,OAAM,CACjBhqC,KAAK,SACLkqC,QAAS,CAACQ,YAAa,YACvBT,UAAW8S,IAInB,CAEF,CAAE,4B,oHCGA,K,4DAnDgE,SAAAtgD,EAAAC,GAAA,sBAAAC,QAAA,gBAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAA,OAAAF,EAAA,SAAAC,GAAA,OAAAA,EAAAG,EAAAD,CAAA,GAAAF,EAAA,C,wEAPlE9C,EAOkE,SAAA8C,EAAAE,GAAA,IAAAA,GAAAF,GAAAA,EAAAK,WAAA,OAAAL,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAjC,QAAAiC,GAAA,IAAAG,EAAAJ,EAAAG,GAAA,GAAAC,GAAAA,EAAAG,IAAAN,GAAA,OAAAG,EAAAI,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAjD,OAAAkD,gBAAAlD,OAAAmD,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAA,GAAAC,eAAAC,KAAAf,EAAAa,GAAA,KAAAG,EAAAN,EAAAjD,OAAAmD,yBAAAZ,EAAAa,GAAA,KAAAG,IAAAA,EAAAT,KAAAS,EAAAC,KAAAxD,OAAAkD,eAAAH,EAAAK,EAAAG,GAAAR,EAAAK,GAAAb,EAAAa,EAAA,QAAAL,EAAAzC,QAAAiC,EAAAG,GAAAA,EAAAc,IAAAjB,EAAAQ,GAAAA,CAAA,CAPlEU,CAAAhE,GAGA+iD,EAAApkD,EAAAokD,GAEAp1B,EAAAhvB,EAAAgvB,GAEAe,EAAA/vB,EAAA+vB,GAIA,IAAMlhB,EAAaoB,EAAAA,WAAW4hB,QAExByd,GAAe,EAAAgV,EAAAA,wBAEfE,GAAkB,EAAAv1B,EAAAA,OAAK,kBAC3B5tB,EAAAa,QAAA1B,cAAC4jD,EAAAliD,QAAU,CAAC2M,WAAYA,GAAc,IAElC81C,GAAyB,EAAA11B,EAAAA,OAAK,kBAClC5tB,EAAAa,QAAA1B,cAACwuB,EAAA9sB,QAAa,CACZ+nB,UAAU,EAAA6e,EAAAA,YACRj6B,EACArB,EAAAA,iBACAb,EAAAA,iBACA3E,EAAAA,YAEF,IAEsBvF,EAAAA,cAAG,WAC3B,IAAMoiD,GAAuB,EAAA51B,EAAAA,OAAK,kBAChC5tB,EAAAa,QAAA1B,cAACuvB,EAAA7tB,QAAc,CACb8F,UAAWA,EAAAA,UACXmoB,aAAa,EAAAnH,EAAAA,YAAWrW,QACxB,IAwBJ,OAtB2B,WACzB,OACEtR,EAAAa,QAAA1B,cAAC8uC,EAAa0B,UAAS,CACrBC,cAAe,CACbW,aAAa,EACbQ,cAAc,IAEhB/wC,EAAAa,QAAA1B,cAAC8uC,EAAamC,OAAM,CAClBhqC,KAAK,kBACLiqC,UAAWiT,IAEbtjD,EAAAa,QAAA1B,cAAC8uC,EAAamC,OAAM,CAClBhqC,KAAK,iBACLiqC,UAAWmT,IAEbxjD,EAAAa,QAAA1B,cAAC8uC,EAAamC,OAAM,CAClBhqC,KAAK,SACLiqC,UAAW8S,IAInB,CAEF,CAAE,4B,+ECfA,K,8HA3CFnjD,EAAArB,EAAAqB,GACA+iD,EAAApkD,EAAAokD,GACAU,EAAA9kD,EAAA8kD,GAKA,IAAMN,EAAkB,WAAH,OACnBnjD,EAAAa,QAAA1B,cAAC4jD,EAAAliD,QAAU,CAAC2M,WAAYoB,EAAAA,WAAWgD,OAAS,EAGxC8xC,EAAgB,WAAH,OAAS1jD,EAAAa,QAAA1B,cAACskD,EAAA5iD,QAAQ,KAAI,EAEnC8sC,GAAY,EAAAD,EAAAA,8BAEUtsC,EAAAA,gBAAG,WA2B7B,OA1BwB,WACtB,OACEpB,EAAAa,QAAA1B,cAACwuC,EAAUgC,UAAS,CAClBC,cAAe,CACbW,aAAa,EACbQ,cAAc,IAEhB/wC,EAAAa,QAAA1B,cAACwuC,EAAUyC,OAAM,CACfhqC,KAAK,QACLkqC,QAAS,CAACQ,YAAa,YACvBT,UAAWqT,EACXpT,QAAS,CACPS,cAAc,KAGlB/wC,EAAAa,QAAA1B,cAACwuC,EAAUyC,OAAM,CACfhqC,KAAK,SACLkqC,QAAS,CAACQ,YAAa,YACvBT,UAAW8S,EACX7S,QAAS,SAAArsC,GAAOA,EAALgvB,MAAK,MAAO,CACrB8d,cAAc,EACf,IAIT,CAEF,CAAE,4B,+ECPA,K,6HApCF/wC,EAAArB,EAAAqB,GAGA2jD,EAAAhlD,EAAAglD,GACAC,EAAAjlD,EAAAilD,GACAl1C,EAAA/P,EAAA+P,GAGA,IAAMm1C,EAAiB,SAACz5B,GAAU,OAAKpqB,EAAAa,QAAA1B,cAACwkD,EAAA9iD,QAAiBupB,EAAU,EAC7D05B,EAAU,SAAC15B,GAAU,OAAKpqB,EAAAa,QAAA1B,cAACykD,EAAA/iD,QAAkBupB,EAAU,EACvD25B,EAAY,SAAC35B,GAAU,OAAKpqB,EAAAa,QAAA1B,cAACuP,EAAA7N,QAAoBupB,EAAU,EAE3D2jB,GAAgB,EAAAkV,EAAAA,wBAEK7hD,EAAAA,eAAG,WAqB5B,OApB4B,WAC1B,OACEpB,EAAAa,QAAA1B,cAAC4uC,EAAc4B,UAAS,CACtBC,cAAe,CACbW,aAAa,EACbQ,cAAc,IAEhB/wC,EAAAa,QAAA1B,cAAC4uC,EAAcqC,OAAM,CACnBhqC,KAAK,WACLiqC,UAAWwT,IAEb7jD,EAAAa,QAAA1B,cAAC4uC,EAAcqC,OAAM,CAAChqC,KAAK,UAAUiqC,UAAWyT,IAChD9jD,EAAAa,QAAA1B,cAAC4uC,EAAcqC,OAAM,CAAChqC,KAAK,QAAQiqC,UAAWyT,IAC9C9jD,EAAAa,QAAA1B,cAAC4uC,EAAcqC,OAAM,CACnBhqC,KAAK,YACLiqC,UAAW0T,IAInB,CAEF,CAAE,4B,2BCiEA,K,6FAPkB3iD,EAAAA,QAAG,CACrB4iD,SAAU,CACR,YACA,yBAGFpjD,OApGa,CACbqjD,QAAS,CACPC,MAAO,CACLC,KAAM,SACNF,QAAS,CACPG,SAAU,CACRD,KAAM,QACNF,QAAS,CACPI,OAAQ,CACNF,KAAM,oBAGRG,MAAO,CACLH,KAAM,OAIZI,YAAa,CACXJ,KAAM,WACNF,QAAS,CACPH,QAAS,CACPK,KAAM,WAGRK,MAAO,CACLL,KAAM,SAGRJ,UAAW,CACTI,KAAM,aAGRM,SAAU,CACRN,KAAM,OAKZO,YAAa,CACXP,KAAM,UACNF,QAAS,CACPU,KAAM,CACJR,KAAM,gBAGRS,SAAU,CACRT,KAAM,KAGRE,OAAQ,CACNF,KAAM,sBAKZU,WAAY,CACVV,KAAM,UACNF,QAAS,CACPa,gBAAiB,CACfX,KAAM,KAGRY,eAAgB,CACdZ,KAAM,sBAGRE,OAAQ,CACNF,KAAM,sBAKZa,UAAW,CACTb,KAAM,SACNF,QAAS,CACPgB,eAAgB,CACdd,KAAM,KAGRe,cAAe,CACbf,KAAM,sBAGRE,OAAQ,CACNF,KAAM,0BAiBlB,U,QAAA,Y,8CC9FY,K,uHAFgC/iD,EAAAA,eAAG+jD,EAAAA,YACW/jD,EAAAA,eAC1DgkD,EAAAA,WAAY,4B,6CCsBkB,K,gIApBhC,IAIaC,EAASjkD,EAAAA,WAAG,EAAAkkD,EAAAA,aAAY,CACnCl/C,KAAM,OACNm/C,aAN+B,CAC/BlE,kBAAmB,CAAC,GAMpBmE,SAAU,CACRzD,mBAAoB,SAClBj3C,EACAy3C,GAEA,IAAMz0C,EAAMvN,OAAOgd,KAAKglC,EAAOkD,SAAS,GACxC36C,EAAMu2C,kBAAkBvzC,GAAOy0C,EAAOkD,QAAQ33C,EAChD,KAI4B1M,EAAAA,mBAAIikD,EAAUK,QAAhC3D,mBAAwC3gD,EAAAA,QAEvCikD,EAAUM,OAAO,4B,8CCgLE,K,sVAtKlC,IA4BaC,EAAWxkD,EAAAA,aAAG,EAAAkkD,EAAAA,aAAY,CACrCl/C,KAAM,SACNm/C,aA9BgC,CAChC5jB,gBAAiB,EACjB/Q,cAAe,EACf2E,eAAgB,EAChBpC,gBAAiB,EACjB0yB,KAAM,GACNC,aAAc,CAAC,EACftwB,WAAW,EACXoM,mBAAoB,EACpBC,oBAAqB,EACrB9D,aAAc,CACZa,WAAY,EACZE,YAAa,GAEfgD,WAAW,EACXzoB,YAAa,IACb0sC,gBAAiB,IACjBz3B,OAAQ,EACRjU,UAAW,EACXilB,YAAY,EACZxD,cAAc,EACdrG,aAAa,EACbE,eAAgB,EAChBqwB,WAAY,EACZpwB,WAAY,GACZC,aAAa,GAMb2vB,SAAU,CACRrjB,mBAAoB,SAACr3B,EAAOy3C,GAC1Bz3C,EAAM62B,gBAAkB4gB,EAAOkD,OACjC,EACA9sB,eAAgB,SACd7tB,EACAy3C,IAMwB,IAApBz3C,EAAM0qB,YACR1qB,EAAM82B,mBAAqB2gB,EAAOkD,QAAQ70B,cAC1C9lB,EAAM+2B,oBAAsB0gB,EAAOkD,QAAQlwB,eAC3CzqB,EAAMuO,YAAckpC,EAAOkD,QAAQ7sB,cAGvC,EACA3G,iBAAkB,SAACnnB,EAAOy3C,GACxBz3C,EAAM8lB,cAAgB2xB,EAAOkD,SACL,IAApB36C,EAAM0qB,YACR1qB,EAAM82B,mBAAqB2gB,EAAOkD,QAEtC,EACA3tB,kBAAmB,SAAChtB,EAAOy3C,GACzBz3C,EAAMyqB,eAAiBgtB,EAAOkD,SACN,IAApB36C,EAAM0qB,YACR1qB,EAAM+2B,oBAAsB0gB,EAAOkD,QAEvC,EACA1lB,mBAAoB,SAACj1B,EAAOy3C,GAC1Bz3C,EAAMqoB,gBAAkBovB,EAAOkD,OACjC,EACAQ,0BAA2B,SACzBn7C,EACAy3C,GAEAz3C,EAAM+6C,KAAK9tC,KAAKwqC,EAAOkD,QACzB,EACAS,eAAgB,SACdp7C,EACAy3C,GAEAz3C,EAAMg7C,aAAavD,EAAOkD,QAAQjhD,IAChC+9C,EAAOkD,QAAQnyC,QACnB,EACAsqB,aAAc,SAAC9yB,EAAOy3C,GACpBz3C,EAAM0qB,UAAY+sB,EAAOkD,SACF,IAAnBlD,EAAOkD,UACT36C,EAAM82B,mBAAqB92B,EAAM8lB,cACjC9lB,EAAM+2B,oBAAsB/2B,EAAMyqB,eAEtC,EACA4wB,aAAc,SAACr7C,EAAOy3C,GACpBz3C,EAAMuP,UAAYkoC,EAAOkD,OAC3B,EACAzmB,gBAAiB,SACfl0B,EACAy3C,GAKAz3C,EAAMizB,aAAewkB,EAAOkD,QAC5B,IAAM3jB,EACJh3B,EAAMizB,aAAae,YACnBh0B,EAAMizB,aAAaa,WACfwnB,EACJt7C,EAAMizB,aAAae,YACnBh0B,EAAMizB,aAAaa,WAEnB9zB,EAAMg3B,YAAcA,IACA,IAApBh3B,EAAM0qB,YAGN1qB,EAAMg3B,UAAYA,GAEhBh3B,EAAMwjB,SAAW83B,GAAc3tB,MAAM2tB,KACvCt7C,EAAMwjB,OAAS83B,EAEnB,EACAC,cAAe,SAACv7C,EAAOy3C,GACrBz3C,EAAMw0B,WAAaijB,EAAOkD,OAC5B,EACAhlB,gBAAiB,SAAC31B,EAAOy3C,GACvBz3C,EAAMgxB,aAAeymB,EAAOkD,OAC9B,EACA3sB,eAAgB,SAAChuB,EAAOy3C,GACtBz3C,EAAM2qB,YAAc8sB,EAAOkD,QACvB36C,EAAM2qB,cACR3qB,EAAM8qB,WAAa,GACnB9qB,EAAM+qB,aAAc,EAExB,EACAuD,aAAc,SACZtuB,EACAy3C,GAEAz3C,EAAM4qB,gBAAkB6sB,EAAOkD,OACjC,EACAxsB,kBAAmB,SACjBnuB,EACAy3C,GAEAz3C,EAAM6qB,eAAiB4sB,EAAOkD,QAAQnyC,SACtCxI,EAAMk7C,WAAazD,EAAOkD,QAAQlyC,KAAO,IAEzCzI,EAAM8lB,cAAgB9lB,EAAMk7C,WAAal7C,EAAMqoB,gBAC/CroB,EAAM82B,mBAAqB92B,EAAM8lB,aACnC,EACAuI,cAAe,SAACruB,EAAOy3C,GACrBz3C,EAAM8qB,YAAc,KAAO2sB,EAAOkD,QAC9BlD,EAAOkD,QAAQt8C,cAAcsd,OAAO,UAAY,IAClD3b,EAAM+qB,aAAc,EACxB,KAIGywB,EAcHV,EAAYF,QAbItkD,EAAAA,mBAAAklD,EAAlBnkB,mBACgB/gC,EAAAA,iBAAAklD,EAAhBr0B,iBACiB7wB,EAAAA,kBAAAklD,EAAjBxuB,kBACkB12B,EAAAA,mBAAAklD,EAAlBvmB,mBACY3+B,EAAAA,aAAAklD,EAAZ1oB,aACex8B,EAAAA,gBAAAklD,EAAftnB,gBACc59B,EAAAA,eAAAklD,EAAd3tB,eACev3B,EAAAA,gBAAAklD,EAAf7lB,gBACar/B,EAAAA,cAAAklD,EAAbD,cACcjlD,EAAAA,eAAAklD,EAAdxtB,eACY13B,EAAAA,aAAAklD,EAAZltB,aACiBh4B,EAAAA,kBAAAklD,EAAjBrtB,kBACa73B,EAAAA,cAAAklD,EAAbntB,cACsB/3B,EAAAA,QAETwkD,EAAYD,OAAO,4B,8CCpLC,K,mIAhBnC,IAIaY,EAAYnlD,EAAAA,cAAG,EAAAkkD,EAAAA,aAAY,CACtCl/C,KAAM,UACNm/C,aANiC,CACjC5jB,gBAAiB,GAMjB6jB,SAAU,CACRrjB,mBAAoB,SAACr3B,EAAOy3C,GAC1Bz3C,EAAM62B,gBAAkB4gB,EAAOkD,OACjC,KAI4BrkD,EAAAA,mBAAImlD,EAAab,QAAnCvjB,mBAA2C/gC,EAAAA,QAE1CmlD,EAAaZ,OAAO,4B,8CCmBG,K,0JAnCtC,IAKaa,EAAeplD,EAAAA,iBAAG,EAAAkkD,EAAAA,aAAY,CACzCl/C,KAAM,KACNm/C,aAPoC,CACpCkB,YAAY,EACZ3b,oBAAqB,CAAC,GAMtB0a,SAAU,CACRkB,cAAe,SACb57C,EAAK7G,GAID,IAFQ0iD,EAAY1iD,EAAtBwhD,QAAUkB,aAGZ77C,EAAM27C,aAAaE,EACnB77C,EAAM67C,aAAeA,CACvB,EACAzF,uBAAwB,SACtBp2C,EAAKzG,GAOD,IAADuiD,EAAAviD,EALDohD,QAAU5pB,EAAM+qB,EAAN/qB,OAAQvoB,EAAQszC,EAARtzC,SAMpBxI,EAAMggC,oBAAoBjP,GAAUvoB,CACtC,KAIGuzC,EACLL,EAAgBd,QADStkD,EAAAA,cAAAylD,EAAbH,cAAqCtlD,EAAAA,uBAAAylD,EAAtB3F,uBACH9/C,EAAAA,QAEXolD,EAAgBb,OAAO,4B,8CCsCL,K,wOAlENvkD,EAAAA,gBAAA,SAAfmrC,GAAe,OAAfA,EAAe,YAAfA,EAAe,YAAfA,EAAe,gBAAfA,EAAe,cAAfA,CAAe,M,IA+Bdua,EAAU1lD,EAAAA,YAAG,EAAAkkD,EAAAA,aAAY,CACpCl/C,KAAM,QACNm/C,aAJ+B,CAAC,EAKhCC,SAAU,CACRvE,KAAM,SAAAn2C,GACJA,EAAMq+B,oBAAiB76B,EACvBxD,EAAMu+B,oBAAiB/6B,CACzB,EACA2pB,KAAM,SAACntB,EAAOy3C,GACZz3C,EAAMu+B,eAAiBkZ,EAAOkD,QAAQhlC,QACtC3V,EAAMmhC,aAAesW,EAAOkD,QAAQ7zC,MACpC9G,EAAMq+B,gBAAiB,CACzB,EACAuD,YAAa,SAAC5hC,EAAOy3C,GACnBz3C,EAAM+hC,cAAgB0V,EAAOkD,QAAQ5tB,KACvC,EAEAwU,OAAQ,SAACvhC,EAAOi8C,GACdj8C,EAAMq+B,gBAAiB,EACvBr+B,EAAMk8C,gBAAiB,CACzB,KAIGC,EAA0CH,EAAWpB,QAA1CtkD,EAAAA,KAAA6lD,EAAJhG,KAAU7/C,EAAAA,KAAA6lD,EAAJhvB,KAAY72B,EAAAA,OAAA6lD,EAAN5a,OAAmBjrC,EAAAA,YAAA6lD,EAAXva,YAEDtrC,EAAAA,qBAAG,SAAC0J,GAAgB,OACnDA,EAAM8G,MAAMy3B,cAAe,EAEIjoC,EAAAA,qBAAG,SAAC0J,GAAgB,OACnDA,EAAM8G,MAAMu3B,cAAe,EAEI/nC,EAAAA,qBAAG,SAAC0J,GAAgB,OACnDA,EAAM8G,MAAMo1C,cAAe,EAAA5lD,EAAAA,QAEd0lD,EAAWnB,OAAO,4B,sDCiFH,K,kLAtI9B,IAAMJ,EAAwB,CAC5B/W,gBAAgB,EAChB0Y,gBAAgB,EAChBxG,eAAgB,EAChBtR,YAAa,WACb+X,SAAS,EACTC,YAAY,EACZ91C,YAAQhD,EACRqqC,eAAe,EACfnrC,WAAYoB,EAAAA,WAAWgD,MACvB0lC,WAAW,EACXvF,iBAAazjC,EACb6gC,WAAY,YAGRkY,EAAqB,CAAC,OAAQ,iBAE9BC,EAAuB,CAC3B,UACA,YACA,QACA,SACA,OACA,iBACA,iBAGIC,GAAU,EAAAjC,EAAAA,aAAY,CAC1Bl/C,KAAM,KACNm/C,aAAAA,EACAC,SAAU,CACRnW,eAAc,SACZvkC,EAAK7G,GAQJ,IAADujD,EAAAvjD,EANEwhD,QAAUrW,EAAWoY,EAAXpY,YAAa99B,EAAMk2C,EAANl2C,OAAQ69B,EAAUqY,EAAVrY,WAOjCpnC,QAAQQ,KAAK,CAAC6mC,YAAAA,EAAaD,WAAAA,IAC3BrkC,EAAMskC,YAAcA,EACpBtkC,EAAMwG,OAASA,EACfxG,EAAMqkC,WAAaA,EAEfkY,EAAmB7uB,SAAS4W,GAC9BtkC,EAAM0jC,gBAAiB,EAEvB1jC,EAAM0jC,gBAAiB,EAGrB8Y,EAAqB9uB,SAAS4W,GAChCtkC,EAAM6tC,eAAgB,EAEtB7tC,EAAM6tC,eAAgB,EAGxB,IAAInrC,EAAaoB,EAAAA,WAAWgD,MAER,aAAhBw9B,IAA4B5hC,EAAaoB,EAAAA,WAAWgD,OACpC,gBAAhBw9B,IACF5hC,EAAaoB,EAAAA,WAAWnG,SACN,gBAAhB2mC,IACF5hC,EAAaoB,EAAAA,WAAWnG,SACN,aAAhB2mC,IAA4B5hC,EAAaoB,EAAAA,WAAWnG,SACpC,SAAhB2mC,IAAwB5hC,EAAaoB,EAAAA,WAAWnG,SAChC,gBAAhB2mC,IACF5hC,EAAaoB,EAAAA,WAAW6oC,UACN,eAAhBrI,IACF5hC,EAAaoB,EAAAA,WAAW4hB,SACN,mBAAhB4e,IACF5hC,EAAaoB,EAAAA,WAAW4hB,SACN,cAAhB4e,IAA6B5hC,EAAaoB,EAAAA,WAAW+F,QACrC,kBAAhBy6B,IACF5hC,EAAaoB,EAAAA,WAAW+F,QACN,YAAhBy6B,IAA2B5hC,EAAaoB,EAAAA,WAAW6oC,UACnC,cAAhBrI,IACF5hC,EAAaoB,EAAAA,WAAW6oC,UACN,UAAhBrI,IAAyB5hC,EAAaoB,EAAAA,WAAW6oC,UACjC,aAAhBrI,IACF5hC,EAAaoB,EAAAA,WAAW6oC,UAEN,WAAhBrI,IACiB,cAAfD,IACF3hC,EAAaoB,EAAAA,WAAW+F,QACP,eAAfw6B,IACF3hC,EAAaoB,EAAAA,WAAW4hB,SACP,gBAAf2e,IACF3hC,EAAaoB,EAAAA,WAAWnG,SACP,gBAAf0mC,IACF3hC,EAAaoB,EAAAA,WAAW6oC,UACP,aAAftI,IAA2B3hC,EAAaoB,EAAAA,WAAWgD,QAGzD9G,EAAM0C,WAAaA,CACrB,EACAizC,kBAAiB,SACf31C,EAAKzG,GAIJ,IAFWq8C,EAAcr8C,EAAxBohD,QAAU/E,eAGZ51C,EAAM41C,eAAiBA,EAErB51C,EAAMo8C,eADe,IAAnBxG,CAKN,EACA9I,eAAc,SACZ9sC,EAAKzC,GAEJ,IADAo9C,EAAOp9C,EAAPo9C,QAED36C,EAAMinC,YAAc0T,EAElB36C,EAAMwsC,eADQhpC,IAAZm3C,GAAqC,UAAZA,CAG/B,EACAgC,WAAU,SAAC38C,EAAKS,GAAsC,IAAnCk6C,EAAOl6C,EAAPk6C,QACjB36C,EAAMq8C,QAAU1B,CAClB,EACAiC,YAAW,SAAC58C,EAAKmB,GAAsC,IAAnCw5C,EAAOx5C,EAAPw5C,QAClB36C,EAAMs8C,WAAa3B,CACrB,KAGGkC,EAMHJ,EAAQ7B,QALItkD,EAAAA,eAAAumD,EAAdtY,eACiBjuC,EAAAA,kBAAAumD,EAAjBlH,kBACUr/C,EAAAA,WAAAumD,EAAVF,WACWrmD,EAAAA,YAAAumD,EAAXD,YACctmD,EAAAA,eAAAumD,EAAd/P,eACkBx2C,EAAAA,QACLmmD,EAAQ5B,OAAO,4B,8CCjDI,K,mVAlFlC,IAAMJ,EAA4B,CAChC3R,cAAc,EACdG,eAAe,EACf6T,SAAS,EACT3T,WAAW,EACXE,YAAY,EACZD,wBAAoB5lC,EACpB8lC,oBAAoB,EACpByT,YAAa,GAGFC,EAAW1mD,EAAAA,aAAG,EAAAkkD,EAAAA,aAAY,CACrCl/C,KAAM,SACNm/C,aAAAA,EACAC,SAAU,CACR/oB,gBAAiB,SAAC3xB,EAAOy3C,GACvBx6C,QAAQQ,KAAK,mBAAoBg6C,GACjCz3C,EAAMkI,KAAOuvC,EAAOkD,QAAQzyC,KAC5BlI,EAAM8G,MAAQ2wC,EAAOkD,QAAQ7zC,MAC7B9G,EAAM8oC,cAAe,CACvB,EACAmU,SAAU,SACRj9C,EACAy3C,GACI,EACNnK,OAAQ,SAAAttC,GACNA,EAAM8oC,cAAe,CACvB,EACAgC,qBAAsB,SAAC9qC,EAAOy3C,GAC5Bz3C,EAAM8oC,aAAe2O,EAAOkD,QACvBlD,EAAOkD,UACV36C,EAAMkI,UAAO1E,EAEjB,EACAymC,sBAAuB,SACrBjqC,EACAy3C,GAEAz3C,EAAMopC,mBAAqBqO,EAAOkD,OACpC,EACA9P,oBAAqB,SAAC7qC,EAAOy3C,GAC3Bz3C,EAAMspC,mBAAqBmO,EAAOkD,OACpC,EACAuC,aAAc,SAACl9C,EAAOy3C,GACpBz3C,EAAMmpC,UAAYsO,EAAOkD,OAC3B,EACAwC,iBAAkB,SAACn9C,EAAOy3C,GACxBz3C,EAAMipC,cAAgBwO,EAAOkD,OAC/B,EACAyC,WAAY,SAACp9C,EAAOy3C,GAClBz3C,EAAMqpC,WAAaoO,EAAOkD,OAC5B,EACA0C,gBAAiB,SAACr9C,EAAOy3C,GACvBz3C,EAAM8G,MAAOmkC,YAAcwM,EAAOkD,QAClC36C,EAAM8G,MAAOokC,UAAW,EACxBlrC,EAAM8G,MAAOzE,UAAY,QACzBrC,EAAM8G,MAAO2I,IAAMgoC,EAAOkD,OAC5B,KAIG2C,EAUHN,EAAYpC,QATCtkD,EAAAA,gBAAAgnD,EAAf3rB,gBACMr7B,EAAAA,OAAAgnD,EAANhQ,OACoBh3C,EAAAA,qBAAAgnD,EAApBxS,qBACqBx0C,EAAAA,sBAAAgnD,EAArBrT,sBACmB3zC,EAAAA,oBAAAgnD,EAAnBzS,oBACgBv0C,EAAAA,iBAAAgnD,EAAhBH,iBACU7mD,EAAAA,WAAAgnD,EAAVF,WACY9mD,EAAAA,aAAAgnD,EAAZJ,aACe5mD,EAAAA,gBAAAgnD,EAAfD,gBAG+B/mD,EAAAA,qBAAG,SAAC0J,GAAgB,OACnDA,EAAM8G,MAAMy3B,cAAe,EAEIjoC,EAAAA,qBAAG,SAAC0J,GAAgB,OACnDA,EAAM8G,MAAMu3B,cAAe,EAEI/nC,EAAAA,qBAAG,SAAC0J,GAAgB,OACnDA,EAAM8G,MAAMo1C,cAAe,EAAA5lD,EAAAA,QAEd0mD,EAAYnC,OAAO,4B,4GChG/B,K,0HAjBH7nC,EAAAnf,EAAAmf,GACAuqC,EAAA1pD,EAAA0pD,GACAC,EAAA3pD,EAAA2pD,GACAvqC,EAAApf,EAAAof,GACAC,EAAArf,EAAAqf,GACA6B,EAAAlhB,EAAAkhB,GACA0oC,EAAA5pD,EAAA4pD,GACkBnnD,EAAAA,OAAG,EAAAonD,EAAAA,gBAAe,CAClC7C,QAAS,CACP/zC,MAAO62C,EAAAA,QACP/U,OAAQgV,EAAAA,QACRl4B,QAASm4B,EAAAA,QACTvH,KAAMwH,EAAAA,QACN50C,GAAI60C,EAAAA,QACJl0C,OAAQm0C,EAAAA,QACRva,GAAIwa,EAAAA,UAEL,4B,2BCyD0B,K,yHAvCF3nD,EAAAA,gBAAA,SAAf4nD,GAAe,OAAfA,EAAe,cAAfA,EAAe,YAAfA,EAAe,YAAfA,EAAe,8BAAfA,EAAe,wCAAfA,EAAe,0BAAfA,EAAe,wBAAfA,EAAe,wBAAfA,EAAe,wBAAfA,EAAe,0BAAfA,EAAe,oCAAfA,EAAe,sCAAfA,EAAe,0CAAfA,EAAe,oCAAfA,CAAe,MAuCE5nD,EAAAA,kBAAA,SAAjB6nD,GAAiB,OAAjBA,EAAiB,kBAAjBA,EAAiB,YAAjBA,EAAiB,sBAAjBA,EAAiB,YAAjBA,CAAiB,e,QAAA,Y,2BCxDP,K,gGAAA7nD,EAAAA,WAAA,SAAVwN,GAAU,OAAVA,EAAU,kBAAVA,EAAU,cAAVA,EAAU,oBAAVA,EAAU,kBAAVA,EAAU,gBAAVA,EAAU,oBAAVA,CAAU,e,QAAA,Y,2BC0DM,K,qHATJxN,EAAAA,aAAA,SAAZo5B,GAAY,OAAZA,EAAY,sBAAZA,EAAY,sBAAZA,EAAY,oBAAZA,EAAY,gBAAZA,EAAY,YAAZA,EAAY,gBAAZA,CAAY,MASIp5B,EAAAA,iBAAA,SAAhB21B,GAAgB,OAAhBA,EAAgB,UAAhBA,EAAgB,UAAhBA,CAAgB,e,QAAA,Y,kJC9DR,K,0HAfpBx2B,OAAAgd,KAAA2rC,GAAAzrC,SAAA,SAAA3P,GAAA,YAAAA,GAAA,eAAAA,IAAAvN,OAAAmd,UAAA9Z,eAAAC,KAAA8Z,EAAA7P,IAAAA,KAAA1M,GAAAA,EAAA0M,KAAAo7C,EAAAp7C,IAAAvN,OAAAkD,eAAArC,EAAA0M,EAAA,CAAA8P,YAAA,EAAAva,IAAA,kBAAA6lD,EAAAp7C,EAAA,QACAvN,OAAAgd,KAAA4rC,GAAA1rC,SAAA,SAAA3P,GAAA,YAAAA,GAAA,eAAAA,IAAAvN,OAAAmd,UAAA9Z,eAAAC,KAAA8Z,EAAA7P,IAAAA,KAAA1M,GAAAA,EAAA0M,KAAAq7C,EAAAr7C,IAAAvN,OAAAkD,eAAArC,EAAA0M,EAAA,CAAA8P,YAAA,EAAAva,IAAA,kBAAA8lD,EAAAr7C,EAAA,QACAvN,OAAAgd,KAAA6rC,GAAA3rC,SAAA,SAAA3P,GAAA,YAAAA,GAAA,eAAAA,IAAAvN,OAAAmd,UAAA9Z,eAAAC,KAAA8Z,EAAA7P,IAAAA,KAAA1M,GAAAA,EAAA0M,KAAAs7C,EAAAt7C,IAAAvN,OAAAkD,eAAArC,EAAA0M,EAAA,CAAA8P,YAAA,EAAAva,IAAA,kBAAA+lD,EAAAt7C,EAAA,QACAvN,OAAAgd,KAAA8rC,GAAA5rC,SAAA,SAAA3P,GAAA,YAAAA,GAAA,eAAAA,IAAAvN,OAAAmd,UAAA9Z,eAAAC,KAAA8Z,EAAA7P,IAAAA,KAAA1M,GAAAA,EAAA0M,KAAAu7C,EAAAv7C,IAAAvN,OAAAkD,eAAArC,EAAA0M,EAAA,CAAA8P,YAAA,EAAAva,IAAA,kBAAAgmD,EAAAv7C,EAAA,QAYoB1M,EAAAA,SAAA,SAARkoD,GAAQ,OAARA,EAAQ,sBAARA,EAAQ,oBAARA,EAAQ,oBAARA,CAAQ,iC,0BCoGlB,K,iHAdwBloD,EAAAA,cAAG,QAQ5BA,EAAAA,YAAG,CACFsjD,YAAa,WACbM,UAAW,iBACXZ,SAAU,QACVS,WAAY,kBACZN,YAAa,WACb,U,QAAA,Y,8FClHEgF,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBn7C,IAAjBo7C,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CACjDjlD,GAAIilD,EACJpd,QAAQ,EACRsd,QAAS,CAAC,GAUX,OANAE,EAAoBJ,GAAU5lD,KAAK+lD,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG3EI,EAAOvd,QAAS,EAGTud,EAAOD,OACf,CAGAH,EAAoB9zC,EAAIm0C,EC5BxBL,EAAoBM,KAAO,CAAC,E,MCA5B,IAAIC,EAAW,GACfP,EAAoBQ,EAAI,CAAC1tC,EAAQ2tC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAenf,IACnB,IAASnnC,EAAI,EAAGA,EAAIimD,EAASl7C,OAAQ/K,IAAK,CAGzC,IAFA,IAAKmmD,EAAUC,EAAIC,GAAYJ,EAASjmD,GACpCumD,GAAY,EACPC,EAAI,EAAGA,EAAIL,EAASp7C,OAAQy7C,MACpB,EAAXH,GAAsBC,GAAgBD,IAAa5pD,OAAOgd,KAAKisC,EAAoBQ,GAAGO,OAAOz8C,GAAS07C,EAAoBQ,EAAEl8C,GAAKm8C,EAASK,MAC9IL,EAASO,OAAOF,IAAK,IAErBD,GAAY,EACTF,EAAWC,IAAcA,EAAeD,IAG7C,GAAGE,EAAW,CACbN,EAASS,OAAO1mD,IAAK,GACrB,IAAId,EAAIknD,SACE57C,IAANtL,IAAiBsZ,EAAStZ,EAC/B,CACD,CACA,OAAOsZ,CAnBP,CAJC6tC,EAAWA,GAAY,EACvB,IAAI,IAAIrmD,EAAIimD,EAASl7C,OAAQ/K,EAAI,GAAKimD,EAASjmD,EAAI,GAAG,GAAKqmD,EAAUrmD,IAAKimD,EAASjmD,GAAKimD,EAASjmD,EAAI,GACrGimD,EAASjmD,GAAK,CAACmmD,EAAUC,EAAIC,EAqBjB,C,KCzBdX,EAAoBlmD,EAAKsmD,IACxB,IAAIa,EAASb,GAAUA,EAAOzmD,WAC7B,IAAOymD,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoBkB,EAAED,EAAQ,CAAEjnD,EAAGinD,IAC5BA,CAAM,ECLdjB,EAAoBkB,EAAI,CAACf,EAASgB,KACjC,IAAI,IAAI78C,KAAO68C,EACXnB,EAAoBoB,EAAED,EAAY78C,KAAS07C,EAAoBoB,EAAEjB,EAAS77C,IAC5EvN,OAAOkD,eAAekmD,EAAS77C,EAAK,CAAE8P,YAAY,EAAMva,IAAKsnD,EAAW78C,IAE1E,ECND07C,EAAoB5pB,EAAI,CAAC,EAGzB4pB,EAAoB1mD,EAAK+nD,GACjBngD,QAAQW,IAAI9K,OAAOgd,KAAKisC,EAAoB5pB,GAAG7pB,QAAO,CAAC+0C,EAAUh9C,KACvE07C,EAAoB5pB,EAAE9xB,GAAK+8C,EAASC,GAC7BA,IACL,KCNJtB,EAAoB7lD,EAAKknD,GAEZA,EAAU,MCFvBrB,EAAoBuB,SAAYF,IAEf,ECHjBrB,EAAoBwB,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOroD,GACR,GAAsB,kBAAX4J,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxB88C,EAAoBoB,EAAI,CAACQ,EAAKC,IAAU9qD,OAAOmd,UAAU9Z,eAAeC,KAAKunD,EAAKC,G,MCAlF,IAAIC,EAAa,CAAC,EACdC,EAAoB,aAExB/B,EAAoB3nC,EAAI,CAACtH,EAAKixC,EAAM19C,EAAK+8C,KACxC,GAAGS,EAAW/wC,GAAQ+wC,EAAW/wC,GAAKxC,KAAKyzC,OAA3C,CACA,IAAIC,EAAQC,EACZ,QAAWp9C,IAARR,EAEF,IADA,IAAI69C,EAAUzsD,SAAS0sD,qBAAqB,UACpC9nD,EAAI,EAAGA,EAAI6nD,EAAQ98C,OAAQ/K,IAAK,CACvC,IAAI+nD,EAAIF,EAAQ7nD,GAChB,GAAG+nD,EAAEC,aAAa,QAAUvxC,GAAOsxC,EAAEC,aAAa,iBAAmBP,EAAoBz9C,EAAK,CAAE29C,EAASI,EAAG,KAAO,CACpH,CAEGJ,IACHC,GAAa,GACbD,EAASvsD,SAASC,cAAc,WAEzB4sD,QAAU,QACjBN,EAAOO,QAAU,IACbxC,EAAoByC,IACvBR,EAAOS,aAAa,QAAS1C,EAAoByC,IAElDR,EAAOS,aAAa,eAAgBX,EAAoBz9C,GAExD29C,EAAOtoB,IAAM5oB,GAEd+wC,EAAW/wC,GAAO,CAACixC,GACnB,IAAIW,EAAmB,CAACC,EAAMl7B,KAE7Bu6B,EAAOY,QAAUZ,EAAOpvC,OAAS,KACjC2oB,aAAagnB,GACb,IAAIM,EAAUhB,EAAW/wC,GAIzB,UAHO+wC,EAAW/wC,GAClBkxC,EAAOc,YAAcd,EAAOc,WAAWC,YAAYf,GACnDa,GAAWA,EAAQ7uC,SAASysC,GAAQA,EAAGh5B,KACpCk7B,EAAM,OAAOA,EAAKl7B,EAAM,EAExB86B,EAAU/mB,WAAWknB,EAAiBM,KAAK,UAAMn+C,EAAW,CAAElP,KAAM,UAAWokB,OAAQioC,IAAW,MACtGA,EAAOY,QAAUF,EAAiBM,KAAK,KAAMhB,EAAOY,SACpDZ,EAAOpvC,OAAS8vC,EAAiBM,KAAK,KAAMhB,EAAOpvC,QACnDqvC,GAAcxsD,SAASO,KAAKF,YAAYksD,EApCkB,CAoCX,C,KCvChDjC,EAAoBxmD,EAAK2mD,IACH,qBAAX+C,QAA0BA,OAAOC,aAC1CpsD,OAAOkD,eAAekmD,EAAS+C,OAAOC,YAAa,CAAEzqD,MAAO,WAE7D3B,OAAOkD,eAAekmD,EAAS,aAAc,CAAEznD,OAAO,GAAO,ECL9DsnD,EAAoBoD,IAAOhD,IAC1BA,EAAOiD,MAAQ,GACVjD,EAAOthB,WAAUshB,EAAOthB,SAAW,IACjCshB,G,MCHR,IAAIkD,EACAtD,EAAoBwB,EAAE+B,gBAAeD,EAAYtD,EAAoBwB,EAAEr+C,SAAW,IACtF,IAAIzN,EAAWsqD,EAAoBwB,EAAE9rD,SACrC,IAAK4tD,GAAa5tD,IACbA,EAAS8tD,gBACZF,EAAY5tD,EAAS8tD,cAAc7pB,MAC/B2pB,GAAW,CACf,IAAInB,EAAUzsD,EAAS0sD,qBAAqB,UAC5C,GAAGD,EAAQ98C,OAEV,IADA,IAAI/K,EAAI6nD,EAAQ98C,OAAS,EAClB/K,GAAK,KAAOgpD,IAAc,aAAa7rC,KAAK6rC,KAAaA,EAAYnB,EAAQ7nD,KAAKq/B,GAE3F,CAID,IAAK2pB,EAAW,MAAM,IAAI3nC,MAAM,yDAChC2nC,EAAYA,EAAUv3C,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFi0C,EAAoBv9B,EAAI6gC,C,WClBxBtD,EAAoByD,EAAI/tD,SAASguD,SAAWC,KAAKxgD,SAAS6sB,KAK1D,IAAI4zB,EAAkB,CACrB,IAAK,GAGN5D,EAAoB5pB,EAAE0qB,EAAI,CAACO,EAASC,KAElC,IAAIuC,EAAqB7D,EAAoBoB,EAAEwC,EAAiBvC,GAAWuC,EAAgBvC,QAAWv8C,EACtG,GAA0B,IAAvB++C,EAGF,GAAGA,EACFvC,EAAS/yC,KAAKs1C,EAAmB,QAC3B,CAGL,IAAIC,EAAU,IAAI5iD,SAAQ,CAAC6Q,EAAS6J,IAAYioC,EAAqBD,EAAgBvC,GAAW,CAACtvC,EAAS6J,KAC1G0lC,EAAS/yC,KAAKs1C,EAAmB,GAAKC,GAGtC,IAAI/yC,EAAMivC,EAAoBv9B,EAAIu9B,EAAoB7lD,EAAEknD,GAEpD7iD,EAAQ,IAAImd,MAgBhBqkC,EAAoB3nC,EAAEtH,GAfF2W,IACnB,GAAGs4B,EAAoBoB,EAAEwC,EAAiBvC,KAEf,KAD1BwC,EAAqBD,EAAgBvC,MACRuC,EAAgBvC,QAAWv8C,GACrD++C,GAAoB,CACtB,IAAIE,EAAYr8B,IAAyB,SAAfA,EAAM9xB,KAAkB,UAAY8xB,EAAM9xB,MAChEouD,EAAUt8B,GAASA,EAAM1N,QAAU0N,EAAM1N,OAAO2f,IACpDn7B,EAAMpC,QAAU,iBAAmBilD,EAAU,cAAgB0C,EAAY,KAAOC,EAAU,IAC1FxlD,EAAM5B,KAAO,iBACb4B,EAAM5I,KAAOmuD,EACbvlD,EAAM2sC,QAAU6Y,EAChBH,EAAmB,GAAGrlD,EACvB,CACD,GAEwC,SAAW6iD,EAASA,EAE/D,CACD,EAWFrB,EAAoBQ,EAAEM,EAAKO,GAA0C,IAA7BuC,EAAgBvC,GAGxD,IAAI4C,EAAuB,CAACC,EAA4BzoD,KACvD,IAGIwkD,EAAUoB,GAHTZ,EAAU0D,EAAaC,GAAW3oD,EAGhBnB,EAAI,EAC3B,GAAGmmD,EAAS4D,MAAMrpD,GAAgC,IAAxB4oD,EAAgB5oD,KAAa,CACtD,IAAIilD,KAAYkE,EACZnE,EAAoBoB,EAAE+C,EAAalE,KACrCD,EAAoB9zC,EAAE+zC,GAAYkE,EAAYlE,IAGhD,GAAGmE,EAAS,IAAItxC,EAASsxC,EAAQpE,EAClC,CAEA,IADGkE,GAA4BA,EAA2BzoD,GACrDnB,EAAImmD,EAASp7C,OAAQ/K,IACzB+mD,EAAUZ,EAASnmD,GAChB0lD,EAAoBoB,EAAEwC,EAAiBvC,IAAYuC,EAAgBvC,IACrEuC,EAAgBvC,GAAS,KAE1BuC,EAAgBvC,GAAW,EAE5B,OAAOrB,EAAoBQ,EAAE1tC,EAAO,EAGjCwxC,EAAqBX,KAA4B,sBAAIA,KAA4B,uBAAK,GAC1FW,EAAmBrwC,QAAQgwC,EAAqBhB,KAAK,KAAM,IAC3DqB,EAAmB/1C,KAAO01C,EAAqBhB,KAAK,KAAMqB,EAAmB/1C,KAAK00C,KAAKqB,G,KClFvF,IAAIC,EAAsBvE,EAAoBQ,OAAE17C,EAAW,CAAC,IAAI,IAAI,MAAM,IAAOk7C,EAAoB,SACrGuE,EAAsBvE,EAAoBQ,EAAE+D,E","sources":["webpack://StarpyApp/./index.web.js","webpack://StarpyApp/./src/App.tsx","webpack://StarpyApp/./src/api/blobdb.ts","webpack://StarpyApp/./src/api/chat.ts","webpack://StarpyApp/./src/api/db/index.ts","webpack://StarpyApp/./src/api/db/supervisor.ts","webpack://StarpyApp/./src/api/db/tables/item.ts","webpack://StarpyApp/./src/api/encoder.ts","webpack://StarpyApp/./src/api/fs.ts","webpack://StarpyApp/./src/api/index.ts","webpack://StarpyApp/./src/api/media.ts","webpack://StarpyApp/./src/api/util.ts","webpack://StarpyApp/./src/api/wt.ts","webpack://StarpyApp/./src/components/app.tsx","webpack://StarpyApp/./src/components/contacts/chat.tsx","webpack://StarpyApp/./src/components/contacts/chatview.tsx","webpack://StarpyApp/./src/components/contacts/contactlibrary.tsx","webpack://StarpyApp/./src/components/contacts/contacts.tsx","webpack://StarpyApp/./src/components/contacts/styles.ts","webpack://StarpyApp/./src/components/editor/editorbanner.tsx","webpack://StarpyApp/./src/components/editor/editorcaret.tsx","webpack://StarpyApp/./src/components/editor/editorcontentitem.tsx","webpack://StarpyApp/./src/components/editor/editorform.tsx","webpack://StarpyApp/./src/components/editor/editorlayer.tsx","webpack://StarpyApp/./src/components/editor/editorplaycontrols.tsx","webpack://StarpyApp/./src/components/editor/editorproject.tsx","webpack://StarpyApp/./src/components/editor/editortoolbar.tsx","webpack://StarpyApp/./src/components/editor/editorvideo.tsx","webpack://StarpyApp/./src/components/encoder/encoderbanner.tsx","webpack://StarpyApp/./src/components/encoder/encoderproject.tsx","webpack://StarpyApp/./src/components/folder/folderlibrary.tsx","webpack://StarpyApp/./src/components/folder/foldernavigator.tsx","webpack://StarpyApp/./src/components/folder/folderpage.tsx","webpack://StarpyApp/./src/components/folder/items/contactitem.tsx","webpack://StarpyApp/./src/components/folder/items/contentitem.tsx","webpack://StarpyApp/./src/components/folder/items/folderitem.tsx","webpack://StarpyApp/./src/components/folder/items/mediaitem.tsx","webpack://StarpyApp/./src/components/folder/items/projectitem.tsx","webpack://StarpyApp/./src/components/folder/styles.ts","webpack://StarpyApp/./src/components/media/home.tsx","webpack://StarpyApp/./src/components/media/mediabanner.tsx","webpack://StarpyApp/./src/components/media/medialibrary.tsx","webpack://StarpyApp/./src/components/nav.tsx","webpack://StarpyApp/./src/components/nav/appnav.tsx","webpack://StarpyApp/./src/components/nav/banners/fileupload.tsx","webpack://StarpyApp/./src/components/nav/components/actions.tsx","webpack://StarpyApp/./src/components/nav/components/backbutton.tsx","webpack://StarpyApp/./src/components/nav/components/bannercontainer.tsx","webpack://StarpyApp/./src/components/nav/components/navinput.tsx","webpack://StarpyApp/./src/components/nav/drawer.tsx","webpack://StarpyApp/./src/components/settings/databases.tsx","webpack://StarpyApp/./src/components/settings/devices.tsx","webpack://StarpyApp/./src/components/settings/settings.tsx","webpack://StarpyApp/./src/ctx/ctx.ts","webpack://StarpyApp/./src/ctx/index.ts","webpack://StarpyApp/./src/db/defaults.ts","webpack://StarpyApp/./src/db/migration.ts","webpack://StarpyApp/./src/hooks/useContacts.ts","webpack://StarpyApp/./src/hooks/useFolder.ts","webpack://StarpyApp/./src/hooks/useFolders.ts","webpack://StarpyApp/./src/hooks/useKeyboardListener.ts","webpack://StarpyApp/./src/hooks/useMedia.ts","webpack://StarpyApp/./src/hooks/useMediaPlayer.ts","webpack://StarpyApp/./src/hooks/useMessages.ts","webpack://StarpyApp/./src/hooks/useRouteContact.ts","webpack://StarpyApp/./src/hooks/useUserData.ts","webpack://StarpyApp/./src/navigators/chatstack.tsx","webpack://StarpyApp/./src/navigators/editor.tsx","webpack://StarpyApp/./src/navigators/encoder.tsx","webpack://StarpyApp/./src/navigators/filestack.tsx","webpack://StarpyApp/./src/navigators/settings.tsx","webpack://StarpyApp/./src/routes/routes.ts","webpack://StarpyApp/./src/store/hooks.ts","webpack://StarpyApp/./src/store/slices/chat.ts","webpack://StarpyApp/./src/store/slices/editor.ts","webpack://StarpyApp/./src/store/slices/encoder.ts","webpack://StarpyApp/./src/store/slices/fs.ts","webpack://StarpyApp/./src/store/slices/media.ts","webpack://StarpyApp/./src/store/slices/ui.ts","webpack://StarpyApp/./src/store/slices/upload.ts","webpack://StarpyApp/./src/store/store.ts","webpack://StarpyApp/./src/types/Contact.ts","webpack://StarpyApp/./src/types/Folder.ts","webpack://StarpyApp/./src/types/Media.ts","webpack://StarpyApp/./src/types/index.ts","webpack://StarpyApp/./src/types/nav.ts","webpack://StarpyApp/webpack/bootstrap","webpack://StarpyApp/webpack/runtime/amd options","webpack://StarpyApp/webpack/runtime/chunk loaded","webpack://StarpyApp/webpack/runtime/compat get default export","webpack://StarpyApp/webpack/runtime/define property getters","webpack://StarpyApp/webpack/runtime/ensure chunk","webpack://StarpyApp/webpack/runtime/get javascript chunk filename","webpack://StarpyApp/webpack/runtime/get mini-css chunk filename","webpack://StarpyApp/webpack/runtime/global","webpack://StarpyApp/webpack/runtime/hasOwnProperty shorthand","webpack://StarpyApp/webpack/runtime/load script","webpack://StarpyApp/webpack/runtime/make namespace object","webpack://StarpyApp/webpack/runtime/node module decorator","webpack://StarpyApp/webpack/runtime/publicPath","webpack://StarpyApp/webpack/runtime/jsonp chunk loading","webpack://StarpyApp/webpack/startup"],"sourcesContent":["import IoniconsFont from '@expo/vector-icons/Ionicons';\nimport MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\n\nimport 'react-native-gesture-handler';\nimport iconFont from '@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf';\n// import { enableFreeze } from 'react-native-screens';\n// import \"setimmediate\"\n// enableFreeze(true);\n\nconst iconFontStyles = `@font-face {\n  src: url(${iconFont});\n  font-family: Ionicons;\n}`;\n\nconst style = document.createElement('style');\nstyle.type = 'text/css';\n\nif (style.styleSheet) {\n  style.styleSheet.cssText = iconFontStyles;\n} else {\n  style.appendChild(document.createTextNode(iconFontStyles));\n}\n\n// Inject stylesheet\ndocument.head.appendChild(style);\nimport App from './src/App';\nimport { createElement } from 'react';\nimport { createRoot } from 'react-dom/client'\nimport { initUserData } from './src/api';\ninitUserData().then(()=>{\n  const root = createRoot(document.getElementById('root'))\n  root.render(createElement(App))\n})","import {SafeAreaProvider} from 'react-native-safe-area-context';\n\nimport React from 'react';\n\nimport {LogBox, Platform} from 'react-native';\n\nLogBox.ignoreAllLogs(); //Hide all warning notifications on front-end\n\nimport AppComponent from './components/app';\n\nimport {UserData} from './api';\n\nimport {UserCtx, UserDataDispatch, UserDataState} from './ctx';\n\nimport {useUserData} from './hooks/useUserData';\n\nimport {\n  configureFonts,\n  MD3DarkTheme,\n  PaperProvider,\n} from 'react-native-paper';\n\nconst theme = {\n  ...MD3DarkTheme,\n  fonts: configureFonts({\n    config: {\n      default: {\n        fontFamily: Platform.select({\n          web: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n          ios: 'System',\n          macos: 'System',\n          default: 'System',\n        }),\n        fontWeight: '400',\n        letterSpacing: 0.5,\n        lineHeight: 22,\n        fontSize: 20,\n      },\n    },\n    isV3: true,\n  }),\n};\nimport {store} from './store/store';\nimport {Provider} from 'react-redux';\n\nimport {QueryClientProvider} from 'react-query';\n\nimport {queryClient} from './api';\n\nconst App = () => {\n  const {userDataState, userDataDispatch} = useUserData();\n  return (\n    <Provider store={store}>\n      <QueryClientProvider client={queryClient}>\n        <UserCtx.Provider value={UserData}>\n          <UserDataState.Provider value={userDataState}>\n            <UserDataDispatch.Provider value={userDataDispatch}>\n              <SafeAreaProvider>\n                <PaperProvider theme={theme}>\n                  <React.Fragment>\n                    {Platform.OS === 'web' ? (\n                      <style type=\"text/css\">{`\n                    @font-face {\n                      font-family: 'MaterialCommunityIcons';\n                      src: url(${require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf')}) format('truetype');\n                    }\n                  `}</style>\n                    ) : null}\n                    <></>\n                  </React.Fragment>\n                  <AppComponent />\n                </PaperProvider>\n              </SafeAreaProvider>\n            </UserDataDispatch.Provider>\n          </UserDataState.Provider>\n        </UserCtx.Provider>\n      </QueryClientProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import * as SQLite from 'expo-sqlite';\nimport {Platform} from 'react-native';\n\nlet db: SQLite.SQLiteDatabase;\nconst initDB = async () => {\n  db = await SQLite.openDatabaseAsync('blobDB7');\n\n  await db.execAsync(`\n    DROP TABLE IF EXISTS blobs;\n    CREATE TABLE IF NOT EXISTS blobs (id INTEGER PRIMARY KEY NOT NULL, data BLOB, parent VARCHAR);\n  `);\n};\n\nPlatform.OS !== 'web' && initDB();\n\nexport const createBlobDB = async () => {\n  return {\n    writeBlob: async (id: string, blob: Uint8Array) =>\n      await db.runAsync(\n        'INSERT INTO blobs (parent, data) VALUES (?, ?)',\n        id,\n        blob,\n      ),\n    readBlobs: async (id: string) => {\n      const data = await db.getAllAsync(\n        'SELECT * FROM blobs WHERE parent = ? ORDER BY id ASC limit 1000',\n        [id],\n      );\n      const ids: number[] = data.map(i => i.id);\n      const deletequery = `DELETE FROM blobs WHERE id IN (${ids.join(\n        ',',\n      )})`;\n      // console.info('deletequery', deletequery)\n      await db.runAsync(deletequery);\n      return data;\n    },\n  };\n};\n","import {\n  getUserData,\n  getById,\n  createDBConn,\n  writeItem,\n  Database,\n} from './db';\n\nimport {UserInfo, Contact, ChatMessage} from '../types';\n\nimport uuid from 'react-native-uuid';\n\nimport {faker} from '@faker-js/faker';\nimport {Evolu} from '@evolu/common';\n\nexport const sendChatMessage = async (\n  chatId: string,\n  text: string,\n  mnemonic: string,\n  message = {},\n) => {\n  const u: UserInfo = await getUserData();\n  const id = uuid.v4();\n  const data = {\n    id,\n    text,\n    userId: u.id,\n    chatId,\n    folderId: chatId,\n    messageStatus: 'sent',\n    userName: u.name,\n    createdAt: new Date().valueOf(),\n  };\n  const ndata = {...data, ...message};\n  const nEvolu = await createDBConn(chatId, mnemonic);\n  await writeItem(ndata, nEvolu);\n  return ndata;\n};\n\nexport const getPublicMessages = async (\n  chatId: string,\n  mnemonic: string,\n  limit: number = 15,\n  offset: number = 0,\n) => {\n  try {\n    const folder = (await getById(chatId)) as Contact;\n    let e: Evolu<Database> | undefined;\n    if ((folder && folder.mnemonic) || mnemonic) {\n      e = await createDBConn(\n        chatId,\n        folder?.mnemonic || mnemonic,\n        true,\n      );\n    }\n    const query = e?.createQuery(db =>\n      db\n        .selectFrom('item')\n        .selectAll()\n        .where('chatId', '=', chatId)\n        .orderBy('createdAt', 'desc')\n        .limit(limit)\n        .offset(offset),\n    );\n    const data = query && (await e?.loadQuery(query));\n    return data?.rows?.map(i => i.item as ChatMessage);\n  } catch (err) {\n    console.error('getPublicMessages error', err);\n  }\n  return [];\n};\n\nexport const createNewParty = async (party: Contact) => {\n  console.info('createNewParty', party);\n  const user = await getUserData();\n  const chatId = party.id;\n  const contact = {\n    ...party,\n    id: chatId,\n    authorId: user.id,\n    authorName: user.name,\n    isContact: true,\n    mnemonic: genMnemonic(),\n  };\n  const item = await writeItem(contact);\n  await sendChatMessage(\n    chatId,\n    user.name + ' has created chat ' + party.name,\n    contact.mnemonic,\n    {system: true},\n  );\n  return contact;\n};\n\nexport const genMnemonic = () => {\n  return [\n    faker.animal.bird().split(' ').join('').toLowerCase(),\n    faker.animal.bird().split(' ').join('').toLowerCase(),\n    faker.color.human().split(' ').join('').toLowerCase(),\n    faker.color.human().split(' ').join('').toLowerCase(),\n    faker.color.human().split(' ').join('').toLowerCase(),\n    faker.animal.fish().split(' ').join('').toLowerCase(),\n    faker.animal.fish().split(' ').join('').toLowerCase(),\n    faker.animal.fish().split(' ').join('').toLowerCase(),\n    faker.animal.insect().split(' ').join('').toLowerCase(),\n    faker.hacker.noun().split(' ').join('').toLowerCase(),\n    faker.hacker.noun().split(' ').join('').toLowerCase(),\n    faker.hacker.noun().split(' ').join('').toLowerCase(),\n  ].join(' ');\n};\n","export interface WindowExtend extends Window {\n  evolu: Evolu<Database>;\n  Video: any;\n}\n\ndeclare global {\n  var evolu: Evolu<Database>;\n  var Video: any;\n  var window: WindowExtend;\n}\n\nimport uuid from 'react-native-uuid';\nimport * as S from '@effect/schema/Schema';\n\nimport {createEvolu, database} from '@evolu/react-native';\n// import { sql } from 'kysely'\n\nimport {ItemTable} from './tables/item';\nimport {domain, shareFolder} from '..';\nimport {\n  Contact,\n  DatabaseItem,\n  Device,\n  Folder,\n  FolderType,\n  Media,\n  UserInfo,\n} from '../../types';\n\nimport {Platform} from 'react-native';\nimport {QueryClient, QueryClientProvider} from 'react-query';\nimport {Evolu, EvoluConfig} from '@evolu/common';\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n      refetchOnReconnect: false,\n    },\n  },\n});\n\nconst Database = database({\n  item: ItemTable,\n});\n\nexport type Database = S.Schema.To<typeof Database>;\n\nconst dbConns: {[key: string]: Evolu<Database>} = {};\n\n// window.dbConns = dbConns;\n\nexport const dbMnemoCons: {[key: string]: Evolu<Database>} = {};\n\nexport let defaultDBName = 'starpy2';\n\nexport const createDBConn = (\n  dbname = `${defaultDBName}`,\n  mnemonic?: string,\n  index?: boolean,\n): Evolu<Database> | Promise<Evolu<Database>> => {\n  if (dbConns[dbname]) return dbConns[dbname];\n  if (mnemonic && dbMnemoCons[mnemonic]) return dbMnemoCons[mnemonic];\n  const ops: Partial<EvoluConfig<Database>> = {name: dbname};\n  if (mnemonic) ops.mnemonic = mnemonic;\n  const db = createEvolu(Database, ops);\n  dbConns[dbname] = db;\n  if (mnemonic) dbMnemoCons[mnemonic] = db;\n  if (index === true) {\n    return new Promise(res => {\n      indexAllFoldersForDB(db).then(() => res(db));\n\n      db.subscribeSyncState(async () => {\n        const state = db.getSyncState();\n        if (state._tag === 'SyncStateIsSynced') {\n          if (!isFirstSync[dbname]) {\n            isFirstSync[dbname] = true;\n          }\n          console.info('state', state, dbname);\n          queryClient.refetchQueries('folderContent_' + dbname);\n          indexAllFoldersForDB(db);\n        }\n      });\n    });\n  }\n  return db;\n};\nconst isFirstSync: {[key: string]: boolean} = {};\n\nexport const indexAllFoldersForDB = async (e: Evolu<Database>) => {\n  try {\n    const query = e?.createQuery(db =>\n      db\n        .selectFrom('item')\n        .selectAll()\n        .where('mnemonic', 'is not', null)\n        .where('isDeleted', 'is', null),\n    );\n    const folders = await e?.loadQuery(query);\n    console.info('folders', folders.rows);\n    const folderPromises = folders.rows.map(async item => {\n      if (!isFirstSync[item.id]) {\n        isFirstSync[item.id] = true;\n        dbConns[item.id] = e;\n      }\n      await queryClient.refetchQueries('folderContent_' + item.id);\n    });\n    await Promise.all(folderPromises);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getUserData = async (\n  apiKey?: string,\n): Promise<UserInfo> => {\n  if (Platform.OS === 'web') {\n    if (!apiKey) apiKey = localStorage?.getItem('authToken');\n  }\n  // const url = domain+\"api/v1/backend/?authToken=\"+apiKey || \"\"\n  // const authData =  (await (await fetch(url, {\n  //     credentials:\"include\",\n  //     method:\"GET\",\n  //   })\n  // ).json())\n  const authData = {};\n  const [userData] = await findBy('userDoc', true);\n  const devices = await findBy('isDevice', true);\n  // console.info('get user data', userData)\n  return {\n    ...userData,\n    ...authData,\n    // photo: authData?.picture,\n    devices,\n  };\n};\n\nexport const getFolderContent = async (folderId: string) => {\n  const folder: Folder = await getById(folderId);\n  let e = evolu;\n  if (folder && folder.mnemonic) {\n    e = await createDBConn(folderId, folder.mnemonic, true);\n    // console.info('dbconn', e)\n  }\n  const query = e?.createQuery(db =>\n    db\n      .selectFrom('item')\n      .selectAll()\n      .where('folderId', '=', folderId)\n      .where('isDeleted', 'is', null)\n      .orderBy('orderId', 'asc')\n      .orderBy('lastUpdated', 'desc'),\n  );\n  const data = await e?.loadQuery(query);\n  // console.info(\"getFolderContent\", folderId, data)\n  return data.rows.map(i => i.item as Folder | Media | Contact);\n};\n\nexport const getPublicFolderContent = async (folderId: string) => {\n  // console.info('getPublicFolderContent')\n  return getFolderContent(folderId);\n};\n\nexport const getFoldersByType = async (\n  type: FolderType,\n): Promise<Folder[]> => {\n  const query = evolu?.createQuery(db =>\n    db\n      .selectFrom('item')\n      .selectAll()\n      .where('folderType', '=', type)\n      .where('folderId', 'is', null)\n      .where('isDeleted', 'is', null),\n  );\n  const data = await evolu?.loadQuery(query);\n  // console.info('folders', data.rows)\n  return data.rows.map(i => i.item as Folder);\n};\n\nexport const writeItem = async (data: any, e?: Evolu<Database>) => {\n  const parentFolderId =\n    Platform.OS === 'web'\n      ? new URL(window?.location?.toString()).searchParams.get(\n          'parentFolderId',\n        )\n      : '';\n  let createdNewDbConn = false;\n  if (data.folderId || parentFolderId) {\n    const folder: Folder = await getById(\n      data.folderId || parentFolderId,\n    );\n    if (folder && folder.mnemonic) {\n      e = createDBConn(data.folderId, folder.mnemonic);\n      if (\n        data.isFolder ||\n        data.isEditorLayer ||\n        data.isEditorProject\n      ) {\n        data.mnemonic = folder.mnemonic;\n        dbConns[data.id] = e;\n        createdNewDbConn = true;\n      }\n      if (data.isMediaNew || data.isEncoderProject) {\n        data.extractor = 'wt';\n      }\n    }\n  }\n  console.info('writeItem data', data);\n  const item = await (e || evolu).createOrUpdate('item', {\n    id: data.id,\n    title: data.title,\n    name: data.name,\n    item: data,\n    isFolder: data.isFolder,\n    isContact: data.isContact,\n    isMediaNew: data.isMediaNew,\n    isDevice: data.isDevice,\n    userDoc: data.userDoc,\n    folderId: data.folderId,\n    folderType: data.folderType,\n    chatId: data.chatId,\n    createdAt: data.createdAt,\n    isDeleted: data.isDeleted,\n    isEditorProject: data.isDeleted,\n    isEditorLayer: data.isDeleted,\n    orderId: data.orderId || 1,\n    mnemonic: data.mnemonic,\n    lastUpdated: new Date().valueOf(),\n  });\n  if (data.mnemonic && data.isFolder && !e) {\n    console.info('create a new index for a new folder');\n    e = await createDBConn(data.id, data.mnemonic, true);\n  }\n  return item;\n};\n\nexport const findByOriginalId = async (id: string) =>\n  findBy('originalId', id);\n\nexport const findBy = async (\n  key: string,\n  value: string | boolean | number,\n) => {\n  const query = evolu?.createQuery(db =>\n    db.selectFrom('item').selectAll().where(key, '=', value),\n  );\n  const data = await evolu?.loadQuery(query);\n  console.info('findBy', data);\n  return data.rows.map(i => i.item);\n};\n\nexport const getById = async (\n  id: string,\n  folderId?: string,\n): Promise<Media | Folder | Contact | Device> => {\n  let e = evolu;\n  if (folderId) {\n    e = dbConns[folderId];\n    if (!e && id !== folderId) {\n      const folder: Folder = await getById(folderId);\n      if (folder?.mnemonic) {\n        e = await createDBConn(folder.id, folder.mnemonic);\n      } else {\n        e = evolu;\n      }\n    }\n  }\n  const query = e?.createQuery(db =>\n    db.selectFrom('item').selectAll().where('id', '=', id),\n  );\n  const item = await e?.loadQuery(query);\n  const i = item?.row?.item;\n  if (i?.isFolder || i?.isEditorLayer || i?.isEditorProject) {\n    if (!dbConns[i.id] && i.mnemonic) {\n      dbConns[i] = e;\n    }\n  }\n  if (!i && id !== '' && id !== undefined && id !== null) {\n    if (dbConns[id] && id !== folderId) return await getById(id, id);\n    // const parentFolderId = new URL(window.location.toString()).searchParams.get(\"parentFolderId\")\n    // if(!folderId && parentFolderId) {\n    //   folderId = parentFolderId\n    //   return await getById(id, folderId)\n    // }\n  }\n  // console.info('getById', id, folderId, i)\n  // console.info(i)\n  return i;\n};\n\nexport const initDatabaseRecord = async (\n  dbname: string,\n  mnemonic: string,\n  e?: Evolu,\n) => {\n  let databases;\n  if (!e) {\n    console.info(\n      'checking for database record for initial db ',\n      defaultDBName,\n    );\n    databases = await getFoldersByType(FolderType.database);\n    if (databases.length) {\n      const exists = databases.find(i => i.mnemonic === mnemonic);\n      if (exists) return exists;\n    }\n  }\n  const id = uuid.v4().toString();\n  const ndb: DatabaseItem = {\n    id,\n    title: `${dbname}_${id}`,\n    mnemonic,\n    isDatabase: true,\n    folderType: FolderType.database,\n    date: new Date().valueOf(),\n    added: new Date().valueOf().toString(),\n    orderId: databases?.length + 1 || 2,\n    userId: 'super',\n  };\n  return await writeItem(ndb, e);\n};\n\nconst evolu = createDBConn();\n\nexport {evolu};\n","import {getFoldersByType, initDatabaseRecord, evolu} from '.';\nimport {DatabaseItem, FolderType} from '../../types';\n\nexport const getDatabases = async (): Promise<DatabaseItem[]> => {\n  try {\n    if (evolu) {\n      await initDatabaseRecord('starpy2', evolu.getOwner().mnemonic);\n    }\n  } catch (err) {\n    console.error(err);\n  }\n\n  return (await getFoldersByType(\n    FolderType.database,\n  )) as DatabaseItem[];\n};\n","import * as S from '@effect/schema/Schema';\n\nimport {\n  NonEmptyString1000,\n  SqliteBoolean,\n  id,\n  table,\n  JsonObjectOrArray,\n  String1000,\n} from '@evolu/common';\n\nconst SomeJson = S.Struct({foo: S.String, bar: S.Boolean});\n\ntype SomeJson = S.Schema.To<typeof SomeJson>;\n\nconst ItemId = id('Item');\n\ntype ItemId = S.Schema.To<typeof ItemId>;\n\nexport const ItemTable = table({\n  id: ItemId,\n  name: String1000,\n  title: String1000,\n  isCompleted: SqliteBoolean,\n  item: SomeJson,\n  isMediaNew: SqliteBoolean,\n  isContact: SqliteBoolean,\n  folderId: String1000,\n  isDevice: SqliteBoolean,\n  isFolder: SqliteBoolean,\n  folderType: String1000,\n  userDoc: SqliteBoolean,\n  chatId: String1000,\n  orderId: String1000,\n  lastUpdated: String1000,\n  isEditorProject: SqliteBoolean,\n  isEditorLayer: SqliteBoolean,\n  isDatabase: SqliteBoolean,\n  mnemonic: String1000,\n});\n\nexport type ItemTable = S.Schema.To<typeof ItemTable>;\n","// export {FFmpeg, fetchFile, toBlobURL};\nimport {Platform} from 'react-native';\nimport {\n  EditorLayer,\n  EditorProject,\n  EncoderProject,\n  Media,\n} from '../types';\nimport {getFileOpfs, writeFileOpfs} from './fs';\nimport {appDirectory, ffMpegWasmBaseUrl} from '../db/defaults';\nimport {downloadFileById} from './wt';\nimport {FFmpegKit} from 'ffmpeg-kit-react-native';\nimport * as ExpoFileSystem from 'expo-file-system';\nconst documentDir =\n  Platform.OS === 'web'\n    ? ''\n    : ExpoFileSystem.documentDirectory?.replace('file://', '/') || '';\nconst cachedMedia: {[key: string]: string} = {};\n\nlet ffmpeg;\n\nexport type CBProgressParams = {progress: number; time: number};\nexport type CBProgressCallback = (progress: CBProgressParams) => void;\n\nexport const cancelEncoding = () => {\n  try {\n    ffmpeg.terminate();\n  } catch (err) {\n    // console.error('terminate ffmpeg error', err)\n  }\n};\n\nexport let FFmpeg;\nlet util;\nexport let fetchFile, toBlobURL;\nconst createFFmpeg = async (cb: CBProgressCallback) => {\n  if (Platform.OS === 'web') {\n    if (!FFmpeg) {\n      util = await import('@ffmpeg/util');\n      fetchFile = util.fetchFile;\n      toBlobURL = util.toBlobURL;\n      FFmpeg = (await import('@ffmpeg/ffmpeg')).FFmpeg;\n    }\n    ffmpeg = new FFmpeg();\n    // ffmpeg.mount(\"NODEFS\", {} as WorkerFSMountData, \"/\")\n    window.ffmpeg = ffmpeg;\n    ffmpeg.on('log', ({message}: {message: string}) => {\n      console.log('ffmpeg', message);\n    });\n    ffmpeg.on('progress', (params: CBProgressParams) => {\n      console.info('ffmpeg progress', params);\n      if (cb) cb(params || 0);\n    });\n    await ffmpeg.load({\n      coreURL: await toBlobURL(\n        `${ffMpegWasmBaseUrl}/ffmpeg-core.js`,\n        'text/javascript',\n      ),\n      wasmURL: await toBlobURL(\n        `${ffMpegWasmBaseUrl}/ffmpeg-core.wasm`,\n        'application/wasm',\n      ),\n    });\n  }\n};\n\nexport const encodeMedia = async (\n  media: EncoderProject,\n  cb?: CBProgressCallback,\n  isPrerender?: boolean,\n): Promise<string | undefined> => {\n  const id = media.isCopy || media?.id;\n  const nmedia = {...media, id};\n  const fileId = `${id}_${media?.filename}`;\n  const {encoding} = media;\n  const cachedId = encoding?.lastUpdated || 0;\n  console.info('cachedId', cachedId);\n  const outPostfix = `.output.${cachedId}.${\n    encoding?.output || 'mp4'\n  }`;\n  const outFileId = fileId + outPostfix;\n  try {\n    if (cachedMedia[id]) return cachedMedia[id];\n    if (cachedId === 0) {\n      // const opfsFile =\n      cachedMedia[id] = await getFileOpfs(nmedia);\n      return cachedMedia[id];\n    }\n    const dirCore = await window.navigator.storage.getDirectory(\n      appDirectory,\n    );\n    const dir = await dirCore.getDirectoryHandle(nmedia.folderId);\n    const cache = await dir.getFileHandle(`${id}_${outFileId}`);\n    const file = await cache?.getFile();\n    if (file) {\n      cachedMedia[id] = URL.createObjectURL(file);\n      return cachedMedia[id];\n    }\n  } catch (err) {\n    console.error('get cache error', err);\n  }\n  cancelEncoding();\n  await createFFmpeg(cb);\n  try {\n    let opfsFile;\n    try {\n      opfsFile = await getFileOpfs(nmedia);\n    } catch (err) {\n      console.info('file not found locally downloading', err);\n      const dlFIle = await downloadFileById(\n        nmedia.id,\n        nmedia.folderId,\n        cb && (progress => cb({progress, time: 0})),\n      );\n      console.info('dlFIle', dlFIle);\n      opfsFile = URL.createObjectURL(await dlFIle.getFile());\n      if (cachedId === 0) {\n        return encodeMedia(media, cb, isPrerender);\n      }\n    }\n    const execCmd = genExecCmd(nmedia, isPrerender);\n    await execEncode({\n      files: [fileId],\n      encoded: [opfsFile],\n      outFileId,\n      execCmd,\n      mediaOut: nmedia,\n    });\n  } catch (err) {\n    console.error('ffmpeg error ', err);\n  }\n};\n\nexport const execEncode = async (cmd: {\n  files: (string | undefined)[];\n  encoded: (string | undefined)[];\n  outFileId: string;\n  execCmd: string[];\n  mediaOut: Media;\n}) => {\n  console.info('execEncode', cmd);\n  try {\n    if (Platform.OS === 'web') {\n      const outFileId = cmd.outFileId;\n      try {\n        await Promise.all(\n          cmd.encoded.map(async (opfsFile, index) => {\n            const fileId = cmd.files[index];\n            const fs = await fetchFile(opfsFile);\n            await ffmpeg.writeFile(fileId, fs);\n          }),\n        );\n      } catch (err) {\n        console.error('load files in ffmpeg error', err);\n        throw err;\n      }\n      console.info('after loading files into ffmpeg', cmd.execCmd);\n      const exec = await ffmpeg.exec(cmd.execCmd);\n      console.info('after exec', exec, outFileId);\n      const data = await ffmpeg.readFile(outFileId);\n      console.info('after processing', data);\n      data.name = outFileId;\n      const file = await (\n        await writeFileOpfs(cmd.mediaOut, data)\n      )?.getFile();\n      cachedMedia[cmd.mediaOut.id] = URL.createObjectURL(file);\n      console.info(\n        'cachedMedia for project',\n        cachedMedia[cmd.mediaOut.id],\n      );\n      return cachedMedia[cmd.mediaOut.id];\n    } else {\n      const exec = await FFmpegKit.executeAsync(\n        cmd.execCmd.join(' '),\n      );\n      console.info('after exec ffmpeg', exec);\n    }\n  } catch (err) {\n    console.error('encodeProject error', err);\n  }\n};\n\nexport const encodeProject = async (\n  projectData: EditorProject,\n  layers: EditorLayer[],\n  isPrerender?: boolean,\n  cb?: CBProgressCallback,\n  logs?: (line: string) => void,\n) => {\n  try {\n    const cmd = genRenderCmd(projectData, layers, isPrerender);\n    const id = projectData.id;\n    const files = cmd.files.filter(i => i !== '-i');\n    console.info(\n      'encodeProject',\n      projectData,\n      layers,\n      isPrerender,\n      cmd,\n    );\n    const cachedId = projectData.editor?.lastUpdated || 0;\n    // try {\n    //     if(cachedMedia[id])\n    //         return cachedMedia[id]\n    //     if(cachedId === 0) {\n    //         // const opfsFile =\n    //         cachedMedia[id] =  await getFileOpfs(nmedia)\n    //         return cachedMedia[id]\n    //     }\n    //     const dirCore = await window.navigator.storage.getDirectory(appDirectory)\n    //     const dir = await dirCore.getDirectoryHandle(projectData.folderId)\n    //     const cache = await dir.getFileHandle(`${id}_${cmd.outFileId}`);\n    //     const file = await cache?.getFile()\n    //     if(file) {\n    //         cachedMedia[id] = URL.createObjectURL(file)\n    //         return cachedMedia[id]\n    //     }\n    // } catch(err) {\n    //     console.error(\"get cache error\", err)\n    // }\n    const encoded = await Promise.all(\n      cmd.medias.map(media =>\n        encodeMedia(\n          media!,\n          progress => {\n            console.info('encoding media', media.id, progress);\n            if (cb) cb(progress);\n          },\n          isPrerender,\n        ),\n      ),\n    );\n    console.info('encoded', encoded, files, cmd.execCmd);\n    cancelEncoding();\n    await createFFmpeg(cb);\n    cmd.files = files;\n    cmd.encoded = encoded;\n    cmd.mediaOut = projectData;\n    await execEncode(cmd);\n  } catch (err) {\n    console.error('encodeproject error', err);\n  }\n};\n\nexport const genRenderCmd = (\n  projectData: EditorProject,\n  layers: EditorLayer[],\n  isPrerender?: boolean,\n) => {\n  if (projectData?.id === undefined || layers?.length < 1)\n    return {execCmd: [], medias: [], files: []};\n  const fileId = `${projectData.id}_${projectData.title}`;\n  const {editor: encoding} = projectData;\n  const outPostfix = `.output.${encoding?.lastUpdated || 0}.${\n    encoding?.output || 'mp4'\n  }`;\n  const outFileId = fileId + outPostfix;\n  const threads =\n    Platform.OS === 'web' &&\n    window.navigator.hardwareConcurrency.toString();\n  const extraCode: string[] =\n    encoding?.code && encoding.code[0] != ''\n      ? encoding.code\n          .filter(i => i !== '')\n          .map(i =>\n            i\n              .trim()\n              .replace(/[\\r\\n]+/gm, '')\n              .trim(),\n          )\n      : [];\n  const medias = layers\n    ?.map(layer => layer?.media?.map(m => ({...m, layer})))\n    .flat()\n    .filter(i => i)\n    .filter(i => !i.isContact);\n  const files =\n    medias\n      ?.map(e => [\n        '-i',\n        `${documentDir}${e?.id}_${e?.filename}.output.${\n          e?.encoding?.lastUpdated || 0\n        }.${e?.encoding?.output || 'mp4'}`,\n      ])\n      .flat() || [];\n  const hasAudio = layers?.reduce((a, layer) => {\n    if (a === true) return a;\n\n    return !layer.editor?.muted;\n  }, false);\n  const hasVideo = layers?.reduce((a, layer) => {\n    if (a === true) return a;\n\n    return !layer.editor?.videoDisabled;\n  }, false);\n  const audioOutput = hasAudio ? '[a_concat]' : '';\n  const audioMap = hasAudio ? ['-map', audioOutput] : [];\n  const videoOutput = hasVideo ? '[v_concat]' : '';\n  const videoMap = hasVideo ? ['-map', videoOutput] : [];\n  const aspectRatio = projectData?.editor?.aspectRatio || '16/9';\n  const scale = `scale=${encoding?.width || 1280}:${\n    encoding?.height || 720\n  },setdar=${aspectRatio}`;\n  const filterTrim =\n    medias?.map((e, index) => {\n      const trimV =\n        `[${index}:v]trim=start=${\n          e?.encoding.start || 0\n        }:end=${parseInt(\n          e?.encoding?.end || e?.duration,\n        )},setpts=PTS-STARTPTS` +\n        ',' +\n        scale +\n        `[v${index}]`;\n\n      const trimA = `[${index}:a]atrim=start=${\n        e?.encoding.start || 0\n      }:end=${parseInt(\n        e?.encoding?.end || e?.duration,\n      )},asetpts=PTS-STARTPTS[a${index}]`;\n      //`,volume=${e?.encoding?.soundVolume/100 || 1},amix[a${index}]`\n      let trim = trimV + ', \\n' + trimA;\n      if (e?.layer?.editor?.muted) trim = trimV;\n      if (e?.layer?.editor?.videoDisabled) trim = trimA;\n      return trim;\n    }) || [];\n  // console.info('medias', medias)\n  const videosLength =\n    medias?.filter(i => i?.layer?.editor?.videoDisabled !== true)\n      .length || 1;\n  const audiosLength =\n    medias?.filter(i => i?.layer?.editor?.muted !== true).length || 1;\n  const videoConcat =\n    (medias\n      ?.map((a, i) => {\n        if (a.layer?.editor?.videoDisabled !== true) return `[v${i}]`;\n        return undefined;\n      })\n      ?.filter(i => i)\n      .join('') || '') +\n    `concat=n=${videosLength}:v=1:a=0${videoOutput}`;\n  const audioConcat =\n    (medias\n      ?.map((a, i) => {\n        if (a.layer?.editor?.muted !== true) return `[a${i}]`;\n        return undefined;\n      })\n      ?.filter(i => i)\n      ?.join('') || '') +\n    `concat=n=${audiosLength}:v=0:a=1${audioOutput}`;\n  // [a3]volume=enable='between(t,0,49)'${audioOutput}`\n  const filterConcat = videoConcat + ';\\n' + audioConcat;\n  filterTrim.push(filterConcat);\n  const execCmd: string[] = [\n    ...files,\n    '-crf',\n    encoding?.compressionLevel?.toString() || '20',\n    '-threads',\n    threads,\n    '-filter_complex',\n    `${filterTrim.join(';\\n')}`,\n    '-preset',\n    encoding?.preset || 'veryfast',\n    '-movflags',\n    '+faststart',\n    ...extraCode,\n    ...videoMap,\n    ...audioMap,\n    '-r',\n    encoding?.framerate?.toString() || '30',\n    `${documentDir}${outFileId}`,\n  ];\n  return {execCmd, medias, files, outFileId};\n};\n\nexport const genExecCmd = (\n  projectData: EncoderProject,\n  isPrerender?: boolean,\n) => {\n  if (projectData?.id === undefined) return [];\n  const fileId = `${projectData.id}_${projectData.filename}`;\n  const {encoding} = projectData;\n  const outPostfix = `.output.${encoding?.lastUpdated || 0}.${\n    encoding?.output || 'mp4'\n  }`;\n  const outFileId = fileId + outPostfix;\n  const threads = window.navigator.hardwareConcurrency.toString();\n  const extraCode: string[] =\n    encoding?.code && encoding.code[0] != ''\n      ? encoding.code\n          .filter(i => i !== '')\n          .map(i =>\n            i\n              .trim()\n              .replace(/[\\r\\n]+/gm, '')\n              .trim(),\n          )\n      : [];\n  const prerenderOptionalCode = !isPrerender\n    ? [\n        '-ss',\n        genExecTime(encoding?.start || 0),\n        '-to',\n        genExecTime(encoding?.end || projectData?.duration),\n      ]\n    : [];\n  const execCmd = [\n    '-i',\n    `${documentDir}${fileId}`,\n    '-crf',\n    encoding?.compressionLevel?.toString() || '20',\n    '-threads',\n    threads,\n    '-filter_complex',\n    `scale=${encoding?.width || projectData.width}x${\n      encoding?.height || projectData.height\n    }`,\n    '-preset',\n    encoding?.preset || 'veryfast',\n    '-movflags',\n    '+faststart',\n    ...prerenderOptionalCode,\n    ...extraCode,\n    `${documentDir}${outFileId}`,\n  ];\n  return execCmd;\n};\n\nexport const genExecTime = (seconds: number, comma?: boolean) => {\n  const end = parseInt(seconds, 10);\n  let endMins = parseInt(end / 60, 10);\n  let endSeconds = parseInt(end - endMins * 60, 10);\n  if (endMins.toString().length === 1) endMins = '0' + endMins;\n  if (endSeconds.toString().length === 1)\n    endSeconds = '0' + endSeconds;\n  const separator = comma ? ',' : ':';\n  const extraSymbol = comma ? '' : '00:';\n  return `${extraSymbol}${endMins}${separator}${endSeconds}`;\n};\n\nexport const getActiveProjectLayer = (\n  layers: EditorLayer[],\n  currentPosition: number,\n) => {\n  let activeMedia: EncoderProject | undefined;\n  let layerCount = 0;\n  let offset = 0;\n  let layer: EditorLayer | undefined;\n\n  while (activeMedia?.id === undefined) {\n    layer = layers[layerCount];\n\n    if (layerCount > layers.length + 1) {\n      console.error('layers', layers, layerCount);\n      throw 'no_layer_found';\n    }\n\n    if (layer?.id === undefined) {\n      layerCount++;\n      continue;\n    }\n    if (layer?.editor?.videoDisabled === true) {\n      layerCount++;\n      continue;\n    }\n\n    const layerMedia = layer.media;\n    activeMedia = layerMedia!.reduce((a, media: EncoderProject) => {\n      if (a.id) return a;\n\n      a +=\n        (media?.encoding?.end || media?.duration) -\n        (media?.encoding?.start || 0);\n      if (a >= currentPosition) return media;\n\n      offset = a;\n      return a;\n    }, 0);\n    layerCount++;\n  }\n  return {offset, layer, activeLayer: layerCount, activeMedia};\n};\n\nexport const getNextActiveProjectMedia = (\n  layers: EditorLayer[],\n  startPosition: number,\n  media: EncoderProject,\n) => {\n  const currentDuration =\n    (media?.encoding?.end || media?.duration) -\n    (media?.encoding?.start || 0);\n  const nextPosition = startPosition + currentDuration + 1;\n  const next = getActiveProjectLayer(layers, nextPosition);\n  console.info('nextPosition', nextPosition, next);\n  return next;\n};\n\nexport const getTotalTime = (layers: EditorLayer[]): number => {\n  const time = layers.reduce((a, layer) => {\n    const t = layer.media?.reduce((agv, media) => {\n      agv +=\n        (media?.encoding?.end || media?.duration) -\n        (media?.encoding?.start || 0);\n      return agv;\n    }, 0);\n    if (!t) return a;\n    if (a > t) return a;\n    if (t > a) return t;\n  }, 0);\n  return time;\n};\n\nexport const getProjectMedia = async (\n  layers: EditorLayer[],\n  currentPosition: number,\n  cb: CBProgressCallback,\n) => {\n  const {offset, layer, activeLayer, activeMedia} =\n    getActiveProjectLayer(layers, currentPosition);\n  const offsetPosition =\n    currentPosition -\n    offset +\n    parseFloat(activeMedia?.encoding.start || 0);\n  const totalTime = getTotalTime(layers);\n  console.info(\n    'getProjectMedia offset',\n    offsetPosition,\n    currentPosition,\n    offset,\n    activeMedia.encoding.start,\n    activeMedia?.id,\n  );\n  const encode = async () => {\n    const e = encodeMedia(activeMedia, cb, true);\n    return new Promise(res => {\n      e.then(async r => {\n        res(r);\n        try {\n          const next = getNextActiveProjectMedia(\n            layers,\n            offset,\n            activeMedia,\n          );\n          if (next) {\n            await encodeMedia(next.activeMedia, () => {}, true);\n          }\n        } catch (err) {\n          console.error('prepare next video error', err);\n        }\n      });\n    });\n  };\n  const url = activeMedia?.id !== undefined ? await encode() : null;\n  return {\n    url,\n    currentPosition: offsetPosition,\n    muted: layer?.editor?.muted,\n    activeMedia,\n    totalTime,\n    offset,\n    activeLayer,\n  };\n};\n","import * as ExpoFileSystem from 'expo-file-system';\nimport {Platform} from 'react-native';\nimport {Media} from '../types';\nimport {writeItem} from './db';\nimport {getBlobForArrayBuffer} from './wt';\n\nimport * as ExpoDocumentPicker from 'expo-document-picker';\nimport {createBlobDB} from './blobdb';\nimport {AssetType, Dirs, FileSystem} from 'react-native-file-access';\n\nexport const writeFileOpfs = async (\n  media: Media,\n  file: File | ExpoDocumentPicker.DocumentPickerAsset,\n) => {\n  if (Platform.OS === 'web') {\n    const dirCore = await window.navigator.storage.getDirectory();\n    const dir = await dirCore.getDirectoryHandle(media.folderId, {\n      create: true,\n    });\n    const fileId = `${media.id}_${file.name}`;\n    const fileHandle = await dir.getFileHandle(fileId, {\n      create: true,\n    });\n    const writable = await fileHandle.createWritable();\n\n    await writable.write(file);\n    await writable.close();\n    if (!media.isDownloaded) {\n      media.isDownloaded = true;\n      await writeItem(media);\n    }\n    return fileHandle;\n  }\n  const fileId = `${media.id}_${media.filename}`;\n  const fileUri = `${ExpoFileSystem.documentDirectory}${fileId}`;\n  await ExpoFileSystem.copyAsync({\n    to: fileUri,\n    from: (file as ExpoDocumentPicker.DocumentPickerAsset).uri,\n  });\n  return fileUri.replace('file://', '');\n};\n\nexport const getFileOpfs = async (\n  media: Media,\n): Promise<string | undefined> => {\n  try {\n    console.info('get file', media.id);\n\n    const file = await getFileReaderOpfs(media);\n    if (typeof file === 'string') return file;\n\n    if (!file) throw 'no_file_found';\n\n    const url = URL.createObjectURL(file);\n    return url;\n  } catch (err) {\n    console.error('get file error', err);\n    throw err;\n  }\n};\n\nexport const getFileReaderOpfs = async (\n  media: Media,\n): Promise<File | string | undefined> => {\n  try {\n    const fileId = `${media.id}_${media.filename}`;\n    if (Platform.OS === 'web') {\n      const dirCore = await window.navigator.storage.getDirectory();\n      const dir = await dirCore.getDirectoryHandle(media.folderId, {\n        create: true,\n      });\n      const fileHandle = await dir.getFileHandle(fileId);\n      const file = await fileHandle?.getFile();\n      return file;\n    } else {\n      const fileUri = `${ExpoFileSystem.documentDirectory}${fileId}`;\n      console.info('fileUri', fileUri);\n      const file = await ExpoFileSystem.getInfoAsync(fileUri);\n      console.info('rn fs file', file);\n      return (file?.exists && file.uri) || undefined;\n    }\n  } catch (err) {\n    console.error('get file reader error', err);\n  }\n};\nlet chunksCount = {};\nlet savePromises = {};\nlet savesCompleted = {};\nexport const saveFileToData = async (\n  filename: string,\n  fileUri: string,\n  saveCount: number,\n): Promise<void> => {\n  console.info(\n    'save ',\n    filename,\n    saveCount,\n    savesCompleted[filename],\n  );\n  if (savePromises[filename])\n    return savePromises[filename].then(() =>\n      saveFileToData(filename, fileUri, saveCount),\n    );\n  else\n    savePromises[filename] = new Promise(async (resolve, rej) => {\n      try {\n        const {readBlobs} = await createBlobDB();\n        let blobs = await readBlobs(filename);\n        let bbs = blobs.map(i => i.data);\n        let buffers = bbs.reduce(\n          (a, i) => _appendBuffer(a, Uint8Array.from(i)),\n          new Uint8Array(),\n        );\n        if (chunksCount[filename])\n          chunksCount[filename] += blobs.length;\n        else chunksCount[filename] = blobs.length;\n        console.info(\n          'save file to data',\n          filename,\n          buffers.length,\n          blobs.length,\n          bbs.length,\n        );\n        console.info(\n          'current chunk on saving file',\n          chunksCount[filename],\n        );\n        let nfile = getBlobForArrayBuffer(buffers.buffer) as Blob & {\n          name: string;\n        };\n        nfile.name = filename;\n        const fr = new FileReader();\n        fr.onload = async () => {\n          // console.info('file reader result', fr)\n          try {\n            const data = fr.result.replace('data:blob;base64,', '');\n            await FileSystem.appendFile(\n              fileUri.replace('file://', ''),\n              data,\n              'base64',\n            );\n            resolve(null);\n          } catch (err) {\n            const error = (err as Error)?.message || err;\n            console.error('fs worker err', error);\n            rej(error);\n          }\n        };\n        fr.readAsDataURL(nfile);\n      } catch (err) {\n        savePromises[filename] = null;\n        console.error(\n          'fs worker err',\n          (err as Error)?.message || err,\n        );\n        rej((err as Error)?.message || err);\n      }\n    });\n  await savePromises[filename];\n  if (savesCompleted[filename])\n    savesCompleted[filename].push(saveCount);\n  else savesCompleted[filename] = [saveCount];\n  savePromises[filename] = null;\n};\n\nexport const _appendBuffer = function (\n  buffer1: ArrayBuffer,\n  buffer2: ArrayBuffer,\n) {\n  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp;\n};\n\nexport const DocumentPicker = {\n  pickSingle: async () =>\n    new Promise(async resolve => {\n      if (Platform.OS === 'web') {\n        const fileInput = document.getElementById(\n          'fileInput',\n        ) as HTMLInputElement | null;\n        fileInput?.click();\n        fileInput?.addEventListener('change', async () => {\n          if (fileInput?.files?.length) {\n            const file = fileInput?.files?.[0];\n            const nfile = {\n              file,\n              type: file?.type,\n              title: file?.name,\n              name: file?.name,\n              extractor: 'local',\n              size: file?.size,\n              originalId: file?.name + file?.size,\n            };\n            return resolve(nfile);\n          }\n        });\n      } else {\n        const exres = await ExpoDocumentPicker.getDocumentAsync({\n          multiple: false,\n        });\n        const asset = exres?.assets?.[0];\n        console.info('expo res', exres, asset);\n        if (!asset) return resolve(undefined);\n        const nfile = {\n          asset,\n          file: asset,\n          uri: asset.uri,\n          type: asset.mimeType,\n          size: asset.size,\n          title: asset.name,\n          name: asset.name,\n          extractor: 'local',\n          originalId: asset.name + asset.size,\n        };\n        return resolve(nfile);\n      }\n    }),\n};\n","export * from '../db/defaults';\nexport * from './db';\nexport * from './media';\nexport * from './chat';\nexport * from './fs';\nimport {getWT, startUpMediaSharing} from './media';\nimport {writeItem, getUserData, getById} from './db';\ndeclare global {\n  var publicSocketCallback: any;\n  var newMediaCallback: any;\n  var setupPartyView: any;\n  var playMediaLink: any;\n  var playMesh: any;\n  var mediaClient: any;\n  var windowClosedCallback: any;\n  // var localStorage: any;\n  var showOpenFilePicker: any;\n}\nexport {evolu, createDBConn} from './db';\nimport * as ExpoDevice from 'expo-device';\n\nimport {colors, domain, userDocKey} from '../db/defaults';\n\nimport {CurrentUserData, Device} from '../types';\nimport {Platform} from 'react-native';\nimport {doInitialMigration} from '../db/migration';\n\nconst apiURL = `${domain}api/v1/`;\n\nexport let UserData: CurrentUserData = {\n  user: {\n    id: 'test',\n    name: 'test',\n  },\n  isEditingFolder: {},\n  colors,\n  searchItems: [],\n  currentFolderIds: {},\n};\n\nexport const initUserData = async () => {\n  try {\n    UserData.user = await doInitialMigration(writeItem, getUserData);\n    const userAgent =\n      ExpoDevice.designName?.replace(/[^\\w\\s]/gi, '') ||\n      'unknown_agent';\n    const os = ExpoDevice.osName || 'unknown_os';\n    const browserName = ExpoDevice.brand || 'web';\n    console.info('browserName', browserName);\n    const deviceId = userAgent + os + browserName;\n    // console.info('deviceId', deviceId)\n    const device = (await getById(deviceId)) as Device;\n    // console.info('device', device)\n    if (!device || !device.manufacturer) {\n      const ndevice: Device = {\n        id: deviceId,\n        manufacturer: browserName,\n        isDevice: true,\n        userAgent,\n        createdAt: new Date().valueOf(),\n        model: browserName,\n        os,\n        platform: Platform.OS,\n      };\n      console.info(ndevice);\n      await writeItem(ndevice);\n    }\n    console.info('initUserData', UserData);\n    if (Platform.OS === 'web') {\n      await startUpMediaSharing();\n    }\n  } catch (err) {\n    console.error('initUserData Error', err);\n  }\n};\n\nexport const publicPartyPref = () => {};\nexport const deleteById = (id: string) => {};\nexport const setOpenItem = () => {};\nexport const removeFile = () => {};\nexport const downloadFile = () => {};\n\nexport const getUnreadMessages = () => {};\nexport const extractMedia = async (link: string) => {\n  const media = await getWT(link);\n  console.info('onMedia', media);\n  return {\n    url: media.magnetURI,\n    title: media.name,\n    originalId: media.infoHash,\n    id: media.infoHash,\n    filename: media.files[0].name,\n    extractor: 'wt',\n    isFolder:\n      media.files && media.files?.length > -1 ? true : undefined,\n    files:\n      media.files && media.files?.length > -1\n        ? media.files\n        : undefined,\n  };\n};\n","export * from './fs';\nexport * from './wt';\nexport * from './encoder';\n\nimport {EditorLayer, EditorProject, Folder, Media} from '../types';\n\nimport {getById, getFolderContent, evolu} from './db';\nimport {cast} from '@evolu/common';\nimport {shareFileToWT} from './wt';\nimport {FolderPreviewContentType} from '../hooks/useFolders';\nimport {getFileOpfs} from './fs';\n\nexport const recursiveShare = async (\n  media: FolderPreviewContentType,\n): Promise<void> => {\n  if ((media as Media).isDownloaded) {\n    try {\n      shareFileToWT(media.id, media.folderId);\n      return;\n    } catch (err) {\n      // console.error(\"shareFileToWT\", err)\n    }\n  }\n  if (\n    (media as Folder).isFolder ||\n    (media as EditorProject).isEditorProject ||\n    (media as EditorLayer).isEditorLayer\n  ) {\n    const innerContent: (Media | Folder)[] = await getFolderContent(\n      media.id,\n    );\n    await Promise.all(innerContent.map(recursiveShare));\n    return;\n  }\n  return undefined;\n};\n\nexport const shareFolder = async (folder: Folder) => {\n  const content: (Media | Folder)[] = await getFolderContent(\n    folder.id,\n  );\n  for (let n = 0; n < content.length; n++) {\n    // const contentItem =\n    await recursiveShare(content[n]);\n    // const shared = (await Promise.all(content.map(recursiveShare))).flat().filter((i)=>i)\n  }\n};\nexport const startUpMediaSharing = async () => {\n  try {\n    // await new Promise(res=>setTimeout(()=>res(), 20000))\n    const query = (await evolu).createQuery(db =>\n      db\n        .selectFrom('item')\n        .selectAll()\n        .where('isFolder', '=', cast(true))\n        .where('mnemonic', 'is not', null)\n        .orderBy('createdAt', 'desc'),\n    );\n\n    const sharedFolders: Folder[] = (\n      await (await evolu).loadQuery(query)\n    )?.rows?.map(i => i.item);\n    // console.info(\"sharedFolders\", sharedFolders)\n    for (let i = 0; i < sharedFolders.length; i++) {\n      const folder = sharedFolders[i];\n      await shareFolder(folder);\n      // return shared;\n    }\n    const sharedFiles = (\n      await Promise.all(\n        sharedFolders.map(async folder => {\n          const content: (Media | Folder)[] = await getFolderContent(\n            folder.id,\n          );\n          const shared = (\n            await Promise.all(content.map(recursiveShare))\n          )\n            .flat()\n            .filter(i => i);\n          return shared;\n        }),\n      )\n    ).flat();\n    console.info('sharedFiles', sharedFiles);\n  } catch (err) {\n    console.error('startUpMediaSharing error', err);\n  }\n};\n\nexport const getMediaAndEnq = async (\n  mediaId: string,\n  filename: string,\n) => {\n  const media: Media = (await getById(mediaId)) as any;\n  console.info('playing media', media);\n  if (media.extractor === 'local') {\n    media.url = (await getFileOpfs(media)) as string;\n  }\n  return enqMedia(media, filename);\n};\n\nexport const enqMedia = async (media: Media, filename: string) => {\n  return playMediaLink(media.url, media.currentPosition, filename);\n};\n","export const getBrowserName = () => {\n  // Opera 8.0+\n  const isOpera =\n    (!!window.opr && !!opr.addons) ||\n    !!window.opera ||\n    navigator.userAgent.indexOf(' OPR/') >= 0;\n  if (isOpera) return 'opera';\n  // Firefox 1.0+\n  const isFirefox = typeof window.InstallTrigger !== 'undefined';\n\n  if (isFirefox) return 'firefox';\n\n  // Safari 3.0+ \"[object HTMLElementConstructor]\"\n  const isSafari =\n    /constructor/i.test(window.HTMLElement) ||\n    (function (p) {\n      return p.toString() === '[object SafariRemoteNotification]';\n    })(\n      !window['safari'] ||\n        (typeof window.safari !== 'undefined' &&\n          window['safari'].pushNotification),\n    );\n\n  if (isSafari) return 'apple-safari';\n\n  // Internet Explorer 6-11\n  const isIE = /*@cc_on!@*/ false || !!window.document.documentMode;\n\n  if (isIE) return 'microsoft-internet-explorer';\n  // Edge 20+\n  const isEdge = !isIE && !!window.StyleMedia;\n\n  if (isEdge) return 'microsoft-edge';\n\n  // Chrome 1 - 79\n  const isChrome = window.chrome;\n\n  if (isChrome) return 'google-chrome';\n\n  // Edge (based on chromium) detection\n  const isEdgeChromium =\n    window.isChrome &&\n    window.navigator.userAgent.indexOf('Edg') != -1;\n\n  if (isEdgeChromium) return 'microsoft-edge';\n\n  // Blink engine detection\n  const isBlink = (window.isChrome || isOpera) && !!window.CSS;\n\n  if (isBlink) return 'blink';\n};\n\nconst units = [\n  'bytes',\n  'KiB',\n  'MiB',\n  'GiB',\n  'TiB',\n  'PiB',\n  'EiB',\n  'ZiB',\n  'YiB',\n];\nexport const niceBytes = (x: string) => {\n  let l = 0,\n    n = parseInt(x, 10) || 0;\n\n  while (n >= 1024 && ++l) {\n    n = n / 1024;\n  }\n\n  return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + units[l];\n};\n","import {Platform} from 'react-native';\nimport * as ExpoFileSystem from 'expo-file-system';\nimport {ReadingOptions} from 'expo-file-system';\nimport {getById, writeItem} from './db';\nimport {\n  _appendBuffer,\n  getFileReaderOpfs,\n  saveFileToData,\n  writeFileOpfs,\n} from './fs';\nimport {createBlobDB} from './blobdb';\nimport {Media} from '../types';\nimport {\n  runOnRuntime as runOnRuntimeType,\n  WorkletRuntime,\n} from 'react-native-reanimated';\n// import { createWorkletRuntime } from 'react-native-reanimated';\n// const bgRuntime = creaxteWorkletRuntime('background');\n\nconst rtcConfig: RTCConfiguration = {\n  iceServers: [\n    {\n      urls: ['stun:turn.starpy.me', 'turn:turn.starpy.me'],\n      username: 'username1',\n      credential: 'password1',\n    },\n  ],\n  sdpSemantics: 'unified-plan',\n  bundlePolicy: 'max-bundle',\n  iceCandidatePoolSize: 1,\n  iceTransportPolicy: 'relay',\n  iceCandidatePoolsize: 1,\n};\n\nlet Fetch;\nlet mediaClient: any, mediaWorker: any;\nlet bgRuntime: WorkletRuntime;\nlet runOnRuntime: typeof runOnRuntimeType;\nexport let getBlobForArrayBuffer: (arrayBuffer: ArrayBuffer) => Blob;\nexport let getArrayBufferForBlob: (Blob: Blob) => ArrayBuffer;\nconst announce = ['wss://media.starpy.me'];\nconst createMediaClient = async () => {\n  const ops = {\n    tracker: {\n      rtcConfig,\n      announce,\n    },\n    // secure:true,\n    announce,\n  };\n  if (Platform.OS === 'web') {\n    mediaClient = new WebTorrent(ops);\n  } else {\n    Fetch = (await import('react-native-fetch-api')).fetch;\n    const jsi = await import('react-native-blob-jsi-helper');\n    const reanimatedRuntime = await import('./wtbg');\n    getBlobForArrayBuffer = jsi.getBlobForArrayBuffer;\n    getArrayBufferForBlob = jsi.getArrayBufferForBlob;\n    bgRuntime = reanimatedRuntime.bgRuntime;\n    runOnRuntime = reanimatedRuntime.runOnRuntime;\n\n    const wt = (await import('webtorrent/dist/webtorrent.min.js'))\n      .default;\n    mediaClient = new wt(ops);\n  }\n  mediaClient.on('error', function (err) {\n    console.error('mediaclient err: ' + err.message);\n    // reject(err)\n  });\n\n  const resolveWorker = async reg => {\n    const worker = reg.active || reg.waiting || reg.installing;\n    await new Promise(resolvd2 => {\n      const checkState = worker => {\n        mediaWorker = worker;\n        const res = worker.state === 'activated';\n        if (res) {\n          console.info('after load worker');\n          mediaClient.loadWorker(worker, resolvd2);\n        }\n        return res;\n      };\n      if (!checkState(worker)) {\n        mediaWorker.addEventListener('statechange', ({target}) =>\n          checkState(target),\n        );\n      }\n    });\n  };\n  const prs = await new Promise(async resolve => {\n    if (Platform.OS === 'web') {\n      const reg = await navigator.serviceWorker.register(\n        '/sw.min.js',\n      );\n      const wp = await resolveWorker(reg);\n    } else {\n      return resolve(mediaClient);\n    }\n  });\n  return prs;\n};\ncreateMediaClient();\nexport const downloadFileById = async (\n  mediaId: string,\n  folderId?: string,\n  progressCB?: (progress: number) => void,\n) => {\n  const media: Media = await getById(mediaId, folderId);\n  if (media?.extractor === 'wt') {\n    // const wt = await getVideoWT(media);\n    let wt;\n    let stream;\n    let cbt = null;\n    // if (wt) {\n    if (mediaClientFiles[mediaId]) {\n      wt = mediaClientFiles[mediaId];\n    } else {\n      const mediaData = await getVideoWT(media);\n      wt = mediaData.torrent;\n      stream = mediaData.stream;\n    }\n    wt.on('download', bytes => {\n      if (progressCB) progressCB(wt.progress);\n    });\n    if (Platform.OS === 'web') {\n      const blob = await (await fetch(stream)).arrayBuffer();\n      const file = new File([blob], media.filename);\n      return await writeFileOpfs(media, file);\n    }\n  }\n};\n\nconst isVideo = (file: any) =>\n  file?.name?.endsWith('.mp4') ||\n  file?.name?.endsWith('.webm') ||\n  file?.name?.endsWith('.mkv') ||\n  file?.name?.endsWith('.mov');\n\nconst mediaClientFiles = {};\nconst streamUrls: {[key: string]: string | undefined} = {};\nconst mobileStreamingForFileIsRunning: {\n  [key: string]: Promise<string | undefined> | undefined;\n} = {};\nconst processWT = async (\n  wt,\n  filename?: string,\n): Promise<string | undefined> => {\n  let file = filename\n    ? wt.files.find(i => i.name || i.filename === filename)\n    : wt.files.find(file => isVideo(file));\n\n  if (!file && wt.files?.length) file = wt.files[0];\n\n  if (streamUrls[file.name]) return streamUrls[file.name];\n\n  if (mobileStreamingForFileIsRunning[file.name])\n    return await mobileStreamingForFileIsRunning[file.name];\n\n  if (!file?.name) throw new Error('no_file_found_in_metadata');\n\n  console.info('file name found', file?.name);\n\n  mobileStreamingForFileIsRunning[file.name] = new Promise(\n    async (resolve, reject) => {\n      try {\n        const process = (err: Error, url: string) => {\n          if (err) return reject(err);\n          resolve(url);\n        };\n        // isVideo(file) ?\n        if (Platform.OS === 'web') {\n          file?.getStreamURL(process);\n        } else {\n          const fileUri = `${ExpoFileSystem.documentDirectory}${file.name}`;\n          await ExpoFileSystem.writeAsStringAsync(fileUri, '', {\n            encoding: 'base64',\n          });\n          file.select();\n          const {writeBlob} = await createBlobDB();\n          const stream = file.createReadStream();\n          let countChunks = 0;\n          let lastSave = 0;\n          const saveThreshold = 5;\n          const startTheshold = 70;\n          let saveCount = 0;\n          stream.on('data', (chunk: Uint8Array) => {\n            countChunks++;\n            const chunkId = parseInt(countChunks.toString(), 10);\n            writeBlob(file.name, chunk).then(() => {\n              try {\n                if (\n                  chunkId - lastSave > saveThreshold &&\n                  lastSave !== chunkId\n                ) {\n                  lastSave = countChunks;\n                  saveCount++;\n                  saveFileToData(file.name, fileUri, saveCount).then(\n                    () => {\n                      if (startTheshold >= saveCount)\n                        resolve(fileUri);\n                    },\n                  );\n                }\n              } catch (err) {\n                console.error('write blob err', err);\n              }\n            });\n          });\n\n          file.on('done', async () => {\n            console.info('file done', file.name);\n            saveCount++;\n            await saveFileToData(file.name, fileUri, saveCount);\n            mobileStreamingForFileIsRunning[file.name] = undefined;\n            resolve(fileUri);\n          });\n        }\n      } catch (err) {\n        mobileStreamingForFileIsRunning[file.name] = undefined;\n        console.error('get stream err', err);\n      }\n    },\n  ).catch(err => {\n    mobileStreamingForFileIsRunning[file.name] = undefined;\n    console.error('get stream url error', err);\n  }) as Promise<string | undefined>;\n\n  streamUrls[file.name] = await mobileStreamingForFileIsRunning[\n    file.name\n  ];\n  console.info('after stream url', streamUrls[file.name]);\n  return streamUrls[file.name];\n};\n\nexport const getVideoWT = async (\n  media: Media,\n  filename?: string,\n): Promise<{stream: string | undefined; torrent: any}> => {\n  console.info('get video wt', media.filename);\n  if (!mediaClient) {\n    await createMediaClient();\n  }\n  return new Promise(async (resolve, reject) => {\n    try {\n      if (mediaClientFiles[media.id]) {\n        resolve({\n          stream: await processWT(\n            mediaClientFiles[media.id],\n            filename,\n          ),\n          torrent: mediaClientFiles[media.id],\n        });\n        return;\n      }\n      // console.info('before media client add', media.filename, );\n      const torrentFileName = 'torrent.file.' + media.id;\n      const torrentBuffer =\n        media?.torrentFile && Platform.OS === 'web'\n          ? new File(\n              [\n                Uint8Array.from(Object.values(media.torrentFile))\n                  .buffer,\n              ],\n              torrentFileName,\n            )\n          : media?.torrentFile &&\n            Uint8Array.from(Object.values(media.torrentFile));\n      // if(torrentBuffer)\n      //   torrentBuffer.name = torrentFileName\n\n      console.info('torrentFile', torrentBuffer);\n\n      mediaClient.add(torrentBuffer || media.url, wt => {\n        try {\n          mediaClientFiles[media.id] = wt;\n          console.info('after mediaclient add', media.filename, wt);\n          processWT(wt, filename)\n            .then(streamUrl =>\n              resolve({stream: streamUrl, torrent: wt}),\n            )\n            .catch(err => reject(err));\n        } catch (err) {\n          console.error('getVideoWT err', err);\n          reject(err);\n        }\n      });\n    } catch (err) {\n      console.error('get video wt err', err);\n      reject(err);\n    }\n  });\n};\n\nexport const getWT = async (magnet: string): Promise<any> => {\n  if (!mediaClient) {\n    await createMediaClient();\n  }\n  return await new Promise(async (resolve, reject) => {\n    mediaClient.add(magnet, async wt => resolve(wt));\n  });\n};\n\nexport const shareFileToWT = async (\n  mediaId: string,\n  folderId?: string,\n): Promise<void> => {\n  // console.info('share file wt', media, file, mediaClient);\n  if (!mediaClient) {\n    await createMediaClient();\n  }\n  const media: Media = await getById(mediaId, folderId);\n  let file = await getFileReaderOpfs(media);\n  console.info('filepath', file);\n  if (Platform.OS !== 'web') {\n    // const bs64 = await ExpoFileSystem.readAsStringAsync(\n    //   file as string,\n    //   {encoding: 'base64'},\n    // );\n    // file = `data:${media.fileType || \"video/mp4\"};base64,${bs64}`\n    const fileDL = file.replace('file://', '');\n    // file = await (await fetch(fileDL)).blob()\n    file = new Blob([], {type: media.fileType, size: media.size});\n    const fsd = await Fetch(fileDL);\n    file.length = media.size;\n    // file.size = media.size\n    file.stream = () => fsd.body;\n    file.name = media.filename;\n    // file = arrayBuffer;\n    // file = new File(arrayBuffer, media.filename);\n  }\n  console.info('share file wt', file);\n  if (!file) throw 'no_file';\n  // if(Platform.OS === \"web\")\n  shareFile(file, announce, media);\n  // return runOnRuntime(bgRuntime, shareFile)(file, announce, media)\n};\nconst shareFile = (\n  file: File | string,\n  announce: string[],\n  media: Media,\n) => {\n  'worklet';\n  new Promise((resolve, reject) => {\n    try {\n      mediaClient.seed(file, {announce}, async wt => {\n        try {\n          console.info('after wt create', wt);\n          if (\n            media.extractor === 'wt' &&\n            media.url &&\n            media.url.search('file://') === -1\n          )\n            return resolve(media);\n          media.torrentFile = wt.torrentFile;\n          media.url = wt.magnetURI;\n          media.extractor = 'wt';\n          media.isDownloaded = true;\n\n          await writeItem(media);\n          resolve(media);\n        } catch (err) {\n          console.error('create wt err', err);\n          reject(err);\n        }\n      });\n    } catch (err) {\n      console.error('create wt err', err);\n      reject(err);\n    }\n  });\n};\n","import React, {\n  useState,\n  useEffect,\n  useContext,\n  useRef,\n  createContext,\n} from 'react';\n\nimport {Text} from 'react-native';\n\nimport {NavigationContainer, Theme} from '@react-navigation/native';\n\nimport RootStackNav from './nav';\n\nimport {GestureHandlerRootView} from 'react-native-gesture-handler';\nimport {linking} from '../routes/routes';\nimport {MD3DarkTheme} from 'react-native-paper';\n\nconst AppComponent = () => {\n  return (\n    <GestureHandlerRootView style={{width: '100%', height: '100%'}}>\n      <NavigationContainer\n        // onStateChange={(state)=>console.info('state change', state)}\n        theme={MD3DarkTheme as any}\n        linking={linking}\n        fallback={<Text>Loading...</Text>}>\n        <RootStackNav />\n      </NavigationContainer>\n    </GestureHandlerRootView>\n  );\n};\n\nexport default AppComponent;\n","import React from 'react';\nimport ChatView from './chatview';\nimport {useQuery} from 'react-query';\nimport {ActivityIndicator} from 'react-native-paper';\nimport {useRouteContact} from '../../hooks/useRouteContact';\nimport {useRoute} from '@react-navigation/native';\nimport {getById, getFolderContent, getUserData} from '../../api';\nimport {Contact, FolderType, UserInfo} from '../../types';\nimport {ChatParams} from '../../types/nav';\nimport {useFolder} from '../../hooks/useFolder';\nimport {View, useWindowDimensions} from 'react-native';\nimport {FolderNavigator} from '../folder/foldernavigator';\nimport ContentItem from '../folder/items/contentitem';\nimport {styles} from './styles';\n\nfunction Chat({isEmbed}: {isEmbed?: boolean}) {\n  const route = useRoute();\n  const params = route.params as ChatParams;\n  const chatId = params.chatId;\n  const userQuery = useQuery('UserData', () => getUserData(), {\n    refetchOnMount: false,\n    refetchOnReconnect: false,\n    refetchOnWindowFocus: false,\n    onError(err) {\n      console.error('on get contact error', err);\n    },\n  });\n  const contactQuery = useQuery(\n    'contact_' + chatId,\n    () => getById(chatId),\n    {\n      refetchOnMount: false,\n      refetchOnReconnect: false,\n      refetchOnWindowFocus: false,\n      onError(err) {\n        console.error('on get contact error', err);\n      },\n    },\n  );\n  const isLoading = !userQuery.isFetched || !contactQuery.isFetched;\n  const contact = contactQuery?.data as Contact;\n  const user = userQuery?.data as UserInfo;\n  const dim = useWindowDimensions();\n  const {width} = dim;\n\n  const parentFolderId =\n    params?.parentFolderId ||\n    params?.parentFolderId! ||\n    ((contact && contact.folderId) as string);\n  const parentFolderHook = useFolder(\n    parentFolderId,\n    getFolderContent,\n    getById,\n    FolderType.contact,\n  );\n\n  useRouteContact(contact, isLoading, user, params);\n  const isMobile = width > 700 && !isEmbed ? false : true;\n  return (\n    <View\n      style={{\n        width: '100%',\n        height: '100%',\n        flexDirection: 'row',\n        backgroundColor: 'black',\n      }}>\n      {!isMobile ? (\n        <FolderNavigator\n          folderType={FolderType.contact}\n          renderContent={({item}) => (\n            <ContentItem\n              i={item}\n              key={item.id}\n              dataHook={parentFolderHook}\n              styles={styles}\n              width={!isMobile ? (width / 100) * 70 : width}\n            />\n          )}\n          parentFolderId={parentFolderId}\n          parentFolderHook={parentFolderHook}\n        />\n      ) : null}\n      <View style={{width: isMobile ? '100%' : '70%'}}>\n        {/* {isLoading === true ? (\n          <ActivityIndicator size={72} />\n        ) : ( */}\n        <ChatView params={{user, contact}} chatId={chatId} />\n        {/* )} */}\n      </View>\n    </View>\n  );\n}\n\nexport default Chat;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n  useCallback,\n} from 'react';\nimport {ChatMessage, Contact} from '../../types/Contact';\nimport {UserInfo} from '../../types/UserInfo';\nimport {View, TouchableOpacity, Platform} from 'react-native';\n\nimport {UserCtx} from '../../ctx';\n\nimport {useMessages} from '../../hooks/useMessages';\nimport {\n  ActivityIndicator,\n  List,\n  ProgressBar,\n  useTheme,\n} from 'react-native-paper';\n\nimport {\n  Bubble,\n  BubbleProps,\n  Composer,\n  GiftedAvatar,\n  GiftedChat,\n  InputToolbar,\n} from 'react-native-gifted-chat';\nimport {textAccentColor} from './styles';\n\nexport interface ChatViewParams {\n  chatId: string;\n  params: {contact: Contact; user: UserInfo};\n  isEmbeded?: boolean;\n}\ntype OnSendType = {\n  onSend: (t: {text: string}[], b: boolean) => void;\n  focus: () => void;\n};\n\nconst ChatView = (chatViewParams: ChatViewParams) => {\n  const {chatId, params} = chatViewParams;\n\n  const {user} = params;\n  const {messages, sendMessage, nextPage, isLoadingEarlier} =\n    useMessages(chatId);\n\n  const onSend = (text: string) => sendMessage(text);\n\n  const current = useContext(UserCtx);\n\n  const renderBubble = (\n    props: Readonly<BubbleProps<ChatMessage>>,\n  ) => {\n    return (\n      <Bubble\n        {...props}\n        textStyle={{\n          left: {color: textAccentColor},\n        }}\n        wrapperStyle={{\n          right: {\n            backgroundColor: '#871e69',\n            alignSelf: 'auto',\n            maxWidth: '60%',\n          },\n          left: {\n            backgroundColor: '#344868',\n            alignSelf: 'auto',\n            maxWidth: '60%',\n          },\n        }}\n      />\n    );\n  };\n  const theme = useTheme();\n  const {surface} = theme.colors;\n  return (\n    <View\n      style={{\n        backgroundColor: current!.colors.backgroundColor,\n        height: '100%',\n        width: '100%',\n        flexDirection: 'row',\n      }}>\n      <GiftedChat\n        scrollToBottom={true}\n        renderLoading={() => <ActivityIndicator size={72} />}\n        messages={messages.map((m: ChatMessage) => {\n          // console.info(\"messages\", m)\n          return {\n            ...m,\n            _id: m.id,\n            user: {\n              _id: m.userId,\n              name: m.userName,\n            },\n          };\n        })}\n        onSend={([message]) => onSend(message.text)}\n        user={{\n          _id: user?.id,\n          avatar: user?.photo,\n        }}\n        renderBubble={renderBubble}\n        timeTextStyle={{}}\n        renderAvatar={props => (\n          <GiftedAvatar\n            {...props}\n            user={props?.currentMessage?.user}\n            avatarStyle={{\n              backgroundColor: 'transparent',\n              borderWidth: 1,\n              borderColor: surface,\n            }}\n          />\n        )}\n        listViewProps={{\n          scrollEventThrottle: 400,\n          onEndReached: () => {\n            console.info('on end of chat reached', isLoadingEarlier);\n            if (isLoadingEarlier === true) return;\n            nextPage();\n          },\n        }}\n        isLoadingEarlier={isLoadingEarlier}\n        loadEarlier={true}\n        onLoadEarlier={() => nextPage()}\n        renderLoadEarlier={props => (\n          <View style={{height: 100, width: '100%'}}>\n            {props.isLoadingEarlier ? (\n              <ActivityIndicator size={32} />\n            ) : (\n              <View style={{height: 100}} />\n            )}\n          </View>\n        )}\n        renderChatEmpty={() => (\n          <View style={{transform: [{scaleY: -1}]}}>\n            <List.Item\n              left={p => (\n                <List.Icon\n                  {...p}\n                  color={textAccentColor}\n                  icon={'lock'}\n                />\n              )}\n              titleStyle={{color: textAccentColor}}\n              title={'Decrypting Messages...'}\n            />\n            <ProgressBar indeterminate visible={true} />\n          </View>\n        )}\n        renderInputToolbar={inputProps => (\n          <InputToolbar\n            {...inputProps}\n            containerStyle={{\n              backgroundColor: 'black',\n              borderColor: 'gray',\n            }}\n            primaryStyle={{borderColor: 'white'}}\n            renderComposer={props => (\n              <Composer\n                {...props}\n                textInputStyle={{\n                  color: textAccentColor,\n                  padding: 10,\n                }}\n                multiline={true}\n                textInputAutoFocus={true}\n                textInputProps={{\n                  ...props.textInputProps,\n                  // for enabling the Return key to send a message only on web\n                  blurOnSubmit: Platform.OS === 'web',\n                  onSubmitEditing: () => {\n                    if (props.text && (props as OnSendType).onSend) {\n                      (props as OnSendType).onSend(\n                        [{text: props.text?.trim()}],\n                        true,\n                      );\n                      (this as unknown as OnSendType)?.focus();\n                    }\n                  },\n                }}\n              />\n            )}\n            renderSend={props => (\n              <TouchableOpacity\n                onPress={() => {\n                  (props as OnSendType).onSend(\n                    [{text: props.text as string}],\n                    true,\n                  );\n                }}>\n                <List.Icon\n                  style={{padding: 10}}\n                  {...props}\n                  icon={'send'}\n                />\n              </TouchableOpacity>\n            )}\n          />\n        )}\n        placeholder=\"Write your message\"\n        showUserAvatar={false}\n      />\n    </View>\n  );\n};\n\nexport default ChatView;\n","import React, {memo} from 'react';\n\nimport {useContacts} from '../../hooks/useContacts';\nimport FolderLibrary from '../folder/folderlibrary';\nimport {\n  getFolderContent,\n  getFoldersByType,\n  writeItem,\n} from '../../api';\n\nconst ContactLibrary = () => {\n  const dataHook = useContacts(\n    getFoldersByType,\n    getFolderContent,\n    writeItem,\n  );\n\n  return <FolderLibrary dataHook={dataHook} />;\n};\n\nexport default memo(ContactLibrary);\n","import React from 'react';\n\nimport {View} from 'react-native';\n\nimport ContactLibrary from './contactlibrary';\n\nconst ContactsView = (props: any) => {\n  return (\n    <View\n      style={{\n        height: '100%',\n        width: '100%',\n      }}>\n      <View>\n        <ContactLibrary {...props} showPublicParty={true} />\n      </View>\n    </View>\n  );\n};\nexport default ContactsView;\n","export const styles = {\n  container: {\n    flex: 1,\n    paddingTop: 0,\n    marginTop: 0,\n  },\n  item: {\n    paddingTop: 15,\n    paddingLeft: 5,\n    fontSize: 12,\n    height: 160,\n    color: 'black',\n    width: 80,\n  },\n  tinyLogo: {\n    marginTop: 2,\n    width: 22,\n    height: 22,\n  },\n  scroll: {\n    height: '100%',\n    display: 'flex',\n    position: 'relative',\n    backgroundColor: 'black',\n    // marginTop,\n    width: '100%',\n  },\n  icon: {\n    paddingLeft: 10,\n  },\n};\nexport const textAccentColor = '#b4c0d1';\n","import React, {memo, useRef} from 'react';\nimport {Platform, View, useWindowDimensions} from 'react-native';\nimport {Banner, Divider, useTheme} from 'react-native-paper';\nimport {useQuery} from 'react-query';\nimport {EditorLayer, EditorProject} from '../../types';\nimport EncoderProject from '../encoder/encoderproject';\nimport EditorForm from './editorform';\nimport EditorVideoComponent from './editorvideo';\nimport {ScrollView} from 'react-native-gesture-handler';\nimport {getFolderContent, getById, writeItem} from '../../api';\nimport Chat from '../contacts/chat';\nimport {EditorPlayControls} from './editorplaycontrols';\nimport {ProjectParams} from '../../types/nav';\nfunction EditorBanner({\n  projectId,\n  height,\n  routeParams,\n}: {\n  projectId: string;\n  height: number;\n  routeParams: ProjectParams;\n}) {\n  const theme = useTheme();\n  const mediaData = useQuery(\n    ['projectdata', projectId],\n    async () => await getById(projectId),\n    {\n      enabled: projectId ? true : false,\n    },\n  );\n  const video2 = useRef<JSX.IntrinsicElements['video'] | undefined>();\n  const mediaRes: EditorProject = mediaData.data;\n\n  const layersQuery = useQuery(\n    ['projectLayers', projectId],\n    async () => {\n      const data = await getFolderContent(projectId);\n      const m = await Promise.all(\n        data.map(async i => {\n          return {\n            ...i,\n            media: await getFolderContent(i?.id),\n          };\n        }),\n      );\n      return m;\n    },\n  );\n  const {width} = useWindowDimensions();\n  const codeWidth = width * 0.24 - 50;\n  const layers: EditorLayer[] | undefined = layersQuery?.data;\n  const isMobile = width < 700 || Platform.OS !== 'web';\n  if (isMobile) {\n    return (\n      <View\n        style={{margin: 0, padding: 0, display: 'flex'}}\n        className=\"video-banner\">\n        {/* <Divider /> */}\n        <Banner\n          visible={projectId ? true : false}\n          theme={theme}\n          style={{\n            backgroundColor: 'black',\n            padding: 0,\n            margin: 0,\n            // height: height/3,\n            width,\n            marginHorizontal: 0,\n            paddingHorizontal: 0,\n            overflow: 'hidden',\n            display: 'flex',\n            flexDirection: 'row',\n          }}\n          contentStyle={{\n            width,\n            flex: 1,\n            height: '100%',\n            padding: 0,\n            margin: 0,\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'stretch',\n            overflow: 'hidden',\n            marginHorizontal: 0,\n            paddingHorizontal: 0,\n          }}>\n          <View\n            style={{\n              width: '100%',\n              height: isMobile ? height / 2.5 : height / 2,\n              borderLeftWidth: isMobile ? 0 : 1,\n              borderRightWidth: isMobile ? 0 : 1,\n              margin: 0,\n              padding: 0,\n              borderLeftColor: 'rgb(73, 69, 79)',\n              borderRightColor: 'rgb(73, 69, 79)',\n              display: 'flex',\n            }}\n            key={2}>\n            <EditorVideoComponent\n              video2={video2}\n              projectId={projectId}\n              mediaRes={mediaRes}\n              layers={layers}\n            />\n            <EditorPlayControls />\n          </View>\n        </Banner>\n      </View>\n    );\n  }\n  return (\n    <View\n      style={{margin: 0, display: 'flex'}}\n      className=\"video-banner\">\n      <Divider />\n      <Banner\n        visible={projectId ? true : false}\n        theme={theme}\n        style={{\n          backgroundColor: 'black',\n          padding: 0,\n          margin: 0,\n          height: '100%',\n          overflow: 'hidden',\n          display: 'flex',\n          flexDirection: 'row',\n        }}\n        contentStyle={{\n          width: '100%',\n          height: '100%',\n          maxWidth: 'auto',\n          padding: 0,\n          margin: 0,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'stretch',\n          overflow: 'hidden',\n        }}>\n        <View\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            width: '100%',\n            height: '100%',\n          }}>\n          <ScrollView\n            style={{\n              width: '24%',\n              height: height / 2,\n              display: 'flex',\n              marginRight: 5,\n            }}\n            key={1}\n            showsHorizontalScrollIndicator={false}\n            showsVerticalScrollIndicator={false}>\n            <EditorForm\n              projectId={projectId}\n              mediaRes={mediaRes}\n              video2={video2}\n              layers={layers}\n              projectQuery={mediaData}\n              writeItem={writeItem}\n            />\n          </ScrollView>\n          <View\n            style={{\n              width: '50%',\n              height: height / 2,\n              borderLeftWidth: 1,\n              borderRightWidth: 1,\n              borderLeftColor: 'rgb(73, 69, 79)',\n              borderRightColor: 'rgb(73, 69, 79)',\n              display: 'flex',\n            }}\n            key={2}>\n            <EditorVideoComponent\n              video2={video2}\n              projectId={projectId}\n              mediaRes={mediaRes}\n              layers={layers}\n            />\n          </View>\n          <View\n            style={{\n              width: '24%',\n              height: height / 2,\n              display: 'flex',\n            }}\n            key={3}>\n            {routeParams?.encoder && (\n              <EncoderProject params={routeParams} />\n            )}\n            {routeParams?.chatId && <Chat />}\n          </View>\n        </View>\n      </Banner>\n      <Divider />\n    </View>\n  );\n}\n\nexport default memo(EditorBanner);\n","import React from 'react';\nimport {\n  HandlerStateChangeEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n  State,\n} from 'react-native-gesture-handler';\n\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  setCaretPosition,\n  setScrollPosition,\n} from '../../store/slices/editor';\nimport {Animated, useWindowDimensions, View} from 'react-native';\n\nfunction EditorCaret() {\n  const dispatch = useAppDispatch();\n  const caretPosition = useAppSelector(\n    state => state.editor.caretPosition,\n  );\n  const {width, height} = useWindowDimensions();\n  const translateX = new Animated.Value(0);\n  const onGestureEvent = Animated.event(\n    [\n      {\n        nativeEvent: {\n          translationX: translateX,\n        },\n      },\n    ],\n    {\n      listener: event => {\n        // console.info('ongesture', event)\n      },\n      useNativeDriver: true,\n    },\n  );\n\n  const onHandlerStateChange = (\n    event: HandlerStateChangeEvent<PanGestureHandlerEventPayload>,\n  ): number | undefined => {\n    if (event.nativeEvent.oldState === State.ACTIVE) {\n      const newOffset = event.nativeEvent.translationX;\n      let fullOffset = caretPosition + newOffset;\n      if (fullOffset < 0) fullOffset = 0;\n\n      translateX.setOffset(fullOffset);\n      translateX.setValue(0);\n      dispatch(setCaretPosition(fullOffset));\n      return fullOffset;\n    }\n  };\n  return (\n    <View style={{cursor: 'pointer', height: 0}}>\n      <PanGestureHandler\n        onGestureEvent={onGestureEvent}\n        onHandlerStateChange={onHandlerStateChange}>\n        <Animated.View\n          style={[\n            {\n              width: 50,\n              opacity: 0.5,\n              height: height / 2,\n              justifyContent: 'center',\n              alignItems: 'center',\n              backgroundColor: 'red',\n              cursor: 'pointer',\n            },\n            {\n              transform: [\n                {\n                  translateX: translateX.interpolate({\n                    inputRange: [0, width],\n                    outputRange: [caretPosition, width],\n                    extrapolate: 'extend',\n                  }),\n                },\n              ],\n            },\n          ]}></Animated.View>\n      </PanGestureHandler>\n    </View>\n  );\n}\nexport default EditorCaret;\n","import {useNavigation, useRoute} from '@react-navigation/native';\nimport {useAppSelector} from '../../store/hooks';\nimport {Animated, View} from 'react-native';\nimport {useMutation, useQueryClient} from 'react-query';\nimport {\n  EditorComment,\n  EditorProject,\n  EncoderProject,\n} from '../../types';\nimport {\n  PanGestureHandler,\n  TouchableOpacity,\n  State,\n} from 'react-native-gesture-handler';\nimport {Avatar, IconButton, List} from 'react-native-paper';\nimport React from 'react';\nconst minDuration = 40;\n\nconst EditorContentItem = ({\n  item,\n  onDragEnd,\n  onDragStart,\n  index,\n  layerIndex,\n  writeItem,\n  parentDataHook,\n}: {\n  item: EncoderProject | EditorComment;\n  folder: EditorProject;\n}) => {\n  const nav = useNavigation();\n  const route = useRoute();\n  const queryClient = useQueryClient();\n  const editor = useAppSelector(state => state.editor);\n  const {pixelsPerSecond} = editor;\n  const {projectId} = route.params;\n  const maxDuration = ((item?.duration || 0) - 1) * pixelsPerSecond;\n  const start = item.encoding?.start || 0;\n  const end = item.encoding?.end || item.duration;\n  let currentDuration = end\n    ? (end - start) * pixelsPerSecond\n    : maxDuration;\n  // if(currentDuration < minDuration)\n  // \tcurrentDuration = minDuration / 2\n  let width = new Animated.Value(currentDuration);\n  const writeItemMutation = useMutation(\n    (item: EncoderProject) => writeItem(item),\n    {\n      onSuccess: async () => {\n        await queryClient.refetchQueries([\n          'projectLayers',\n          projectId,\n        ]);\n        await queryClient.refetchQueries(['encodedMedia', projectId]);\n        await queryClient.refetchQueries(['project_' + projectId]);\n      },\n    },\n  );\n  const onGestureEvent = Animated.event(\n    [\n      {\n        nativeEvent: {\n          translationX: width,\n        },\n      },\n    ],\n    {\n      listener: event => {\n        // console.info('ongesture', event)\n      },\n      useNativeDriver: true,\n    },\n  );\n  const combIndex = index + layerIndex;\n  let backgroundColor = combIndex % 2 ? 'darkcyan' : 'green';\n  if (combIndex % 3 > 1) backgroundColor = 'darkslateblue';\n\n  const deleteItem = async () => {\n    parentDataHook.onRemoveFolder(item);\n  };\n  const onHandlerStateChange = async event => {\n    if (event.nativeEvent.oldState === State.ACTIVE) {\n      let newvalue = width._value;\n\n      if (newvalue > maxDuration) newvalue = maxDuration;\n      if (newvalue < minDuration) newvalue = minDuration;\n\n      if (width._value !== newvalue) width.setValue(newvalue);\n\n      if (!item.encoding) item.encoding = {};\n      newvalue = newvalue / pixelsPerSecond;\n      if (newvalue < item.encoding?.start || 0)\n        newvalue += item.encoding?.start;\n      item.encoding.end = newvalue;\n      // item.encoding.lastUpdated = new Date().valueOf()\n      await writeItemMutation.mutateAsync(item);\n    }\n  };\n  return (\n    <View key={item.id} style={{height: 68, position: 'relative'}}>\n      <Animated.View\n        style={{\n          width: !item.isContact\n            ? width.interpolate({\n                inputRange: [start, maxDuration],\n                outputRange: [start, maxDuration],\n                extrapolate: 'clamp',\n              })\n            : 75,\n          height: '100%',\n          top: 0,\n          padding: 0,\n          margin: 0,\n          left: item.currentPosition\n            ? pixelsPerSecond * item.currentPosition\n            : 0,\n          position: item.currentPosition ? 'absolute' : 'relative',\n          backgroundColor,\n          zIndex: 2,\n          borderWidth:\n            item.id === route.params.encoder ||\n            item.id === route.params.chatId\n              ? 1\n              : 0,\n          borderRadius: item.isContact ? 100 : 0,\n          borderColor: 'white',\n        }}>\n        {!item.isContact && (\n          <>\n            <PanGestureHandler\n              // onGestureEvent={onGestureEvent}\n              onHandlerStateChange={onHandlerStateChange}>\n              <View\n                style={{\n                  position: 'absolute',\n                  left: 0,\n                  bottom: 0,\n                  transform: [{rotate: '90deg'}],\n                  cursor: 'pointer',\n                  zIndex: 100,\n                }}>\n                <List.Icon\n                  icon={'resize-bottom-right'}\n                  style={{padding: 0, margin: 0}}\n                />\n              </View>\n            </PanGestureHandler>\n            <PanGestureHandler\n              // onGestureEvent={onGestureEvent}\n              onHandlerStateChange={onHandlerStateChange}>\n              <View\n                style={{\n                  position: 'absolute',\n                  right: 0,\n                  bottom: 0,\n                  cursor: 'pointer',\n                  zIndex: 100,\n                }}>\n                <List.Icon\n                  icon={'resize-bottom-right'}\n                  style={{padding: 0, margin: 0}}\n                />\n              </View>\n            </PanGestureHandler>\n          </>\n        )}\n        <List.Item\n          onPress={() =>\n            nav.setParams({\n              ...route.params,\n              encoder: !item.isContact && item.id,\n              chatId: item.isContact && item.id,\n            })\n          }\n          style={{height: '100%'}}\n          title={item.isContact ? '' : item.title}\n          right={() => (\n            <>\n              {!item.isContact && (\n                <TouchableOpacity\n                  onPressIn={onDragStart}\n                  onPressOut={onDragEnd}\n                  style={{pointerEvents: 'auto'}}>\n                  <IconButton size={18} icon={'drag'} />\n                </TouchableOpacity>\n              )}\n              {item.isContact && (\n                <Avatar.Text\n                  size={30}\n                  label={[\n                    item.title?.split(' ')[0][0],\n                    item.title?.split(' ')[1][0],\n                  ].join('')}\n                  style={{\n                    marginLeft: -10,\n                    marginTop: 8,\n                    backgroundColor: 'transparent',\n                  }}\n                />\n              )}\n              <IconButton\n                size={18}\n                icon={'delete'}\n                onPress={deleteItem}\n              />\n            </>\n          )}\n        />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default EditorContentItem;\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {\n  SafeAreaView,\n  View,\n  useWindowDimensions,\n  Clipboard,\n  Platform,\n} from 'react-native';\nimport {\n  Button,\n  Divider,\n  IconButton,\n  List,\n  Menu,\n  TextInput,\n} from 'react-native-paper';\nimport {\n  EditorLayer,\n  EditorProject,\n  FFMpegOutputType,\n  FFMpegPreset,\n} from '../../types';\nimport {\n  genRenderCmd,\n  genExecTime,\n  getTotalTime,\n  encodeProject,\n} from '../../api/media';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  addNewLogLine,\n  setActiveLayer,\n  setCaretPosition,\n  setIsRendering,\n  setRenderProgress,\n  setRenderUrl,\n  setScrollPosition,\n} from '../../store/slices/editor';\nimport {useMutation} from 'react-query';\nimport SyntaxHighlighter from 'react-native-syntax-highlighter';\nimport {xonokai} from 'react-syntax-highlighter/src/styles/prism';\nimport CodeEditor, {\n  CodeEditorSyntaxStyles,\n} from '@rivascva/react-native-code-editor';\nimport {writeItem} from '../../api';\nfunction EditorForm(props: {\n  mediaRes: EditorProject;\n  layers: EditorLayer[];\n}) {\n  const {mediaRes, video2, layers, projectQuery} = props;\n\n  const dispatch = useAppDispatch();\n  const caretPosition = useAppSelector(\n    state => state.editor.caretPosition,\n  );\n  const scrollPosition = useAppSelector(\n    state => state.editor.scrollPosition,\n  );\n  const pixelsPerSecond = useAppSelector(\n    state => state.editor.pixelsPerSecond,\n  );\n  const activeLayer = useAppSelector(\n    state => state.editor.activeLayer,\n  );\n  const isPlaying = useAppSelector(state => state.editor.isPlaying);\n  const isRendering = useAppSelector(\n    state => state.editor.isRendering,\n  );\n  const renderOutputURL = useAppSelector(\n    state => state.editor.renderOutputURL,\n  );\n  const renderProgress = useAppSelector(\n    state => state.editor.renderProgress,\n  );\n  const ffmpegLogs = useAppSelector(state => state.editor.ffmpegLogs);\n  const ffmpegError = useAppSelector(\n    state => state.editor.ffmpegError,\n  );\n  const totalTime = layers?.length ? getTotalTime(layers) : 0;\n  const [showCode, setShowCode] = useState(false);\n  const {width} = useWindowDimensions();\n  const codeEditorRef = useRef();\n  const currentPosition =\n    (caretPosition + scrollPosition) / pixelsPerSecond;\n  const fontSize = 12;\n  const inputWidth = 120;\n  const codeWidth = width * 0.24 - 50;\n  const [outputMenuVisible, setOutputMenuVisible] = useState(false);\n  const [presetMenuVisible, setPresetMenuVisible] = useState(false);\n  const outputTypes = Object.keys(FFMpegOutputType);\n  const execCmd = genRenderCmd(mediaRes, layers, true).execCmd;\n  const codeString = execCmd.join('\\n');\n  const closeMenu = () => {\n    setOutputMenuVisible(false);\n    setPresetMenuVisible(false);\n  };\n  const projectWriteMutation = useMutation(\n    (item: EditorProject) => writeItem(item),\n    {\n      onSuccess: () => {\n        console.info('after writing project');\n        projectQuery.refetch();\n      },\n    },\n  );\n  const processKey = useCallback(\n    ev => {\n      const step = 5;\n      if (ev.code === 'ArrowLeft') {\n        if (!video2.current?.paused) {\n          video2.current?.pause();\n        }\n        console.info(\n          'arrowLeft, caretPosition, scrollPosition',\n          caretPosition,\n          scrollPosition,\n        );\n        caretPosition > 0\n          ? dispatch(setCaretPosition(caretPosition - step))\n          : dispatch(setScrollPosition(scrollPosition - step));\n      }\n      if (ev.code === 'ArrowRight') {\n        if (!video2.current?.paused) {\n          video2.current?.pause();\n        }\n        console.info(\n          'arrowRight, caretPosition, scrollPosition',\n          caretPosition,\n          scrollPosition,\n        );\n        dispatch(setCaretPosition(caretPosition + step));\n      }\n      if (ev.code === 'Space') {\n        if (video2.current?.paused) video2.current?.play();\n        else video2.current?.pause();\n      }\n    },\n    [caretPosition, scrollPosition],\n  );\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      document.onkeyup = ev => processKey(ev);\n    }\n  }, [processKey]);\n  const selectValue = (\n    valueType: keyof EditorProject['editor'],\n    value: string | number,\n  ) => {\n    const np = mediaRes;\n    const numericTypes = [\n      'width',\n      'height',\n      'start',\n      'end',\n      'framerate',\n    ];\n    const nonRenderTypes = ['start', 'end'];\n    const shouldRerender = !nonRenderTypes.includes(valueType);\n    if (numericTypes.includes(valueType) && isNaN(value)) {\n      console.info('invalid type');\n      return;\n    }\n    if (!np.editor) {\n      np.editor = {};\n    }\n    np.editor[valueType] = value;\n\n    if (shouldRerender) np.editor.lastUpdated = new Date().valueOf();\n\n    projectWriteMutation.mutateAsync(np);\n    closeMenu();\n  };\n  return (\n    <>\n      <List.Item\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'clock'} />\n        )}\n        title={genExecTime(currentPosition)}\n        right={p => (\n          <IconButton\n            {...p}\n            size={fontSize}\n            icon={!isPlaying ? 'play' : 'pause'}\n            onPress={() => {\n              if (video2?.current?.paused === true) {\n                // dispatch(resetCurrentVideoStateToMain())\n                dispatch(\n                  setActiveLayer({\n                    activeLayerId: activeLayer,\n                    caretPosition,\n                    scrollPosition,\n                  }),\n                );\n                video2?.current.play();\n              } else {\n                video2?.current.pause();\n                // dispatch(resetCurrentVideoStateToMain())\n              }\n            }}\n          />\n        )}\n      />\n      <Divider key={'divinputrender'} />\n      <Button\n        icon={'movie'}\n        style={{pointerEvents: 'auto', cursor: 'pointer'}}\n        onPress={async () => {\n          dispatch(setIsRendering(true));\n          const render = await encodeProject(\n            mediaRes,\n            layers,\n            false,\n            renderParams => dispatch(setRenderProgress(renderParams)),\n            logLine => dispatch(addNewLogLine(logLine)),\n          );\n          dispatch(setRenderUrl(render));\n          dispatch(setIsRendering(false));\n        }}\n        loading={isRendering}\n        disabled={isRendering}\n        mode={'outlined'}>\n        {isRendering\n          ? `Rendering project: ${parseInt(\n              (renderProgress * 100).toString(),\n              10,\n            )}%`\n          : ffmpegError\n          ? 'Render Project (Error! check logs)'\n          : 'Render Project'}\n      </Button>\n      <Divider key={'divinputdownload'} />\n      {renderOutputURL && (\n        <a\n          href={renderOutputURL}\n          download={true}\n          style={{width: '100%'}}>\n          <Button\n            icon={'film'}\n            style={{\n              pointerEvents: 'auto',\n              cursor: 'pointer',\n              width: '100%',\n            }}\n            mode={'outlined'}>\n            Download video\n          </Button>\n        </a>\n      )}\n      <Divider key={'div01'} />\n      <List.Item\n        key={'start'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'clock-plus'} />\n        )}\n        titleStyle={{fontSize}}\n        title={'Start'}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={0}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('start', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div7'} />\n      <List.Item\n        key={'end'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'clock-minus'} />\n        )}\n        titleStyle={{fontSize}}\n        title={`End`}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={genExecTime(totalTime) || 0}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('end', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div3'} />\n      <List.Item\n        key={'width'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'ruler'} />\n        )}\n        title={`Width`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={mediaRes?.editor?.width}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('width', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div2'} />\n      <List.Item\n        key={'height'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'ruler'} />\n        )}\n        title={`Height`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={mediaRes?.editor?.height}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('height', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'divaspect'} />\n      <List.Item\n        key={'aspect'}\n        left={p => (\n          <List.Icon\n            {...p}\n            style={{fontSize}}\n            icon={'aspect-ratio'}\n          />\n        )}\n        titleStyle={{fontSize}}\n        title={'Aspect Ratio'}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={mediaRes?.editor?.aspectRatio || '16/9'}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"default\"\n              onChangeText={text => selectValue('aspectRatio', text)}\n            />\n          </View>\n        )}\n      />\n      <Divider key={'divrate'} />\n      <List.Item\n        key={'frames'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'movie-roll'} />\n        )}\n        titleStyle={{fontSize}}\n        title={'Frame Rate'}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={mediaRes?.editor?.framerate || 30}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('framerate', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div1'} />\n      <List.Item\n        key={'output'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'file-export'} />\n        )}\n        title={'Output'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <Menu\n              visible={outputMenuVisible}\n              onDismiss={closeMenu}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setOutputMenuVisible(true)}>\n                  {mediaRes?.editor?.output}\n                </Button>\n              }>\n              <>\n                {outputTypes.map(item => (\n                  <Menu.Item\n                    key={item}\n                    onPress={() => selectValue('output', item)}\n                    title={item}\n                  />\n                ))}\n              </>\n            </Menu>\n          </View>\n        )}\n      />\n      <Divider key={'divPreset'} />\n      <List.Item\n        key={'preset'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'file-export'} />\n        )}\n        title={'Preset'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <Menu\n              visible={presetMenuVisible}\n              onDismiss={closeMenu}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setPresetMenuVisible(true)}>\n                  {mediaRes?.editor?.preset}\n                </Button>\n              }>\n              <>\n                {Object.keys(FFMpegPreset).map(item => (\n                  <Menu.Item\n                    key={item}\n                    onPress={() => selectValue('preset', item)}\n                    title={item}\n                  />\n                ))}\n              </>\n            </Menu>\n          </View>\n        )}\n      />\n      <Divider key={'divinputcode2'} />\n      <Button\n        icon={'code-brackets'}\n        onPress={() => setShowCode(!showCode)}>\n        Show FFMpeg Code\n      </Button>\n      {showCode === true ? (\n        <View>\n          <Divider key={'divinputcode'} />\n          <List.Item\n            key={'code'}\n            left={p => <List.Icon {...p} icon={'code-brackets'} />}\n            title={''}\n            titleStyle={{fontSize}}\n            onPress={() => codeEditorRef?.current?.focus()}\n            right={p => (\n              <SafeAreaView style={{width: codeWidth, zIndex: 10}}>\n                <CodeEditor\n                  className={'codeEditor'}\n                  ref={codeEditorRef}\n                  style={{\n                    fontSize,\n                    inputLineHeight: fontSize,\n                    highlighterLineHeight: fontSize,\n                    marginLeft: 0,\n                  }}\n                  language=\"bash\"\n                  syntaxStyle={CodeEditorSyntaxStyles.xonokai}\n                  initialValue={\n                    mediaRes.editor?.code?.join(',') || ''\n                  }\n                  onChange={text => {\n                    if (\n                      text === mediaRes.editor?.code?.join(',') ||\n                      ''\n                    )\n                      return;\n                    selectValue('code', text.split(','));\n                  }}\n                  autoFocus={false}\n                  showLineNumbers\n                />\n              </SafeAreaView>\n            )}\n          />\n          <Divider key={'divoutputcode'} />\n          {codeString && (\n            <List.Item\n              key={'output_code'}\n              left={p => <List.Icon {...p} icon={'code-tags'} />}\n              title=\"\"\n              onPress={() => Clipboard.setString(codeString)}\n              titleStyle={{fontSize}}\n              right={() => (\n                <View style={{width: codeWidth}}>\n                  <SyntaxHighlighter\n                    language=\"bash\"\n                    style={xonokai}\n                    fontSize={fontSize}\n                    pointerEvents={true}\n                    scroll={true}\n                    highlighter={'prism'}>\n                    {codeString}\n                  </SyntaxHighlighter>{' '}\n                </View>\n              )}\n            />\n          )}\n          <Divider key={'divlogs'} />\n          {codeString && (\n            <List.Item\n              key={'output_logs'}\n              left={p => (\n                <List.Icon {...p} icon={'code-parentheses'} />\n              )}\n              title=\"\"\n              onPress={() => Clipboard.setString(ffmpegLogs)}\n              titleStyle={{fontSize}}\n              right={() => (\n                <View\n                  style={{width: codeWidth, pointerEvents: 'auto'}}>\n                  <SyntaxHighlighter\n                    language=\"bash\"\n                    style={xonokai}\n                    customStyle={{\n                      pointerEvents: 'auto',\n                      userSelect: 'all',\n                    }}\n                    fontSize={fontSize}\n                    userSelect={true}\n                    pointerEvents={true}\n                    scroll={true}\n                    highlighter={'prism'}>\n                    {ffmpegLogs}\n                  </SyntaxHighlighter>{' '}\n                </View>\n              )}\n            />\n          )}\n          <Divider key={'div8'} />\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nexport default EditorForm;\n","import React from 'react';\nimport {\n  View,\n  GestureResponderEvent,\n  useWindowDimensions,\n} from 'react-native';\nimport {useFolder} from '../../hooks/useFolder';\nimport {\n  EditorLayer,\n  EncoderProject,\n  Folder,\n  FolderType,\n} from '../../types';\nimport {Divider, IconButton, List, Text} from 'react-native-paper';\n\nimport DragList from 'react-native-draglist';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\n\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport uuid from 'react-native-uuid';\nimport {\n  DocumentPicker,\n  getById,\n  getFolderContent,\n  writeItem,\n} from '../../api';\nimport {startOnboarding} from '../../store/slices/upload';\nimport EditorContentItem from './editorcontentitem';\n\nexport function EditorLayerHeaderComponent(props) {\n  const dataHook = useFolder(\n    props.folderId,\n    getFolderContent,\n    itemId => getById(itemId, props.parentFolderId),\n    FolderType.editor,\n    writeItem,\n  );\n  const {width} = useWindowDimensions();\n  const isMobile = width < 700;\n  const folder = dataHook.folder as EditorLayer;\n  const layer = folder?.editor;\n  const showComments = useAppSelector(\n    state => state.editor.showComments,\n  );\n  const toggleLayerProp = async (propName: keyof typeof layer) => {\n    await writeItem({\n      ...dataHook.folder,\n      editor: {\n        ...(layer || {}),\n        [propName]: layer && layer[propName] === true ? false : true,\n      },\n    } as EditorLayer);\n    dataHook.folderData.refetch();\n  };\n\n  const muteLayer = (_e: GestureResponderEvent) =>\n    toggleLayerProp('muted');\n\n  const hideLayer = (_e: GestureResponderEvent) =>\n    toggleLayerProp('videoDisabled');\n\n  const isCommentLayer =\n    folder?.id !== undefined && layer?.isCommentLayer;\n\n  if (isCommentLayer && !showComments) return <></>;\n  const Controls = (p = {}) => (\n    <View style={{flexDirection: 'row', padding: 0}}>\n      <IconButton\n        {...p}\n        size={iconSize}\n        icon={layer?.muted ? 'volume-off' : 'volume-high'}\n        mode={'outlined'}\n        onPress={muteLayer}\n      />\n      <IconButton\n        size={iconSize}\n        {...p}\n        mode={'outlined'}\n        icon={layer?.videoDisabled ? 'video-off' : 'video'}\n        onPress={hideLayer}\n      />\n      <IconButton\n        size={iconSize}\n        {...p}\n        icon={'delete'}\n        onPress={async () => {\n          await dataHook.onRemoveFolder({\n            id: props.folderId,\n          } as Folder);\n          props.parentHook.folderContentQuery.refetch();\n        }}\n        mode={'outlined'}\n      />\n    </View>\n  );\n  const iconSize = isMobile ? 10 : 14;\n  return (\n    <View style={{display: 'flex', flexDirection: 'row', height: 68}}>\n      <View style={{width: '100%'}}>\n        <Divider />\n        <List.Item\n          title={() =>\n            isMobile ? (\n              <Controls />\n            ) : (\n              <TouchableOpacity\n                onPressIn={props.onDragStart}\n                onPressOut={props.onDragEnd}\n                style={{pointerEvents: 'auto'}}>\n                <Text style={{fontSize: 14}}>\n                  {dataHook.folder?.title}\n                </Text>\n              </TouchableOpacity>\n            )\n          }\n          right={p => {\n            if (isMobile) return null;\n            if (!isCommentLayer) return <Controls />;\n\n            return (\n              <IconButton\n                size={iconSize}\n                {...p}\n                mode={'outlined'}\n                icon={'forum'}\n              />\n            );\n          }}\n        />\n      </View>\n    </View>\n  );\n}\n\nexport function EditorLayerBodyComponent(props) {\n  const dispatch = useAppDispatch();\n  const dataHook = useFolder(\n    props.folderId,\n    getFolderContent,\n    itemId => getById(itemId, props.parentFolderId),\n    FolderType.editor,\n    writeItem,\n  );\n  const folder = dataHook.folder as EditorLayer;\n  const layer = folder?.editor;\n  const showComments = useAppSelector(\n    state => state.editor.showComments,\n  );\n  const isCommentLayer =\n    folder?.id !== undefined && layer?.isCommentLayer;\n  if (isCommentLayer && !showComments) return <></>;\n\n  const renderContent = ({\n    item,\n    onDragEnd,\n    onDragStart,\n    index,\n  }: {\n    item: EncoderProject;\n  }) => (\n    <EditorContentItem\n      onDragEnd={onDragEnd}\n      onDragStart={onDragStart}\n      item={item}\n      index={index}\n      layerIndex={props.layerIndex}\n      writeItem={writeItem}\n      parentDataHook={dataHook}\n    />\n  );\n  const onClickAddContent = async () => {\n    const pickerResult = await DocumentPicker.pickSingle({\n      presentationStyle: 'fullScreen',\n    });\n    console.info('pickerResult', pickerResult, dataHook.folder);\n    // setMediaModalVisible(true)\n    if (!pickerResult) return;\n    const url = pickerResult.uri;\n    let fId = props.folderId;\n    const nd: Media = {\n      id: uuid.v4().toString(),\n      url,\n      title: pickerResult.name,\n      originalId: pickerResult.name,\n      filename: pickerResult.name,\n      fileType: pickerResult.type,\n      folderId: fId,\n      userId: props.userId,\n      date: new Date().valueOf(),\n      isMediaNew: false,\n      isEncoderProject: true,\n      type: pickerResult.file.type,\n      size: pickerResult.file.size,\n      extractor: dataHook.folder?.mnemonic ? 'wt' : 'local',\n    };\n    dispatch(startOnboarding({file: pickerResult.file, media: nd}));\n  };\n  const data = dataHook.folderContent;\n  return (\n    <View style={{display: 'flex', flexDirection: 'row'}}>\n      <View\n        style={{width: '80%', display: 'flex', flexDirection: 'row'}}>\n        {!isCommentLayer && data !== undefined && (\n          <>\n            <DragList\n              horizontal={true}\n              renderItem={renderContent}\n              keyExtractor={item => item.id || item.date.toString()}\n              data={data}\n              onReordered={dataHook.onReordered}\n              style={{width: '100%'}}\n              showsHorizontalScrollIndicator={false}\n              showsVerticalScrollIndicator={false}\n            />\n            <List.Item\n              title={'Add Content'}\n              titleStyle={{fontSize: 14}}\n              style={{pointerEvents: 'auto'}}\n              onPress={() => onClickAddContent()}\n              right={props => (\n                <>\n                  <IconButton\n                    {...props}\n                    icon={'plus'}\n                    onPress={() => onClickAddContent()}\n                    mode={'outlined'}\n                  />\n                </>\n              )}\n            />\n          </>\n        )}\n        {isCommentLayer && data !== undefined && (\n          <>\n            {data?.map((item, index) => (\n              <EditorContentItem\n                item={item}\n                index={index}\n                layerIndex={props.layerIndex}\n                writeItem={writeItem}\n                parentDataHook={dataHook}\n              />\n            ))}\n            <List.Item\n              title={''}\n              titleStyle={{fontSize: 14}}\n              style={{pointerEvents: 'auto', height: 68}}\n              // right={(p)=><IconButton size={14} {...p} mode={\"outlined\"} icon={\"forum\"} /> }\n            />\n          </>\n        )}\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport {IconButton, List} from 'react-native-paper';\nimport {genExecTime} from '../../api';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  setActiveLayer,\n  setIsPlaying,\n} from '../../store/slices/editor';\nimport {useWindowDimensions} from 'react-native';\n\nexport function EditorPlayControls() {\n  const {width} = useWindowDimensions();\n  const dispatch = useAppDispatch();\n  const caretPosition = useAppSelector(\n    state => state.editor.caretPosition,\n  );\n  const scrollPosition = useAppSelector(\n    state => state.editor.scrollPosition,\n  );\n  const pixelsPerSecond = useAppSelector(\n    state => state.editor.pixelsPerSecond,\n  );\n  const isPlaying = useAppSelector(state => state.editor.isPlaying);\n  // const isRendering = useAppSelector(\n  //   state => state.editor.isRendering,\n  // );\n  const activeLayer = useAppSelector(\n    state => state.editor.activeLayer,\n  );\n  const currentPosition =\n    (caretPosition + scrollPosition) / pixelsPerSecond;\n  return (\n    <List.Item\n      style={{\n        width,\n        height: 50,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        backgroundColor: 'transparent',\n        zIndex: 10000,\n      }}\n      left={p => <List.Icon {...p} icon={'clock'} />}\n      title={genExecTime(currentPosition)}\n      right={p => (\n        <IconButton\n          {...p}\n          // size={fontSize}\n          mode=\"contained\"\n          icon={!isPlaying ? 'play' : 'pause'}\n          onPress={async () => {\n            try {\n              // console.info('toggle play', video3.current, video3.current?.playAsync)\n              if (isPlaying === false) {\n                console.info('start play');\n                // dispatch(resetCurrentVideoStateToMain())\n                dispatch(\n                  setActiveLayer({\n                    activeLayerId: activeLayer,\n                    caretPosition,\n                    scrollPosition,\n                  }),\n                );\n                dispatch(setIsPlaying(true));\n                // (video3.current as Video).shouldPlay = true\n              } else {\n                // await (video3.current as Video).stopAsync()\n                dispatch(setIsPlaying(false));\n                // dispatch(resetCurrentVideoStateToMain())\n              }\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React, {useCallback, useEffect, useRef} from 'react';\nimport {\n  View,\n  useWindowDimensions,\n  VirtualizedList,\n} from 'react-native';\nimport {useFolder} from '../../hooks/useFolder';\nimport {EditorLayer, EncoderProject, FolderType} from '../../types';\nimport {useRoute} from '@react-navigation/native';\nimport {Divider, IconButton, List} from 'react-native-paper';\n\nimport DragList from 'react-native-draglist';\nimport {ScrollView} from 'react-native-gesture-handler';\n\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  setScrollPosition,\n  setScrollParams,\n  setCaretPosition,\n  setIsPlaying,\n} from '../../store/slices/editor';\nimport uuid from 'react-native-uuid';\nimport {useMutation} from 'react-query';\nimport {getById, getFolderContent, writeItem} from '../../api';\nimport EditorCaret from './editorcaret';\nimport {ProjectParams} from '../../types/nav';\nimport {\n  EditorLayerBodyComponent,\n  EditorLayerHeaderComponent,\n} from './editorlayer';\nconst folderType = FolderType.editor;\n\nfunction EditorProjectComponent(props: {userId: string}) {\n  const {width} = useWindowDimensions();\n  const isMobile = width < 700;\n  const route = useRoute();\n  const {userId} = props;\n  const scrollPosition = useAppSelector(\n    state => state.editor.scrollPosition,\n  );\n  const scrollParams = useAppSelector(\n    state => state.editor.scrollParams,\n  );\n  const {projectId, parentFolderId} = route.params as ProjectParams;\n  // console.info('parentFolderId', parentFolderId)\n  const getByIdCallback = useCallback(\n    itemId => getById(itemId, parentFolderId),\n    [parentFolderId],\n  );\n  const dispatch = useAppDispatch();\n  const dataHook = useFolder(\n    projectId,\n    getFolderContent,\n    getByIdCallback,\n    FolderType.editor,\n    writeItem,\n  );\n  useEffect(() => {\n    console.info('reset');\n    dispatch(setIsPlaying(false));\n    dispatch(setScrollPosition(0));\n    dispatch(setCaretPosition(0));\n    return () => {\n      dispatch(setIsPlaying(false));\n      dispatch(setScrollPosition(0));\n      dispatch(setCaretPosition(0));\n      // dispatch(setV)\n    };\n  }, [projectId]);\n  const writeItemMutation = useMutation((item: EditorLayer) =>\n    writeItem(item),\n  );\n  const onClickAddLayer = async () => {\n    const layer: EditorLayer = {\n      id: uuid.v4().toString(),\n      title: 'Layer' + parseInt(dataHook.folderContent.length + 1),\n      folderId: projectId,\n      userId,\n      isEditorLayer: true,\n      orderId: dataHook.folderContent.length + 1,\n      folderType,\n      isFolder: false,\n      date: new Date().valueOf(),\n      mnemonic: dataHook.folder?.mnemonic,\n    };\n    await writeItemMutation.mutateAsync(layer);\n    dataHook.folderContentQuery.refetch();\n  };\n  const renderContent = ({\n    item,\n    onDragEnd,\n    onDragStart,\n    index,\n  }: {\n    item: EncoderProject;\n  }) => (\n    <EditorLayerHeaderComponent\n      {...props}\n      key={item.id}\n      onDragEnd={onDragEnd}\n      onDragStart={onDragStart}\n      folderId={item.id}\n      layerIndex={index}\n      parentHook={dataHook}\n      parentFolderId={parentFolderId}\n    />\n  );\n  const horizontalScroll = useRef();\n  const isOpen = true;\n  // const\n  const contentContainerWidth = isMobile\n    ? isOpen\n      ? '60%'\n      : '90%'\n    : '80%';\n  const controlsContainerWidth = isMobile\n    ? isOpen\n      ? '40%'\n      : 0\n    : '20%';\n  return (\n    <ScrollView\n      style={{width, height: '100%', position: 'absolute'}}\n      showsHorizontalScrollIndicator={false}\n      showsVerticalScrollIndicator={false}>\n      <View style={{display: 'flex', flexDirection: 'column'}}>\n        <View style={{width: '100%', flexDirection: 'row'}}>\n          <View style={{width: controlsContainerWidth}}>\n            {dataHook.folderContent !== undefined && (\n              <DragList\n                renderItem={renderContent}\n                keyExtractor={item => item.id || item.date.toString()}\n                data={dataHook.folderContent}\n                onReordered={async (start, end) => {\n                  await dataHook.onReordered(start, end);\n                }}\n                showsHorizontalScrollIndicator={false}\n                showsVerticalScrollIndicator={false}\n              />\n            )}\n          </View>\n          <ScrollView\n            horizontal={true}\n            style={{\n              width: contentContainerWidth,\n              display: 'flex',\n              flexDirection: 'row',\n              height: '100%',\n            }}\n            onScroll={e => {\n              dispatch(\n                setScrollPosition(e.nativeEvent.contentOffset.x),\n              );\n            }}\n            ref={e => {\n              horizontalScroll.current = e;\n              const totalWidth =\n                horizontalScroll?.current?.clientWidth;\n              const totalScroll =\n                horizontalScroll.current?.scrollWidth;\n              if (\n                scrollParams.totalScroll !== totalScroll ||\n                scrollParams.totalWidth !== totalWidth\n              ) {\n                dispatch(\n                  setScrollParams({\n                    totalWidth,\n                    totalScroll,\n                  }),\n                );\n              }\n              horizontalScroll?.current?.scrollTo({\n                x: scrollPosition,\n              });\n            }}\n            scrollEventThrottle={50}\n            showsHorizontalScrollIndicator={false}\n            showsVerticalScrollIndicator={false}>\n            <VirtualizedList\n              renderItem={({item, index}) => (\n                <EditorLayerBodyComponent\n                  {...props}\n                  key={item.id}\n                  folderId={item.id}\n                  layerIndex={index}\n                  parentFolderId={parentFolderId}\n                />\n              )}\n              keyExtractor={item => item.id || item.date.toString()}\n              getItem={dataHook.getContentItem}\n              getItemCount={dataHook.getContentCount}\n              data={dataHook.folderContent}\n              showsHorizontalScrollIndicator={false}\n              showsVerticalScrollIndicator={false}\n            />\n          </ScrollView>\n        </View>\n        <View style={{width: controlsContainerWidth}}>\n          <Divider />\n          <List.Item\n            titleStyle={{fontSize: 14}}\n            onPress={() => onClickAddLayer()}\n            right={props => (\n              <>\n                <IconButton\n                  {...props}\n                  icon={'plus'}\n                  mode={'outlined'}\n                />\n              </>\n            )}\n          />\n        </View>\n        <View\n          style={{\n            width: contentContainerWidth,\n            position: 'absolute',\n            height: 0,\n            left: controlsContainerWidth,\n          }}>\n          <EditorCaret />\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\nexport default EditorProjectComponent;\n","import React, {useState} from 'react';\nimport {Appbar, Menu} from 'react-native-paper';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  setPixelsPerSecond,\n  setShowComments,\n} from '../../store/slices/editor';\nimport {\n  createNewParty,\n  getActiveProjectLayer,\n  sendChatMessage,\n  getById,\n  writeItem,\n} from '../../api';\nimport {useQuery, useQueryClient} from 'react-query';\nimport {\n  EditorComment,\n  EditorLayer,\n  EncoderProject,\n} from '../../types';\nimport {getFolderContent, getUserData} from '../../api';\n\nimport uuid from 'react-native-uuid';\nimport {Platform, useWindowDimensions} from 'react-native';\n\nexport default function EditorToolBar(props) {\n  const {projectId, routeParams} = props;\n  const {encoder} = routeParams;\n  const dispatch = useAppDispatch();\n  const queryClient = useQueryClient();\n  const caretPosition = useAppSelector(\n    state => state.editor.caretPosition,\n  );\n  const scrollPosition = useAppSelector(\n    state => state.editor.scrollPosition,\n  );\n  const pixelsPerSecond = useAppSelector(\n    state => state.editor.pixelsPerSecond,\n  );\n  const showComments = useAppSelector(\n    state => state.editor.showComments,\n  );\n  const {width} = useWindowDimensions();\n  const isMobile = width < 700 || Platform.OS !== 'web';\n  const showEditor = useAppSelector(state => state.editor.showEditor);\n  const currentPosition =\n    (caretPosition + scrollPosition) / pixelsPerSecond;\n  const [isRefreshing, setRefreshing] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const onHideMenu = () => setMenuOpen(false);\n  const openMenu = () => setMenuOpen(true);\n\n  const layersQuery = useQuery(\n    ['projectLayersToolbar', projectId],\n    async () => {\n      const data = await getFolderContent(projectId);\n      const m = await Promise.all(\n        data.map(async i => {\n          return {\n            ...i,\n            media: await getFolderContent(i?.id),\n          };\n        }),\n      );\n      return m;\n    },\n  );\n  const layers: EditorLayer[] | undefined = layersQuery.data;\n  const forgetEverything = async () => {\n    await layersQuery.refetch();\n    await queryClient.refetchQueries(['folderData_' + projectId], {});\n    await queryClient.refetchQueries(['folderContent_' + projectId]);\n    await queryClient.refetchQueries(['project_' + projectId]);\n    await queryClient.refetchQueries(['projectLayers', projectId]);\n    await queryClient.refetchQueries(['encodedMedia', projectId]);\n    await queryClient.refetchQueries([\n      'folderContent_' + projectId + '_comments',\n    ]);\n    const folders = layers?.map(layer => layer.id);\n    console.info('project.folders', folders);\n    if (folders?.length)\n      for (let f = 0; f < folders.length; f++) {\n        const fId = folders[f];\n        queryClient.refetchQueries(['folderContent_' + fId]);\n      }\n  };\n\n  const onClickSetScale = (scale: '+' | '-') => {\n    let nscale =\n      scale === '+' ? pixelsPerSecond * 1.25 : pixelsPerSecond * 0.75;\n    if (nscale < 0.5) nscale = 0.5;\n    dispatch(setPixelsPerSecond(nscale));\n  };\n\n  const onClickCopy = async () => {\n    if (isRefreshing) {\n      return;\n    }\n    setRefreshing(true);\n    try {\n      const item = await getById(encoder, projectId);\n      item.isCopy = item.isCopy || item.id;\n      item.id = uuid.v4().toString();\n      item.orderId += 1;\n      item.createdAt = new Date().valueOf().toString();\n      console.info('click copy', {encoder, currentPosition, item});\n      await writeItem(item);\n      await queryClient.refetchQueries(['projectLayers', projectId]);\n      await queryClient.refetchQueries([\n        'folderContent_' + item.folderId,\n      ]);\n      await forgetEverything();\n    } catch (err) {\n      console.error('oncClickCopy', err);\n    }\n    setRefreshing(false);\n  };\n\n  const onClickCut = async () => {\n    if (isRefreshing) {\n      return;\n    }\n    setRefreshing(true);\n    try {\n      const currentData = getActiveProjectLayer(\n        layers,\n        currentPosition,\n      );\n      const item: EncoderProject = await getById(encoder, projectId);\n      const offsetPosition =\n        currentPosition -\n        currentData.offset +\n        (item.encoding.start || 0);\n\n      const nitem = JSON.parse(JSON.stringify({...item}));\n      nitem.isCopy = item.isCopy || item.id;\n      nitem.id = uuid.v4().toString();\n      nitem.orderId -= 1;\n      nitem.encoding.start = offsetPosition;\n      nitem.encoding.end = item.encoding.end || item.duration || 0;\n      nitem.createdAt = new Date().valueOf().toString();\n\n      item.encoding.end = offsetPosition;\n      await writeItem(item);\n      await writeItem(nitem);\n      await forgetEverything();\n    } catch (err) {\n      console.error('oncClickCut', err);\n    }\n    setRefreshing(false);\n  };\n\n  const onClickRefresh = async () => {\n    try {\n      if (isRefreshing) {\n        return;\n      }\n      setRefreshing(true);\n\n      await forgetEverything();\n    } catch (err) {\n      console.error('onClickRefresh', err);\n    }\n    setRefreshing(false);\n  };\n  const onClickShowComments = () =>\n    dispatch(setShowComments(!showComments));\n\n  const onClickAddComment = async () => {\n    const user = await getUserData();\n    const id = uuid.v4().toString();\n    const mnemonic = layers[0]?.mnemonic;\n    const comment: EditorComment = {\n      id,\n      partyId: id,\n      userId: user.id,\n      title: user.name,\n      currentPosition,\n      isContact: true,\n      isParty: true,\n      authorName: user.name,\n      name: user.name,\n      mnemonic,\n      folderId: projectId + '_comments',\n      isFolder: true,\n      duration: 10,\n      encoding: {\n        start: 0,\n        end: 10,\n      },\n    };\n    await createNewParty(comment);\n    await forgetEverything();\n    console.info(mnemonic);\n    await sendChatMessage(\n      comment.id,\n      user.name + ' has created comment',\n      mnemonic!,\n      {system: true},\n    );\n  };\n\n  const onClickUndo = () => {};\n\n  const onClickRedo = () => {};\n\n  return (\n    <>\n      {!isMobile ? (\n        <>\n          <Appbar.Action\n            icon=\"refresh\"\n            disabled={isRefreshing}\n            onPress={() => onClickRefresh()}\n          />\n          {showComments ? (\n            <Appbar.Action\n              icon=\"comment-plus\"\n              onPress={() => onClickAddComment()}\n            />\n          ) : null}\n          <Appbar.Action\n            icon={\n              showComments ? 'comment-eye' : 'comment-eye-outline'\n            }\n            onPress={() => onClickShowComments()}\n          />\n          <Appbar.Action\n            icon=\"magnify-plus-outline\"\n            onPress={() => onClickSetScale('+')}\n          />\n          <Appbar.Action\n            icon=\"magnify-minus-outline\"\n            onPress={() => onClickSetScale('-')}\n          />\n          {showEditor && (\n            <Appbar.Action\n              disabled={isRefreshing}\n              icon=\"content-cut\"\n              onPress={() => onClickCut()}\n            />\n          )}\n          {showEditor && (\n            <Appbar.Action\n              disabled={isRefreshing}\n              icon=\"content-copy\"\n              onPress={() => onClickCopy()}\n            />\n          )}\n        </>\n      ) : (\n        <Menu\n          visible={menuOpen}\n          onDismiss={onHideMenu}\n          anchor={\n            <Appbar.Action icon={'dots-grid'} onPress={openMenu} />\n          }>\n          <Menu.Item\n            leadingIcon=\"refresh\"\n            title=\"Refresh\"\n            disabled={isRefreshing}\n            onPress={() => onClickRefresh()}\n          />\n          <Menu.Item\n            leadingIcon=\"comment-plus\"\n            title=\"Add comment\"\n            onPress={() => onClickAddComment()}\n          />\n          <Menu.Item\n            title=\"Toggle comments\"\n            leadingIcon={\n              showComments ? 'comment-eye' : 'comment-eye-outline'\n            }\n            onPress={() => onClickShowComments()}\n          />\n          <Menu.Item\n            title=\"Magnify timeline\"\n            leadingIcon=\"magnify-plus-outline\"\n            onPress={() => onClickSetScale('+')}\n          />\n          <Menu.Item\n            title=\"Scale timeline\"\n            leadingIcon=\"magnify-minus-outline\"\n            onPress={() => onClickSetScale('-')}\n          />\n          {showEditor && (\n            <Menu.Item\n              title=\"Cut Content\"\n              disabled={isRefreshing}\n              leadingIcon=\"content-cut\"\n              onPress={() => onClickCut()}\n            />\n          )}\n          {showEditor && (\n            <Menu.Item\n              title=\"Copy Content\"\n              disabled={isRefreshing}\n              leadingIcon=\"content-copy\"\n              onPress={() => onClickCopy()}\n            />\n          )}\n        </Menu>\n      )}\n    </>\n  );\n}\n","import React, {Ref, RefObject, useCallback, useRef} from 'react';\nimport {\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n} from 'react-native';\nimport {IconButton, List, ProgressBar} from 'react-native-paper';\nimport {useQuery} from 'react-query';\nimport {\n  CBProgressParams,\n  genExecTime,\n  getActiveProjectLayer,\n  getProjectMedia,\n} from '../../api/media';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {useIsFocused} from '@react-navigation/native';\nimport {\n  setEncoderProgress,\n  setCaretPosition,\n  setScrollPosition,\n  setIsPlaying,\n  setActiveLayer,\n} from '../../store/slices/editor';\nimport {ResizeMode, Video} from 'expo-av';\nimport {EditorLayer, EditorProject, Media} from '../../types';\n\nconst styles = StyleSheet.create({\n  video: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  chip: {\n    fontSize: 18,\n  },\n});\nfunction EditorVideoComponent({\n  video2,\n  mediaRes,\n  layers,\n  projectId,\n}: {\n  projectId: string;\n  layers: EditorLayer[];\n  mediaRes: EditorProject;\n  video2: RefObject<JSX.IntrinsicElements['video'] | undefined>;\n}) {\n  const dispatch = useAppDispatch();\n  const encoderProgress = useAppSelector(\n    state => state.editor.encoderProgress,\n  );\n  const pixelsPerSecond = useAppSelector(\n    state => state.editor.pixelsPerSecond,\n  );\n  const caretPosition = useAppSelector(\n    state => state.editor.videoCaretPosition,\n  );\n  const scrollPosition = useAppSelector(\n    state => state.editor.videoScrollPosition,\n  );\n  const video3 = useRef<Video | null>();\n  const isPlaying = useAppSelector(state => state.editor.isPlaying);\n  const canScroll = useAppSelector(state => state.editor.canScroll);\n  const scroll = useAppSelector(state => state.editor.scroll);\n  const activeLayer = useAppSelector(\n    state => state.editor.activeLayer,\n  );\n  const focused = useIsFocused();\n  const currentPosition =\n    (caretPosition + scrollPosition) / pixelsPerSecond || 0.0;\n  const encodedMediaQuery = useQuery(\n    ['encodedMedia', projectId, currentPosition, activeLayer],\n    async () =>\n      await getProjectMedia(\n        layers!,\n        currentPosition,\n        (progress: CBProgressParams) =>\n          dispatch(setEncoderProgress(progress.progress)),\n      ),\n    {\n      enabled:\n        mediaRes?.id !== undefined && layers?.length && focused\n          ? true\n          : false,\n      keepPreviousData: false,\n      onSuccess: () => {\n        console.info('after query');\n        if (video2?.current)\n          video2.current.currentPosition =\n            encodedMediaQuery.data?.currentPosition || 0.0;\n      },\n    },\n  );\n\n  const queryPosition =\n    encodedMediaQuery.data?.currentPosition || 0.0;\n  const offsetPosition = encodedMediaQuery.data?.offset || 0.0;\n  // console.info('queryPosition', queryPosition)\n  // console.info('offsetPosition', offsetPosition)\n  const onTimeUpdate = useCallback(\n    (currentTime: number, paused: boolean) => {\n      try {\n        const newtime =\n          (offsetPosition || 0) +\n          currentTime -\n          (encodedMediaQuery.data?.activeMedia.encoding.start || 0);\n\n        if (newtime >= encodedMediaQuery.data?.totalTime) {\n          if (Platform.OS === 'web') video2.current?.pause();\n          else video3.current?.setStatusAsync({shouldPlay: false});\n          dispatch(setIsPlaying(false));\n        }\n\n        const newoffset = newtime * pixelsPerSecond;\n        const activeLayerId = getActiveProjectLayer(layers!, newtime)\n          ?.activeMedia?.id;\n        const layerSwitched =\n          activeLayerId && activeLayerId !== activeLayer;\n        let nscrollPosition = 0;\n        let ncaretPosition = caretPosition;\n\n        if (!paused) {\n          if (canScroll) {\n            const offset = newoffset - scroll;\n            console.info('offset', offset, scroll, newoffset);\n            if (offset > 0) {\n              const diff = newoffset - offset;\n              console.info('diff', diff, offset, scroll, newoffset);\n              nscrollPosition = diff;\n              ncaretPosition = offset;\n            } else {\n              nscrollPosition = newoffset - caretPosition;\n            }\n          } else {\n            ncaretPosition = newoffset;\n          }\n          dispatch(setIsPlaying(true));\n          dispatch(setCaretPosition(ncaretPosition));\n          dispatch(setScrollPosition(nscrollPosition));\n        }\n        if (paused && isPlaying && Platform.OS === 'web')\n          dispatch(setIsPlaying(false));\n        if (layerSwitched) {\n          // console.info('layerSwitched', layerSwitched, activeLayer, activeLayerId)\n          dispatch(\n            setActiveLayer({\n              activeLayerId,\n              scrollPosition: nscrollPosition,\n              caretPosition: ncaretPosition,\n            }),\n          );\n        }\n      } catch (err) {\n        console.error('ontimeupdate rr', err);\n      }\n    },\n    [encodedMediaQuery, canScroll, isPlaying, layers, offsetPosition],\n  );\n  const {width, height} = useWindowDimensions();\n  const fontSize = 12;\n  return (\n    <>\n      {(encoderProgress && encoderProgress !== 1) ||\n      encodedMediaQuery.isFetching ? (\n        <ProgressBar\n          style={{\n            height: '100%',\n            width: '100%',\n            position: 'absolute',\n            top: 0,\n          }}\n          progress={encoderProgress}\n        />\n      ) : (\n        <>\n          {Platform.OS === 'web' ? (\n            <video\n              controls={false}\n              style={styles.video}\n              src={(encodedMediaQuery.data?.url as string) || ''}\n              muted={encodedMediaQuery.data?.muted}\n              ref={e => {\n                // console.info('rerender video')\n                // console.info(\"ref\", e, encodedMediaQuery.data)\n                if (e) {\n                  e.currentTime = queryPosition;\n                  video2.current = e;\n                  if (isPlaying) e.play();\n                }\n              }}\n              onPlaying={e => {\n                dispatch(setIsPlaying(true));\n              }}\n              onPause={e => {\n                dispatch(setIsPlaying(false));\n              }}\n              onEnded={p => {\n                console.info('ended', p);\n              }}\n              onTimeUpdate={e =>\n                onTimeUpdate(\n                  (\n                    e.nativeEvent\n                      .target as JSX.IntrinsicElements['video']\n                  ).currentTime,\n                  (\n                    e.nativeEvent\n                      .target as JSX.IntrinsicElements['video']\n                  ).paused,\n                )\n              }\n            />\n          ) : (\n            <Video\n              source={{\n                uri: (encodedMediaQuery.data?.url as string) || '',\n              }}\n              positionMillis={parseInt(queryPosition * 1000)}\n              shouldPlay={isPlaying}\n              ref={e => {\n                console.info('onref', e);\n                video3.current = e;\n                if (isPlaying) e?.setStatusAsync({shouldPlay: true});\n              }}\n              isMuted={encodedMediaQuery.data?.muted}\n              style={{\n                width,\n                height: height / 3,\n                position: 'absolute',\n                left: -15,\n                top: 0,\n                padding: 0,\n                margin: 0,\n              }}\n              volume={1}\n              resizeMode={ResizeMode.CONTAIN}\n              useNativeControls={false}\n              onPlaybackStatusUpdate={async status => {\n                if (status.isLoaded && status.positionMillis) {\n                  onTimeUpdate(\n                    status.positionMillis / 1000,\n                    !status.isPlaying,\n                  );\n                }\n              }}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n}\nexport default EditorVideoComponent;\n","import React, {useRef} from 'react';\nimport {ImageBackground, StyleSheet, View} from 'react-native';\nimport {\n  ActivityIndicator,\n  Banner,\n  Chip,\n  Divider,\n  ProgressBar,\n  Text,\n  useTheme,\n} from 'react-native-paper';\nimport {useQuery, useQueryClient} from 'react-query';\nimport {EncoderProject} from '../../types';\nimport {\n  getFileOpfs,\n  encodeMedia,\n  getVideoWT,\n  getById,\n} from '../../api';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {useIsFocused} from '@react-navigation/native';\nimport {niceBytes} from '../../api/util';\nimport {setEncoderProgress} from '../../store/slices/encoder';\n\nconst styles = StyleSheet.create({\n  video: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  chip: {\n    fontSize: 18,\n  },\n});\nexport default function EncoderBanner({\n  projectId,\n  height,\n  folderId,\n}: {\n  projectId: string;\n  height: number;\n  folderId: string;\n}) {\n  const dispatch = useAppDispatch();\n  const state = useAppSelector(state => state.encoder);\n  const theme = useTheme();\n  const queryClient = useQueryClient();\n  const mediaData = useQuery(\n    ['projectdata', projectId],\n    async () => await getById(projectId, folderId),\n    {\n      enabled: projectId ? true : false,\n    },\n  );\n  const focused = useIsFocused();\n\n  const mediaRes = mediaData.data as EncoderProject | undefined;\n  // const {encoder} = mediaRes\n\n  const localMediaQuery = useQuery(\n    ['localMedia', projectId],\n    async () => {\n      if (!mediaRes?.id) return undefined;\n      // const folder = await getById(mediaRes.folderId)\n      let file;\n      try {\n        file = await getFileOpfs(mediaRes);\n      } catch (err) {\n        console.error(err);\n      }\n\n      if (mediaRes.extractor === 'wt' && !file)\n        file = await getVideoWT(mediaRes);\n\n      return file;\n    },\n    {\n      enabled:\n        mediaData.isFetched && focused && mediaRes?.id !== undefined\n          ? true\n          : false,\n    },\n  );\n\n  const encodedMediaQuery = useQuery(\n    ['encodedMedia', projectId],\n    async () =>\n      mediaRes?.id &&\n      encodeMedia(mediaRes, params =>\n        dispatch(setEncoderProgress(params.progress)),\n      ),\n    {\n      enabled:\n        mediaData.isFetched && focused && mediaRes?.id !== undefined\n          ? true\n          : false,\n    },\n  );\n\n  const encodedFileSize = useQuery(\n    ['encodedFileSize', projectId],\n    async () => {\n      // console.info(\"encoded url\", encodedMediaQuery.data)\n      if (!encodedMediaQuery.data) return '0';\n      const head = await fetch(encodedMediaQuery.data, {\n        cache: 'no-cache',\n      });\n      // console.info('head', head)\n      return head.headers.get('Content-Length')?.toString();\n    },\n    {\n      enabled:\n        !mediaData.isFetching &&\n        focused &&\n        encodedMediaQuery.data &&\n        encodedMediaQuery.data.search('blob') > -1\n          ? true\n          : false,\n\n      retry: false,\n    },\n  );\n\n  const mediaLoading =\n    mediaData.isFetching || localMediaQuery.isFetching;\n  console.info('encodedFileSize', encodedFileSize.data);\n  const mediaSrc = localMediaQuery.data;\n  const video2 = useRef<JSX.IntrinsicElements['video']>();\n  const video1 = useRef<JSX.IntrinsicElements['video']>();\n  if (!mediaRes) {\n    return <ActivityIndicator size={72} />;\n  }\n  return (\n    <>\n      <Divider />\n      <Banner\n        visible={projectId ? true : false}\n        theme={theme}\n        style={{\n          backgroundColor: 'black',\n          padding: 0,\n          margin: 0,\n        }}\n        contentStyle={{\n          width: '100%',\n          height: '100%',\n          maxWidth: 'auto',\n          padding: 0,\n          margin: 0,\n        }}>\n        <View\n          style={{\n            width: '50%',\n            height: height / 2,\n            borderRightWidth: 1,\n            borderRightColor: 'rgb(73, 69, 79)',\n          }}>\n          <Text style={{textAlign: 'left', zIndex: 10}}>\n            <Chip textStyle={styles.chip}>\n              Before: {mediaRes?.size && niceBytes(mediaRes.size)}\n            </Chip>\n          </Text>\n          {mediaLoading ? <ActivityIndicator size={72} /> : null}\n\n          {projectId && !mediaLoading && focused ? (\n            <video\n              controls={true}\n              style={styles.video}\n              onPlaying={e => {\n                const {currentTime} = e.nativeEvent.target;\n                window.video1 = e.nativeEvent.target;\n                if (video2.current)\n                  video2.current.currentTime = currentTime;\n                if (video2.current && video2.current.paused)\n                  video2.current.play();\n              }}\n              onPause={e => {\n                const {currentTime} = e.nativeEvent.target;\n                if (video2.current)\n                  video2.current.currentTime = currentTime;\n                if (video2.current && !video2.current.paused)\n                  video2.current.pause();\n              }}\n              onEnded={p => {\n                console.info('ended', p);\n              }}\n              onTimeUpdate={e => {\n                const {currentTime, paused} = e.nativeEvent.target;\n                if (video2.current && paused)\n                  video2.current.currentTime = currentTime;\n              }}\n              ref={video1}\n              src={mediaSrc}\n            />\n          ) : null}\n        </View>\n        <View\n          style={{\n            width: '50%',\n            height: height / 2,\n            borderLeftWidth: 1,\n            borderLeftColor: 'rgb(73, 69, 79)',\n          }}>\n          {encodedMediaQuery.isFetching ? (\n            <>\n              <Text style={{textAlign: 'right', zIndex: 10}}> </Text>\n              <ProgressBar\n                style={{\n                  height: '100%',\n                  position: 'absolute',\n                  top: -25,\n                }}\n                progress={state.encoderProgress}\n              />\n              <View\n                style={{\n                  position: 'absolute',\n                  top: '40%',\n                  display: 'flex',\n                  width: '100%',\n                }}>\n                <Text style={{textAlign: 'center', color: 'coral'}}>\n                  Loading{' '}\n                  {parseFloat(\n                    Math.abs(state.encoderProgress * 100),\n                  ).toFixed(2)}\n                  %\n                </Text>\n              </View>\n            </>\n          ) : (\n            <Text style={{textAlign: 'right', zIndex: 10}}>\n              <Chip textStyle={styles.chip}>\n                After:{' '}\n                {!encodedFileSize.isFetching &&\n                  encodedFileSize.data &&\n                  niceBytes(encodedFileSize.data)}\n              </Chip>\n              <a href={encodedMediaQuery.data} download={true}>\n                <Chip textStyle={styles.chip} onPress={() => {}}>\n                  Download\n                </Chip>\n              </a>\n            </Text>\n          )}\n\n          {projectId && !encodedMediaQuery.isFetching && focused ? (\n            <>\n              {mediaRes?.encoding?.output === 'mp4' && (\n                <video\n                  controls={true}\n                  style={styles.video}\n                  onPlaying={e => {\n                    if (video1.current?.paused)\n                      video1.current?.play();\n                  }}\n                  onPause={e => {\n                    if (!video1.current?.paused)\n                      video1.current?.pause();\n                  }}\n                  ref={video2}\n                  src={encodedMediaQuery.data}\n                />\n              )}\n              {mediaRes?.encoding?.output === 'gif' && (\n                <ImageBackground\n                  source={{uri: encodedMediaQuery.data}}\n                  resizeMode=\"contain\"\n                  style={styles.video}\n                />\n              )}\n            </>\n          ) : null}\n        </View>\n      </Banner>\n      <Divider />\n    </>\n  );\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  memo,\n} from 'react';\nimport {SafeAreaView, View, useWindowDimensions} from 'react-native';\nimport {\n  ActivityIndicator,\n  Button,\n  Divider,\n  List,\n  Menu,\n  TextInput,\n} from 'react-native-paper';\nimport {useMutation, useQuery, useQueryClient} from 'react-query';\nimport {findBy, genExecCmd, getById, writeItem} from '../../api';\n// import {genExecCmd} from '../../api/media';\nimport {useRoute} from '@react-navigation/native';\nimport {\n  EncoderProject as EncoderProjectType,\n  FFMpegOutputType,\n  FFMpegPreset,\n} from '../../types';\nimport {ScrollView} from 'react-native-gesture-handler';\nimport SyntaxHighlighter from 'react-native-syntax-highlighter';\nimport {xonokai} from 'react-syntax-highlighter/src/styles/prism';\nimport CodeEditor, {\n  CodeEditorSyntaxStyles,\n} from '@rivascva/react-native-code-editor';\nimport {ProjectParams} from '../../types/nav';\nfunction EncoderProject(props?: {params?: ProjectParams}) {\n  // const {writeItem} = props;\n  const route = useRoute();\n  const queryClient = useQueryClient();\n  const [showCode, setShowCode] = useState(false);\n  const params = route.params as ProjectParams;\n  console.info('params', params);\n  let {projectId, encoder, folderId, parentFolderId} = params || {};\n  if (encoder) projectId = encoder;\n  const project = useQuery(\n    'project_' + projectId,\n    async () => await getById(projectId, parentFolderId || folderId),\n  );\n  const projectData: EncoderProjectType = project.data;\n  console.info('projectData', projectData);\n  const afterWrite = useRef<number | undefined>();\n  const codeEditorRef = useRef();\n  const {width} = useWindowDimensions();\n  const codeWidth = props.codeWidth || width - 200;\n  const projectWriteMutation = useMutation(\n    async (np: EncoderProjectType) => {\n      const ni = await writeItem(np);\n      clearTimeout(afterWrite.current);\n      afterWrite.current = setTimeout(() => {\n        queryClient.refetchQueries({\n          queryKey: ['folderContent_' + projectData?.folderId],\n        });\n        queryClient.refetchQueries({\n          queryKey: ['projectdata', projectId],\n        });\n        queryClient.resetQueries({\n          queryKey: ['encodedMedia', projectId],\n          exact: true,\n        });\n        queryClient.resetQueries({\n          queryKey: ['encodedFileSize', projectId],\n          exact: true,\n        });\n        queryClient.resetQueries({\n          queryKey: ['encodedFileSize', projectId],\n          exact: true,\n        });\n        project.refetch();\n      }, 1000);\n      return ni;\n    },\n  );\n  const [outputMenuVisible, setOutputMenuVisible] = useState(false);\n  const [presetMenuVisible, setPresetMenuVisible] = useState(false);\n  const outputTypes = Object.keys(FFMpegOutputType);\n  const closeMenu = () => {\n    setOutputMenuVisible(false);\n    setPresetMenuVisible(false);\n  };\n  const selectValue = (\n    valueType: keyof EncoderProjectType['encoding'],\n    value: string | number,\n  ) => {\n    const np = projectData;\n    const numericTypes = [\n      'width',\n      'compressionLevel',\n      'height',\n      'start',\n      'end',\n      'soundVolume',\n    ];\n    const nonRenderTypes = ['start', 'end', 'soundVolume'];\n    const shouldRerender = !nonRenderTypes.includes(valueType);\n    if (numericTypes.includes(valueType) && isNaN(value)) {\n      console.info('invalid type');\n      return;\n    }\n    if (value === '') {\n      return;\n    }\n    if (!np.encoding) {\n      np.encoding = {};\n    }\n    np.encoding[valueType] = value;\n    console.info(np);\n\n    if (shouldRerender)\n      np.encoding.lastUpdated = new Date().valueOf();\n\n    projectWriteMutation.mutateAsync(np);\n    closeMenu();\n  };\n  if (project.isFetching) {\n    return <ActivityIndicator size={72} />;\n  }\n  const execCmd = genExecCmd(projectData);\n  const codeString = execCmd.join('\\n');\n  const fontSize = 12;\n  const inputWidth = 120;\n  return (\n    <ScrollView\n      showsVerticalScrollIndicator={false}\n      showsHorizontalScrollIndicator={false}>\n      <Divider key={'div00'} />\n      <List.Item\n        key={'info'}\n        left={p => <List.Icon {...p} icon={'information'} />}\n        title={projectData?.title}\n      />\n      <Divider key={'div01'} />\n      <List.Item\n        key={'start'}\n        left={p => <List.Icon {...p} icon={'clock-plus'} />}\n        title={'Start'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.start || 0}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('start', parseFloat(text))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div7'} />\n      <List.Item\n        key={'end'}\n        left={p => <List.Icon {...p} icon={'clock-minus'} />}\n        title={`End (${projectData?.duration})`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={\n                projectData?.encoding?.end || projectData?.duration\n              }\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('end', parseFloat(text))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div4'} />\n      <List.Item\n        key={'cl'}\n        left={p => <List.Icon {...p} icon={'zip-box'} />}\n        title={'Compression'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.compressionLevel}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('compressionLevel', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'divvolume'} />\n      <List.Item\n        key={'volume'}\n        left={p => <List.Icon {...p} icon={'zip-box'} />}\n        title={'Sound Volume'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.soundVolume || 100}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('soundVolume', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div3'} />\n      <List.Item\n        key={'width'}\n        left={p => <List.Icon {...p} icon={'ruler'} />}\n        title={`Width(${projectData?.width})`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.width}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('width', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div2'} />\n      <List.Item\n        key={'height'}\n        left={p => <List.Icon {...p} icon={'ruler'} />}\n        title={`Height(${projectData?.height})`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.height}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('height', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div1'} />\n      <List.Item\n        key={'output'}\n        left={p => <List.Icon {...p} icon={'file-export'} />}\n        title={'Output'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <Menu\n              visible={outputMenuVisible}\n              onDismiss={closeMenu}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setOutputMenuVisible(true)}>\n                  {projectData?.encoding?.output}\n                </Button>\n              }>\n              <>\n                {outputTypes.map(item => (\n                  <Menu.Item\n                    key={item}\n                    onPress={() => selectValue('output', item)}\n                    title={item}\n                  />\n                ))}\n              </>\n            </Menu>\n          </View>\n        )}\n      />\n      <Divider key={'div'} />\n      <List.Item\n        key={'preset'}\n        left={p => <List.Icon {...p} icon={'cog'} />}\n        title={'Preset'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <Menu\n              visible={presetMenuVisible}\n              onDismiss={closeMenu}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setPresetMenuVisible(true)}>\n                  {projectData?.encoding?.preset}\n                </Button>\n              }>\n              <>\n                {Object.keys(FFMpegPreset).map(item => (\n                  <Menu.Item\n                    key={item}\n                    onPress={() => selectValue('preset', item)}\n                    title={item}\n                  />\n                ))}\n              </>\n            </Menu>\n          </View>\n        )}\n      />\n      {showCode === true ? (\n        <View>\n          <Divider key={'div5'} />\n          <List.Item\n            key={'code'}\n            left={p => <List.Icon {...p} icon={'code-brackets'} />}\n            title={''}\n            titleStyle={{fontSize}}\n            onPress={() => codeEditorRef?.current?.focus()}\n            right={p => (\n              <SafeAreaView style={{width: codeWidth, zIndex: 10}}>\n                <CodeEditor\n                  className={'codeEditor'}\n                  ref={codeEditorRef}\n                  style={{\n                    fontSize,\n                    inputLineHeight: fontSize,\n                    highlighterLineHeight: fontSize,\n                    display: 'flex',\n                  }}\n                  language=\"bash\"\n                  syntaxStyle={CodeEditorSyntaxStyles.xonokai}\n                  initialValue={\n                    projectData?.encoding?.code?.join(',') || ''\n                  }\n                  onChange={text => {\n                    if (\n                      text ===\n                        projectData?.encoding?.code?.join(',') ||\n                      ''\n                    )\n                      return;\n                    selectValue('code', text.split(','));\n                  }}\n                  autoFocus={false}\n                  showLineNumbers\n                />\n              </SafeAreaView>\n            )}\n          />\n          <Divider key={'div6'} />\n          {codeString && (\n            <List.Item\n              key={'output_code'}\n              left={p => <List.Icon {...p} icon={'code-tags'} />}\n              title=\"\"\n              titleStyle={{fontSize}}\n              right={() => (\n                <View style={{width: codeWidth}}>\n                  <SyntaxHighlighter\n                    language=\"bash\"\n                    style={xonokai}\n                    highlighter={'prism'}\n                    fontSize={fontSize}>\n                    {codeString}\n                  </SyntaxHighlighter>{' '}\n                </View>\n              )}\n            />\n          )}\n          <Divider key={'div8'} />\n        </View>\n      ) : null}\n      <Button\n        icon={'code-brackets'}\n        onPress={() => setShowCode(!showCode)}>\n        Show FFMpeg Code\n      </Button>\n    </ScrollView>\n  );\n}\n\nexport default memo(EncoderProject);\n","import React from 'react';\n\nimport {DataHook, DataHookFolders, Folder} from '../../types';\n\nimport {\n  SafeAreaView,\n  StyleSheet,\n  View,\n  useWindowDimensions,\n  VirtualizedList,\n} from 'react-native';\n\nimport FolderItem from './items/folderitem';\nimport {ActivityIndicator} from 'react-native-paper';\nimport {\n  CommonActions,\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\nimport {FileStackParams, FolderParams} from '../../types/nav';\n\nexport interface FolderLibraryProps {\n  dataHook: DataHookFolders;\n}\n\nconst FolderLibrary = (folderLibraryProps: FolderLibraryProps) => {\n  const {dataHook} = folderLibraryProps;\n  const dim = useWindowDimensions();\n  const {height} = dim;\n  const drawerOffset = dim.width > 700 ? 80 : 0;\n  const width = dim.width - drawerOffset;\n  const iconSize = 30;\n  const iconColor = 'black';\n  let marginTop = 0;\n  const navigation = useNavigation<NavigationProp<FileStackParams>>();\n  const {\n    folders,\n    currentFolderId,\n    getItem,\n    getItemCount,\n    isEditingFolder,\n    currentFolderEditorName,\n    setFolderEditorName,\n    folderNameInputRef,\n    onFolderActionPress,\n    loadingContent,\n    loadingFolders,\n    onRemoveFolder,\n    abortEditFolder,\n  } = dataHook;\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: 0,\n      marginTop: 0,\n    },\n    item: {\n      paddingLeft: 5,\n      fontSize: 12,\n      height: 120,\n      color: 'black',\n      width: '100%',\n    },\n    tinyLogo: {\n      marginTop: 2,\n      width: 22,\n      height: 22,\n    },\n    scroll: {\n      height: height - 55,\n      display: 'flex',\n      position: 'relative',\n      backgroundColor: 'black',\n      marginTop,\n      width: '100%',\n    },\n    icon: {\n      paddingLeft: 10,\n    },\n  });\n  const renderFolder = (item: Folder) => (\n    <View style={{width}} key={item.id}>\n      <FolderItem\n        key={item.id}\n        folder={{\n          ...item,\n          isOpen: item.id === currentFolderId && !isEditingFolder,\n          isInfoOpen: item.id === isEditingFolder,\n        }}\n        styles={styles}\n        abortEditFolder={abortEditFolder}\n        folderNameInputRef={folderNameInputRef}\n        iconColor={iconColor}\n        iconSize={iconSize}\n        width={width}\n        isLoadingContent={\n          currentFolderId === item.id && loadingContent\n        }\n        isOpen={item.id === currentFolderId}\n        currentFolderEditorName={currentFolderEditorName}\n        setFolderEditorName={setFolderEditorName}\n        onFolderPress={() => {\n          navigation.navigate({\n            name: 'Folder',\n            params: {\n              folderId: item.id,\n              title: item.title,\n              mnemonic: item.mnemonic,\n              userId: item.userId,\n            },\n          });\n        }}\n        onShareFolder={() => dataHook.onShareFolder(item)}\n        onFolderActionPress={() => onFolderActionPress(item.id)}\n        onRemoveFolder={() => onRemoveFolder(item)}>\n        {item.id === currentFolderId && !isEditingFolder ? (\n          <View style={{width, height: 'auto'}}></View>\n        ) : null}\n      </FolderItem>\n    </View>\n  );\n  // console.info('loadingFolders', folders, loadingFolders)\n  if (loadingFolders) {\n    return <ActivityIndicator size={72} />;\n  }\n  return (\n    <SafeAreaView style={{...styles.scroll}}>\n      <VirtualizedList\n        onEndReached={() => {\n          console.info('onEndReached');\n        }}\n        data={folders}\n        initialNumToRender={100}\n        renderItem={({item}) => renderFolder(item)}\n        keyExtractor={(item: Folder) =>\n          item.id || item.date.toString()\n        }\n        getItemCount={getItemCount}\n        getItem={getItem}\n        getItemLayout={(data, index) => ({\n          length: 50,\n          offset: 50 * index,\n          index,\n        })}\n      />\n    </SafeAreaView>\n  );\n};\n\nexport default FolderLibrary;\n","import React, {memo} from 'react';\n\nimport {\n  ListRenderItemInfo,\n  SafeAreaView,\n  View,\n  VirtualizedList,\n  useWindowDimensions,\n} from 'react-native';\n\nimport {\n  FolderPreviewContentType,\n  useFolders,\n} from '../../hooks/useFolders';\n\nimport {ActivityIndicator} from 'react-native-paper';\nimport Medialibrary from '../media/medialibrary';\nimport {FolderType} from '../../types';\nimport Contactlibrary from '../contacts/contactlibrary';\nimport FolderLibrary from './folderlibrary';\nimport {\n  getFolderContent,\n  getFoldersByType,\n  writeItem,\n} from '../../api';\nimport {styles} from './styles';\nimport {useFolder} from '../../hooks/useFolder';\n\nexport type RenderContentType = (\n  item: ListRenderItemInfo<FolderPreviewContentType>,\n) => JSX.Element;\n\nexport const FolderNavigator = ({\n  parentFolderId,\n  parentFolderHook,\n  renderContent,\n  folderType,\n}: {\n  renderContent: RenderContentType;\n  parentFolderId: string | null;\n  parentFolderHook: ReturnType<typeof useFolder>;\n  folderType: FolderType;\n}) => {\n  const foldersHook = useFolders(folderType, false);\n  const {height} = useWindowDimensions();\n  return (\n    <View style={{width: '30%', height: '100%'}}>\n      {!parentFolderId ? (\n        <FolderLibrary dataHook={foldersHook} />\n      ) : null}\n      {parentFolderId ? (\n        <>\n          {!parentFolderHook.folderContentQuery.isFetching &&\n          !parentFolderHook.isLoadingFolder &&\n          parentFolderHook.folderContent?.length ? (\n            <VirtualizedList\n              onEndReached={() => {\n                console.info('onEndReached');\n                // parentFolderHook.folderContentQuery.refetch()\n              }}\n              scrollEnabled={true}\n              style={{height}}\n              data={parentFolderHook.folderContent}\n              pagingEnabled={true}\n              initialNumToRender={1000}\n              renderItem={renderContent}\n              keyExtractor={(item: FolderPreviewContentType) =>\n                item.id || item.date.toString()\n              }\n              showsHorizontalScrollIndicator={false}\n              showsVerticalScrollIndicator={false}\n              getItemCount={parentFolderHook.getContentCount}\n              getItem={parentFolderHook.getContentItem}\n              onScrollToTop={() => {\n                // console.info('ontop');\n              }}\n              getItemLayout={(_data, index) => ({\n                length: 130,\n                offset: 130 * index,\n                index,\n              })}\n            />\n          ) : (\n            <ActivityIndicator size={72} />\n          )}\n        </>\n      ) : null}\n    </View>\n  );\n};\n","import React, {memo} from 'react';\n\nimport {\n  SafeAreaView,\n  View,\n  useWindowDimensions,\n  Platform,\n} from 'react-native';\n\nimport DragList, {\n  DragListRenderItemInfo,\n} from 'react-native-draglist';\n\nimport {FolderPreviewContentType} from '../../hooks/useFolders';\n\nimport ContentItem from './items/contentitem';\nimport {useFolder} from '../../hooks/useFolder';\nimport {\n  ActivityIndicator,\n  IconButton,\n  List,\n} from 'react-native-paper';\nimport {useIsFocused, useRoute} from '@react-navigation/native';\nimport {FolderType} from '../../types';\nimport {ScrollView} from 'react-native-gesture-handler';\nimport {getById, getFolderContent, writeItem} from '../../api';\nimport {FolderParams} from '../../types/nav';\nimport {FolderNavigator, RenderContentType} from './foldernavigator';\nimport {styles} from './styles';\n\nexport interface FolderLibraryProps {\n  folderId?: string;\n  folderType: FolderType;\n}\nconst FolderPage = (props: FolderLibraryProps) => {\n  const {folderType} = props;\n  const isFocused = useIsFocused();\n  const {height, width} = useWindowDimensions();\n  const isMobile = width > 700 ? false : true;\n  const route = useRoute();\n  let marginTop = Platform.OS === 'web' ? 0 : 0;\n  const params = route.params as FolderParams;\n  const {folderId, mnemonic, title, userId} = params;\n  const dataHook = useFolder(\n    folderId,\n    getFolderContent,\n    getById,\n    folderType,\n    writeItem,\n    mnemonic,\n    title,\n    userId,\n  );\n  const {\n    folderContent,\n    isLoadingFolder,\n    isLoadingFolderContent,\n    folderData,\n    folderContentQuery,\n    folder,\n    onReordered,\n    addMedia,\n  } = dataHook;\n\n  let parentFolderId =\n    params?.parentFolderId || (folder && folder.folderId) || null;\n  if (parentFolderId === folderId) parentFolderId = null;\n  const parentFolderHook = useFolder(\n    parentFolderId,\n    getFolderContent,\n    getById,\n    folderType,\n    writeItem,\n  );\n\n  const mstyles = styles;\n  mstyles.item.width = width - 80;\n  mstyles.scroll.height = height - 65;\n  mstyles.scroll.marginTop = marginTop;\n  if (!isFocused) return <></>;\n  const renderContent = ({\n    item: i,\n    onDragEnd,\n    onDragStart,\n  }: DragListRenderItemInfo<FolderPreviewContentType>) => (\n    <ContentItem\n      i={i}\n      key={i.id}\n      dataHook={dataHook}\n      styles={mstyles}\n      width={!isMobile ? (width / 100) * 70 : width}\n      onDragStart={onDragStart}\n      onDragEnd={onDragEnd}\n    />\n  );\n  return (\n    <SafeAreaView>\n      <View\n        style={{\n          height: '100%',\n          width: '100%',\n          flexDirection: 'row',\n        }}>\n        {!isMobile ? (\n          <FolderNavigator\n            parentFolderId={parentFolderId}\n            parentFolderHook={parentFolderHook}\n            renderContent={renderContent as RenderContentType}\n            folderType={folderType}\n          />\n        ) : null}\n        {!isLoadingFolder &&\n        !folderContentQuery.isFetching &&\n        folderContent !== undefined ? (\n          <DragList\n            renderItem={renderContent}\n            keyExtractor={item => item?.id || item?.date.toString()}\n            style={{\n              width: '100%',\n              height,\n              paddingBottom: 50,\n            }}\n            data={folderContent}\n            showsVerticalScrollIndicator={false}\n            showsHorizontalScrollIndicator={false}\n            scrollEnabled={true}\n            ListEmptyComponent={() => (\n              <List.Item\n                title={'Create your first project'}\n                left={() => (\n                  <IconButton icon={'creation'} mode=\"outlined\" />\n                )}\n                style={{padding: 10}}\n                onPress={() => addMedia()}\n              />\n            )}\n            onReordered={onReordered}\n          />\n        ) : (\n          <ActivityIndicator size={72} />\n        )}\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default memo(FolderPage);\n","import React, {memo} from 'react';\n\nimport {Contact} from '../../../types';\n\nimport {Divider, List} from 'react-native-paper';\nimport {\n  NavigationProp,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport {ChatParams, ChatStackParams} from '../../../types/nav';\n\nexport interface ContactItemProps {\n  i: Contact;\n}\n\nconst ContactItem = (contactItemProps: ContactItemProps) => {\n  const {i} = contactItemProps;\n  const route = useRoute();\n  const params = route.params as ChatParams;\n  const navigation = useNavigation<NavigationProp<ChatStackParams>>();\n  const isOpen = params?.chatId === i.id;\n  const contact = i;\n  const title = i.name || i.id;\n  const icon = isOpen ? 'chat' : 'chat-outline';\n  const onPressContact = () => {\n    navigation.navigate({\n      name: 'Chat',\n      params: {\n        chatId: contact.id,\n        name: contact.name,\n        parentFolderId: contact.folderId,\n        mnemonic: contact.mnemonic,\n      },\n    });\n  };\n\n  const children = isOpen ? <></> : null;\n  return (\n    <>\n      <List.Accordion\n        style={{width: '100%'}}\n        expanded={isOpen}\n        title={title}\n        onPress={onPressContact}\n        left={props => <List.Icon {...props} icon={icon} />}\n        right={() => <></>}>\n        {children}\n      </List.Accordion>\n      <Divider />\n    </>\n  );\n};\nexport default memo(ContactItem);\n","import React from 'react';\n\nimport {\n  Folder,\n  Media,\n  Contact,\n  EditorProject,\n  DataHook,\n  FolderType,\n} from '../../../types';\n\nimport {useWindowDimensions} from 'react-native';\n\nimport MediaItem from './mediaitem';\n\nimport ContactItem from './contactitem';\n\nimport FolderItem from './folderitem';\n\nimport ProjectItem from './projectitem';\nimport {useFolders} from '../../../hooks/useFolders';\nimport {useMedia} from '../../../hooks/useMedia';\nimport {\n  NavigationProp,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport {FileStackParams, FolderParams} from '../../../types/nav';\nconst enableMove = false;\n\nexport interface ContentItemProps {\n  dataHook: DataHook;\n  styles: any;\n  i: Contact | Media | Folder;\n  width: number;\n  onDragEnd?: () => void;\n  onDragStart?: () => void;\n}\n\nconst ContentItem = (ContentItemProps: ContentItemProps) => {\n  const {dataHook, styles, i} = ContentItemProps;\n  const navigation = useNavigation<NavigationProp<FileStackParams>>();\n  const route = useRoute();\n  const params = route.params as FolderParams;\n  const currentFolderId = params?.folderId;\n  const dim = useWindowDimensions();\n  const drawerOffset = dim.width > 700 ? 80 : 0;\n  const width = ContentItemProps.width - drawerOffset;\n  const iconSize = 30;\n  const iconColor = 'black';\n\n  if ((i as Media).isMediaNew) {\n    const {\n      onMediaPress,\n      onRemoveFolder: onRemoveMediaPress,\n      onDownloadMediaPress,\n      onCopyLinkPress,\n      onEditMediaPress,\n      isLoadingMedia,\n      currentContentId,\n      currentMediaId,\n    } = dataHook as ReturnType<typeof useMedia>;\n    return (\n      <MediaItem\n        key={i.id}\n        i={i as Media}\n        width={width}\n        onMediaPress={onMediaPress}\n        onRemoveMediaPress={() => onRemoveMediaPress(i as Folder)}\n        onDownloadMediaPress={onDownloadMediaPress}\n        onCopyLinkPress={onCopyLinkPress}\n        onEditMediaPress={onEditMediaPress}\n        itemLoading={\n          i.id === currentMediaId && isLoadingMedia\n            ? currentMediaId\n            : false\n        }\n        isOpen={i.id === currentContentId ? true : false}\n        isPlaying={\n          i.id === currentMediaId && !isLoadingMedia ? true : false\n        }\n        enableMove={enableMove}\n      />\n    );\n  }\n\n  if (\n    (i as Media).isEncoderProject ||\n    (i as EditorProject).isEditorProject\n  ) {\n    return (\n      <ProjectItem\n        item={i as Media}\n        folderType={dataHook.folderType as FolderType}\n        onRemoveFolder={() => dataHook.onRemoveFolder(i as Folder)}\n      />\n    );\n  }\n\n  if ((i as Contact).isContact) {\n    return <ContactItem key={i.id} i={i as Contact} />;\n  }\n  if ((i as Folder).isFolder) {\n    const {\n      onRemoveFolder,\n      isEditingFolder,\n      onFolderActionPress,\n      setFolderEditorName,\n      currentFolderEditorName,\n      folderNameInputRef,\n      abortEditFolder,\n      onShareFolder,\n    } = dataHook as ReturnType<typeof useFolders>;\n    return (\n      <FolderItem\n        key={i.id}\n        folder={{\n          ...(i as Folder),\n          isInfoOpen: i.id === isEditingFolder,\n          isOpen: i.id === currentFolderId,\n        }}\n        styles={styles}\n        setFolderEditorName={setFolderEditorName}\n        currentFolderEditorName={currentFolderEditorName}\n        folderNameInputRef={folderNameInputRef}\n        iconColor={iconColor}\n        iconSize={iconSize}\n        enableMove={enableMove}\n        width={width}\n        isOpen={i.id === currentFolderId}\n        onRemoveFolder={() => onRemoveFolder(i as Folder)}\n        onShareFolder={() => onShareFolder(i as Folder)}\n        onFolderActionPress={() => onFolderActionPress(i.id)}\n        onFolderPress={() =>\n          navigation.navigate({\n            name: 'Folder',\n            params: {\n              folderId: (i as Folder).id,\n              title: (i as Folder).title,\n              parentFolderId: i.folderId as string,\n              mnemonic: (i as Folder).mnemonic,\n              userId: (i as Folder).userId,\n            },\n          })\n        }\n        isSecondLevel={true}\n        abortEditFolder={() => abortEditFolder()}>\n        {i.id === currentFolderId ? <></> : null}\n      </FolderItem>\n    );\n  }\n  return <></>;\n};\n\nexport default ContentItem;\n","import React, {MutableRefObject, useMemo} from 'react';\n\nimport {Folder} from '../../../types';\n\nimport {\n  View,\n  TextInput as TextInputType,\n  TouchableOpacity,\n} from 'react-native';\nimport {defaultFolders} from '../../../db/defaults';\nimport {\n  ActivityIndicator,\n  Divider,\n  List,\n  Text,\n  useTheme,\n  TextInput,\n} from 'react-native-paper';\n\ntype FolderItemCallback = (\n  i: Folder,\n  isSecondLevel?: boolean,\n) => void;\n\nexport interface FolderItemProps {\n  folder: Folder;\n  enableMove?: boolean;\n  currentFolderEditorName?: string;\n  styles: any;\n  folderNameInputRef?: MutableRefObject<TextInputType | null>;\n  setFolderEditorName?: any;\n  iconColor: string;\n  iconSize: number;\n  onFolderPress: FolderItemCallback;\n  onFolderActionPress?: FolderItemCallback;\n  onRemoveFolder?: FolderItemCallback;\n  onMoveFolder?: FolderItemCallback;\n  onShareFolder?: FolderItemCallback;\n  abortEditFolder?: FolderItemCallback;\n  width: number;\n  isSecondLevel?: boolean;\n  children?: React.ReactNode;\n  isOpen?: boolean;\n  isLoadingContent?: boolean;\n}\n\nconst FolderItem = (props: FolderItemProps) => {\n  const {\n    folder,\n    width,\n    onFolderPress,\n    onRemoveFolder,\n    onFolderActionPress,\n    isSecondLevel,\n    children,\n    isOpen,\n    isLoadingContent,\n    currentFolderEditorName,\n    folderNameInputRef,\n    setFolderEditorName,\n    abortEditFolder,\n    onShareFolder,\n  } = props;\n  const theme = useTheme();\n\n  let folderIcon = folder.isOpen ? 'folder-open' : 'folder-outline';\n  let folderAccesory = folder.isInfoOpen\n    ? 'checkbox-outline'\n    : 'pencil-outline';\n  let isDefaultFolder = false;\n  if (defaultFolders.includes(folder.id)) {\n    isDefaultFolder = true;\n    folderAccesory = 'star';\n  }\n  if (folder.mnemonic) {\n    folderIcon = folder.isOpen\n      ? 'folder-network'\n      : 'folder-network-outline';\n  }\n  if (folder.isInfoOpen) {\n    folderIcon = 'arrow-left-circle';\n  }\n  const touchableStyle = {\n    pointerEvents: 'auto',\n    padding: isOpen ? 5 : 0,\n    // paddingTop:controlIconPaddingTop,\n  } as any;\n\n  useMemo(() => {\n    if (folder.isInfoOpen) setFolderEditorName(folder.title);\n  }, [folder.isInfoOpen]);\n\n  const remove = async () => {\n    if (onRemoveFolder) await onRemoveFolder(folder);\n  };\n  const edit = async () => {\n    if (isDefaultFolder) return;\n\n    if (onFolderActionPress)\n      await onFolderActionPress(folder, isSecondLevel);\n    setTimeout(() => {\n      folderNameInputRef?.current?.focus();\n    }, 300);\n  };\n\n  const leftItem = (props: any) =>\n    isLoadingContent ? (\n      <ActivityIndicator style={{paddingLeft: 20}} />\n    ) : (\n      <TouchableOpacity\n        onPress={() => onFolderPress(folder, isSecondLevel)}\n        style={{pointerEvents: 'auto', paddingTop: 5} as any}>\n        <List.Icon {...props} icon={folderIcon} />\n      </TouchableOpacity>\n    );\n\n  const rightItem = (props: any) => (\n    <View style={{flexDirection: 'row', flexWrap: 'wrap'}}>\n      {!folder.isInfoOpen && (\n        <TouchableOpacity onPress={edit} style={touchableStyle}>\n          <List.Icon {...props} icon={folderAccesory} />\n        </TouchableOpacity>\n      )}\n      {!isDefaultFolder && !folder.isInfoOpen ? (\n        <>\n          <TouchableOpacity onPress={remove} style={touchableStyle}>\n            <List.Icon {...props} icon={'delete'} />\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => onShareFolder && onShareFolder(folder)}\n            style={touchableStyle}>\n            <List.Icon {...props} icon={'share'} />\n          </TouchableOpacity>\n        </>\n      ) : null}\n    </View>\n  );\n  return (\n    <>\n      <Divider />\n      {!children ? (\n        <List.Item\n          style={{width}}\n          title={({ellipsizeMode, color: titleColor, fontSize}) => (\n            <>\n              {folder.isInfoOpen ? (\n                <TextInput\n                  mode=\"outlined\"\n                  style={\n                    {\n                      height: 50,\n                      width: '100%',\n                      pointerEvents: 'auto',\n                    } as any\n                  }\n                  placeholder={'new folder name'}\n                  theme={theme}\n                  value={currentFolderEditorName}\n                  ref={folderNameInputRef}\n                  onChangeText={setFolderEditorName}\n                  left={\n                    <TextInput.Icon\n                      onPress={() =>\n                        abortEditFolder && abortEditFolder(folder)\n                      }\n                      icon={folderIcon}\n                    />\n                  }\n                  right={\n                    <TextInput.Icon\n                      onPress={edit}\n                      icon={folderAccesory}\n                    />\n                  }\n                  autoFocus\n                  id=\"test-input\"\n                />\n              ) : (\n                <TouchableOpacity\n                  style={{pointerEvents: 'auto'} as any}\n                  onPress={() =>\n                    onFolderPress(folder, isSecondLevel)\n                  }>\n                  <View style={{}}>\n                    <Text\n                      ellipsizeMode={ellipsizeMode}\n                      style={{color: titleColor, fontSize}}\n                      numberOfLines={2}>\n                      {folder.title}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              )}\n            </>\n          )}\n          left={!folder.isInfoOpen ? leftItem : () => <></>}\n          right={rightItem}\n          theme={theme}\n        />\n      ) : (\n        <List.Accordion\n          expanded={isOpen}\n          title={folder.title}\n          style={{width}}\n          left={leftItem}\n          right={() => <></>}\n          onPress={() => onFolderPress(folder, isSecondLevel)}\n          theme={theme}>\n          {children}\n        </List.Accordion>\n      )}\n      {/* <Divider/> */}\n    </>\n  );\n};\n\nexport default FolderItem;\n","import React, {useState} from 'react';\n\nimport {Media} from '../../../types';\n\nimport {\n  View,\n  StyleSheet,\n  ImageBackground,\n  TouchableOpacity,\n} from 'react-native';\n\nimport {useAppSelector} from '../../../store/hooks';\nexport interface MediaItemProps {\n  i: Media;\n  itemLoading: string | boolean;\n  enableMove: boolean;\n  width: number;\n  onMediaPress: (media: Media) => void;\n  onRemoveMediaPress: (media: Media) => void;\n  onDownloadMediaPress: (mediaId: string) => void;\n  onCopyLinkPress: (mediaId: string) => void;\n  onEditMediaPress: (mediaId: string) => void;\n  isOpen: boolean;\n  isPlaying: boolean;\n}\nimport {\n  List,\n  ActivityIndicator,\n  useTheme,\n  Divider,\n  Text,\n  Chip,\n} from 'react-native-paper';\n\nimport {useQuery} from 'react-query';\n\nimport {getFileReaderOpfs} from '../../../api/media';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n  customTitle: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  additionalPadding: {\n    paddingTop: 8,\n  },\n  image: {\n    width: '100%',\n    height: 'auto',\n    opacity: 0.6,\n    position: 'absolute',\n    resizeMode: 'cover',\n    zIndex: -1,\n    flex: 1,\n  },\n});\n\nconst MediaItem = (props: MediaItemProps) => {\n  const {\n    i,\n    itemLoading,\n    width,\n    onMediaPress,\n    onRemoveMediaPress,\n    onDownloadMediaPress,\n    onCopyLinkPress,\n    onEditMediaPress,\n    isPlaying,\n  } = props;\n  const theme = useTheme();\n  // const width = \"100%\"\n  const thisItemIsLoading = i.id === itemLoading;\n\n  const onActionPress = () => onEditMediaPress(i.id);\n  const onCellPress = () => onMediaPress(i);\n  const onRemove = async () => onRemoveMediaPress(i);\n  const onCopyLink = async () => onCopyLinkPress(i.id);\n  const isDownloading = useAppSelector(\n    state => state.fs.downloadingProgress[i.id],\n  );\n  const isDownloadedQuery = useQuery(\n    ['isDownloaded', i.id, i.isDownloaded],\n    async () => {\n      try {\n        const file = await getFileReaderOpfs(i);\n        console.info('hasfile', file);\n        if (file) {\n          return true;\n        } else {\n          return false;\n        }\n      } catch (err) {\n        return false;\n      }\n    },\n    {\n      refetchOnMount: false,\n      refetchOnReconnect: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n    },\n  );\n  const isDownloaded = isDownloadedQuery?.data;\n  const onDownloadToggle = async () =>\n    isDownloaded ? null : onDownloadMediaPress(i.id);\n  const imageSource = {uri: i.thumbnail, cache: 'force-cache'};\n  let iconName = isPlaying\n    ? 'stop-circle-outline'\n    : 'play-circle-outline';\n\n  let offlineTitle = isDownloaded\n    ? 'Remove From Device'\n    : 'Download To Device';\n\n  let offlineIconName =\n    isDownloadedQuery.isFetched && isDownloaded\n      ? 'floppy'\n      : 'cloud-download-outline';\n\n  if (isDownloading) {\n    offlineTitle = 'Downloading / Cancel';\n  }\n  let extractorIcon = i.extractor.toLowerCase();\n  if (extractorIcon === 'wt') extractorIcon = 'folder-network';\n  if (extractorIcon === 'local') extractorIcon = 'file';\n  const height = 100;\n  const cloudIcon =\n    isDownloading !== undefined\n      ? () => <ActivityIndicator animating={true} theme={theme} />\n      : offlineIconName;\n  const controlIconPaddingTop = 30;\n  const touchableStyle = {\n    pointerEvents: 'auto',\n    paddingTop: controlIconPaddingTop,\n  } as any;\n\n  return (\n    <View style={{width, height}}>\n      <List.Item\n        style={{height, zIndex: 2, position: 'absolute', width}}\n        left={props => (\n          <TouchableOpacity\n            onPress={onCellPress}\n            style={touchableStyle}>\n            <List.Icon\n              {...props}\n              icon={\n                thisItemIsLoading\n                  ? () => (\n                      <ActivityIndicator\n                        animating={true}\n                        theme={theme}\n                      />\n                    )\n                  : iconName\n              }\n            />\n          </TouchableOpacity>\n        )}\n        right={props => (\n          <>\n            {/* <TouchableOpacity onPress={onActionPress} style={touchableStyle}>\n          <List.Icon {...props} icon=\"star-outline\" />\n        </TouchableOpacity> */}\n            <TouchableOpacity\n              onPress={onDownloadToggle}\n              style={touchableStyle}>\n              <List.Icon {...props} icon={cloudIcon} />\n            </TouchableOpacity>\n            {/* <TouchableOpacity onPress={onCopyLink} style={touchableStyle}>\n          <List.Icon {...props} icon=\"share\" />\n        </TouchableOpacity> */}\n            <TouchableOpacity\n              onPress={onRemove}\n              style={touchableStyle}>\n              <List.Icon {...props} icon=\"delete\" />\n            </TouchableOpacity>\n          </>\n        )}\n        title={({ellipsizeMode, color: titleColor, fontSize}) => (\n          <View\n            style={[\n              styles.container,\n              styles.row,\n              styles.customTitle,\n            ]}>\n            <Text\n              ellipsizeMode={ellipsizeMode}\n              style={{color: titleColor, fontSize}}\n              numberOfLines={2}>\n              {i.title}\n            </Text>\n          </View>\n        )}\n        // onPress={()=>{}}\n        description={({\n          ellipsizeMode,\n          color: descriptionColor,\n          fontSize,\n        }) => (\n          <View style={[styles.container, styles.column]}>\n            <Text\n              numberOfLines={1}\n              ellipsizeMode={ellipsizeMode}\n              style={{color: descriptionColor, fontSize}}>\n              {i.description}\n            </Text>\n            <View\n              style={[\n                styles.container,\n                styles.row,\n                styles.additionalPadding,\n              ]}>\n              {!isDownloaded &&\n                isDownloading &&\n                isDownloading * 100 > 1 && (\n                  <Chip\n                    icon={extractorIcon}\n                    onPress={() => {}}\n                    style={{height: 30}}>\n                    Downloading{' '}\n                    {parseInt((isDownloading * 100).toString(), 10)}%\n                  </Chip>\n                )}\n            </View>\n          </View>\n        )}\n      />\n      {i.thumbnail ? (\n        <ImageBackground\n          source={{uri: i.thumbnail, cache: 'force-cache'}}\n          resizeMethod=\"resize\"\n          resizeMode=\"cover\"\n          style={{\n            ...styles.image,\n            height,\n            width,\n          }}\n          imageStyle={{...styles.image, height, width}}\n        />\n      ) : null}\n      <Divider />\n    </View>\n  );\n};\n\nexport default MediaItem;\n","import React from 'react';\nimport {Divider, IconButton, List} from 'react-native-paper';\nimport {FolderType, Media} from '../../../types';\nimport {\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\nimport {ProjectsStackedParams} from '../../../types/nav';\nfunction ProjectItem({\n  item,\n  folderType,\n  onRemoveFolder,\n}: {\n  item: Media;\n  folderType: FolderType;\n  onRemoveFolder: (item: {id: string}) => void;\n}) {\n  const navigation =\n    useNavigation<NavigationProp<ProjectsStackedParams>>();\n  const projectType =\n    folderType === FolderType.encoder\n      ? 'EncoderProject'\n      : 'EditorProject';\n  const projectIcon =\n    folderType === FolderType.editor ? 'film' : 'matrix';\n  return (\n    <>\n      <Divider />\n      <List.Item\n        style={{padding: 19}}\n        title={item.title}\n        onPress={() => {\n          navigation.navigate({\n            name: projectType,\n            params: {\n              projectId: item.id,\n              mnemonic: item.mnemonic,\n              parentFolderId: item.folderId,\n            },\n          });\n        }}\n        left={() => <List.Icon icon={projectIcon} />}\n        right={() => (\n          <IconButton\n            icon={'delete'}\n            onPress={() => onRemoveFolder(item)}\n          />\n        )}\n      />\n    </>\n  );\n}\n\nexport default ProjectItem;\n","import {TextStyle, ViewStyle} from 'react-native';\n\nexport const styles = {\n  container: {\n    flex: 1,\n    paddingTop: 0,\n    marginTop: 0,\n  } as ViewStyle,\n  item: {\n    paddingTop: 15,\n    paddingLeft: 5,\n    fontSize: 12,\n    height: 160,\n    color: 'black',\n    width: 80,\n  } as ViewStyle,\n  tinyLogo: {\n    marginTop: 2,\n    width: 22,\n    height: 22,\n  } as ViewStyle,\n  scroll: {\n    height: 65,\n    display: 'flex',\n    position: 'relative',\n    backgroundColor: 'black',\n    width: '100%',\n    marginTop: 0,\n  } as ViewStyle,\n  icon: {\n    paddingLeft: 10,\n  } as TextStyle,\n};\n","import React, {memo} from 'react';\n\nimport {View} from 'react-native';\n\nimport MediaLibrary from './medialibrary';\n\nconst HomeView = () => {\n  return (\n    <View\n      style={{\n        height: '100%',\n        width: '100%',\n      }}>\n      <View>\n        <MediaLibrary />\n      </View>\n    </View>\n  );\n};\n\nexport default memo(HomeView);\n","import React, {useRef} from 'react';\nimport {\n  Image,\n  ImageBackground,\n  Platform,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport {\n  ActivityIndicator,\n  Banner,\n  Divider,\n  IconButton,\n  useTheme,\n} from 'react-native-paper';\nimport {useMutation, useQuery} from 'react-query';\nimport {Media} from '../../types';\nimport {getFileOpfs, getVideoWT} from '../../api/media';\nimport {useIsFocused} from '@react-navigation/native';\nimport {\n  MediaActionType,\n  loaded,\n  togglePause,\n} from '../../store/slices/media';\nimport {useAppDispatch} from '../../store/hooks';\nimport {ResizeMode, Video} from 'expo-av';\nimport {getById} from '../../api';\nimport {useMediaPlayer} from '../../hooks/useMediaPlayer';\nimport {UnifiedStackParam} from '../../types/nav';\n\nexport default function MediaBanner({\n  height,\n  mediaPlayer,\n}: {\n  mediaPlayer: ReturnType<typeof useMediaPlayer>;\n  height: number;\n}) {\n  const theme = useTheme();\n  const dispatch = useAppDispatch();\n  const {currentMediaId, currentMedia} = mediaPlayer;\n  const fileType = currentMedia?.fileType;\n  const isImage = fileType?.search('image') > -1;\n  const {width} = useWindowDimensions();\n  const focused = useIsFocused();\n  const mediaRes = currentMedia as Media;\n  const updateMediaTime = useMutation(\n    async (currentTime: number) => {\n      if (mediaRes) {\n        // mediaRes.currentPosition = currentTime;\n        // await writeItem(mediaRes)\n        // await mediaData.refetch()\n      }\n    },\n    {retry: false},\n  );\n\n  const mediaQuery = useQuery(\n    'wtMedia_' + currentMediaId,\n    async () => {\n      let file: string | undefined;\n\n      try {\n        file = await getFileOpfs(mediaRes);\n      } catch (err) {}\n\n      if (!file) file = (await getVideoWT(mediaRes)).stream;\n\n      dispatch(\n        loaded({\n          actionType: MediaActionType.loaded,\n          mediaId: currentMediaId!,\n        }),\n      );\n      return file;\n    },\n    {\n      enabled: focused ? true : false,\n      refetchOnMount: true,\n    },\n  );\n  const mediaLoading = mediaQuery.isLoading;\n  const mediaSrc = mediaQuery?.data;\n  const currentPosition = mediaRes?.currentPosition || 0;\n  const isMobile = width < 700;\n  const bannerHeight = isMobile ? height / 4 : height / 2;\n  const videoRef = useRef();\n  return (\n    <>\n      <Banner\n        visible={currentMediaId ? true : false}\n        theme={theme}\n        style={{\n          backgroundColor: 'black',\n          padding: 0,\n          margin: 0,\n          width,\n          height: bannerHeight,\n          position: 'static',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        }}\n        contentStyle={{\n          width: isMobile ? width : '100%',\n          height: bannerHeight,\n          padding: 0,\n          margin: 0,\n        }}>\n        <View\n          style={{\n            width: isMobile ? width : '100%',\n            height: bannerHeight - 40,\n            position: 'relative',\n          }}>\n          {isImage && currentMediaId && mediaSrc && (\n            <ImageBackground\n              style={{height: bannerHeight}}\n              resizeMethod=\"resize\"\n              // imageStyle={{width: '100%', height: '100%'}}\n              source={{uri: mediaSrc}}\n            />\n          )}\n          {!isImage && currentMediaId && mediaSrc ? (\n            Platform.OS === 'web' ? (\n              <video\n                // autoPlay={!media.isMediaPaused ? true : false}\n                controls={true}\n                style={{\n                  width: '100%',\n                  height: '100%',\n                  objectFit: 'contain',\n                }}\n                onPlaying={e => {\n                  const {currentTime} = e.nativeEvent\n                    .target as any as {currentTime: number};\n                  updateMediaTime.mutateAsync(currentTime);\n                  dispatch(\n                    togglePause({\n                      pause: false,\n                      actionType: MediaActionType.pause,\n                    }),\n                  );\n                }}\n                onPause={e => {\n                  dispatch(\n                    togglePause({\n                      pause: true,\n                      actionType: MediaActionType.pause,\n                    }),\n                  );\n                }}\n                onEnded={p => {\n                  console.info('ended', p);\n                }}\n                onTimeUpdate={e => {\n                  const {currentTime} = e.nativeEvent\n                    .target as any as {currentTime: number};\n                  // console.info('time', currentTime)\n                  const minimumTimeDiff = 5;\n                  if (\n                    currentTime > minimumTimeDiff &&\n                    currentTime - currentPosition > minimumTimeDiff &&\n                    !updateMediaTime.isLoading\n                  ) {\n                    updateMediaTime.mutateAsync(currentTime);\n                  }\n                }}\n                onResize={() => {\n                  console.info('resize');\n                }}\n                onLoadedData={e => {\n                  if (!mediaPlayer.isMediaPaused)\n                    e.nativeEvent.target.play();\n                }}\n                ref={el => {\n                  // console.info(\"onmount\", el)\n                  if (\n                    el &&\n                    el.paused &&\n                    el.currentTime !== currentPosition\n                  ) {\n                    // el.currentTime = currentPosition\n                  }\n                }}\n                src={mediaSrc}>\n                <track\n                  label=\"language one\"\n                  kind=\"subtitles\"\n                  srcLang=\"en\"\n                  default\n                />\n              </video>\n            ) : (\n              <Video\n                source={{uri: mediaSrc}}\n                ref={videoRef}\n                shouldPlay={true}\n                style={{\n                  width: '100%',\n                  height: '100%',\n                  position: 'absolute',\n                  left: -10,\n                  top: 0,\n                  padding: 0,\n                  margin: 0,\n                }}\n                volume={1}\n                resizeMode={ResizeMode.CONTAIN}\n                useNativeControls={true}\n                onPlaybackStatusUpdate={async status => {\n                  if (status.isLoaded) {\n                    // console.info('is loaded');\n                    if (status.isBuffering && !status.isPlaying) {\n                      // console.info('is buffering and paused');\n                    }\n                  }\n                }}\n              />\n            )\n          ) : null}\n          {mediaLoading ? (\n            <ActivityIndicator\n              style={{position: 'relative', flexBasis: 'auto'}}\n              size={72}\n            />\n          ) : null}\n          <IconButton\n            style={{\n              position: 'absolute',\n              cursor: 'pointer',\n              right: Platform.select({native: 10, web: 0}),\n              top: Platform.select({native: -20, web: 0}),\n              pointerEvents: 'auto',\n              zIndex: 100000,\n            }}\n            icon={'close'}\n            mode=\"outlined\"\n            size={25}\n            onPress={() => mediaPlayer.onMediaPress('')}\n          />\n        </View>\n      </Banner>\n      <Divider />\n    </>\n  );\n}\n","import React, {memo} from 'react';\nimport {useMedia} from '../../hooks/useMedia';\nimport FolderLibrary from '../folder/folderlibrary';\nimport {\n  getFolderContent,\n  getFoldersByType,\n  writeItem,\n} from '../../api';\n\nconst MediaLibrary = () => {\n  const dataHook = useMedia(\n    getFoldersByType,\n    getFolderContent,\n    writeItem,\n  );\n\n  return <FolderLibrary dataHook={dataHook} />;\n};\n\nexport default memo(MediaLibrary);\n","import React from 'react';\n\nimport {createMaterialBottomTabNavigator} from 'react-native-paper/react-navigation';\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport {SafeAreaInsetsContext} from 'react-native-safe-area-context';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\nimport CustomNavigationBar from './nav/appnav';\n\nimport {createFileStack} from '../navigators/filestack';\nimport {Platform, useWindowDimensions} from 'react-native';\nimport DrawerItems from './nav/drawer';\nimport {createChatStack} from '../navigators/chatstack';\nimport {createSettings} from '../navigators/settings';\nimport {createEncoder} from '../navigators/encoder';\nimport {createEditor} from '../navigators/editor';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {setCurrentPage} from '../store/slices/ui';\nimport {useKeyboardDispatcher} from '../hooks/useKeyboardListener';\nimport {\n  ExtendedNavState,\n  StackRouteName,\n  UnifiedStackParam,\n  RootStackName,\n  RootStackRouteNames,\n} from '../types/nav';\n\nconst DrawerNav = createDrawerNavigator();\n\nconst Tab = createMaterialBottomTabNavigator();\n\nconst RootStack = createNativeStackNavigator();\n\nconst FileStack = createFileStack();\n\nconst ChatStackScreen = createChatStack();\n\nconst SettingsStack = createSettings();\n\nconst EncoderStack = createEncoder();\n\nconst EditorStack = createEditor();\n\nconst TabNav = () => {\n  const dim = useWindowDimensions();\n  const dispatch = useAppDispatch();\n  const isNavHidden = useAppSelector(\n    state => state.ui.isTabBarHidden,\n  );\n  useKeyboardDispatcher();\n  const screenStateListener = (navState: ExtendedNavState) => {\n    try {\n      const currentTab =\n        navState?.data?.state?.routes[\n          navState?.data.state?.index || 0\n        ] || {};\n      const currentNavPage =\n        currentTab?.state?.routes[currentTab?.state?.index || 0];\n      const parentName = currentTab.name as RootStackRouteNames;\n      const currentPage = currentNavPage?.name as StackRouteName;\n      const params = currentNavPage?.params as UnifiedStackParam;\n      dispatch(setCurrentPage({currentPage, params, parentName}));\n    } catch (err) {}\n  };\n  if (dim.width > 700 && Platform.OS === 'web') {\n    return (\n      <SafeAreaInsetsContext.Consumer>\n        {insets => {\n          const {left, right} = insets || {left: 0, right: 0};\n          const collapsedDrawerWidth = 80 + Math.max(left, right);\n          const nonCollasedWidth = 180;\n          const collapsed = true;\n          return (\n            <DrawerNav.Navigator\n              screenOptions={{\n                drawerStyle: {\n                  width: collapsed\n                    ? collapsedDrawerWidth\n                    : nonCollasedWidth,\n                },\n                drawerPosition: 'left',\n                drawerType: 'permanent',\n              }}\n              detachInactiveScreens={true}\n              defaultStatus=\"open\"\n              screenListeners={{\n                state: state =>\n                  screenStateListener(state as ExtendedNavState),\n              }}\n              drawerContent={props => <DrawerItems {...props} />}>\n              <DrawerNav.Screen\n                name=\"FilesTab\"\n                component={FileStack}\n                options={{\n                  headerShown: false,\n                  drawerIcon: ({color, size}) => (\n                    <Ionicons\n                      name=\"folder-outline\"\n                      color={color}\n                      size={24}\n                    />\n                  ),\n                  title: 'Files',\n                }}\n              />\n              <DrawerNav.Screen\n                name=\"ContactsTab\"\n                component={ChatStackScreen}\n                options={{\n                  headerShown: false,\n                  title: 'Contacts',\n                }}\n              />\n              <DrawerNav.Screen\n                name=\"EncoderTab\"\n                component={EncoderStack}\n                options={{\n                  headerShown: false,\n                  title: 'Encoder',\n                }}\n              />\n              <DrawerNav.Screen\n                name=\"EditorTab\"\n                component={EditorStack}\n                options={{\n                  headerShown: false,\n                  title: 'Editor',\n                }}\n              />\n              <DrawerNav.Screen\n                name=\"SettingsTab\"\n                component={SettingsStack}\n                options={{\n                  headerShown: false,\n                  drawerIcon: ({color, size}) => (\n                    <Ionicons\n                      name=\"people-outline\"\n                      color={color}\n                      size={24}\n                    />\n                  ),\n                  title: 'Contacts',\n                }}\n              />\n            </DrawerNav.Navigator>\n          );\n        }}\n      </SafeAreaInsetsContext.Consumer>\n    );\n  }\n  return (\n    <Tab.Navigator\n      barStyle={{display: isNavHidden ? 'none' : 'flex'}}\n      screenListeners={{\n        state: state =>\n          screenStateListener(state as ExtendedNavState),\n      }}>\n      <Tab.Screen\n        name=\"FilesTab\"\n        options={{\n          tabBarLabel: 'Files',\n          tabBarIcon: 'folder',\n        }}\n        component={FileStack}\n      />\n      <Tab.Screen\n        name=\"ContactsTab\"\n        component={ChatStackScreen}\n        options={{\n          tabBarLabel: 'Contacts',\n          tabBarIcon: 'contacts',\n        }}\n      />\n      <Tab.Screen\n        name=\"EditorTab\"\n        component={EditorStack}\n        options={{\n          tabBarLabel: 'Editor',\n          tabBarIcon: 'scissors-cutting',\n        }}\n      />\n      <Tab.Screen\n        name=\"SettingsTab\"\n        options={{\n          tabBarLabel: 'Settings',\n          tabBarIcon: 'cog',\n        }}\n        component={SettingsStack}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst RootStackNav = () => (\n  <RootStack.Navigator\n    screenOptions={{\n      header: props => <CustomNavigationBar {...props} />,\n    }}>\n    <RootStack.Screen\n      name={RootStackName}\n      component={TabNav}\n      options={{\n        orientation: 'portrait',\n        freezeOnBlur: true,\n      }}\n    />\n  </RootStack.Navigator>\n);\n\nexport default RootStackNav;\n","import React, {useContext, useState, useMemo, useEffect} from 'react';\nimport {\n  Appbar,\n  useTheme,\n  TextInput,\n  Searchbar,\n} from 'react-native-paper';\n\nimport {Platform} from 'react-native';\nimport {useWindowDimensions} from 'react-native';\nimport {useAppSelector} from '../../store/hooks';\nimport uuid from 'react-native-uuid';\n\nimport {UserDataState} from '../../ctx';\nimport {\n  CurrentUserData,\n  Folder,\n  FolderType,\n  Media,\n} from '../../types';\nimport {useMutation, useQuery, useQueryClient} from 'react-query';\nimport {\n  encoderProjectTypes,\n  extractMedia,\n  getUserData,\n  writeItem,\n} from '../../api';\n\nimport {FolderParams} from '../../types/nav';\n\nimport {NativeStackHeaderProps} from '@react-navigation/native-stack';\nimport {BannerContainer} from './components/bannercontainer';\nimport {Actions} from './components/actions';\n\nimport {\n  Audio,\n  InterruptionModeAndroid,\n  InterruptionModeIOS,\n} from 'expo-av';\nimport {\n  NavInput,\n  addFolderPlaceholder,\n  chatPlacehoder,\n  defaulPlaceHolderText,\n  searchContactsPlaceholderText,\n} from './components/navinput';\nexport default function CustomNavigationBar({\n  options,\n}: NativeStackHeaderProps) {\n  useEffect(() => {\n    const enableAudio = async () => {\n      await Audio.setAudioModeAsync({\n        allowsRecordingIOS: false,\n        interruptionModeIOS: InterruptionModeIOS.DuckOthers,\n        playsInSilentModeIOS: true,\n        staysActiveInBackground: true,\n        interruptionModeAndroid: InterruptionModeAndroid.DuckOthers,\n        shouldDuckAndroid: false,\n      });\n    };\n    enableAudio();\n  }, []);\n  const theme = useTheme();\n  const queryClient = useQueryClient();\n  const [searchValue, setSearch] = useState('');\n  const {width, height} = useWindowDimensions();\n  const mode = useAppSelector(state => state.ui.editingMode);\n  const userState = useContext(UserDataState) as CurrentUserData;\n  const userData = useQuery('UserData', () => getUserData());\n  const userId = userData?.data?.id;\n  const [isLocked, setLocked] = useState(false);\n  const writeItemMutation = useMutation(\n    (item: Media | Folder) => writeItem(item),\n    {retry: true},\n  );\n\n  const params = useAppSelector(state => state.ui.params);\n  const folderType = useAppSelector(state => state.ui.folderType);\n\n  const folderId =\n    (params as FolderParams)?.folderId || params?.parentFolderId;\n\n  const newFolderType = 'new_' + folderType;\n  const isEncoderProject = encoderProjectTypes.includes(folderType);\n\n  const extractLink = async () => {\n    if (\n      searchValue.search('http') === -1 &&\n      searchValue.search('magnet') === -1\n    )\n      return;\n    console.info(searchValue);\n\n    if (isLocked === true) return;\n    setLocked(true);\n    setTimeout(() => {\n      setLocked(false);\n    }, 20000);\n\n    let exData = await extractMedia(searchValue);\n    if (exData && exData.id) {\n      const {id} = exData;\n\n      try {\n        const nd: Media & {isFolder?: boolean} = {\n          ...exData,\n          originalId: id,\n          id: uuid.v4().toString(),\n          folderId: folderId || newFolderType,\n          userId: userState.user.id,\n          date: new Date().valueOf(),\n          isMediaNew: true,\n          isFolder:\n            exData.files && exData.files.length ? true : undefined,\n          files:\n            exData.files &&\n            exData.files.map((i: {name: string; length: number}) => ({\n              name: i.name,\n              size: i.length,\n            })),\n        };\n        console.info('new media', nd);\n        await writeItemMutation.mutateAsync(nd);\n        await queryClient.refetchQueries({\n          queryKey: 'folderContent_' + nd.folderId,\n        });\n        setSearch('');\n      } catch (err) {\n        console.error('extractLink', err);\n      }\n    }\n    setLocked(false);\n  };\n\n  useMemo(() => {\n    extractLink();\n  }, [searchValue]);\n  const showFullSearchBar = width > 700 && Platform.OS !== 'macos';\n\n  let placeholderText = addFolderPlaceholder;\n\n  if (mode === 'party') {\n    placeholderText = chatPlacehoder;\n  }\n  if (mode === 'search') {\n    placeholderText = 'type to search';\n  }\n  return (\n    <>\n      <Appbar.Header theme={theme}>\n        <NavInput\n          options={options}\n          folderId={folderId as string}\n          isLocked={isLocked}\n          searchValue={searchValue}\n          setSearch={setSearch}\n        />\n        <Actions\n          showFullSearchBar={showFullSearchBar}\n          isEncoderProject={isEncoderProject}\n          userId={userId}\n        />\n        {showFullSearchBar ? (\n          <Searchbar\n            loading={isLocked}\n            mode=\"bar\"\n            placeholder={\n              folderType === FolderType.contact\n                ? searchContactsPlaceholderText\n                : defaulPlaceHolderText\n            }\n            theme={theme}\n            style={{height: 40, width: 300}}\n            inputStyle={{paddingBottom: 14}}\n            value={searchValue}\n            onChangeText={setSearch}\n          />\n        ) : null}\n      </Appbar.Header>\n      <BannerContainer\n        userId={userId}\n        isEncoderProject={isEncoderProject}\n        height={height}\n      />\n    </>\n  );\n}\n","import axios from 'axios';\nimport React, {useState} from 'react';\nimport {\n  GestureHandlerRootView,\n  ScrollView,\n} from 'react-native-gesture-handler';\nimport {\n  Portal,\n  Modal,\n  Card,\n  Avatar,\n  Button,\n  List,\n  Divider,\n  Banner,\n  ProgressBar,\n  useTheme,\n} from 'react-native-paper';\nimport {useMutation, useQueryClient} from 'react-query';\nimport {domain, cdndomain} from '../../../db/defaults';\nimport {\n  EditorLayer,\n  EditorProject,\n  EncoderProject,\n  FFMpegOutputType,\n  FFMpegPreset,\n  Folder,\n  FolderType,\n  Media,\n} from '../../../types';\n\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {\n  setEncrypt,\n  setFileUploadProgress,\n  setMediaModalVisible,\n  setShareToWt,\n  setUploadInProgress,\n  setUploadToCloud,\n  startOnboarding,\n} from '../../../store/slices/upload';\nimport {shareFileToWT, writeFileOpfs} from '../../../api/media';\nimport {useNavigation} from '@react-navigation/native';\nimport {niceBytes} from '../../../api/util';\nimport uuid from 'react-native-uuid';\nimport {getById, getFolderContent, writeItem} from '../../../api';\nimport {Platform} from 'react-native';\nimport {AVPlaybackStatusSuccess, Video} from 'expo-av';\nconst preset = FFMpegPreset.superfast;\nconst output = FFMpegOutputType.mp4;\nconst compressionLevel = 20;\n\nexport default function FileUpload(props: any) {\n  //FILE UPLOAD\n  const {\n    userId,\n    folderType,\n    hideMedialModal,\n    folderId,\n    routeName,\n    projectId,\n    isEncoderProject,\n  } = props;\n  const theme = useTheme();\n  const queryClient = useQueryClient();\n  const uploadState = useAppSelector(state => state.upload);\n  const dispatch = useAppDispatch();\n  const nav = useNavigation();\n  const mediaModalVisible = uploadState.modalVisible;\n  const pickerFile = uploadState.file;\n  const pickerFileMeta = uploadState.media;\n  const uploadToCloud = uploadState.uploadToCloud;\n  const shareToWt = uploadState.shareToWT;\n  const encryptionEnabled = uploadState.encryption;\n  const fileUploadProgress = uploadState.fileUploadProgress;\n  const isUploadInProgress = uploadState.isUploadInProgress;\n  const uuidFilename = `${pickerFileMeta?.id}-${pickerFileMeta?.filename}`;\n  const authToken =\n    Platform.OS === 'web' ? localStorage?.getItem('authToken') : '';\n  const writeItemMutation = useMutation(\n    (item: Media | Folder | EditorProject | EditorLayer) =>\n      writeItem(item),\n  );\n  const [videoMeta, setVideoMeta] = useState({});\n\n  const uploadFileMutation = useMutation(\n    () =>\n      axios.request({\n        url: `${domain}api/v1/backend/files/${uuidFilename}?authToken=${authToken}`,\n        method: 'PUT',\n        data: pickerFile,\n        withCredentials: true,\n        onUploadProgress: progress =>\n          dispatch(setFileUploadProgress(progress)),\n      }),\n    {\n      retry(attempts) {\n        if (attempts < 4) return true;\n      },\n    },\n  );\n\n  const writeItemToLocalStoreMutation = useMutation(meta =>\n    writeFileOpfs({...meta, ...videoMeta}, pickerFile!),\n  );\n\n  const writingItem =\n    writeItemMutation.isLoading || uploadFileMutation.isLoading;\n  let peerShared = shareToWt;\n  if (pickerFileMeta?.extractor === 'wt') {\n    peerShared = true;\n  }\n  const confirmFile = async () => {\n    try {\n      const meta: Media = JSON.parse(JSON.stringify(pickerFileMeta!));\n      const {width, height} = videoMeta;\n      const end = videoMeta.duration - 1;\n      console.info('routeName', routeName, 'folderType', folderType);\n      meta.isDownloaded = true;\n      let folder: Folder = await getById(meta.folderId);\n      if (!folder) {\n        folder = (await getById(meta.folderId, folderId)) as Folder;\n      }\n      console.info('project folder', folder, folderId, meta.folderId);\n      if (folder?.mnemonic) {\n        peerShared = true;\n      }\n      if (\n        folderType === FolderType.editor &&\n        routeName !== 'EditorProject'\n      ) {\n        console.info('creating a new editor project from file');\n        const editor: EditorProject = {\n          id: uuid.v4().toString(),\n          title: meta.title,\n          userId,\n          isEditorProject: true,\n          folderType,\n          folderId,\n          orderId: 1,\n          isFolder: false,\n          editor: {\n            length: 1 * 60 * 1000,\n            width,\n            height,\n            preset,\n            output,\n            lastUpdated: new Date().valueOf(),\n            compressionLevel,\n            code: [],\n          },\n          mnemonic: folder?.mnemonic,\n          date: new Date().valueOf(),\n        };\n        await writeItemMutation.mutateAsync(editor);\n        const layer: EditorLayer = {\n          id: uuid.v4().toString(),\n          title: 'Layer 1',\n          folderId: editor.id,\n          userId,\n          isEditorLayer: true,\n          orderId: 1,\n          folderType,\n          isFolder: false,\n          date: new Date().valueOf(),\n          editor: {\n            videoDisabled: false,\n            muted: false,\n          },\n          mnemonic: folder?.mnemonic,\n        };\n        await writeItemMutation.mutateAsync(layer);\n        const comment_layer: EditorLayer = {\n          id: editor.id + '_comments',\n          title: 'Comments',\n          folderId: editor.id,\n          userId,\n          isEditorLayer: true,\n          orderId: 1,\n          folderType,\n          isFolder: false,\n          date: new Date().valueOf(),\n          editor: {\n            videoDisabled: true,\n            muted: true,\n            isCommentLayer: true,\n          },\n          mnemonic: folder?.mnemonic,\n        };\n        await writeItemMutation.mutateAsync(comment_layer);\n        meta.folderId = layer.id;\n        meta.isMediaNew = isEncoderProject;\n        meta.isEncoderProject = isEncoderProject;\n        meta.encoding = {\n          end,\n          width,\n          height,\n          preset,\n          output,\n          compressionLevel,\n        };\n      }\n      if (folderType === FolderType.editor) {\n        (meta as EncoderProject).encoding = {\n          end,\n          width,\n          height,\n          preset,\n          output,\n          compressionLevel,\n        };\n      }\n      console.info('foldertype saveitem', folderType, meta);\n      await writeItemToLocalStoreMutation.mutateAsync(meta);\n      await writeItemMutation.mutateAsync({...meta, ...videoMeta});\n      try {\n        if (peerShared) shareFileToWT(meta.id, meta.folderId);\n      } catch (err) {\n        console.error('share to wt error', err);\n      }\n      if (uploadToCloud) {\n        dispatch(setUploadInProgress(true));\n        dispatch(setMediaModalVisible(false));\n        await uploadFileMutation.mutateAsync();\n        const fileUrl = cdndomain + userId + '/' + uuidFilename;\n        meta.webpage_url = fileUrl;\n        meta.hasCloud = true;\n        meta.extractor = 'cloud';\n        meta.url = fileUrl;\n        console.info('after upload File Mutation', meta);\n      }\n      await queryClient.refetchQueries({\n        queryKey: ['folderContent_' + meta.folderId],\n      });\n      await queryClient.refetchQueries({\n        queryKey: ['folderContent_' + folderId],\n      });\n      await queryClient.refetchQueries({\n        queryKey: ['projectLayers', projectId],\n      });\n      await queryClient.refetchQueries({\n        queryKey: ['encodedMedia', projectId],\n      });\n      dispatch(setUploadInProgress(false));\n      dispatch(setMediaModalVisible(false));\n      if (!folderId) {\n        nav.navigate('Folder', {folderId: meta.folderId});\n      }\n    } catch (err) {\n      console.error('media upload modal error', err);\n    }\n  };\n  return (\n    <>\n      <Banner theme={theme} visible={isUploadInProgress}>\n        <Card.Title\n          titleStyle={{fontSize: 20}}\n          title=\"Uploading file\"\n          subtitle={pickerFileMeta?.filename}\n          left={props => <Avatar.Icon {...props} icon=\"file\" />}\n        />\n        <Divider />\n        <ProgressBar\n          animatedValue={fileUploadProgress?.progress || 0}\n        />\n      </Banner>\n      <Portal>\n        <Modal\n          visible={mediaModalVisible}\n          onDismiss={hideMedialModal}\n          theme={theme}\n          style={{padding: 20}}>\n          <Card>\n            <Card.Title\n              titleStyle={{fontSize: 20}}\n              title=\"Adding a new file\"\n              subtitle=\"Please confirm\"\n              left={props => <Avatar.Icon {...props} icon=\"file\" />}\n            />\n            <Divider />\n            <GestureHandlerRootView style={{height: '70%'}}>\n              <ScrollView>\n                <Card.Content>\n                  <List.Section>\n                    <List.Item\n                      title={'Filename'}\n                      description={pickerFileMeta?.filename}\n                    />\n                    <List.Item\n                      title={'Format'}\n                      description={pickerFileMeta?.type}\n                    />\n                    <List.Item\n                      title={'Duration'}\n                      description={videoMeta?.duration}\n                    />\n                    <List.Item\n                      title={'Width'}\n                      description={videoMeta?.width}\n                    />\n                    <List.Item\n                      title={'Height'}\n                      description={videoMeta?.height}\n                    />\n                    <List.Item\n                      title={'Size'}\n                      description={niceBytes(\n                        pickerFileMeta?.size?.toString(),\n                      )}\n                    />\n                    <List.Item\n                      title={'FolderId'}\n                      description={pickerFileMeta?.folderId}\n                    />\n                    {pickerFile && Platform.OS === 'web' ? (\n                      <video\n                        style={{display: 'none'}}\n                        src={URL.createObjectURL(pickerFile)}\n                        onLoadedMetadata={e => {\n                          // console.info(\"metaLoaded\", e.nativeEvent.target, e.nativeEvent.target.videoWidth, e.nativeEvent.target.videoHeight, e.nativeEvent.target.duration)\n                          // window.video1 = e.nativeEvent.target\n                          setVideoMeta({\n                            width: e.nativeEvent.target.videoWidth,\n                            height: e.nativeEvent.target.videoHeight,\n                            duration: e.nativeEvent.target.duration,\n                          });\n                        }}\n                      />\n                    ) : (\n                      <Video\n                        // style={{display: 'none'}}\n                        source={{uri: pickerFileMeta?.url as string}}\n                        onLoad={e => {\n                          e;\n                        }}\n                        onReadyForDisplay={e => {\n                          console.info('metaLoaded', e);\n                          // window.video1 = e.nativeEvent.target\n                          setVideoMeta({\n                            width: e.naturalSize.width,\n                            height: e.naturalSize.height,\n                            duration:\n                              (e.status as AVPlaybackStatusSuccess)\n                                .durationMillis / 1000,\n                          });\n                        }}\n                      />\n                    )}\n                    {/* <List.Item \n                  onPress={()=>dispatch(setShareToWt(!shareToWt))}\n                  title={\"Share To WebTorrent\"} \n                  right={(props)=><Switch theme={theme} value={peerShared || shareToWt}/>\n                } /> */}\n                    {/* <List.Item\n                  onPress={()=>dispatch(setUploadToCloud(!uploadToCloud))} \n                  title={\"Upload To Cloud\"} \n                  right={(props)=><Switch theme={theme} value={uploadToCloud}/>} \n                /> */}\n                    {/* <List.Item\n                  onPress={()=>dispatch(setEncrypt(!encryptionEnabled))} \n                  title={\"Encrypt\"} \n                  right={(props)=><Switch theme={theme} value={encryptionEnabled}/>} \n                /> */}\n                  </List.Section>\n                </Card.Content>\n              </ScrollView>\n            </GestureHandlerRootView>\n            <Divider />\n            <Card.Actions style={{height: 'auto'}}>\n              <Button\n                disabled={writingItem}\n                onPress={hideMedialModal}>\n                Cancel\n              </Button>\n              <Button\n                loading={writeItemMutation.isLoading}\n                onPress={confirmFile}>\n                Confirm\n              </Button>\n            </Card.Actions>\n          </Card>\n        </Modal>\n      </Portal>\n    </>\n  );\n}\n","import uuid from 'react-native-uuid';\nimport React from 'react';\nimport {Appbar, Tooltip} from 'react-native-paper';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {startOnboarding} from '../../../store/slices/upload';\nimport {FolderType} from '../../../types';\nimport {FolderParams, ProjectParams} from '../../../types/nav';\nimport EditorToolBar from '../../editor/editortoolbar';\nimport {DocumentPicker, writeItem} from '../../../api';\nimport {setEditingMode} from '../../../store/slices/ui';\n\nexport function Actions({\n  showFullSearchBar,\n  isEncoderProject,\n  userId,\n}: {\n  showFullSearchBar: boolean;\n  isEncoderProject: boolean;\n  userId?: string;\n}) {\n  const dispatch = useAppDispatch();\n  const params = useAppSelector(state => state.ui.params);\n  const folderType = useAppSelector(state => state.ui.folderType);\n  const routeName = useAppSelector(state => state.ui.currentPage);\n  const projectId = (params as ProjectParams)?.projectId;\n  const folderId = (params as FolderParams)?.folderId;\n  const isEditing =\n    useAppSelector(state => state.ui.editingMode) !== undefined;\n  console.info('isEditing', isEditing);\n  let addFileEnabled = [\n    FolderType.media,\n    FolderType.editor,\n    FolderType.encoder,\n  ].includes(folderType);\n\n  let addFolderEnabled = folderType !== FolderType.settings;\n  const showScaleControls = routeName === 'EditorProject';\n\n  const newFolderType = 'new_' + folderType;\n\n  if (showScaleControls) {\n    addFileEnabled = false;\n    addFolderEnabled = false;\n  }\n\n  const onClickFile = async () => {\n    const pickerResult = await DocumentPicker.pickSingle({\n      presentationStyle: 'fullScreen',\n    });\n    console.info('pickerResult', pickerResult);\n    // setMediaModalVisible(true)\n    if (!pickerResult) return;\n    const url = pickerResult.uri;\n    let fId = folderId || newFolderType;\n    console.info('isEncoderProject', isEncoderProject);\n    const nd: Media = {\n      id: uuid.v4().toString(),\n      url,\n      title: pickerResult.name,\n      originalId: pickerResult.name,\n      filename: pickerResult.name,\n      fileType: pickerResult.type,\n      folderId: fId,\n      userId,\n      date: new Date().valueOf(),\n      isMediaNew: !isEncoderProject,\n      isEncoderProject,\n      type: pickerResult.file.type,\n      size: pickerResult.file.size,\n      extractor: 'local',\n    };\n    dispatch(startOnboarding({file: pickerResult.file, media: nd}));\n    // setPickerFile(pickerResult.file)\n    // setPickerFileMeta(nd)\n  };\n\n  const onClickFolder = () => {\n    dispatch(setEditingMode('folder'));\n  };\n\n  const onClickSearch = () => {\n    dispatch(setEditingMode('search'));\n  };\n\n  const onClickContact = () => {\n    dispatch(setEditingMode('party'));\n  };\n\n  const onClickDatabase = () => {\n    dispatch(setEditingMode('database'));\n  };\n\n  return (\n    <>\n      {routeName === 'Databases' ? (\n        <Appbar.Action\n          icon={'database-plus'}\n          onPress={onClickDatabase}\n        />\n      ) : null}\n      {addFolderEnabled && !isEditing ? (\n        <Tooltip title=\"Create a folder\">\n          <Appbar.Action\n            icon=\"folder-plus\"\n            onPress={() => onClickFolder()}\n          />\n        </Tooltip>\n      ) : null}\n      {showScaleControls && (\n        <EditorToolBar projectId={projectId} routeParams={params} />\n      )}\n      {!isEditing && folderType === 'contact' ? (\n        <Tooltip title=\"Create a chat\">\n          <Appbar.Action\n            icon=\"chat-plus\"\n            onPress={() => onClickContact()}\n          />\n        </Tooltip>\n      ) : null}\n      {addFileEnabled && !isEditing ? (\n        <Tooltip title=\"Select a file\">\n          <Appbar.Action\n            icon=\"file-plus\"\n            onPress={() => onClickFile()}\n          />\n        </Tooltip>\n      ) : null}\n      {!showFullSearchBar && !isEditing ? (\n        <Appbar.Action\n          icon=\"magnify\"\n          onPress={() => onClickSearch()}\n        />\n      ) : null}\n    </>\n  );\n}\n","import React from 'react';\nimport {Appbar} from 'react-native-paper';\nimport {\n  FolderParams,\n  ProjectParams,\n  RootScreens,\n  RootStackName,\n  RootStackRouteNames,\n  StackRouteName,\n  UnifiedStackParams,\n} from '../../../types/nav';\nimport {useAppSelector} from '../../../store/hooks';\nimport {Folder} from '../../../types';\nimport {\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\n\nexport function BackButton({folder}: {folder: Folder | undefined}) {\n  const navigation =\n    useNavigation<NavigationProp<UnifiedStackParams>>();\n  const params = useAppSelector(state => state.ui.params);\n  const parentName = useAppSelector(state => state.ui.parentName);\n  const folderId = (params as FolderParams)?.folderId;\n  const parentFolderId =\n    (params as ProjectParams)?.parentFolderId ||\n    (folder?.folderId as string);\n  const backPress = () => {\n    const folderParams: FolderParams = {\n      folderId: parentFolderId,\n      mnemonic:\n        parentFolderId?.search('new_') === -1\n          ? folder?.mnemonic\n          : undefined,\n      title: folder?.title as string,\n    };\n    console.info({folderParams});\n    if (folderParams.folderId && folderParams.folderId !== folderId) {\n      navigation.navigate(RootStackName, {\n        screen: parentName,\n        params: {\n          screen: 'Folder',\n          params: folderParams,\n        },\n      });\n      return;\n    }\n\n    navigation.navigate(RootStackName, {\n      screen: parentName,\n      params: {\n        screen: RootScreens[parentName],\n        params: undefined,\n      },\n    });\n  };\n  return <Appbar.Action icon=\"chevron-left\" onPress={backPress} />;\n}\n","import React from 'react';\nimport {useMediaPlayer} from '../../../hooks/useMediaPlayer';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {cancel} from '../../../store/slices/upload';\nimport {ProjectParams, FolderParams} from '../../../types/nav';\nimport EditorBanner from '../../editor/editorbanner';\nimport EncoderBanner from '../../encoder/encoderbanner';\nimport FileUpload from '../banners/fileupload';\nimport MediaBanner from '../../media/mediabanner';\nimport {View} from 'react-native';\n\nexport function BannerContainer({\n  userId,\n  isEncoderProject,\n  height,\n}: {\n  userId: string | undefined;\n  isEncoderProject: boolean;\n  height: number;\n}) {\n  const params = useAppSelector(state => state.ui.params);\n  const folderType = useAppSelector(state => state.ui.folderType);\n  const routeName = useAppSelector(state => state.ui.currentPage);\n  const projectId = (params as ProjectParams)?.projectId;\n  const folderId = (params as FolderParams)?.folderId;\n  const parentFolderId = (params as ProjectParams)?.parentFolderId;\n  const dispatch = useAppDispatch();\n\n  const hideMedialModal = () => {\n    dispatch(cancel());\n  };\n\n  const mediaPlayer = useMediaPlayer();\n\n  return (\n    <View style={{padding: 0, margin: 0}}>\n      <FileUpload\n        projectId={projectId}\n        userId={userId}\n        folderType={folderType}\n        hideMedialModal={hideMedialModal}\n        folderId={folderId || parentFolderId}\n        routeName={routeName}\n        isEncoderProject={isEncoderProject}\n      />\n      {mediaPlayer.currentMediaId ? (\n        <MediaBanner height={height} mediaPlayer={mediaPlayer} />\n      ) : null}\n      {routeName === 'EncoderProject' ? (\n        <EncoderBanner\n          projectId={projectId}\n          height={height}\n          folderId={folderId || parentFolderId}\n        />\n      ) : null}\n      {routeName === 'EditorProject' ? (\n        <EditorBanner\n          projectId={projectId}\n          height={height}\n          routeParams={params}\n          folderId={folderId || parentFolderId}\n        />\n      ) : null}\n    </View>\n  );\n}\n","import React, {useContext, useState, useMemo, useEffect} from 'react';\nimport {\n  Appbar,\n  useTheme,\n  TextInput,\n  Searchbar,\n  useAppThe,\n} from 'react-native-paper';\n\nimport {getHeaderTitle} from '@react-navigation/elements';\nimport {View} from 'react-native';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\n\nimport {\n  ChatParams,\n  FolderParams,\n  UnifiedStackParams,\n} from '../../../types/nav';\n\nimport uuid from 'react-native-uuid';\n\nimport {BackButton} from './backbutton';\nimport {setEditingMode} from '../../../store/slices/ui';\nimport {NativeStackNavigationOptions} from '@react-navigation/native-stack';\nimport {\n  createNewParty,\n  getById,\n  getUserData,\n  writeItem,\n} from '../../../api';\nimport {\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\nimport {useMutation, useQuery, useQueryClient} from 'react-query';\nimport {Folder, Media} from '../../../types';\nexport const defaulPlaceHolderText = 'type to search your collection';\nexport const addFolderPlaceholder = 'Type name of the folder';\nexport const searchContactsPlaceholderText =\n  'type to search your contacts';\nexport const chatPlacehoder = 'Type name of the new chat';\n\nexport function NavInput({\n  options,\n  folderId,\n  isLocked,\n  searchValue,\n  setSearch,\n}: {\n  options: NativeStackNavigationOptions;\n  folderId: string;\n  isLocked: boolean;\n  searchValue: string;\n  setSearch: (s: string) => void;\n}) {\n  const queryClient = useQueryClient();\n  const navigation =\n    useNavigation<NavigationProp<UnifiedStackParams>>();\n  const params = useAppSelector(state => state.ui.params);\n  const folderType = useAppSelector(state => state.ui.folderType);\n  const dispatch = useAppDispatch();\n  const isEditing = useAppSelector(state => state.ui.isEditing);\n  const mode = useAppSelector(state => state.ui.editingMode);\n  const [textValue, setText] = useState('');\n  const routeName: string = useAppSelector(\n    state => state.ui.currentPage,\n  );\n  const userData = useQuery('UserData', () => getUserData());\n  const userId = userData?.data?.id as string;\n  const theme = useTheme();\n  const writeItemMutation = useMutation(\n    (item: Media | Folder) => writeItem(item),\n    {retry: true},\n  );\n  const folderDataQuery = useQuery(\n    'folderData_' + folderId,\n    async () => await getById(folderId as string),\n    {retry: true, enabled: folderId ? true : false},\n  );\n  const folder = folderDataQuery.data;\n  const back = useAppSelector(state => state.ui.isBackEnabled);\n  const newFolderType = 'new_' + folderType;\n  const title =\n    (params as ChatParams)?.name ||\n    (params as FolderParams)?.title ||\n    getHeaderTitle(options, routeName!);\n  let placeholderText = addFolderPlaceholder;\n\n  if (mode === 'party') {\n    placeholderText = chatPlacehoder;\n  }\n  if (mode === 'search') {\n    placeholderText = 'type to search';\n  }\n\n  const onClickExtra = async () => {\n    console.info('mode', mode);\n    try {\n      switch (mode) {\n        case 'party':\n          console.info('createNewParty');\n          const partyId = userId + '_' + uuid.v4();\n          const party = await createNewParty({\n            id: partyId,\n            name: textValue,\n            partyId,\n            folderId: folderId || newFolderType,\n          });\n          navigation.navigate('Chat', {\n            chatId: partyId,\n            name: textValue,\n            mnemonic: party.mnemonic,\n            parentFolderId: folderId || newFolderType,\n          });\n          console.info('createNewParty done', party);\n          break;\n        case 'folder':\n          const newFolderId = 'folder_' + uuid.v4() + '_' + userId;\n          const nFolder: Folder = {\n            id: newFolderId,\n            title: textValue,\n            isFolder: true,\n            date: new Date().valueOf(),\n            userId,\n            folderType,\n            folderId,\n          };\n          await writeItemMutation.mutateAsync(nFolder);\n          break;\n\n        case 'search':\n          dispatch(setEditingMode(undefined));\n          break;\n      }\n    } catch (err) {\n      console.error('onClickExtra err', err);\n    }\n    if (folderId) {\n      await queryClient.refetchQueries({\n        queryKey: 'folderContent_' + folderId,\n      });\n    } else {\n      await queryClient.refetchQueries({\n        queryKey: 'folders_' + folderType,\n      });\n    }\n\n    dispatch(setEditingMode(undefined));\n    return true;\n  };\n  const showTextField = isEditing && mode !== 'database';\n  return (\n    <>\n      {!showTextField && back ? (\n        <BackButton folder={folder as Folder} />\n      ) : null}\n\n      {!showTextField ? (\n        <Appbar.Content title={title} theme={theme} />\n      ) : null}\n      {showTextField ? (\n        <View style={{width: '100%'}}>\n          <TextInput\n            placeholder={placeholderText}\n            onChangeText={query =>\n              mode === 'search' ? setSearch(query) : setText(query)\n            }\n            style={{\n              width: '100%',\n              textAlignVertical: 'bottom',\n              lineHeight: 30,\n              padding: 10,\n              height: 40,\n            }}\n            theme={theme}\n            value={mode === 'search' ? searchValue : textValue}\n            left={\n              <TextInput.Icon\n                style={{marginTop: 20}}\n                icon=\"arrow-left-circle\"\n                onPress={() => {\n                  dispatch(setEditingMode(undefined));\n                }}\n              />\n            }\n            autoFocus\n            maxLength={100}\n            right={\n              <TextInput.Icon\n                style={{marginTop: 20}}\n                onPress={onClickExtra}\n                icon=\"check-circle\"\n                loading={isLocked}\n              />\n            }\n          />\n        </View>\n      ) : null}\n    </>\n  );\n}\n","import * as React from 'react';\nimport {I18nManager, StyleSheet, View, Platform} from 'react-native';\n\nimport {\n  DrawerContentComponentProps,\n  DrawerContentScrollView,\n} from '@react-navigation/drawer';\nimport {Drawer, useTheme} from 'react-native-paper';\n\nconst DrawerCollapsedItemsData = [\n  {\n    label: 'Media',\n    focusedIcon: 'folder',\n    unfocusedIcon: 'folder-outline',\n    key: 0,\n    screen: 'FilesTab',\n  },\n  {\n    label: 'Chat',\n    focusedIcon: 'forum',\n    unfocusedIcon: 'forum-outline',\n    key: 1,\n    screen: 'ContactsTab',\n  },\n  {\n    label: 'Encode\\nCompress',\n    focusedIcon: 'state-machine',\n    unfocusedIcon: 'state-machine',\n    key: 2,\n    screen: 'EncoderTab',\n  },\n  {\n    label: 'Video\\nEditor',\n    focusedIcon: 'scissors-cutting',\n    unfocusedIcon: 'scissors-cutting',\n    key: 3,\n    screen: 'EditorTab',\n  },\n  {\n    label: 'Settings',\n    focusedIcon: 'cog',\n    unfocusedIcon: 'cog-outline',\n    key: 4,\n    screen: 'SettingsTab',\n  },\n];\n\nfunction DrawerItems(props: DrawerContentComponentProps) {\n  const nav = props.navigation;\n  const drawerItemIndex = props.state.index;\n  const theme = useTheme();\n  const isV3 = true;\n  const collapsed = true;\n\n  return (\n    <DrawerContentScrollView\n      alwaysBounceVertical={false}\n      style={[\n        styles.drawerContent,\n        {\n          backgroundColor: theme.colors.surface,\n        },\n      ]}\n      showsVerticalScrollIndicator={false}\n      showsHorizontalScrollIndicator={false}>\n      {isV3 && collapsed && (\n        <>\n          {DrawerCollapsedItemsData.map((props, index) => (\n            <Drawer.Section\n              style={styles.collapsedSection}\n              key={props.key}>\n              <Drawer.CollapsedItem\n                {...props}\n                key={props.key}\n                active={drawerItemIndex === index}\n                onPress={() => {\n                  nav.navigate(props.screen);\n                }}\n              />\n            </Drawer.Section>\n          ))}\n        </>\n      )}\n    </DrawerContentScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  drawerContent: {\n    flex: 1,\n  },\n  preference: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n  },\n  v3Preference: {\n    height: 56,\n    paddingHorizontal: 28,\n  },\n  badge: {\n    alignSelf: 'center',\n  },\n  collapsedSection: {\n    marginTop: 16,\n    fontSize: 12,\n  },\n  annotation: {\n    marginHorizontal: 24,\n    marginVertical: 6,\n  },\n});\n\nexport default DrawerItems;\n","import React, {useState} from 'react';\nimport {\n  ActivityIndicator,\n  Button,\n  Chip,\n  Dialog,\n  Divider,\n  IconButton,\n  List,\n  Text,\n  TextInput,\n} from 'react-native-paper';\nimport {useMutation, useQuery} from 'react-query';\nimport {View, Clipboard, Platform} from 'react-native';\nimport {\n  createDBConn,\n  dbMnemoCons,\n  evolu,\n  initDatabaseRecord,\n} from '../../api/db';\nimport {getDatabases} from '../../api/db/supervisor';\nimport {DatabaseItem} from '../../types';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {setEditingMode} from '../../store/slices/ui';\nimport {genMnemonic} from '../../api';\n\nexport function DatabaseItemComponent({\n  db,\n  totalLength,\n  showMnemonic,\n}: {\n  db: DatabaseItem;\n  totalLength: number;\n  showMnemonic: (i: DatabaseItem) => void;\n}) {\n  const currentMnemonic = evolu!.getOwner()?.mnemonic;\n  const isCurrent = db.mnemonic === currentMnemonic;\n  const mnemonic = db.mnemonic as string;\n  const loginMutation = useMutation(async () => {\n    try {\n      if (!dbMnemoCons[mnemonic]) {\n        await createDBConn(db.title, db.mnemonic, true);\n      }\n      await initDatabaseRecord(\n        'previous',\n        currentMnemonic,\n        dbMnemoCons[mnemonic],\n      );\n    } catch (err) {\n      console.error(err);\n    }\n    evolu.restoreOwner(db.mnemonic);\n  });\n  const logoutDatabase = (i: DatabaseItem) => {};\n  const loginDatabase = (i: DatabaseItem) => {\n    loginMutation.mutateAsync();\n  };\n  return (\n    <List.Item\n      key={db.id}\n      left={props => <List.Icon {...props} icon={'database'} />}\n      right={props => (\n        <>\n          {/* {totalLength > 1 && (\n              <Button\n                {...props}\n                icon={'logout'}\n                mode=\"outlined\"\n                onPress={() => logoutDatabase(db)}>\n                Logout\n              </Button>\n            )} */}\n          {!isCurrent && (\n            <Button\n              {...props}\n              icon={'archive-arrow-down'}\n              mode=\"outlined\"\n              onPress={() => loginDatabase(db)}>\n              Switch\n            </Button>\n          )}\n          <Button\n            {...props}\n            icon={'eye'}\n            mode=\"outlined\"\n            onPress={() => showMnemonic(db)}>\n            Show\n          </Button>\n        </>\n      )}\n      description={\n        <View style={{gap: 10, flexDirection: 'row'}}>\n          <Chip>{`${new Date(db.date).toDateString()}`}</Chip>\n          {isCurrent && (\n            <Chip style={{backgroundColor: 'green'}}>Current</Chip>\n          )}\n        </View>\n      }\n      title={`${db.title}`}\n    />\n  );\n}\n\nexport default function DatabasesScreen() {\n  const dbReq = useQuery('Databases', () => getDatabases(), {\n    refetchOnWindowFocus: false,\n  });\n  const isLoading = dbReq.isLoading;\n  const dbs = dbReq.data;\n  const [mnemonic, setShowMnemonic] = useState<string | undefined>(\n    undefined,\n  );\n  const [dbName, setDbName] = useState<string>('');\n  const [dbMnemonic, setDbMnemonic] = useState<string>('');\n  const showMnemonic = (i: DatabaseItem) =>\n    setShowMnemonic(i.mnemonic);\n\n  const createDBMutation = useMutation(\n    async () => {\n      console.info('createdb');\n      return await initDatabaseRecord(dbName, dbMnemonic);\n    },\n    {\n      onSuccess: () => {\n        dispatch(setEditingMode(undefined));\n        dbReq.refetch();\n      },\n    },\n  );\n  const showCreate = useAppSelector(\n    state => state.ui.editingMode === 'database',\n  );\n  const dispatch = useAppDispatch();\n  if (isLoading) return <ActivityIndicator size={72} />;\n  return (\n    <>\n      <List.Section>\n        {dbs?.map(db => (\n          <DatabaseItemComponent\n            db={db}\n            totalLength={dbs.length}\n            showMnemonic={showMnemonic}\n          />\n        ))}\n      </List.Section>\n      <Dialog\n        style={{maxWidth: 500}}\n        visible={mnemonic !== undefined}\n        onDismiss={() => setShowMnemonic(undefined)}>\n        <Dialog.Title>Mnemonic</Dialog.Title>\n        <Dialog.Content>\n          <Text>{mnemonic}</Text>\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button\n            icon={'clipboard'}\n            onPress={() => (\n              Clipboard.setString(mnemonic as string),\n              setShowMnemonic(undefined)\n            )}>\n            Copy\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n      <Dialog\n        visible={showCreate}\n        style={{maxWidth: 500}}\n        onDismiss={() => dispatch(setEditingMode(undefined))}>\n        <Dialog.Title>Create a new Database</Dialog.Title>\n        <Dialog.Content>\n          <TextInput\n            label={'Database Name'}\n            value={dbName}\n            onChangeText={setDbName}\n          />\n          <TextInput\n            label={'Database Mnemonic'}\n            value={dbMnemonic}\n            onChangeText={setDbMnemonic}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button\n            key={'close'}\n            icon={'close'}\n            onPress={() => {\n              dispatch(setEditingMode(undefined));\n            }}>\n            Cancel\n          </Button>\n          <Button\n            key={'matrix'}\n            icon={'matrix'}\n            onPress={() => {\n              setDbMnemonic(genMnemonic());\n            }}>\n            Generate New Mnemonic\n          </Button>\n          <Button\n            key={'check'}\n            icon={'check'}\n            disabled={\n              dbName.length < 3 || dbMnemonic.split(' ').length !== 12\n            }\n            onPress={() => createDBMutation.mutateAsync()}\n            loading={createDBMutation.isLoading}>\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </>\n  );\n}\n","import React from 'react';\nimport {ActivityIndicator, Divider, List} from 'react-native-paper';\nimport {useQuery} from 'react-query';\nimport {Device} from '../../types';\nimport {View} from 'react-native';\n\nexport default function DevicesScreen(props: any) {\n  const user = useQuery('UserData', () => props.getUserData(), {\n    refetchOnWindowFocus: false,\n  });\n  const userLoading = user.isLoading;\n  const userData = user.data;\n  if (userLoading) return <ActivityIndicator size={72} />;\n  return (\n    <List.Section>\n      {userData.devices.map((device: Device) => (\n        <View key={device.id}>\n          {device.id !== 'unknown' && device.manufacturer ? (\n            <>\n              <Divider />\n              <List.Item\n                key={device.id}\n                left={props => (\n                  <List.Icon\n                    {...props}\n                    icon={device.manufacturer.toLowerCase()}\n                  />\n                )}\n                right={props => (\n                  <List.Icon {...props} icon={'logout'} />\n                )}\n                description={`Created: ${new Date(\n                  device.createdAt,\n                ).toDateString()}`}\n                title={`${device.model.replace(\n                  new RegExp('-'),\n                  ' ',\n                )} on ${device.platform}`}\n              />\n              <Divider />\n            </>\n          ) : null}\n        </View>\n      ))}\n    </List.Section>\n  );\n}\n","import React, {useCallback} from 'react';\n\nimport {\n  View,\n  Linking,\n  StyleSheet,\n  Pressable,\n  Platform,\n} from 'react-native';\n\nimport {UserInfo} from '../../types';\nimport {useQuery} from 'react-query';\nimport {\n  ActivityIndicator,\n  List,\n  Avatar,\n  Divider,\n  Switch,\n  Text,\n  Chip,\n} from 'react-native-paper';\nimport {\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\nimport {getUserData} from '../../api';\nimport {SettingsStackParams} from '../../types/nav';\n\nconst appLoginUrl = 'https://www.starpy.me?appLogin=true';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n  customTitle: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  additionalPadding: {\n    paddingTop: 8,\n  },\n  image: {\n    width: '100%',\n    height: 'auto',\n    opacity: 0.6,\n    position: 'absolute',\n    resizeMode: 'cover',\n    zIndex: -1,\n    flex: 1,\n  },\n});\nconst SettingsView = () => {\n  const userDataQuery = useQuery('UserData', () => getUserData());\n  const isLoadingUserData = userDataQuery.isLoading;\n  const nav = useNavigation<NavigationProp<SettingsStackParams>>();\n  const UserData = userDataQuery.data;\n\n  const openDevices = () => nav.navigate('Devices');\n  const openDbs = () => nav.navigate('Databases');\n  const showDiskStatus = () => nav.navigate('Drive');\n\n  const onEditProfile = () => {\n    console.info('onEditProfile');\n  };\n  const AvatarSize = 72;\n  const controlIconPaddingTop = 20;\n  const touchableStyle = {\n    pointerEvents: 'auto',\n    paddingTop: controlIconPaddingTop,\n  } as any;\n  return (\n    <View\n      style={{\n        height: '100%',\n        width: '100%',\n      }}>\n      {isLoadingUserData ? (\n        <ActivityIndicator animating={true} size={72} />\n      ) : (\n        <>\n          <List.Section>\n            <List.Item\n              title={UserData?.name}\n              left={props =>\n                UserData?.photo ? (\n                  <Avatar.Image\n                    style={props.style}\n                    source={{\n                      uri: UserData?.photo,\n                      cache: 'force-cache',\n                    }}\n                    size={AvatarSize}\n                  />\n                ) : (\n                  <Avatar.Text\n                    style={props.style}\n                    label={\n                      (UserData?.name &&\n                        UserData?.name.slice(0, 2).toUpperCase()) ||\n                      ''\n                    }\n                    size={AvatarSize}\n                  />\n                )\n              }\n              description={({\n                ellipsizeMode,\n                color: descriptionColor,\n                fontSize,\n              }) => (\n                <View style={[styles.container, styles.column]}>\n                  <Text\n                    numberOfLines={1}\n                    ellipsizeMode={ellipsizeMode}\n                    style={{color: descriptionColor, fontSize}}>\n                    {UserData?.description}\n                  </Text>\n                  <View\n                    style={[\n                      styles.container,\n                      styles.row,\n                      styles.additionalPadding,\n                    ]}>\n                    {Platform.OS == 'macos' ? (\n                      <Chip\n                        icon=\"laptop\"\n                        onPress={() => {}}\n                        style={{height: 30}}>\n                        MacOS\n                      </Chip>\n                    ) : null}\n                    {Platform.OS === 'web' ? (\n                      <Chip\n                        icon=\"web\"\n                        onPress={() => {}}\n                        style={{height: 30}}>\n                        WEB\n                      </Chip>\n                    ) : null}\n                  </View>\n                </View>\n              )}\n              right={props => (\n                <Pressable\n                  style={touchableStyle}\n                  onPress={onEditProfile}>\n                  <List.Icon {...props} icon=\"pencil-outline\" />\n                </Pressable>\n              )}\n            />\n            {/* <Divider />\n            <List.Item\n              onPress={showDiskStatus}\n              title={'Drive Status'}\n              left={props => (\n                <List.Icon icon=\"harddisk\" style={props.style} />\n              )}\n            /> */}\n            <Divider />\n            <List.Item\n              onPress={openDevices}\n              title={'Devices'}\n              left={props => (\n                <List.Icon icon=\"devices\" style={props.style} />\n              )}\n            />\n            <Divider />\n            <List.Item\n              onPress={openDbs}\n              title={'Databases'}\n              left={props => (\n                <List.Icon icon=\"database\" style={props.style} />\n              )}\n            />\n            <Divider />\n          </List.Section>\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default SettingsView;\n","import {createContext} from 'react';\n\nimport {CurrentUserData} from '../types';\n\nimport {UserDataAction} from '../hooks/useUserData';\n\nexport const PeerCtx = createContext(null);\n\nexport const MediaCtx = createContext(null);\n\nexport const PartyCtx = createContext(null);\n\nexport const UserCtx = createContext<CurrentUserData | null>(null);\n\nexport const LocalCtx = createContext(null);\n\nexport const LoadingContext = createContext(false);\n\nexport const UserDataState = createContext<CurrentUserData | null>(\n  null,\n);\n\nexport const UserDataDispatch =\n  createContext<React.Dispatch<UserDataAction> | null>(null);\n","export * from './ctx';\n","import {FolderType} from '../types';\n\nexport const migrationKey = 'afanassii25662';\n// export const migrationKey = 'p2';\nexport const dbID = migrationKey;\nexport const userDocKey = 'userDoc';\nexport const domain = 'https://www.starpy.me/';\nexport const cdndomain = 'https://cdn.starpy.me/';\nexport const contactPrefix = 'contact_';\nexport const publicPartyPref = 'public_party_';\nexport const ffMpegWasmBaseUrl =\n  'https://unpkg.com/@ffmpeg/core@0.12.6/dist/umd';\nexport const appDirectory = 'starp';\n\nexport const encoderProjectTypes = [\n  FolderType.encoder,\n  FolderType.editor,\n];\nexport const googleDocumentKey = 'google_document';\nexport const defaultFolders = [\n  'demo',\n  'new',\n  'nearby',\n  publicPartyPref,\n  'tutorial',\n  'new_editor',\n  'new_media',\n  'new_chat',\n  'new_encoder',\n];\nexport const loaderURI =\n  'https://raw.githubusercontent.com/AboutReact/sampleresource/master/old_logo.png';\n\nexport const MEDIA = [\n  {\n    id: 'sintel',\n    title: 'Sintel',\n    thumbnail: 'https://starpy.me/webapp/sintel.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:08ada5a7a6183aae1e09d831df6748d566095a10&dn=Sintel&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fsintel.torrent',\n  },\n  {\n    id: 'tears',\n    title: 'Tears of Steel',\n    thumbnail: 'https://starpy.me/webapp/tearsOfSteel.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:209c8226b299b308beaf2b9cd3fb49212dbd13ec&dn=Tears+of+Steel&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Ftears-of-steel.torrent',\n  },\n  {\n    id: 'cosmoslaundromat',\n    title: 'Cosmos Laundromat',\n    thumbnail: 'https://starpy.me/webapp/cosmosLaundromat.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:c9e15763f722f23e98a29decdfae341b98d53056&dn=Cosmos+Laundromat&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fcosmos-laundromat.torrent',\n  },\n  {\n    id: 'bbb',\n    title: 'Big Buck Bunny',\n    thumbnail: 'https://starpy.me/webapp/bigBuckBunny.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:dd8255ecdc7ca55fb0bbf81323d87062db1f6d1c&dn=Big+Buck+Bunny&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fbig-buck-bunny.torrent',\n  },\n];\n\nconst FOLDERS = [\n  {\n    id: 'wired',\n    title: 'The WIRED CD - Rip. Sample. Mash. Share',\n    posterFileName: 'wiredCd.jpg',\n    torrentFileName: 'wiredCd.torrent',\n  },\n];\n\nexport const colors = {\n  textColor: 'white',\n  backgroundColor: 'black',\n  mediaItemTextColor: 'palegoldenrod',\n  mediaBackgroundColor: '#2b2b2b',\n  mediaBorderColor: 'black',\n  navTextColor: '#e1d76a',\n  navInactiveColor: '#585858',\n  folderColor: '#585858',\n  folderTextColor: 'black',\n  deleteBackgroundColor: 'red',\n  deleteTextColor: 'black',\n  navBorderColor: '#585858',\n  contactItemBackgroundColor: '#2b2b2b',\n  contactItemTitleColor: '#e1d76a',\n  contactItemOnlineColor: 'green',\n  theme: 'dark',\n  currentUserColor: '#585858',\n  remoteUserColor: 'cornflowerblue',\n};\n","import {migrationKey, MEDIA} from './defaults';\nexport * from './defaults';\n\nimport {faker} from '@faker-js/faker';\n\nimport uuid from 'react-native-uuid';\n\nimport {\n  UserInfo,\n  DocsGeneric,\n  DocsGenericArray,\n  FolderType,\n} from '../types';\n\nconst baseFolder = {\n  id: 'folder01',\n  title: 'My First Folder',\n  isFolder: true,\n};\n\nexport const createUser = async (): Promise<UserInfo> => {\n  const photo = faker.image.cats();\n  const name = faker.name.fullName();\n  const description = faker.animal.cat();\n  const year = '19' + new Date(faker.date.birthdate()).getFullYear();\n  const id = uuid.v4().toString();\n  const handle =\n    '@' + (name + description + year).replace(/[^A-Z0-9]+/gi, '');\n  return {\n    handle,\n    photo,\n    name,\n    description,\n    year,\n    id,\n    idHash: id,\n    userDoc: true,\n    version: migrationKey,\n    prevVersion: '',\n  };\n};\n\nexport const createNewUser = async (writeItem: any) => {\n  try {\n    const newUser = await createUser();\n    console.info('==== creating temp user ====', newUser);\n    await writeItem(newUser);\n    return newUser;\n  } catch (err) {\n    console.error('==== error on creating a new user ====', err);\n  }\n};\n\nexport const doInitialMigration = async (\n  writeItem: any,\n  getUserData: any,\n) => {\n  console.info('==== do migration ====');\n  try {\n    let user = await getUserData();\n    console.info('initialMigrationUserCheck', user);\n    if (user && user.id) {\n      return user;\n    }\n\n    if (!user || !user.id) {\n      user = await createNewUser(writeItem);\n    }\n\n    const userId = user.id;\n    await Promise.all([\n      writeItem({\n        ...baseFolder,\n        title: 'Demo',\n        id: 'demo',\n        folderType: FolderType.media,\n        date: new Date().toISOString(),\n        userId,\n      }),\n      ...MEDIA.map(async media =>\n        writeItem({\n          ...media,\n          isMediaNew: true,\n          folderId: 'demo',\n          date: new Date().valueOf(),\n        }),\n      ),\n    ]);\n  } catch (err) {\n    console.error('====migration err===', err);\n  }\n  console.info('==== after migration ====');\n};\n","import {UseFoldersState, useFolders} from './useFolders';\n\nimport {Folder, FolderType, Contact} from '../types';\n\nexport interface UseContactsState extends UseFoldersState<Contact> {}\n\nexport const useContacts = (\n  getFoldersByType: (folderType: FolderType) => Promise<Folder[]>,\n  getFolderContent: (folderId: string) => Promise<Contact[]>,\n  writeItem: any,\n): UseContactsState => {\n  const getContactsFolders = async () => {\n    const contacts = await getFoldersByType(FolderType.contact);\n    return contacts;\n  };\n\n  const getContactsFolderContent = async (folderId: string) => {\n    const content = await getFolderContent(folderId);\n    return content;\n  };\n\n  const useFoldersState = useFolders<Contact>(\n    FolderType.contact,\n    getContactsFolders,\n    getContactsFolderContent,\n    writeItem,\n  );\n\n  return useFoldersState;\n};\n","import {useMutation, useQuery, useQueryClient} from 'react-query';\nimport {\n  CurrentUserData,\n  Folder,\n  Media,\n  EditorProject,\n  EditorLayer,\n} from '../types';\nimport {useMediaPlayer} from './useMediaPlayer';\nimport {useContext, useMemo, useRef, useState} from 'react';\nimport {UserDataDispatch, UserDataState} from '../ctx';\nimport {UserDataAction, UserDataActionType} from './useUserData';\nimport {TextInput} from 'react-native-gesture-handler';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {useRoute} from '@react-navigation/native';\nimport {Clipboard} from 'react-native';\nimport {\n  DocumentPicker,\n  domain,\n  genMnemonic,\n  getById as getByIdMain,\n  writeItem as writeItemMain,\n  getFolderContent as getFolderContentMain,\n  getUserData,\n} from '../api';\nimport {startOnboarding} from '../store/slices/upload';\nimport uuid from 'react-native-uuid';\n\nexport function useFolder(\n  folderId: string,\n  getFolderContentProxy: (folderId: string) => Promise<[]>,\n  getByIdProxy: (folderId: string) => Promise<any>,\n  folderType: string,\n  writeItemProxy?: any,\n  mnemonic?: string,\n  title?: string,\n  userId?: string,\n) {\n  const getFolderContent =\n    getFolderContentProxy || getFolderContentMain;\n  const getById = getByIdProxy || getByIdMain;\n  const writeItem = writeItemProxy || writeItemMain;\n  const route = useRoute();\n  const mediaPlayer = useMediaPlayer(folderId);\n  const dispatch = useAppDispatch();\n  const queryKey = 'folderContent_' + folderId;\n  const queryClient = useQueryClient();\n  const folderContentQuery = useQuery(\n    queryKey,\n    async () => {\n      // console.info('useFolder', folderId, mnemonic);\n      let folder;\n      try {\n        folder = await getById(folderId);\n        console.info('folder', folder);\n      } catch (err) {\n        console.error(err);\n      }\n      // console.info('mnemonic', mnemonic, title);\n      if (mnemonic && title && !folder?.id) {\n        folder = await writeItem({\n          id: folderId,\n          mnemonic,\n          title,\n          isFolder: true,\n          folderId: 'new_' + folderType,\n          folderType,\n          userId,\n        });\n        console.info('after create new folder, nf', folder);\n      }\n      console.info('folder', folder);\n      const content = await getFolderContent(folderId);\n      return {folder, content};\n    },\n    {\n      refetchOnWindowFocus: true,\n      refetchOnMount: true,\n    },\n  );\n  const deleteFolderMutation = useMutation(\n    async (folderId: string) =>\n      await writeItem({\n        ...(await getById(folderId)),\n        isDeleted: true,\n      }),\n  );\n  const folderContent = folderContentQuery.data?.content;\n  const folder = folderContentQuery.data?.folder;\n  const isLoadingFolderContent = folderContentQuery.isFetching;\n  const writeItemMutation = useMutation(item => writeItem(item), {\n    onSuccess: async () => {\n      // content.sort((a,b)=>a.orderId-b.orderId)\n      await queryClient.refetchQueries(queryKey);\n      if (route.params?.projectId) {\n        const {projectId} = route.params;\n        console.info('onReordered project items', projectId);\n        await queryClient.refetchQueries([\n          'projectLayers',\n          projectId,\n        ]);\n\n        await queryClient.refetchQueries(['encodedMedia', projectId]);\n      }\n    },\n  });\n\n  const folderFiles =\n    folder && folder.files\n      ? (folder?.files?.map((file: string) => ({\n          id: file,\n          url: file,\n          title: file,\n          filename: file,\n          isMediaNew: true,\n          folderId: folder!.id,\n          _id: file,\n          date: (folder! as any as Media).date,\n          originalId: (folder! as any as Media).originalId,\n          webpage_url: (folder! as any as Media).webpage_url,\n          thumbnail: (folder! as any as Media).thumbnail,\n          extractor: (folder! as any as Media).extractor,\n        })) as Media[])\n      : [];\n  const userState = useContext(UserDataState) as CurrentUserData;\n  const userDispatch = useContext(\n    UserDataDispatch,\n  ) as React.Dispatch<UserDataAction>;\n  const isEditingFolder = userState.isEditingFolder[folderId];\n  const folderNameInputRef = useRef<TextInput | null>(null);\n  const [currentFolderEditorName, setFolderEditorName] = useState('');\n  const editableFolder = folderContent?.find(\n    (f: Folder) => f.id === isEditingFolder,\n  );\n\n  const content =\n    isLoadingFolderContent || folderContent === undefined\n      ? undefined\n      : folderFiles.concat(folderContent!);\n\n  const updateFolderTitleMutation = useMutation(\n    async (folder: Folder) => await writeItem(folder),\n  );\n  const onRemoveFolder = async (folder: Folder) => {\n    console.info('onRemoveFolder', folder);\n    await deleteFolderMutation.mutateAsync(folder.id);\n    await folderContentQuery.refetch();\n    if (route.params?.projectId) {\n      const {projectId} = route.params;\n      await queryClient.refetchQueries(['folderData_' + projectId]);\n    }\n    console.info('after delete mutation');\n  };\n\n  const abortEditFolder = () =>\n    userDispatch({\n      actionType: UserDataActionType.setEditingFolder,\n      folderId: undefined,\n      folderType: folderId as any,\n    });\n\n  const editFolder = (fId: string) =>\n    userDispatch({\n      actionType: UserDataActionType.setEditingFolder,\n      folderId: fId,\n      folderType: folderId as any,\n    });\n\n  const onFolderActionPress = async (folderId: string) => {\n    console.info(\n      'isEditingFolder: ' + (folderId === isEditingFolder),\n      folderId,\n    );\n    if (editableFolder?.id === folderId) {\n      editableFolder.title = currentFolderEditorName;\n      await updateFolderTitleMutation.mutateAsync(editableFolder);\n      abortEditFolder();\n      await folderContentQuery.refetch();\n      return;\n    }\n    editFolder(folderId);\n  };\n\n  const onReordered = async (start: number, end: number) => {\n    console.info('dragend', start, end);\n\n    if (start === end) return;\n    content[start].orderId = end + 1;\n    const didEnd = content[end]\n      ? (content[end].orderId = start + 1)\n      : undefined;\n\n    await writeItemMutation.mutateAsync(content[start]);\n    didEnd ? await writeItemMutation.mutateAsync(content[end]) : null;\n  };\n\n  const onShareFolder = async (folder: Folder) => {\n    console.info('onShareFolder', folder);\n    const {id, title, userId} = folder;\n    const folderPref =\n      domain +\n      'webapp/' +\n      folderType +\n      '/folder/' +\n      id +\n      '?title=' +\n      title +\n      '&userId=' +\n      userId +\n      '&mnemonic=';\n    if (folder.mnemonic) {\n      console.info('folder has mnemonic');\n      const folderUrl =\n        folderPref + encodeURIComponent(folder.mnemonic);\n      console.info(folderUrl);\n      Clipboard.setString(folderUrl);\n    }\n    if (!folder.mnemonic) {\n      const mnemonic = genMnemonic();\n      folder.mnemonic = mnemonic;\n      await updateFolderTitleMutation.mutateAsync(folder);\n      const folderUrl = folderPref + encodeURIComponent(mnemonic);\n      console.info(folderUrl);\n      Clipboard.setString(folderUrl);\n    }\n  };\n\n  const addMedia = async () => {\n    const pickerResult = await DocumentPicker.pickSingle({\n      presentationStyle: 'fullScreen',\n    });\n    console.info('pickerResult', pickerResult);\n    // setMediaModalVisible(true)\n    if (!pickerResult) return;\n    const user = await getUserData();\n    const url = pickerResult.uri;\n    let fId = folderId;\n    const nd: Media = {\n      id: uuid.v4().toString(),\n      url,\n      title: pickerResult.name,\n      originalId: pickerResult.name,\n      filename: pickerResult.name,\n      fileType: pickerResult.type,\n      folderId: fId,\n      userId: user.id,\n      date: new Date().valueOf(),\n      type: pickerResult.file.type,\n      size: pickerResult.file.size,\n      extractor: 'local',\n    };\n    dispatch(startOnboarding({file: pickerResult.file, media: nd}));\n  };\n\n  return {\n    isLoadingFolderContentError: folderContentQuery.error,\n    isLoadingFolderContent,\n    folderContentQuery,\n    folder,\n    folderContent: content,\n    isEditingFolder,\n    abortEditFolder,\n    folderNameInputRef,\n    currentFolderEditorName,\n    setFolderEditorName,\n    onFolderActionPress,\n    onRemoveFolder,\n    onShareFolder,\n    folderType,\n    getContentItem: (_data: unknown, index: number) => content[index],\n    getContentCount: () => content?.length || 0,\n    ...mediaPlayer,\n    onReordered,\n    addMedia,\n  };\n}\n","import {useState, useRef, useContext} from 'react';\nimport {\n  Contact,\n  Folder,\n  FolderType,\n  Media,\n  CurrentUserData,\n} from '../types';\nimport {Clipboard, TextInput} from 'react-native';\nimport {UserDataState, UserDataDispatch} from '../ctx';\nimport {UserDataAction, UserDataActionType} from './useUserData';\nimport {UseQueryResult, useMutation, useQuery} from 'react-query';\nimport {useIsFocused, useRoute} from '@react-navigation/native';\nimport {\n  domain,\n  genMnemonic,\n  getFolderContent,\n  getFoldersByType,\n  writeItem as superWriteItem,\n  writeItem,\n} from '../api';\nimport {FolderParams} from '../types/nav';\n\nexport type FolderPreviewContentType = Media | Contact | Folder;\n\nexport type getItem = (data: any, index: number) => Folder;\n\nexport type getContentItem = (\n  data: any,\n  index: number,\n) => FolderPreviewContentType;\n\nexport interface FoldersState<T extends FolderPreviewContentType> {\n  folderType: FolderType;\n  isEditingFolder?: string;\n  newFolderName?: string;\n  currentContentId?: string;\n}\n\nexport enum FoldersActionType {\n  edit = 'edit',\n  select = 'select',\n  deselect = 'deselect',\n  abortEdit = 'abortEdit',\n}\n\nexport type FolderGenericActions =\n  | FoldersActionType.abortEdit\n  | FoldersActionType.deselect;\n\nexport interface FolderSelect {\n  actionType: FoldersActionType.select;\n  folderId: string | undefined;\n}\n\nexport interface FolderEdit {\n  actionType: FoldersActionType.edit;\n  folderId: string;\n}\n\nexport type FoldersAction =\n  | {actionType: FolderGenericActions}\n  | FolderSelect\n  | FolderEdit;\n\nexport interface UseFoldersState<T extends FolderPreviewContentType>\n  extends FoldersState<T> {\n  selectFolder: (folderId: string) => Promise<void>;\n  getItem: getItem;\n  getItemCount: () => number;\n  getContentCount: () => number;\n  getContentItem: getContentItem;\n  editFolder: (folderId: string) => void;\n  abortEditFolder: () => void;\n  currentFolderEditorName: string;\n  setFolderEditorName: (newFolderName: string) => void;\n  onFolderActionPress: (folderId: string) => void;\n  onFolderPress: (folderId: string) => void;\n  onRemoveFolder: (folder: Folder) => void;\n  onShareFolder: (folder: Folder) => void;\n  folderNameInputRef: React.MutableRefObject<TextInput | null>;\n  userState: CurrentUserData;\n  userDispatch: React.Dispatch<UserDataAction>;\n  currentFolderId?: string;\n  isFocused: boolean;\n  folderContent: T[];\n  loadingContent: boolean;\n  loadingFolders: boolean;\n  isLoadingFolder?: boolean;\n  folders: Folder[];\n  folderContentQuery: UseQueryResult<T[], unknown>;\n}\nexport const useFolders = <T extends FolderPreviewContentType>(\n  folderType: FolderType,\n  disabled: boolean,\n): UseFoldersState<T> => {\n  const route = useRoute();\n  const params = route.params as FolderParams;\n  const routeFolderId = params?.folderId;\n  const userState = useContext(UserDataState) as CurrentUserData;\n  const userDispatch = useContext(\n    UserDataDispatch,\n  ) as React.Dispatch<UserDataAction>;\n  const currentFolderId = userState.currentFolderIds[folderType];\n  const isEditingFolder = userState.isEditingFolder[folderType];\n  const folderNameInputRef = useRef<TextInput | null>(null);\n  const [currentFolderEditorName, setFolderEditorName] = useState('');\n  const isFocused = useIsFocused();\n\n  const foldersQuery = useQuery(\n    'folders_' + folderType,\n    async () => {\n      const data = await getFoldersByType(folderType);\n\n      const hasNew = data.find(i => i.id === 'new_' + folderType);\n      if (!hasNew && folderType !== FolderType.database)\n        data.unshift({\n          id: 'new_' + folderType,\n          title: 'New',\n          isFolder: true,\n          date: new Date().valueOf(),\n          userId: '',\n          folderType,\n          orderId: 0,\n        });\n      return data;\n    },\n    {\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n      retry: true,\n      enabled: !disabled,\n    },\n  );\n  const loadingFolders = foldersQuery.isFetching;\n  const folders = foldersQuery?.data || [\n    {\n      id: 'new_' + folderType,\n      title: 'New',\n      isFolder: true,\n      date: new Date().valueOf(),\n      userId: '',\n      folderType,\n    },\n  ];\n\n  const editableFolder = folders?.find(f => f.id === isEditingFolder);\n  const folderContentQuery = useQuery(\n    'folderContent_' + folderType,\n    () => getFolderContent(currentFolderId!),\n    {\n      enabled: false,\n      retry: true,\n      refetchOnWindowFocus: false,\n      enabled: !disabled,\n    },\n  );\n  const loadingContent =\n    folderContentQuery.isLoading || folderContentQuery.isFetching;\n  const folderContent = folderContentQuery?.data || [];\n  // console.info(writeItem)\n  const deleteFolderMutation = useMutation(\n    async (folderId: string) =>\n      await writeItem({id: folderId, isDeleted: true}),\n  );\n\n  const updateFolderTitleMutation = useMutation(\n    async (folder: Folder) => await writeItem(folder),\n  );\n  const deselectFolder = () =>\n    userDispatch({\n      actionType: UserDataActionType.setActiveFolder,\n      folderId: undefined,\n      folderType,\n    });\n\n  const selectFolder = async (folderId: string) => {\n    deselectFolder();\n    if (currentFolderId !== folderId) {\n      userDispatch({\n        actionType: UserDataActionType.setActiveFolder,\n        folderId,\n        folderType,\n      });\n    }\n  };\n\n  const editFolder = (folderId: string) =>\n    userDispatch({\n      actionType: UserDataActionType.setEditingFolder,\n      folderId,\n      folderType,\n    });\n\n  const abortEditFolder = () =>\n    userDispatch({\n      actionType: UserDataActionType.setEditingFolder,\n      folderId: undefined,\n      folderType,\n    });\n\n  const onFolderActionPress = async (folderId: string) => {\n    console.info(\n      'isEditingFolder: ' + (folderId === isEditingFolder),\n      folderId,\n    );\n    if (editableFolder?.id === folderId) {\n      editableFolder.title = currentFolderEditorName;\n      await updateFolderTitleMutation.mutateAsync(\n        editableFolder as Folder,\n      );\n      abortEditFolder();\n      await foldersQuery.refetch();\n      return;\n    }\n    editFolder(folderId);\n  };\n\n  const onFolderPress = (folderId: string) => {\n    selectFolder(folderId);\n  };\n\n  const onRemoveFolder = async (folder: Folder) => {\n    console.info('onRemoveFolder', folder);\n    await deleteFolderMutation.mutateAsync(folder.id);\n    await foldersQuery.refetch();\n    console.info('after delete mutation');\n  };\n\n  const onShareFolder = async (folder: Folder) => {\n    console.info('onShareFolder', folder);\n    const {id, title, userId} = folder;\n    const folderPref =\n      domain +\n      'webapp/' +\n      folderType +\n      '/folder/' +\n      id +\n      '?title=' +\n      title +\n      '&userId=' +\n      userId +\n      '&mnemonic=';\n    if (folder.mnemonic) {\n      console.info('folder has mnemonic');\n      const folderUrl =\n        folderPref + encodeURIComponent(folder.mnemonic);\n      console.info(folderUrl);\n      Clipboard.setString(folderUrl);\n    }\n    if (!folder.mnemonic) {\n      const mnemonic = genMnemonic();\n      folder.mnemonic = mnemonic;\n      await updateFolderTitleMutation.mutateAsync(folder);\n      const folderUrl = folderPref + encodeURIComponent(mnemonic);\n      console.info(folderUrl);\n      Clipboard.setString(folderUrl);\n    }\n  };\n\n  return {\n    folderType,\n    selectFolder,\n    currentFolderId: routeFolderId,\n    getItem: (_data: unknown, index: number) =>\n      folders[index] as Folder,\n    getItemCount: () => folders.length,\n    getContentItem: (_data: unknown, index: number) =>\n      folderContent[index],\n    getContentCount: () => folderContent.length,\n    folderContent,\n    loadingContent,\n    loadingFolders,\n    folders: folders as Folder[],\n    onRemoveFolder,\n    editFolder,\n    abortEditFolder,\n    onShareFolder,\n    folderContentQuery,\n    currentFolderEditorName,\n    setFolderEditorName,\n    folderNameInputRef,\n    onFolderPress,\n    onFolderActionPress,\n    userState,\n    userDispatch,\n    isFocused,\n    isLoadingFolder: foldersQuery.isLoading,\n    isEditingFolder,\n  };\n};\n","import {useEffect} from 'react';\nimport {Keyboard} from 'react-native';\nimport {useAppDispatch} from '../store/hooks';\nimport {setKeyboardHeight} from '../store/slices/ui';\n\nexport function useKeyboardDispatcher() {\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    Keyboard.addListener('keyboardDidShow', e =>\n      dispatch(\n        setKeyboardHeight({keyboardHeight: e.endCoordinates.height}),\n      ),\n    );\n    Keyboard.addListener('keyboardDidHide', () =>\n      dispatch(setKeyboardHeight({keyboardHeight: 0})),\n    );\n\n    return () => {\n      Keyboard.removeAllListeners('keyboardDidShow');\n      Keyboard.removeAllListeners('keyboardDidHide');\n    };\n  }, []);\n}\n","import {useFolders} from './useFolders';\n\nimport {Folder, FolderType, Media} from '../types';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {stop} from '../store/slices/media';\nimport {useCallback} from 'react';\nimport {useMediaPlayer} from './useMediaPlayer';\nimport {getFolderContent, getFoldersByType, writeItem} from '../api';\n\nexport const useMedia = (\n  getFoldersByTypeProxy: (\n    folderType: FolderType,\n  ) => Promise<Folder[]>,\n  getFolderContentProxy: (folderId: string) => Promise<Media[]>,\n  writeItemProxy?: any,\n) => {\n  const mediaPlayer = useMediaPlayer();\n  const useFoldersState = useFolders<Media>(\n    FolderType.media,\n    getFoldersByTypeProxy || getFoldersByType,\n    getFolderContentProxy || getFolderContent,\n    writeItemProxy || writeItem,\n  );\n\n  return {\n    ...useFoldersState,\n    ...mediaPlayer,\n  };\n};\n","import {MediaActionType} from '../store/slices/media';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {play, stop, loaded} from '../store/slices/media';\nimport {downloadFileById} from '../api';\nimport {setDownloadingProgress} from '../store/slices/fs';\nimport {Media} from '../types';\n\nexport const useMediaPlayer = (folderId?: string) => {\n  const mediaState = useAppSelector(state => state.media);\n  const downloads = useAppSelector(\n    state => state.fs.downloadingProgress,\n  );\n  const dispatch = useAppDispatch();\n\n  const onMediaPress = async (media: Media) => {\n    console.info('mediapress', media);\n    try {\n      const mediaId = media.id;\n      dispatch(stop());\n      if (mediaState.currentMediaId !== mediaId && mediaId !== '') {\n        dispatch(\n          play({actionType: MediaActionType.play, mediaId, media}),\n        );\n      }\n    } catch (err) {\n      console.error('mediapress error', err);\n    }\n  };\n\n  const onRemoveMediaPress = (mediaId: string) => {\n    console.info('onRemoveMediaPress', mediaId);\n  };\n\n  const onDownloadMediaPress = async (mediaId: string) => {\n    console.info('onDownloadMediaPress', mediaId);\n    const itemId = mediaId;\n    if (downloads[itemId]) return;\n    dispatch(setDownloadingProgress({itemId, progress: 0.001}));\n    try {\n      await downloadFileById(mediaId, folderId, progress =>\n        dispatch(\n          setDownloadingProgress({\n            itemId,\n            progress,\n          }),\n        ),\n      );\n    } catch (err) {\n      console.error(err);\n    }\n    dispatch(\n      setDownloadingProgress({itemId: mediaId, progress: undefined}),\n    );\n  };\n\n  const onCopyLinkPress = (mediaId: string) => {\n    console.info('onShareMediaPress', mediaId);\n  };\n\n  const onEditMediaPress = (mediaId: string) => {\n    console.info('onEditMediaPress', mediaId);\n  };\n\n  return {\n    ...mediaState,\n    onMediaPress,\n    onRemoveMediaPress,\n    onDownloadMediaPress,\n    onCopyLinkPress,\n    onEditMediaPress,\n  };\n};\n","import {getPublicMessages, sendChatMessage} from '../api/';\nimport {useMutation, useQuery} from 'react-query';\nimport {\n  CommonActions,\n  useIsFocused,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {setPaginationState} from '../store/slices/chat';\nimport {ChatParams} from '../types/nav';\n\nexport const useMessages = (chatId: string) => {\n  const isLoadingEarlier = useAppSelector(\n    state => state.chat.loadingPagination[chatId],\n  );\n  const dispatch = useAppDispatch();\n\n  const route = useRoute();\n  const focused = useIsFocused();\n  const navigation = useNavigation();\n  const params = route.params as ChatParams;\n  const mnemonic = params?.mnemonic;\n  const pageIndex = params?.page || 1;\n  const perPage = 25;\n  const messagesQuery = useQuery(\n    'chatMessages_' + chatId,\n    async () => {\n      const [messages] = await Promise.all([\n        getPublicMessages(chatId, mnemonic, perPage * pageIndex, 0),\n      ]);\n      return {messages};\n    },\n    {\n      retry: true,\n      refetchInterval: 1000,\n      enabled: focused,\n    },\n  );\n  const loadingMessages =\n    messagesQuery.isFetching || isLoadingEarlier;\n\n  const sendMessageMutation = useMutation(\n    async (text: string) => {\n      try {\n        const message = await sendChatMessage(chatId, text, mnemonic);\n        await messagesQuery.refetch();\n        return message;\n      } catch (err) {\n        console.error('==== sendMessage error ===', err);\n      }\n    },\n    {retry: true},\n  );\n\n  const messages = messagesQuery.data?.messages || [];\n\n  const nextPage = async () => {\n    if (isLoadingEarlier) return;\n\n    const nPage = parseInt(pageIndex.toString(), 10) + 1;\n    console.info('nextPage', nPage, loadingMessages);\n    dispatch(setPaginationState({[chatId]: true}));\n    navigation.dispatch({\n      ...CommonActions.setParams({page: nPage}),\n      source: route.key,\n    });\n    await messagesQuery.refetch();\n    setTimeout(() => {\n      dispatch(setPaginationState({[chatId]: false}));\n    }, 2000);\n  };\n\n  return {\n    messages,\n    nextPage,\n    loadingMessages,\n    sendingMessage: sendMessageMutation.isLoading,\n    messagesError: messagesQuery.error as string | undefined,\n    sendMessage: sendMessageMutation.mutate,\n    isLoadingEarlier,\n  };\n};\n","import {useMutation, useQueryClient} from 'react-query';\nimport {Contact, UserInfo} from '../types';\nimport {useMemo} from 'react';\nimport {\n  NavigationProp,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport {ChatParams, ChatStackParams} from '../types/nav';\nimport {sendChatMessage, writeItem} from '../api';\n\nexport const useRouteContact = (\n  contact: Contact | undefined,\n  isLoading: boolean,\n  user: UserInfo,\n  routeParams: ChatParams,\n) => {\n  const queryClient = useQueryClient();\n  const navigation = useNavigation<NavigationProp<ChatStackParams>>();\n  const route = useRoute();\n  const {chatId, name, mnemonic} =\n    routeParams || (route.params as ChatParams);\n  const folderId = 'new_contact';\n  const createContactMutation = useMutation(\n    async () => {\n      const ncontact = {\n        id: chatId,\n        isContact: true,\n        folderId,\n        name,\n        mnemonic,\n      };\n      console.info('ncotanct', ncontact);\n      await writeItem(ncontact);\n    },\n    {\n      retry: true,\n      onSuccess: async () => {\n        try {\n          await queryClient.refetchQueries('contact_' + chatId);\n          navigation.navigate('Chat', {\n            chatId,\n            name,\n            parentFolderId: folderId,\n            mnemonic,\n          });\n          await sendChatMessage(\n            chatId,\n            user.name + ' has joined',\n            mnemonic,\n            {\n              system: true,\n            },\n          );\n          await queryClient.refetchQueries(\n            'folderContent_' + folderId,\n          );\n        } catch (err) {\n          console.error('onadd contact error', err);\n        }\n      },\n    },\n  );\n\n  useMemo(() => {\n    console.info('useRouteContact Memo', isLoading, contact);\n    if (!isLoading && !contact && !createContactMutation.isLoading) {\n      createContactMutation.mutateAsync().then(async () => {\n        console.info('after create contact');\n      });\n    }\n  }, [isLoading, contact, createContactMutation]);\n};\n","import {useReducer} from 'react';\nimport {CurrentUserData, FolderType, UserInfo} from '../types';\nimport {useQuery} from 'react-query';\n\nexport enum UserDataActionType {\n  setUser = 'setUser',\n  setTheme = 'setTheme',\n  setActiveFolder = 'setActiveFolder',\n  setEditingFolder = 'setEditingFolder',\n  setFolderType = 'setFolderType',\n}\n\nexport type UserDataGenericAction = UserDataActionType.setTheme;\n\nexport interface UserDataSet {\n  actionType: UserDataActionType.setUser;\n  currentUserId: string;\n  userData: UserInfo;\n}\n\nexport interface SetActiveFolder {\n  actionType: UserDataActionType.setActiveFolder;\n  folderId: string | undefined;\n  folderType: FolderType;\n}\n\nexport interface SetEditingFolder {\n  actionType: UserDataActionType.setEditingFolder;\n  folderId: string | undefined;\n  folderType: FolderType;\n}\n\nexport interface SetFolderType {\n  actionType: UserDataActionType.setFolderType;\n  folderType: FolderType;\n}\n\nexport type UserDataAction =\n  | {actionType: UserDataGenericAction}\n  | UserDataSet\n  | SetActiveFolder\n  | SetFolderType\n  | SetEditingFolder;\n\nexport interface UserDataResponse {\n  userDataState: CurrentUserData;\n  userDataDispatch: React.Dispatch<UserDataAction>;\n}\n\nconst userDataReducer = (\n  state: CurrentUserData,\n  action: UserDataAction,\n): CurrentUserData => {\n  const {actionType} = action;\n  switch (actionType) {\n    case UserDataActionType.setUser:\n      return {\n        ...state,\n        user: action.userData,\n      };\n    case UserDataActionType.setActiveFolder:\n      return {\n        ...state,\n        currentFolderIds: {\n          ...(state.currentFolderIds || {}),\n          [action.folderType]: action.folderId,\n        },\n        isEditingFolder: {\n          ...(state.isEditingFolder || {}),\n          [action.folderType]: undefined,\n        },\n      };\n    case UserDataActionType.setFolderType:\n      return {\n        ...state,\n        currentFolderType: action.folderType,\n      };\n    case UserDataActionType.setEditingFolder:\n      return {\n        ...state,\n        isEditingFolder: {\n          ...(state.isEditingFolder || {}),\n          [action.folderType]: action.folderId,\n        },\n        currentFolderIds: {\n          ...(state.currentFolderIds || {}),\n          [action.folderType]: action.folderId,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useUserData = (): UserDataResponse => {\n  // const user = useQuery(\"UserData\", async ()=>await getUserData(), {refetchOnMount:false, refetchOnReconnect:false, refetchOnWindowFocus:false})\n  const [userDataState, userDataDispatch] = useReducer(\n    userDataReducer,\n    {\n      user: {},\n      currentFolderIds: {},\n      colors: {},\n      isEditingFolder: {},\n    },\n  );\n\n  return {\n    userDataState,\n    userDataDispatch,\n  };\n};\n","import React from 'react';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport ContactsView from '../components/contacts/contacts';\nimport Chat from '../components/contacts/chat';\nimport {FolderType} from '../types';\nimport FolderPage from '../components/folder/folderpage';\nimport {ChatStackParams} from '../types/nav';\n\nconst ChatStack = createStackNavigator<ChatStackParams>();\n\nexport const createChatStack = () => {\n  const ChatComponent = () => <Chat />;\n  const FolderComponent = () => {\n    return <FolderPage folderType={FolderType.contact} />;\n  };\n\n  const ContactsComponent = () => <ContactsView />;\n  const ChatStackScreen = () => {\n    return (\n      <ChatStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <ChatStack.Screen\n          name=\"Contacts\"\n          component={ContactsComponent}\n          options={{\n            freezeOnBlur: true,\n          }}\n        />\n        <ChatStack.Screen\n          name=\"Chat\"\n          component={ChatComponent}\n          options={({route}) => ({\n            freezeOnBlur: true,\n          })}\n        />\n        <ChatStack.Screen\n          name=\"Folder\"\n          component={FolderComponent}\n          options={({route}) => ({\n            freezeOnBlur: true,\n          })}\n        />\n      </ChatStack.Navigator>\n    );\n  };\n  return ChatStackScreen;\n};\n","import React, {memo} from 'react';\n\nimport FolderPage from '../components/folder/folderpage';\nimport {FolderType} from '../types';\nimport FolderLibrary from '../components/folder/folderlibrary';\nimport {useFolders} from '../hooks/useFolders';\nimport EditorProject from '../components/editor/editorproject';\nimport {getFolderContent, getFoldersByType, writeItem} from '../api';\nimport {EditorStackParams} from '../types/nav';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\n\nconst folderType = FolderType.editor;\nconst EditorStack = createNativeStackNavigator<EditorStackParams>();\n\nconst FolderComponent = memo(() => (\n  <FolderPage folderType={folderType} />\n));\nconst FolderLibraryComponent = memo(() => (\n  <FolderLibrary\n    dataHook={useFolders(\n      folderType,\n      getFoldersByType,\n      getFolderContent,\n      writeItem,\n    )}\n  />\n));\nexport const createEditor = () => {\n  const EditorProjectScreen = memo(() => <EditorProject />);\n  const EditorStackScreen = () => {\n    return (\n      <EditorStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <EditorStack.Screen\n          name=\"EditorProjects\"\n          options={{orientation: 'portrait'}}\n          component={FolderLibraryComponent}\n        />\n        <EditorStack.Screen\n          name=\"EditorProject\"\n          options={{orientation: 'all'}}\n          component={EditorProjectScreen}\n        />\n        <EditorStack.Screen\n          name=\"Folder\"\n          options={{orientation: 'portrait'}}\n          component={FolderComponent}\n        />\n      </EditorStack.Navigator>\n    );\n  };\n  return EditorStackScreen;\n};\n","import React, {memo} from 'react';\nimport {createStackNavigator} from '@react-navigation/stack';\n\nimport FolderPage from '../components/folder/folderpage';\nimport {FolderType} from '../types';\nimport FolderLibrary from '../components/folder/folderlibrary';\nimport {useFolders} from '../hooks/useFolders';\nimport EncoderProject from '../components/encoder/encoderproject';\nimport {useRoute} from '@react-navigation/native';\nimport {getFolderContent, getFoldersByType, writeItem} from '../api';\nimport {EncoderStackParams} from '../types/nav';\nconst folderType = FolderType.encoder;\n\nconst EncoderStack = createStackNavigator<EncoderStackParams>();\n\nconst FolderComponent = memo(() => (\n  <FolderPage folderType={folderType} />\n));\nconst FolderLibraryComponent = memo(() => (\n  <FolderLibrary\n    dataHook={useFolders(\n      folderType,\n      getFoldersByType,\n      getFolderContent,\n      writeItem,\n    )}\n  />\n));\nexport const createEncoder = () => {\n  const EncoderProjectScreen = memo(() => (\n    <EncoderProject\n      writeItem={writeItem}\n      routeParams={useRoute().params}\n    />\n  ));\n  const EncoderStackScreen = () => {\n    return (\n      <EncoderStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <EncoderStack.Screen\n          name=\"EncoderProjects\"\n          component={FolderLibraryComponent}\n        />\n        <EncoderStack.Screen\n          name=\"EncoderProject\"\n          component={EncoderProjectScreen}\n        />\n        <EncoderStack.Screen\n          name=\"Folder\"\n          component={FolderComponent}\n        />\n      </EncoderStack.Navigator>\n    );\n  };\n  return EncoderStackScreen;\n};\n","import React from 'react';\nimport FolderPage from '../components/folder/folderpage';\nimport HomeView from '../components/media/home';\nimport {FolderType} from '../types';\nimport {FileStackParams} from '../types/nav';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\n\nconst FolderComponent = () => (\n  <FolderPage folderType={FolderType.media} />\n);\n\nconst HomeComponent = () => <HomeView />;\n\nconst FileStack = createNativeStackNavigator<FileStackParams>();\n\nexport const createFileStack = () => {\n  const FileStackScreen = () => {\n    return (\n      <FileStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <FileStack.Screen\n          name=\"Files\"\n          options={{orientation: 'portrait'}}\n          component={HomeComponent}\n          options={{\n            freezeOnBlur: true,\n          }}\n        />\n        <FileStack.Screen\n          name=\"Folder\"\n          options={{orientation: 'portrait'}}\n          component={FolderComponent}\n          options={({route}) => ({\n            freezeOnBlur: true,\n          })}\n        />\n      </FileStack.Navigator>\n    );\n  };\n  return FileStackScreen;\n};\n","import React from 'react';\nimport {createStackNavigator} from '@react-navigation/stack';\n\nimport SettingsView from '../components/settings/settings';\nimport DevicesScreen from '../components/settings/devices';\nimport DatabasesScreen from '../components/settings/databases';\nimport {SettingsStackParams} from '../types/nav';\n\nconst RenderSettings = (props: any) => <SettingsView {...props} />;\nconst Devices = (props: any) => <DevicesScreen {...props} />;\nconst Databases = (props: any) => <DatabasesScreen {...props} />;\n\nconst SettingsStack = createStackNavigator<SettingsStackParams>();\n\nexport const createSettings = () => {\n  const SettingsStackScreen = () => {\n    return (\n      <SettingsStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <SettingsStack.Screen\n          name=\"Settings\"\n          component={RenderSettings}\n        />\n        <SettingsStack.Screen name=\"Devices\" component={Devices} />\n        <SettingsStack.Screen name=\"Drive\" component={Devices} />\n        <SettingsStack.Screen\n          name=\"Databases\"\n          component={Databases}\n        />\n      </SettingsStack.Navigator>\n    );\n  };\n  return SettingsStackScreen;\n};\n","const config = {\n  screens: {\n    Starp: {\n      path: 'webapp',\n      screens: {\n        FilesTab: {\n          path: 'media',\n          screens: {\n            Folder: {\n              path: 'folder/:folderId',\n              // exact:true\n            },\n            Files: {\n              path: '/',\n            },\n          },\n        },\n        SettingsTab: {\n          path: 'settings',\n          screens: {\n            Devices: {\n              path: 'devices',\n              // exact:true\n            },\n            Drive: {\n              path: 'drive',\n              // exact:true\n            },\n            Databases: {\n              path: 'databases',\n              // exact:true\n            },\n            Settings: {\n              path: '/',\n              // exact:true\n            },\n          },\n        },\n        ContactsTab: {\n          path: 'contact',\n          screens: {\n            Chat: {\n              path: 'chat/:chatId',\n              // exact:true\n            },\n            Contacts: {\n              path: '/',\n              // exact:true\n            },\n            Folder: {\n              path: 'folder/:folderId',\n              // exact:true\n            },\n          },\n        },\n        EncoderTab: {\n          path: 'encoder',\n          screens: {\n            EncoderProjects: {\n              path: '/',\n              // exact:true\n            },\n            EncoderProject: {\n              path: 'project/:projectId',\n              // exact:true\n            },\n            Folder: {\n              path: 'folder/:folderId',\n              // exact:true\n            },\n          },\n        },\n        EditorTab: {\n          path: 'editor',\n          screens: {\n            EditorProjects: {\n              path: '/',\n              // exact:true\n            },\n            EditorProject: {\n              path: 'project/:projectId',\n              // exact:true\n            },\n            Folder: {\n              path: 'folder/:folderId',\n              // exact:true\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const linking = {\n  prefixes: [\n    'starpy://',\n    'https://www.starpy.me',\n    /* your linking prefixes */\n  ],\n  config,\n};\n","import {useDispatch, useSelector} from 'react-redux';\nimport type {TypedUseSelectorHook} from 'react-redux';\nimport type {RootState, AppDispatch} from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> =\n  useSelector;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport type {RootState} from '../store';\nimport {act} from 'react-test-renderer';\n\nexport interface ChatsState {\n  loadingPagination: {[key: string]: boolean};\n}\n\nconst initialState: ChatsState = {\n  loadingPagination: {},\n};\n\nexport const chatSlice = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    setPaginationState: (\n      state,\n      action: PayloadAction<{[key: string]: boolean}>,\n    ) => {\n      const key = Object.keys(action.payload)[0];\n      state.loadingPagination[key] = action.payload[key];\n    },\n  },\n});\n\nexport const {setPaginationState} = chatSlice.actions;\n\nexport default chatSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport {EncoderProject} from '../../types';\n\nexport interface EditorState {\n  encoderProgress: number;\n  caretPosition: number;\n  scrollPosition: number;\n  pixelsPerSecond: number;\n  jobs: BackgroundRenderJob[];\n  jobsProgress: {[key: string]: number};\n  isPlaying: boolean;\n  videoScrollPosition: number;\n  videoCaretPosition: number;\n  scrollParams: {\n    totalWidth: number;\n    totalScroll: number;\n  };\n  canScroll: boolean;\n  activeLayer: string;\n  prevActiveLayer: string;\n  scroll: number;\n  totalTime: number;\n  showEditor: boolean;\n  showComments: boolean;\n  isRendering: boolean;\n  renderProgress: number;\n  renderTime: number;\n  renderOutputURL?: string;\n  ffmpegLogs: string;\n  ffmpegError: boolean;\n}\n\nexport interface BackgroundRenderJob {\n  id: string;\n  encoder?: EncoderProject;\n  progress?: number;\n}\n\nconst initialState: EditorState = {\n  encoderProgress: 0,\n  caretPosition: 0,\n  scrollPosition: 0,\n  pixelsPerSecond: 8,\n  jobs: [],\n  jobsProgress: {},\n  isPlaying: false,\n  videoCaretPosition: 0,\n  videoScrollPosition: 0,\n  scrollParams: {\n    totalWidth: 0,\n    totalScroll: 0,\n  },\n  canScroll: true,\n  activeLayer: '1',\n  prevActiveLayer: '1',\n  scroll: 0,\n  totalTime: 0,\n  showEditor: true,\n  showComments: false,\n  isRendering: false,\n  renderProgress: 0,\n  renderTime: 0,\n  ffmpegLogs: '',\n  ffmpegError: false,\n};\n\nexport const editorSlice = createSlice({\n  name: 'editor',\n  initialState,\n  reducers: {\n    setEncoderProgress: (state, action: PayloadAction<number>) => {\n      state.encoderProgress = action.payload;\n    },\n    setActiveLayer: (\n      state,\n      action: PayloadAction<{\n        activeLayerId: string;\n        caretPosition: number;\n        scrollPosition: number;\n      }>,\n    ) => {\n      if (state.isPlaying === true) {\n        state.videoCaretPosition = action.payload.caretPosition;\n        state.videoScrollPosition = action.payload.scrollPosition;\n        state.activeLayer = action.payload.activeLayerId;\n        // console.info(\"active update video\", state.videoCaretPosition, state.videoScrollPosition)\n      }\n    },\n    setCaretPosition: (state, action: PayloadAction<number>) => {\n      state.caretPosition = action.payload;\n      if (state.isPlaying === false) {\n        state.videoCaretPosition = action.payload;\n      }\n    },\n    setScrollPosition: (state, action: PayloadAction<number>) => {\n      state.scrollPosition = action.payload;\n      if (state.isPlaying === false) {\n        state.videoScrollPosition = action.payload;\n      }\n    },\n    setPixelsPerSecond: (state, action: PayloadAction<number>) => {\n      state.pixelsPerSecond = action.payload;\n    },\n    createBackgroundRenderJob: (\n      state,\n      action: PayloadAction<BackgroundRenderJob>,\n    ) => {\n      state.jobs.push(action.payload);\n    },\n    setJobProgress: (\n      state,\n      action: PayloadAction<BackgroundRenderJob>,\n    ) => {\n      state.jobsProgress[action.payload.id] =\n        action.payload.progress!;\n    },\n    setIsPlaying: (state, action: PayloadAction<boolean>) => {\n      state.isPlaying = action.payload;\n      if (action.payload === false) {\n        state.videoCaretPosition = state.caretPosition;\n        state.videoScrollPosition = state.scrollPosition;\n      }\n    },\n    setTotalTime: (state, action: PayloadAction<number>) => {\n      state.totalTime = action.payload;\n    },\n    setScrollParams: (\n      state,\n      action: PayloadAction<{\n        totalWidth: number;\n        totalScroll: number;\n      }>,\n    ) => {\n      state.scrollParams = action.payload;\n      const canScroll =\n        state.scrollParams.totalScroll >\n        state.scrollParams.totalWidth;\n      const newscroll =\n        state.scrollParams.totalScroll -\n        state.scrollParams.totalWidth;\n      if (\n        state.canScroll !== canScroll &&\n        state.isPlaying === false\n      ) {\n        // console.info('update scroll', newscroll, canScroll)\n        state.canScroll = canScroll;\n      }\n      if (state.scroll !== newscroll && !isNaN(newscroll)) {\n        state.scroll = newscroll;\n      }\n    },\n    setShowEditor: (state, action: PayloadAction<boolean>) => {\n      state.showEditor = action.payload;\n    },\n    setShowComments: (state, action: PayloadAction<boolean>) => {\n      state.showComments = action.payload;\n    },\n    setIsRendering: (state, action: PayloadAction<boolean>) => {\n      state.isRendering = action.payload;\n      if (state.isRendering) {\n        state.ffmpegLogs = '';\n        state.ffmpegError = false;\n      }\n    },\n    setRenderUrl: (\n      state,\n      action: PayloadAction<string | undefined>,\n    ) => {\n      state.renderOutputURL = action.payload;\n    },\n    setRenderProgress: (\n      state,\n      action: PayloadAction<{progress: number; time: number}>,\n    ) => {\n      state.renderProgress = action.payload.progress;\n      state.renderTime = action.payload.time / 1000000;\n      // console.info('renderTime', state.renderTime)\n      state.caretPosition = state.renderTime * state.pixelsPerSecond;\n      state.videoCaretPosition = state.caretPosition;\n    },\n    addNewLogLine: (state, action: PayloadAction<string>) => {\n      state.ffmpegLogs += '\\n' + action.payload;\n      if (action.payload.toLowerCase().search('error') > -1)\n        state.ffmpegError = true;\n    },\n  },\n});\n\nexport const {\n  setEncoderProgress,\n  setCaretPosition,\n  setScrollPosition,\n  setPixelsPerSecond,\n  setIsPlaying,\n  setScrollParams,\n  setActiveLayer,\n  setShowComments,\n  setShowEditor,\n  setIsRendering,\n  setRenderUrl,\n  setRenderProgress,\n  addNewLogLine,\n} = editorSlice.actions;\n\nexport default editorSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport type {RootState} from '../store';\nimport {act} from 'react-test-renderer';\n\nexport interface EncoderState {\n  encoderProgress: number;\n}\n\nconst initialState: EncoderState = {\n  encoderProgress: 0,\n};\n\nexport const encoderSlice = createSlice({\n  name: 'encoder',\n  initialState,\n  reducers: {\n    setEncoderProgress: (state, action: PayloadAction<number>) => {\n      state.encoderProgress = action.payload;\n    },\n  },\n});\n\nexport const {setEncoderProgress} = encoderSlice.actions;\n\nexport default encoderSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\n\nexport interface FileSystemState {\n  isDeleting: boolean;\n  deleteItemId?: string;\n  downloadingProgress: {[key: string]: number | undefined};\n}\n\nconst initialState: FileSystemState = {\n  isDeleting: false,\n  downloadingProgress: {},\n};\n\nexport const FileSystemSlice = createSlice({\n  name: 'fs',\n  initialState,\n  reducers: {\n    setDeleteItem: (\n      state,\n      {\n        payload: {deleteItemId},\n      }: PayloadAction<{deleteItemId: string}>,\n    ) => {\n      state.isDeleting = deleteItemId ? true : false;\n      state.deleteItemId = deleteItemId;\n    },\n    setDownloadingProgress: (\n      state,\n      {\n        payload: {itemId, progress},\n      }: PayloadAction<{\n        itemId: string;\n        progress: number | undefined;\n      }>,\n    ) => {\n      state.downloadingProgress[itemId] = progress;\n    },\n  },\n});\n\nexport const {setDeleteItem, setDownloadingProgress} =\n  FileSystemSlice.actions;\n\nexport default FileSystemSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport type {RootState} from '../store';\nimport {Media} from '../../types';\n\nexport interface MediaState {\n  currentMediaPlaying?: string;\n  currentMediaId?: string;\n  isMediaPlaying?: boolean;\n  isMediaPaused?: boolean;\n  isMediaPreloadingPlayback?: boolean;\n  isMediaDownloading?: boolean;\n  isLoadingMedia?: boolean;\n  currentMedia?: Media;\n}\n\nexport enum MediaActionType {\n  stop = 'stop',\n  play = 'play',\n  loaded = 'loaded',\n  pause = 'pause',\n}\n\nexport interface MediaPlayAction {\n  actionType: MediaActionType.play;\n  mediaId: string;\n  media: Media;\n}\nexport interface MediaPauseAction {\n  actionType: MediaActionType.pause;\n  pause: boolean;\n}\n\nexport interface MediaLoadedAction {\n  actionType: MediaActionType.loaded;\n  mediaId: string;\n}\n\nexport type MediaGenericActions = MediaActionType.stop;\n\nexport type MediaAction =\n  | {actionType: MediaGenericActions}\n  | MediaPlayAction\n  | MediaLoadedAction;\n\nconst initialState: MediaState = {};\n\nexport const mediaSlice = createSlice({\n  name: 'media',\n  initialState,\n  reducers: {\n    stop: state => {\n      state.isLoadingMedia = undefined;\n      state.currentMediaId = undefined;\n    },\n    play: (state, action: PayloadAction<MediaPlayAction>) => {\n      state.currentMediaId = action.payload.mediaId;\n      state.currentMedia = action.payload.media;\n      state.isLoadingMedia = true;\n    },\n    togglePause: (state, action: PayloadAction<MediaPauseAction>) => {\n      state.isMediaPaused = action.payload.pause;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    loaded: (state, _action: PayloadAction<MediaLoadedAction>) => {\n      state.isLoadingMedia = false;\n      state.isMediaPlaying = true;\n    },\n  },\n});\n\nexport const {stop, play, loaded, togglePause} = mediaSlice.actions;\n\nexport const selectCurrentMediaId = (state: RootState) =>\n  state.media.currentMediaId;\n\nexport const selectIsLoadingMedia = (state: RootState) =>\n  state.media.isLoadingMedia;\n\nexport const selectIsPlayingMedia = (state: RootState) =>\n  state.media.isMediaPlaying;\n\nexport default mediaSlice.reducer;\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {\n  RootStackRouteNames,\n  StackRouteName,\n  UnifiedStackParam,\n} from '../../types/nav';\nimport {Folder, FolderType} from '../../types';\n\nexport interface UIState {\n  isTabBarHidden: boolean;\n  isKeyboardOpen: boolean;\n  keyboardHeight: number;\n  currentPage: StackRouteName;\n  parentName: RootStackRouteNames;\n  params: UnifiedStackParam;\n  isReady: boolean;\n  isSignedIn: boolean;\n  isBackEnabled: boolean;\n  isEditing: boolean;\n  editingMode:\n    | 'party'\n    | 'folder'\n    | 'media'\n    | 'search'\n    | 'database'\n    | undefined;\n  folderType: FolderType;\n}\n\nconst initialState: UIState = {\n  isTabBarHidden: false,\n  isKeyboardOpen: false,\n  keyboardHeight: 0,\n  currentPage: 'FilesTab',\n  isReady: false,\n  isSignedIn: false,\n  params: undefined,\n  isBackEnabled: false,\n  folderType: FolderType.media,\n  isEditing: false,\n  editingMode: undefined,\n  parentName: 'FilesTab',\n};\n\nconst PagesWithoutTabBar = ['Chat', 'EditorProject'];\n\nconst PagesWithBackEnabled = [\n  'Devices',\n  'Databases',\n  'Drive',\n  'Folder',\n  'Chat',\n  'EncoderProject',\n  'EditorProject',\n];\n\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    setCurrentPage(\n      state,\n      {\n        payload: {currentPage, params, parentName},\n      }: PayloadAction<{\n        currentPage: StackRouteName;\n        params: UnifiedStackParam;\n        parentName: RootStackRouteNames;\n      }>,\n    ) {\n      console.info({currentPage, parentName});\n      state.currentPage = currentPage;\n      state.params = params;\n      state.parentName = parentName;\n\n      if (PagesWithoutTabBar.includes(currentPage)) {\n        state.isTabBarHidden = true;\n      } else {\n        state.isTabBarHidden = false;\n      }\n\n      if (PagesWithBackEnabled.includes(currentPage)) {\n        state.isBackEnabled = true;\n      } else {\n        state.isBackEnabled = false;\n      }\n\n      let folderType = FolderType.media;\n\n      if (currentPage === 'FilesTab') folderType = FolderType.media;\n      if (currentPage === 'ContactsTab')\n        folderType = FolderType.contact;\n      if (currentPage === 'ContactsTab')\n        folderType = FolderType.contact;\n      if (currentPage === 'Contacts') folderType = FolderType.contact;\n      if (currentPage === 'Chat') folderType = FolderType.contact;\n      if (currentPage === 'SettingsTab')\n        folderType = FolderType.settings;\n      if (currentPage === 'EncoderTab')\n        folderType = FolderType.encoder;\n      if (currentPage === 'EncoderProject')\n        folderType = FolderType.encoder;\n      if (currentPage === 'EditorTab') folderType = FolderType.editor;\n      if (currentPage === 'EditorProject')\n        folderType = FolderType.editor;\n      if (currentPage === 'Devices') folderType = FolderType.settings;\n      if (currentPage === 'Databases')\n        folderType = FolderType.settings;\n      if (currentPage === 'Drive') folderType = FolderType.settings;\n      if (currentPage === 'Settings')\n        folderType = FolderType.settings;\n\n      if (currentPage === 'Folder') {\n        if (parentName === 'EditorTab')\n          folderType = FolderType.editor;\n        if (parentName === 'EncoderTab')\n          folderType = FolderType.encoder;\n        if (parentName === 'ContactsTab')\n          folderType = FolderType.contact;\n        if (parentName === 'SettingsTab')\n          folderType = FolderType.settings;\n        if (parentName === 'FilesTab') folderType = FolderType.media;\n      }\n\n      state.folderType = folderType;\n    },\n    setKeyboardHeight(\n      state,\n      {\n        payload: {keyboardHeight},\n      }: PayloadAction<{keyboardHeight: number}>,\n    ) {\n      state.keyboardHeight = keyboardHeight;\n      if (keyboardHeight === 0) {\n        state.isKeyboardOpen = false;\n      } else {\n        state.isKeyboardOpen = true;\n      }\n    },\n    setEditingMode(\n      state,\n      {payload}: PayloadAction<UIState['editingMode']>,\n    ) {\n      state.editingMode = payload;\n      if (payload === undefined || payload === 'media')\n        state.isEditing = false;\n      else state.isEditing = true;\n    },\n    setIsReady(state, {payload}: PayloadAction<boolean>) {\n      state.isReady = payload;\n    },\n    setIsSigned(state, {payload}: PayloadAction<boolean>) {\n      state.isSignedIn = payload;\n    },\n  },\n});\nexport const {\n  setCurrentPage,\n  setKeyboardHeight,\n  setIsReady,\n  setIsSigned,\n  setEditingMode,\n} = uiSlice.actions;\nexport default uiSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport type {RootState} from '../store';\nimport {Media} from '../../types';\nimport {AxiosProgressEvent} from 'axios';\n\nexport interface UploadState {\n  file?: FileReader;\n  media?: Media;\n  modalVisible: boolean;\n  uploadToCloud: boolean;\n  shareToWT: boolean;\n  encryption: boolean;\n  persist: boolean;\n  fileUploadProgress: AxiosProgressEvent | undefined;\n  isUploadInProgress: boolean;\n  totalChunks: number;\n}\n\nexport interface UploadAction {\n  file: FileReader;\n  media: Media;\n}\n\nexport interface UploadContinueAction extends UploadAction {\n  uploadId: string;\n}\n\nexport interface UploadStopAction {\n  uploadId: string;\n}\n\nconst initialState: UploadState = {\n  modalVisible: false,\n  uploadToCloud: false,\n  persist: true,\n  shareToWT: false,\n  encryption: false,\n  fileUploadProgress: undefined,\n  isUploadInProgress: false,\n  totalChunks: 0,\n};\n\nexport const uploadSlice = createSlice({\n  name: 'upload',\n  initialState,\n  reducers: {\n    startOnboarding: (state, action: PayloadAction<UploadAction>) => {\n      console.info('start onboarding', action);\n      state.file = action.payload.file;\n      state.media = action.payload.media;\n      state.modalVisible = true;\n    },\n    continue: (\n      state,\n      action: PayloadAction<UploadContinueAction>,\n    ) => {},\n    cancel: state => {\n      state.modalVisible = false;\n    },\n    setMediaModalVisible: (state, action: PayloadAction<boolean>) => {\n      state.modalVisible = action.payload;\n      if (!action.payload) {\n        state.file = undefined;\n      }\n    },\n    setFileUploadProgress: (\n      state,\n      action: PayloadAction<AxiosProgressEvent>,\n    ) => {\n      state.fileUploadProgress = action.payload;\n    },\n    setUploadInProgress: (state, action: PayloadAction<boolean>) => {\n      state.isUploadInProgress = action.payload;\n    },\n    setShareToWt: (state, action: PayloadAction<boolean>) => {\n      state.shareToWT = action.payload;\n    },\n    setUploadToCloud: (state, action: PayloadAction<boolean>) => {\n      state.uploadToCloud = action.payload;\n    },\n    setEncrypt: (state, action: PayloadAction<boolean>) => {\n      state.encryption = action.payload;\n    },\n    setMetaForCloud: (state, action: PayloadAction<string>) => {\n      state.media!.webpage_url = action.payload;\n      state.media!.hasCloud = true;\n      state.media!.extractor = 'cloud';\n      state.media!.url = action.payload;\n    },\n  },\n});\n\nexport const {\n  startOnboarding,\n  cancel,\n  setMediaModalVisible,\n  setFileUploadProgress,\n  setUploadInProgress,\n  setUploadToCloud,\n  setEncrypt,\n  setShareToWt,\n  setMetaForCloud,\n} = uploadSlice.actions;\n\nexport const selectCurrentMediaId = (state: RootState) =>\n  state.media.currentMediaId;\n\nexport const selectIsLoadingMedia = (state: RootState) =>\n  state.media.isLoadingMedia;\n\nexport const selectIsPlayingMedia = (state: RootState) =>\n  state.media.isMediaPlaying;\n\nexport default uploadSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport mediaReducer from './slices/media';\nimport uploadReducer from './slices/upload';\nimport editorReducer from './slices/editor';\nimport chatReducer from './slices/chat';\nimport fsReducer from './slices/fs';\nimport encoderReducer from './slices/encoder';\nimport uiReducer from './slices/ui';\nexport const store = configureStore({\n  reducer: {\n    media: mediaReducer,\n    upload: uploadReducer,\n    encoder: encoderReducer,\n    chat: chatReducer,\n    fs: fsReducer,\n    editor: editorReducer,\n    ui: uiReducer,\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import {IMessage} from 'react-native-gifted-chat';\n\nexport interface Contact {\n  id: string;\n  isContact: boolean;\n  name: string;\n  photo: string;\n  date: number;\n  description: string;\n  email?: string;\n  originalId: string;\n  folderId: string;\n  online?: boolean;\n  lastSeen?: number;\n  thumbnail?: string;\n  unread?: number;\n  partyId?: string;\n  mnemonic: string;\n}\n\nexport interface ContactRes {\n  docs: Contact[];\n}\n\nexport interface ChatRoom {\n  userIds: string[];\n  _id: string;\n  created: number;\n  admins: string[];\n  userId: string[];\n}\n\nexport interface ChatRoomRes {\n  docs: ChatRoom[];\n}\n\nexport enum ChatMessageType {\n  media = 'media',\n  call = 'call',\n  text = 'text',\n  party_request = 'party_request',\n  party_confirmation = 'party_confirmation',\n  party_start = 'party_start',\n  party_join = 'party_join',\n  party_stop = 'party_stop',\n  party_quit = 'party_quit',\n  party_media = 'party_media',\n  party_stop_media = 'party_media_stop',\n  party_media_pause = 'party_media_pause',\n  party_media_unpause = 'party_media_unpause',\n  party_media_sync = 'party_media_sync',\n}\n\nexport interface ChatMessage extends IMessage {\n  id: string;\n  created: number;\n  roomId: string;\n  userId: string;\n  readByUserIds: string[];\n  jwt: string;\n  messageStatus: ChatMessageStatus;\n  text: string;\n  pushed?: boolean;\n  encryptedContent?: string;\n  messageType?: ChatMessageType;\n  partyId?: string;\n  createdAt: number;\n  userName: string;\n  message: {\n    type: 'media' | 'call' | 'text';\n    data: string;\n  };\n  orderId: number;\n}\n\nexport enum ChatMessageStatus {\n  created = 'created',\n  sent = 'sent',\n  delivered = 'delivered',\n  read = 'read',\n}\n\nexport interface ChatMessageRes {\n  docs: ChatMessage[];\n}\n","export interface Folder {\n  id: string;\n  isFolder: boolean;\n  userId: string;\n  folderType: FolderType;\n  title: string;\n  isOpen?: boolean;\n  date: number;\n  isEditing?: boolean;\n  isInfoOpen?: boolean;\n  sortId?: number;\n  thumbnail?: string;\n  files?: string[];\n  folderId?: string;\n  orderId: number;\n  mnemonic?: string;\n  isShared?: boolean;\n}\n\nexport enum FolderType {\n  contact = 'contact',\n  media = 'media',\n  settings = 'settings',\n  encoder = 'encoder',\n  editor = 'editor',\n  database = 'database',\n}\n\nexport interface FolderRes {\n  docs: Folder[];\n}\n","import {Contact} from './Contact';\nimport {Folder} from './Folder';\n\nexport interface ExtractorResponse {\n  id: string;\n  url: string;\n  extractor: string;\n  _has_drm?: boolean;\n  _filename?: string;\n  _type?: string;\n  _version?: string;\n}\n\nexport interface MediaStateType {\n  currentVideo: Media | null;\n  currentVideoId: string | null;\n  isLoading: boolean;\n  isPlaying: boolean;\n  openItemId: string | null;\n  enqMedia: (media: Media) => Promise<any>;\n  setOpenItem: (i: Media) => void;\n  webViewUrl?: string | null;\n  host?: string;\n  fileParam?: string;\n  webViewRef?: any;\n  magnetURI?: string | null;\n  onUpdateMagnet?: () => Promise<any>;\n}\n\nexport interface Media extends ExtractorResponse {\n  _id?: string;\n  _rev?: string;\n  _deleted?: boolean;\n  date: number;\n  isMediaNew: boolean;\n  folderId: string;\n  originalId: string;\n  webpage_url?: string;\n  title: string;\n  isPlaying?: boolean;\n  isDownloaded?: boolean;\n  isDownloading?: boolean;\n  isOpen?: boolean;\n  isInfoOpen?: boolean;\n  thumbnail?: string;\n  currentPosition?: number;\n  local?: string;\n  torrentFileName?: string;\n  files?: IFile[];\n  magnetURI?: string;\n  infoHash?: string;\n  description?: string;\n  filename: string;\n  fileType: string;\n  userId: string;\n  size?: number;\n  type?: string;\n  hasCloud?: boolean;\n  isEncoderProject?: boolean;\n  width: number;\n  height: number;\n  orderId: number;\n  duration?: number;\n  isCopy?: string;\n  mnemonic: string;\n  torrentFile?: ArrayBuffer;\n}\n\nexport enum FFMpegPreset {\n  ultrafast = 'ultrafast',\n  superfast = 'superfast',\n  veryfast = 'veryfast',\n  faster = 'faster',\n  fast = 'fast',\n  medium = 'medium',\n}\n\nexport enum FFMpegOutputType {\n  mp4 = 'mp4',\n  gif = 'gif',\n}\n\nexport interface EncoderProject extends Media {\n  encoding: {\n    outputFilePath?: string;\n    compressionLevel: number;\n    width: number;\n    height: number;\n    crf: number;\n    preset: FFMpegPreset;\n    output: FFMpegOutputType;\n    code: String[];\n    lastUpdated: number;\n    start?: number;\n    end?: number;\n    soundVolume?: number;\n  };\n}\n\nexport interface EditorComment extends EncoderProject, Contact {\n  description: string;\n}\n\nexport interface EditorProject extends Folder {\n  isEditorProject?: boolean;\n  editor: {\n    length: number;\n    width: number;\n    height: number;\n    lastUpdated: number;\n    start?: number;\n    end?: number;\n    outputFilePath?: string;\n    compressionLevel: number;\n    framerate?: number;\n    aspectRatio?: string;\n    preset: FFMpegPreset;\n    output: FFMpegOutputType;\n    code?: string[];\n  };\n}\n\nexport interface EditorLayer extends Folder {\n  isEditorLayer?: boolean;\n  editor: {\n    muted?: boolean;\n    videoDisabled?: boolean;\n    isCommentLayer?: boolean;\n  };\n  media?: EncoderProject[];\n}\n\nexport interface MediaRes {\n  docs: Media[];\n}\n\nexport interface IFile {\n  url: string;\n  name: string;\n  type: string;\n}\n","export * from './Contact';\nexport * from './Media';\nexport * from './UserInfo';\nexport * from './Folder';\n\nimport {Contact} from './Contact';\nimport {Media} from './Media';\nimport {UserInfo} from './UserInfo';\nimport {Folder} from './Folder';\nimport {Platform} from 'react-native';\nimport {useMedia} from '../hooks/useMedia';\nimport {useContacts} from '../hooks/useContacts';\nimport {useFolders} from '../hooks/useFolders';\nimport {useFolder} from '../hooks/useFolder';\n\nexport enum FTSIndex {\n  title = 'titleFTSIndex',\n  name = 'nameFTSIndex',\n  text = 'textFTSIndex',\n}\n\nexport interface DocsGeneric {\n  docs: (Folder | Media | Contact | UserInfo)[];\n  rows: {\n    _id: string;\n    doc: Folder | Media | Contact | UserInfo;\n  }[];\n}\n\nexport interface Device {\n  id: string;\n  manufacturer: string;\n  createdAt: number;\n  isDevice: boolean;\n  model: string;\n  ip?: string;\n  userAgent: string;\n  os: string;\n  platform: typeof Platform.OS;\n}\n\nexport type DataHook = ReturnType<\n  | typeof useFolders\n  | typeof useMedia\n  | typeof useContacts\n  | typeof useFolder\n>;\n\nexport type DataHookFolders = ReturnType<\n  typeof useFolders | typeof useMedia | typeof useContacts\n>;\n\nexport type DocsGenericArray = (\n  | Folder\n  | Media\n  | Contact\n  | UserInfo\n)[];\n","import {\n  DrawerNavigationState,\n  EventArg,\n  TabNavigationState,\n} from '@react-navigation/native';\n\nexport type SettingsStackParams = {\n  Settings: undefined;\n  Databases: undefined;\n  Devices: undefined;\n  Drive: undefined;\n};\n\nexport type FileStackParams = {\n  Files: undefined;\n  Folder: FolderParams;\n};\n\nexport type EncoderStackParams = {\n  EncoderProjects: undefined;\n  Folder: FolderParams;\n  EncoderProject: ProjectParams;\n};\n\nexport type EditorStackParams = {\n  EditorProjects: undefined;\n  Folder: FolderParams;\n  EditorProject: ProjectParams;\n};\n\nexport type ChatStackParams = {\n  Contacts: undefined;\n  Folder: FolderParams;\n  Chat: ChatParams;\n};\nexport interface ProjectParams {\n  projectId: string;\n  mnemonic?: string;\n  parentFolderId: string;\n  folderId: string;\n  encoder?: string;\n}\n\nexport interface FolderParams {\n  folderId: string;\n  mnemonic?: string;\n  parentFolderId?: string;\n  userId?: string;\n  title: string;\n}\n\nexport interface ChatParams {\n  parentFolderId: string;\n  name: string;\n  mnemonic: string;\n  chatId: string;\n  page?: number;\n}\n\nexport interface RootStackParams {\n  Starp: {\n    screen: RootStackRouteNames;\n    params: {\n      screen: keyof UnifiedStackParams;\n      params: UnifiedStackParam;\n    };\n  };\n}\n\nexport type ProjectsStackedParams = EditorStackParams &\n  EncoderStackParams;\n\nexport type NavigationStackParams = EditorStackParams &\n  EncoderStackParams &\n  FileStackParams &\n  ChatStackParams &\n  SettingsStackParams;\n\nexport type UnifiedStackParams = NavigationStackParams &\n  RootStackParams;\n\nexport type ExtendedNavState = EventArg<\n  'state',\n  undefined,\n  {\n    state:\n      | DrawerNavigationState<NavigationStackParams>\n      | TabNavigationState<NavigationStackParams>;\n  }\n>;\n\nexport type UnifiedStackParam =\n  NavigationStackParams[keyof NavigationStackParams];\n\nexport type RootStackRouteNames =\n  | 'FilesTab'\n  | 'ContactsTab'\n  | 'EditorTab'\n  | 'EncoderTab'\n  | 'SettingsTab';\n\nexport const RootStackName = 'Starp';\n\nexport type StackRouteName =\n  | keyof UnifiedStackParams\n  | RootStackRouteNames;\n\nexport const RootScreens: {\n  [key in RootStackRouteNames]: keyof UnifiedStackParams;\n} = {\n  ContactsTab: 'Contacts',\n  EditorTab: 'EditorProjects',\n  FilesTab: 'Files',\n  EncoderTab: 'EncoderProjects',\n  SettingsTab: 'Settings',\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"StarpyApp:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkStarpyApp\"] = self[\"webpackChunkStarpyApp\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [248,588,249], () => (__webpack_require__(30512)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_Ionicons","_interopRequireDefault","_MaterialCommunityIcons","_Ionicons2","_App","iconFontStyles","iconFont","style","document","createElement","type","styleSheet","cssText","appendChild","createTextNode","head","initUserData","then","createRoot","getElementById","render","App","_react","_LogBox","_Platform","_app","LogBox","ignoreAllLogs","theme","Object","assign","MD3DarkTheme","fonts","configureFonts","config","default","fontFamily","fontWeight","letterSpacing","lineHeight","fontSize","isV3","_exports","_useUserData","useUserData","userDataState","userDataDispatch","_reactRedux","Provider","store","_reactQuery","QueryClientProvider","client","queryClient","_ctx","UserCtx","value","UserData","UserDataState","UserDataDispatch","_reactNativeSafeAreaContext","SafeAreaProvider","_reactNativePaper","PaperProvider","Fragment","require","db","_getRequireWildcardCache","e","WeakMap","r","t","SQLite","__esModule","has","get","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_ref","_asyncToGenerator2","openDatabaseAsync","execAsync","_ref2","writeBlob","_writeBlob","id","blob","runAsync","_x","_x2","apply","arguments","readBlobs","_readBlobs","data","getAllAsync","deletequery","map","join","_x3","_reactNativeUuid","sendChatMessage","chatId","text","mnemonic","message","getUserData","uuid","v4","userId","folderId","messageStatus","userName","name","createdAt","Date","valueOf","ndata","nEvolu","createDBConn","writeItem","_x4","genMnemonic","limit","offset","_e","_e2","_data$rows","folder","getById","query","createQuery","selectFrom","selectAll","where","orderBy","loadQuery","rows","item","err","console","error","_x5","_x6","_x7","_x8","_ref3","party","info","user","contact","authorId","authorName","isContact","system","_x9","faker","animal","bird","split","toLowerCase","color","human","fish","insect","hacker","noun","QueryClient","defaultOptions","queries","refetchOnWindowFocus","refetchOnMount","refetchOnReconnect","Database","database","ItemTable","dbConns","dbMnemoCons","defaultDBName","dbname","index","ops","createEvolu","Promise","res","indexAllFoldersForDB","subscribeSyncState","state","getSyncState","_tag","isFirstSync","refetchQueries","folders","folderPromises","all","getFolderContent","_ref4","apiKey","_localStorage","localStorage","getItem","_yield$findBy","findBy","userData","_slicedToArray2","devices","_ref5","evolu","getFoldersByType","_ref6","_ref7","_ref8","_window","parentFolderId","URL","window","location","toString","searchParams","isFolder","isEditorLayer","isEditorProject","isMediaNew","isEncoderProject","extractor","createOrUpdate","title","isDevice","userDoc","folderType","isDeleted","orderId","lastUpdated","_ref9","_ref10","key","_x10","_x11","_ref11","_e3","_e4","_item$row","row","undefined","_x12","_x13","_ref12","_databases","databases","FolderType","length","exists","find","ndb","isDatabase","date","added","_x14","_x15","_x16","initDatabaseRecord","getOwner","SomeJson","S","Struct","foo","String","bar","Boolean","ItemId","table","String1000","isCompleted","SqliteBoolean","ExpoFileSystem","ffmpeg","FFmpeg","util","fetchFile","toBlobURL","cachedMedia","cancelEncoding","terminate","createFFmpeg","cb","_resolve","_reject","_require","imported","on","log","params","load","coreURL","ffMpegWasmBaseUrl","wasmURL","encodeMedia","media","isPrerender","isCopy","nmedia","fileId","filename","encoding","cachedId","outFileId","output","getFileOpfs","dirCore","navigator","storage","getDirectory","appDirectory","dir","getDirectoryHandle","cache","getFileHandle","file","getFile","createObjectURL","opfsFile","dlFIle","downloadFileById","progress","time","execCmd","genExecCmd","execEncode","files","encoded","mediaOut","cmd","_yield$writeFileOpfs","fs","writeFile","exec","readFile","writeFileOpfs","genRenderCmd","projectData","layers","logs","_projectData$editor","filter","editor","medias","_projectData$editor2","_medias$map","_medias$map2","_encoding$compression","_encoding$framerate","threads","hardwareConcurrency","extraCode","code","trim","replace","layer","_layer$media","m","flat","_e$encoding","_e$encoding2","hasAudio","reduce","_layer$editor","muted","hasVideo","_layer$editor2","videoDisabled","audioOutput","audioMap","videoOutput","videoMap","aspectRatio","scale","width","height","filterTrim","_e$encoding3","_e$encoding4","_e$layer","_e$layer2","trimV","start","parseInt","end","duration","trimA","videosLength","_i$layer","audiosLength","_i$layer2","filterConcat","_a$layer","_a$layer2","push","concat","_toConsumableArray2","compressionLevel","preset","framerate","_encoding$compression2","prerenderOptionalCode","genExecTime","seconds","comma","endMins","endSeconds","getActiveProjectLayer","currentPosition","activeMedia","layerCount","_activeMedia","_layer","_layer2","_media$encoding","_media$encoding2","activeLayer","getNextActiveProjectMedia","startPosition","_media$encoding3","_media$encoding4","nextPosition","next","getTotalTime","_layer$media2","agv","_media$encoding5","_media$encoding6","_layer$editor3","_getActiveProjectLaye","offsetPosition","parseFloat","totalTime","encode","url","ExpoDocumentPicker","create","fileHandle","writable","createWritable","write","close","isDownloaded","getFileReaderOpfs","chunksCount","savePromises","savesCompleted","saveFileToData","fileUri","saveCount","resolve","rej","createBlobDB","blobs","bbs","buffers","_appendBuffer","Uint8Array","from","nfile","getBlobForArrayBuffer","buffer","fr","FileReader","onload","result","FileSystem","appendFile","readAsDataURL","buffer1","buffer2","tmp","byteLength","pickSingle","_pickSingle","fileInput","click","addEventListener","_fileInput$files","_fileInput$files2","size","originalId","keys","_defaults","forEach","prototype","_exportNames","enumerable","_db","_media","_chat","_fs","ExpoDevice","domain","isEditingFolder","colors","searchItems","currentFolderIds","_ExpoDevice$designNam","doInitialMigration","userAgent","designName","os","osName","browserName","brand","deviceId","device","manufacturer","ndevice","model","platform","startUpMediaSharing","link","_media$files","_media$files2","getWT","magnetURI","infoHash","_wt","_encoder","recursiveShare","shareFileToWT","innerContent","shareFolder","content","enqMedia","_yield$yield$evolu$lo","cast","sharedFolders","sharedFiles","shared","mediaId","playMediaLink","isOpera","opr","addons","opera","indexOf","InstallTrigger","test","HTMLElement","safari","pushNotification","isIE","documentMode","StyleMedia","chrome","isChrome","CSS","units","x","l","toFixed","mediaClient","mediaWorker","rtcConfig","iceServers","urls","username","credential","sdpSemantics","bundlePolicy","iceCandidatePoolSize","iceTransportPolicy","iceCandidatePoolsize","announce","createMediaClient","WebTorrent","tracker","resolveWorker","reg","worker","active","waiting","installing","resolvd2","checkState","loadWorker","target","prs","serviceWorker","register","progressCB","wt","stream","mediaClientFiles","mediaData","getVideoWT","torrent","bytes","fetch","arrayBuffer","File","streamUrls","mobileStreamingForFileIsRunning","processWT","_wt$files","_file","_file2","_file$name","_file$name2","_file$name3","_file$name4","endsWith","isVideo","Error","reject","_file3","getStreamURL","catch","torrentFileName","torrentBuffer","torrentFile","values","add","streamUrl","_worklet_16528064553584_init_data","magnet","_ref13","_x17","_ref14","shareFile","_x18","_x19","anonymous","seed","_ref15","search","_x20","__closure","__workletHash","__initData","_Text","_nav","_reactNativeGestureHandler","GestureHandlerRootView","_native","NavigationContainer","linking","fallback","_chatview","_View","_useWindowDimensions","_contentitem","isEmbed","useRoute","userQuery","useQuery","onError","contactQuery","isLoading","isFetched","useWindowDimensions","parentFolderHook","useFolder","useRouteContact","isMobile","flexDirection","backgroundColor","_foldernavigator","FolderNavigator","renderContent","dataHook","styles","_TouchableOpacity","chatViewParams","_useMessages","useMessages","messages","sendMessage","nextPage","isLoadingEarlier","current","useContext","surface","useTheme","_reactNativeGiftedChat","GiftedChat","scrollToBottom","renderLoading","ActivityIndicator","_id","onSend","avatar","photo","renderBubble","props","Bubble","_extends2","textStyle","left","textAccentColor","wrapperStyle","right","alignSelf","maxWidth","timeTextStyle","renderAvatar","_props$currentMessage","GiftedAvatar","currentMessage","avatarStyle","borderWidth","borderColor","listViewProps","scrollEventThrottle","onEndReached","loadEarlier","onLoadEarlier","renderLoadEarlier","renderChatEmpty","transform","scaleY","List","Item","p","Icon","icon","titleStyle","ProgressBar","indeterminate","visible","renderInputToolbar","inputProps","InputToolbar","containerStyle","primaryStyle","renderComposer","Composer","textInputStyle","padding","multiline","textInputAutoFocus","textInputProps","blurOnSubmit","onSubmitEditing","_props$text","renderSend","onPress","placeholder","showUserAvatar","_folderlibrary","memo","useContacts","_contactlibrary","showPublicParty","container","flex","paddingTop","marginTop","paddingLeft","tinyLogo","scroll","display","position","_useWindowDimensions2","_encoderproject","_editorform","_editorvideo","projectId","routeParams","enabled","video2","useRef","mediaRes","layersQuery","margin","className","Banner","marginHorizontal","paddingHorizontal","overflow","contentStyle","alignItems","borderLeftWidth","borderRightWidth","borderLeftColor","borderRightColor","_editorplaycontrols","EditorPlayControls","Divider","ScrollView","marginRight","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","projectQuery","encoder","_Animated","dispatch","useAppDispatch","caretPosition","useAppSelector","translateX","Animated","Value","onGestureEvent","event","nativeEvent","translationX","listener","useNativeDriver","cursor","PanGestureHandler","onHandlerStateChange","oldState","State","ACTIVE","newOffset","fullOffset","setOffset","setValue","setCaretPosition","View","opacity","justifyContent","interpolate","inputRange","outputRange","extrapolate","_item$encoding","_item$encoding2","onDragEnd","onDragStart","layerIndex","parentDataHook","nav","useNavigation","route","useQueryClient","pixelsPerSecond","maxDuration","currentDuration","writeItemMutation","useMutation","onSuccess","_onSuccess","combIndex","deleteItem","onRemoveFolder","_item$encoding3","_item$encoding4","newvalue","_value","mutateAsync","top","zIndex","borderRadius","bottom","rotate","setParams","_item$title","_item$title2","TouchableOpacity","onPressIn","onPressOut","pointerEvents","IconButton","Avatar","Text","label","marginLeft","_SafeAreaView","_Clipboard","_reactNativeSyntaxHighlighter","_reactNativeCodeEditor","scrollPosition","isPlaying","isRendering","renderOutputURL","renderProgress","ffmpegLogs","ffmpegError","_useState","useState","_useState2","showCode","setShowCode","codeEditorRef","inputWidth","codeWidth","_useState3","_useState4","outputMenuVisible","setOutputMenuVisible","_useState5","_useState6","presetMenuVisible","setPresetMenuVisible","outputTypes","FFMpegOutputType","codeString","closeMenu","projectWriteMutation","refetch","processKey","useCallback","ev","_video2$current5","_video2$current6","_video2$current7","_video2$current","_video2$current2","paused","pause","setScrollPosition","_video2$current3","_video2$current4","play","useEffect","onkeyup","selectValue","valueType","np","shouldRerender","includes","isNaN","_video2$current8","setActiveLayer","activeLayerId","Button","setIsRendering","encodeProject","renderParams","setRenderProgress","logLine","addNewLogLine","setRenderUrl","loading","disabled","mode","href","download","TextInput","dense","textAlign","keyboardType","onChangeText","_mediaRes$editor","_mediaRes$editor2","_mediaRes$editor3","_mediaRes$editor4","_mediaRes$editor5","Menu","onDismiss","anchor","_mediaRes$editor6","FFMpegPreset","_codeEditorRef$curren","focus","_mediaRes$editor7","ref","inputLineHeight","highlighterLineHeight","language","syntaxStyle","CodeEditorSyntaxStyles","xonokai","initialValue","onChange","_mediaRes$editor8","autoFocus","showLineNumbers","Clipboard","setString","highlighter","customStyle","userSelect","itemId","showComments","isCommentLayer","onClickAddContent","_dataHook$folder2","pickerResult","DocumentPicker","presentationStyle","uri","fId","nd","fileType","startOnboarding","folderContent","_reactNativeDraglist","horizontal","renderItem","_editorcontentitem","keyExtractor","onReordered","toggleLayerProp","propName","_defineProperty2","folderData","muteLayer","hideLayer","Controls","iconSize","parentHook","folderContentQuery","_dataHook$folder","setIsPlaying","_VirtualizedList","_editorcaret","scrollParams","getByIdCallback","onClickAddLayer","horizontalScroll","contentContainerWidth","controlsContainerWidth","_editorlayer","EditorLayerHeaderComponent","onScroll","contentOffset","_horizontalScroll$cur","_horizontalScroll$cur2","_horizontalScroll$cur3","totalWidth","clientWidth","totalScroll","scrollWidth","setScrollParams","scrollTo","EditorLayerBodyComponent","getContentItem","getItemCount","getContentCount","showEditor","isRefreshing","setRefreshing","menuOpen","setMenuOpen","forgetEverything","f","onClickSetScale","nscale","setPixelsPerSecond","onClickCopy","onClickCut","currentData","nitem","JSON","parse","stringify","onClickRefresh","onClickShowComments","setShowComments","onClickAddComment","_layers$","comment","partyId","isParty","createNewParty","Appbar","Action","leadingIcon","_StyleSheet","StyleSheet","video","chip","_encodedMediaQuery$da2","_encodedMediaQuery$da3","_encodedMediaQuery$da6","_encodedMediaQuery$da7","encoderProgress","videoCaretPosition","videoScrollPosition","canScroll","focused","useIsFocused","encodedMediaQuery","getProjectMedia","setEncoderProgress","keepPreviousData","_encodedMediaQuery$da","queryPosition","onTimeUpdate","currentTime","_encodedMediaQuery$da4","_encodedMediaQuery$da5","newtime","newoffset","layerSwitched","nscrollPosition","ncaretPosition","diff","isFetching","controls","src","onPlaying","onPause","onEnded","_mediaRes$encoding","_mediaRes$encoding2","localMediaQuery","encodedFileSize","_head$headers$get","headers","retry","mediaLoading","mediaSrc","video1","Chip","niceBytes","_e$nativeEvent$target","Math","abs","_video1$current","_video1$current2","_video1$current3","_video1$current4","_ImageBackground","source","resizeMode","project","afterWrite","ni","clearTimeout","setTimeout","queryKey","resetQueries","exact","_projectData$encoding","_projectData$encoding2","_projectData$encoding3","_projectData$encoding4","soundVolume","_projectData$encoding5","_projectData$encoding6","_projectData$encoding7","_projectData$encoding8","_projectData$encoding9","_projectData$encoding10","_folderitem","folderLibraryProps","dim","drawerOffset","navigation","currentFolderId","currentFolderEditorName","setFolderEditorName","folderNameInputRef","onFolderActionPress","loadingContent","loadingFolders","abortEditFolder","initialNumToRender","isOpen","isInfoOpen","iconColor","isLoadingContent","onFolderPress","navigate","onShareFolder","renderFolder","getItemLayout","_parentFolderHook$fol","foldersHook","useFolders","isLoadingFolder","scrollEnabled","pagingEnabled","onScrollToTop","_data","isFocused","isLoadingFolderContent","addMedia","mstyles","paddingBottom","ListEmptyComponent","contactItemProps","children","Accordion","expanded","_mediaitem","_contactitem","_projectitem","enableMove","ContentItemProps","onMediaPress","onRemoveMediaPress","onDownloadMediaPress","onCopyLinkPress","onEditMediaPress","isLoadingMedia","currentContentId","currentMediaId","itemLoading","isSecondLevel","folderIcon","folderAccesory","isDefaultFolder","defaultFolders","touchableStyle","useMemo","remove","edit","_folderNameInputRef$c","leftItem","ellipsizeMode","titleColor","numberOfLines","flexWrap","column","customTitle","additionalPadding","image","thisItemIsLoading","onCellPress","onRemove","isDownloading","downloadingProgress","isDownloadedQuery","staleTime","Infinity","onDownloadToggle","iconName","thumbnail","offlineIconName","extractorIcon","cloudIcon","animating","description","descriptionColor","resizeMethod","imageStyle","projectType","projectIcon","_medialibrary","mediaPlayer","currentMedia","isImage","updateMediaTime","mediaQuery","loaded","actionType","MediaActionType","bannerHeight","objectFit","togglePause","onResize","onLoadedData","isMediaPaused","el","kind","srcLang","flexBasis","useMedia","_appnav","_drawer2","DrawerNav","createDrawerNavigator","Tab","createMaterialBottomTabNavigator","RootStack","createNativeStackNavigator","FileStack","createFileStack","ChatStackScreen","createChatStack","SettingsStack","createSettings","EncoderStack","createEncoder","EditorStack","createEditor","TabNav","isNavHidden","ui","isTabBarHidden","useKeyboardDispatcher","screenStateListener","navState","_navState$data","_navState$data$state","_currentTab$state","_currentTab$state2","currentTab","routes","currentNavPage","parentName","currentPage","setCurrentPage","SafeAreaInsetsContext","Consumer","insets","collapsedDrawerWidth","max","Navigator","screenOptions","drawerStyle","drawerPosition","drawerType","detachInactiveScreens","defaultStatus","screenListeners","drawerContent","Screen","component","options","headerShown","drawerIcon","barStyle","tabBarLabel","tabBarIcon","header","RootStackName","orientation","freezeOnBlur","_userData$data","enableAudio","Audio","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","InterruptionModeIOS","DuckOthers","playsInSilentModeIOS","staysActiveInBackground","interruptionModeAndroid","InterruptionModeAndroid","shouldDuckAndroid","searchValue","setSearch","editingMode","userState","isLocked","setLocked","newFolderType","encoderProjectTypes","extractLink","exData","extractMedia","showFullSearchBar","addFolderPlaceholder","chatPlacehoder","Header","_navinput","NavInput","_actions","Actions","Searchbar","searchContactsPlaceholderText","defaulPlaceHolderText","inputStyle","_bannercontainer","BannerContainer","_pickerFileMeta$size","hideMedialModal","routeName","uploadState","upload","mediaModalVisible","modalVisible","pickerFile","pickerFileMeta","uploadToCloud","shareToWt","shareToWT","fileUploadProgress","encryption","isUploadInProgress","uuidFilename","authToken","videoMeta","setVideoMeta","uploadFileMutation","axios","request","method","withCredentials","onUploadProgress","setFileUploadProgress","attempts","writeItemToLocalStoreMutation","meta","writingItem","peerShared","confirmFile","_folder","_folder2","_folder3","_folder4","comment_layer","setUploadInProgress","setMediaModalVisible","fileUrl","cdndomain","webpage_url","hasCloud","Card","Title","subtitle","animatedValue","Portal","Modal","Content","Section","onLoadedMetadata","videoWidth","videoHeight","_expoAv","Video","onLoad","onReadyForDisplay","naturalSize","status","durationMillis","_axios","superfast","mp4","isEditing","addFileEnabled","addFolderEnabled","settings","showScaleControls","onClickFile","setEditingMode","Tooltip","_editortoolbar","folderParams","screen","RootScreens","useMediaPlayer","_fileupload","cancel","_mediabanner","_encoderbanner","_editorbanner","textValue","setText","back","isBackEnabled","getHeaderTitle","placeholderText","onClickExtra","nFolder","showTextField","_backbutton","BackButton","textAlignVertical","maxLength","React","DrawerCollapsedItemsData","focusedIcon","unfocusedIcon","preference","paddingVertical","v3Preference","badge","collapsedSection","annotation","marginVertical","drawerItemIndex","_drawer","DrawerContentScrollView","alwaysBounceVertical","Drawer","CollapsedItem","DatabaseItemComponent","_getOwner","showMnemonic","totalLength","currentMnemonic","isCurrent","loginMutation","restoreOwner","gap","toDateString","dbReq","getDatabases","dbs","setShowMnemonic","dbName","setDbName","dbMnemonic","setDbMnemonic","createDBMutation","showCreate","Dialog","userLoading","RegExp","_Pressable","userDataQuery","isLoadingUserData","onEditProfile","Image","slice","toUpperCase","createContext","migrationKey","publicPartyPref","textColor","mediaItemTextColor","mediaBackgroundColor","mediaBorderColor","navTextColor","navInactiveColor","folderColor","folderTextColor","deleteBackgroundColor","deleteTextColor","navBorderColor","contactItemBackgroundColor","contactItemTitleColor","contactItemOnlineColor","currentUserColor","remoteUserColor","baseFolder","createUser","cats","fullName","cat","year","birthdate","getFullYear","handle","idHash","version","prevVersion","createNewUser","newUser","toISOString","MEDIA","getContactsFolders","getContactsFolderContent","getFolderContentProxy","getByIdProxy","writeItemProxy","_folderContentQuery$d","_folderContentQuery$d2","_folder$files","getFolderContentMain","getByIdMain","writeItemMain","deleteFolderMutation","_route$params","folderFiles","userDispatch","editableFolder","updateFolderTitleMutation","_route$params2","UserDataActionType","setEditingFolder","editFolder","didEnd","folderPref","folderUrl","encodeURIComponent","isLoadingFolderContentError","FoldersActionType","routeFolderId","foldersQuery","unshift","selectFolder","setActiveFolder","Keyboard","addListener","setKeyboardHeight","keyboardHeight","endCoordinates","removeAllListeners","getFoldersByTypeProxy","useFoldersState","mediaState","downloads","stop","setDownloadingProgress","_messagesQuery$data","chat","loadingPagination","pageIndex","page","messagesQuery","_yield$Promise$all","getPublicMessages","refetchInterval","loadingMessages","sendMessageMutation","nPage","setPaginationState","CommonActions","sendingMessage","messagesError","mutate","createContactMutation","ncontact","userDataReducer","action","setUser","setFolderType","currentFolderType","_useReducer","useReducer","_useReducer2","_contacts","_folderpage","ChatStack","createStackNavigator","ChatComponent","FolderComponent","ContactsComponent","_editorproject","FolderLibraryComponent","EditorProjectScreen","EncoderProjectScreen","_home","HomeComponent","_settings","_devices","RenderSettings","Devices","Databases","prefixes","screens","Starp","path","FilesTab","Folder","Files","SettingsTab","Drive","Settings","ContactsTab","Chat","Contacts","EncoderTab","EncoderProjects","EncoderProject","EditorTab","EditorProjects","EditorProject","useDispatch","useSelector","chatSlice","createSlice","initialState","reducers","payload","actions","reducer","editorSlice","jobs","jobsProgress","prevActiveLayer","renderTime","createBackgroundRenderJob","setJobProgress","setTotalTime","newscroll","setShowEditor","_editorSlice$actions","encoderSlice","FileSystemSlice","isDeleting","setDeleteItem","deleteItemId","_ref2$payload","_FileSystemSlice$acti","mediaSlice","_action","isMediaPlaying","_mediaSlice$actions","isKeyboardOpen","isReady","isSignedIn","PagesWithoutTabBar","PagesWithBackEnabled","uiSlice","_ref$payload","setIsReady","setIsSigned","_uiSlice$actions","persist","totalChunks","uploadSlice","continue","setShareToWt","setUploadToCloud","setEncrypt","setMetaForCloud","_uploadSlice$actions","_upload","_editor","_ui","configureStore","mediaReducer","uploadReducer","encoderReducer","chatReducer","fsReducer","editorReducer","uiReducer","ChatMessageType","ChatMessageStatus","_Contact","_Media","_UserInfo","_Folder","FTSIndex","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","j","every","splice","getter","d","definition","o","chunkId","promises","miniCssF","g","globalThis","this","Function","obj","prop","inProgress","dataWebpackPrefix","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","setAttribute","onScriptComplete","prev","onerror","doneFns","parentNode","removeChild","bind","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","b","baseURI","self","installedChunks","installedChunkData","promise","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}