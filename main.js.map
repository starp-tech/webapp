{"version":3,"file":"main.js","mappings":"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","sources":["webpack://StarpyApp/./index.web.js","webpack://StarpyApp/./src/App.tsx","webpack://StarpyApp/./src/api/blobdb.ts","webpack://StarpyApp/./src/api/chat.ts","webpack://StarpyApp/./src/api/db/index.ts","webpack://StarpyApp/./src/api/db/supervisor.ts","webpack://StarpyApp/./src/api/db/tables/item.ts","webpack://StarpyApp/./src/api/encoder.ts","webpack://StarpyApp/./src/api/fs.ts","webpack://StarpyApp/./src/api/index.ts","webpack://StarpyApp/./src/api/media.ts","webpack://StarpyApp/./src/api/metamask.ts","webpack://StarpyApp/./src/api/ssl.ts","webpack://StarpyApp/./src/api/util.ts","webpack://StarpyApp/./src/api/wt.ts","webpack://StarpyApp/./src/components/app.tsx","webpack://StarpyApp/./src/components/auction/auctionpage.tsx","webpack://StarpyApp/./src/components/auction/biddialogbody.tsx","webpack://StarpyApp/./src/components/auction/metamaskaccountsbutton.tsx","webpack://StarpyApp/./src/components/auction/paydialogbody.tsx","webpack://StarpyApp/./src/components/auction/selldialogbody.tsx","webpack://StarpyApp/./src/components/contacts/chat.tsx","webpack://StarpyApp/./src/components/contacts/chatview.tsx","webpack://StarpyApp/./src/components/contacts/contactlibrary.tsx","webpack://StarpyApp/./src/components/contacts/contacts.tsx","webpack://StarpyApp/./src/components/contacts/styles.ts","webpack://StarpyApp/./src/components/editor/editorbanner.tsx","webpack://StarpyApp/./src/components/editor/editorcaret.tsx","webpack://StarpyApp/./src/components/editor/editorcontentitem.tsx","webpack://StarpyApp/./src/components/editor/editorform.tsx","webpack://StarpyApp/./src/components/editor/editorlayer.tsx","webpack://StarpyApp/./src/components/editor/editorplaycontrols.tsx","webpack://StarpyApp/./src/components/editor/editorproject.tsx","webpack://StarpyApp/./src/components/editor/editortoolbar.tsx","webpack://StarpyApp/./src/components/editor/editorvideo.tsx","webpack://StarpyApp/./src/components/encoder/encoderbanner.tsx","webpack://StarpyApp/./src/components/encoder/encoderproject.tsx","webpack://StarpyApp/./src/components/folder/folderlibrary.tsx","webpack://StarpyApp/./src/components/folder/foldernavigator.tsx","webpack://StarpyApp/./src/components/folder/folderpage.tsx","webpack://StarpyApp/./src/components/folder/items/contactitem.tsx","webpack://StarpyApp/./src/components/folder/items/contentitem.tsx","webpack://StarpyApp/./src/components/folder/items/folderitem.tsx","webpack://StarpyApp/./src/components/folder/items/mediaitem.tsx","webpack://StarpyApp/./src/components/folder/items/projectitem.tsx","webpack://StarpyApp/./src/components/folder/styles.ts","webpack://StarpyApp/./src/components/media/home.tsx","webpack://StarpyApp/./src/components/media/mediabanner.tsx","webpack://StarpyApp/./src/components/media/medialibrary.tsx","webpack://StarpyApp/./src/components/nav.tsx","webpack://StarpyApp/./src/components/nav/appnav.tsx","webpack://StarpyApp/./src/components/nav/banners/choosedialog.tsx","webpack://StarpyApp/./src/components/nav/banners/fileupload.tsx","webpack://StarpyApp/./src/components/nav/banners/toastdialog.tsx","webpack://StarpyApp/./src/components/nav/components/actions.tsx","webpack://StarpyApp/./src/components/nav/components/backbutton.tsx","webpack://StarpyApp/./src/components/nav/components/bannercontainer.tsx","webpack://StarpyApp/./src/components/nav/components/navinput.tsx","webpack://StarpyApp/./src/components/nav/drawer.tsx","webpack://StarpyApp/./src/components/settings/databases.tsx","webpack://StarpyApp/./src/components/settings/devices.tsx","webpack://StarpyApp/./src/components/settings/settings.tsx","webpack://StarpyApp/./src/ctx/ctx.ts","webpack://StarpyApp/./src/ctx/index.ts","webpack://StarpyApp/./src/db/defaults.ts","webpack://StarpyApp/./src/db/migration.ts","webpack://StarpyApp/./src/hooks/useAuction.ts","webpack://StarpyApp/./src/hooks/useAuctionActions.ts","webpack://StarpyApp/./src/hooks/useCloseDialog.ts","webpack://StarpyApp/./src/hooks/useContacts.ts","webpack://StarpyApp/./src/hooks/useFolder.ts","webpack://StarpyApp/./src/hooks/useFolders.ts","webpack://StarpyApp/./src/hooks/useKeyboardListener.ts","webpack://StarpyApp/./src/hooks/useMedia.ts","webpack://StarpyApp/./src/hooks/useMediaPlayer.ts","webpack://StarpyApp/./src/hooks/useMessages.ts","webpack://StarpyApp/./src/hooks/useRouteAuction.ts","webpack://StarpyApp/./src/hooks/useRouteContact.ts","webpack://StarpyApp/./src/hooks/useShare.ts","webpack://StarpyApp/./src/hooks/useUserData.ts","webpack://StarpyApp/./src/navigators/chatstack.tsx","webpack://StarpyApp/./src/navigators/editor.tsx","webpack://StarpyApp/./src/navigators/encoder.tsx","webpack://StarpyApp/./src/navigators/filestack.tsx","webpack://StarpyApp/./src/navigators/settings.tsx","webpack://StarpyApp/./src/routes/routes.ts","webpack://StarpyApp/./src/store/hooks.ts","webpack://StarpyApp/./src/store/slices/auction.ts","webpack://StarpyApp/./src/store/slices/chat.ts","webpack://StarpyApp/./src/store/slices/editor.ts","webpack://StarpyApp/./src/store/slices/encoder.ts","webpack://StarpyApp/./src/store/slices/fs.ts","webpack://StarpyApp/./src/store/slices/media.ts","webpack://StarpyApp/./src/store/slices/ui.ts","webpack://StarpyApp/./src/store/slices/upload.ts","webpack://StarpyApp/./src/store/store.ts","webpack://StarpyApp/./src/types/Contact.ts","webpack://StarpyApp/./src/types/Folder.ts","webpack://StarpyApp/./src/types/Media.ts","webpack://StarpyApp/./src/types/index.ts","webpack://StarpyApp/./src/types/nav.ts","webpack://StarpyApp/webpack/bootstrap","webpack://StarpyApp/webpack/runtime/amd options","webpack://StarpyApp/webpack/runtime/chunk loaded","webpack://StarpyApp/webpack/runtime/compat get default export","webpack://StarpyApp/webpack/runtime/define property getters","webpack://StarpyApp/webpack/runtime/ensure chunk","webpack://StarpyApp/webpack/runtime/get javascript chunk filename","webpack://StarpyApp/webpack/runtime/get mini-css chunk filename","webpack://StarpyApp/webpack/runtime/global","webpack://StarpyApp/webpack/runtime/hasOwnProperty shorthand","webpack://StarpyApp/webpack/runtime/load script","webpack://StarpyApp/webpack/runtime/make namespace object","webpack://StarpyApp/webpack/runtime/node module decorator","webpack://StarpyApp/webpack/runtime/publicPath","webpack://StarpyApp/webpack/runtime/jsonp chunk loading","webpack://StarpyApp/webpack/startup"],"sourcesContent":["import IoniconsFont from '@expo/vector-icons/Ionicons';\nimport MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\n\nimport 'react-native-gesture-handler';\nimport iconFont from '@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf';\n// import { enableFreeze } from 'react-native-screens';\n// import \"setimmediate\"\n// enableFreeze(true);\n\nconst iconFontStyles = `@font-face {\n  src: url(${iconFont});\n  font-family: Ionicons;\n}`;\n\nconst style = document.createElement('style');\nstyle.type = 'text/css';\n\nif (style.styleSheet) {\n  style.styleSheet.cssText = iconFontStyles;\n} else {\n  style.appendChild(document.createTextNode(iconFontStyles));\n}\n\n// Inject stylesheet\ndocument.head.appendChild(style);\nimport App from './src/App';\nimport { createElement } from 'react';\nimport { createRoot } from 'react-dom/client'\nimport { initUserData } from './src/api';\ninitUserData().then(()=>{\n  const root = createRoot(document.getElementById('root'))\n  root.render(createElement(App))\n})","import {SafeAreaProvider} from 'react-native-safe-area-context';\n\nimport React from 'react';\n\nimport {LogBox, Platform} from 'react-native';\n\nLogBox.ignoreAllLogs(); //Hide all warning notifications on front-end\n\nimport AppComponent from './components/app';\n\nimport {UserData} from './api';\n\nimport {UserCtx, UserDataDispatch, UserDataState} from './ctx';\n\nimport {useUserData} from './hooks/useUserData';\n\nimport {\n  configureFonts,\n  MD3DarkTheme,\n  PaperProvider,\n} from 'react-native-paper';\n\nconst theme = {\n  ...MD3DarkTheme,\n  fonts: configureFonts({\n    config: {\n      default: {\n        fontFamily: Platform.select({\n          web: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n          ios: 'System',\n          macos: 'System',\n          default: 'System',\n        }),\n        fontWeight: '400',\n        letterSpacing: 0.5,\n        lineHeight: 22,\n        fontSize: 20,\n      },\n    },\n    isV3: true,\n  }),\n};\nimport {store} from './store/store';\nimport {Provider} from 'react-redux';\n\nimport {QueryClientProvider} from 'react-query';\n\nimport {queryClient} from './api';\n\nconst App = () => {\n  const {userDataState, userDataDispatch} = useUserData();\n  return (\n    <Provider store={store}>\n      <QueryClientProvider client={queryClient}>\n        <UserCtx.Provider value={UserData}>\n          <UserDataState.Provider value={userDataState}>\n            <UserDataDispatch.Provider value={userDataDispatch}>\n              <SafeAreaProvider>\n                <PaperProvider theme={theme}>\n                  <React.Fragment>\n                    {Platform.OS === 'web' ? (\n                      <style type=\"text/css\">{`\n                    @font-face {\n                      font-family: 'MaterialCommunityIcons';\n                      src: url(${require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf')}) format('truetype');\n                    }\n                  `}</style>\n                    ) : null}\n                    <></>\n                  </React.Fragment>\n                  <AppComponent />\n                </PaperProvider>\n              </SafeAreaProvider>\n            </UserDataDispatch.Provider>\n          </UserDataState.Provider>\n        </UserCtx.Provider>\n      </QueryClientProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import * as SQLite from 'expo-sqlite';\nimport {Platform} from 'react-native';\n\nlet db: SQLite.SQLiteDatabase;\nconst initDB = async () => {\n  db = await SQLite.openDatabaseAsync('blobDB7');\n\n  await db.execAsync(`\n    DROP TABLE IF EXISTS blobs;\n    CREATE TABLE IF NOT EXISTS blobs (id INTEGER PRIMARY KEY NOT NULL, data BLOB, parent VARCHAR);\n  `);\n};\n\nPlatform.OS !== 'web' && initDB();\n\nexport const createBlobDB = async () => {\n  return {\n    writeBlob: async (id: string, blob: Uint8Array) =>\n      await db.runAsync(\n        'INSERT INTO blobs (parent, data) VALUES (?, ?)',\n        id,\n        blob,\n      ),\n    readBlobs: async (id: string) => {\n      const data = await db.getAllAsync(\n        'SELECT * FROM blobs WHERE parent = ? ORDER BY id ASC limit 1000',\n        [id],\n      );\n      const ids: number[] = data.map(i => i.id);\n      const deletequery = `DELETE FROM blobs WHERE id IN (${ids.join(\n        ',',\n      )})`;\n      // console.info('deletequery', deletequery)\n      await db.runAsync(deletequery);\n      return data;\n    },\n  };\n};\n","import {\n  getUserData,\n  getById,\n  createDBConn,\n  writeItem,\n  Database,\n} from './db';\n\nimport {UserInfo, Contact, ChatMessage} from '../types';\n\nimport uuid from 'react-native-uuid';\n\nimport {faker} from '@faker-js/faker';\nimport {Evolu} from '@evolu/common';\n\nexport const sendChatMessage = async (\n  chatId: string,\n  text: string,\n  mnemonic: string,\n  message = {},\n) => {\n  const u: UserInfo = await getUserData();\n  const id = uuid.v4();\n  const data = {\n    id,\n    text,\n    userId: u.id,\n    chatId,\n    folderId: chatId,\n    messageStatus: 'sent',\n    userName: u.name,\n    createdAt: new Date().valueOf(),\n  };\n  const ndata = {...data, ...message};\n  const nEvolu = await createDBConn(chatId, mnemonic);\n  await writeItem(ndata, nEvolu);\n  return ndata;\n};\n\nexport const getPublicMessages = async (\n  chatId: string,\n  mnemonic: string,\n  limit: number = 15,\n  offset: number = 0,\n) => {\n  try {\n    const folder = (await getById(chatId)) as Contact;\n    let e: Evolu<Database> | undefined;\n    if ((folder && folder.mnemonic) || mnemonic) {\n      e = await createDBConn(\n        chatId,\n        folder?.mnemonic || mnemonic,\n        true,\n      );\n    }\n    const query = e?.createQuery(db =>\n      db\n        .selectFrom('item')\n        .selectAll()\n        .where('chatId', '=', chatId)\n        .orderBy('createdAt', 'desc')\n        .limit(limit)\n        .offset(offset),\n    );\n    const data = query && (await e?.loadQuery(query));\n    return data?.rows?.map(i => i.item as ChatMessage);\n  } catch (err) {\n    console.error('getPublicMessages error', err);\n  }\n  return [];\n};\n\nexport const createNewParty = async (party: Contact) => {\n  console.info('createNewParty', party);\n  const user = await getUserData();\n  const chatId = party.id;\n  const contact = {\n    ...party,\n    id: chatId,\n    authorId: user.id,\n    authorName: user.name,\n    isContact: true,\n    mnemonic: genMnemonic(),\n  };\n  const item = await writeItem(contact);\n  await sendChatMessage(\n    chatId,\n    user.name + ' has created chat ' + party.name,\n    contact.mnemonic,\n    {system: true},\n  );\n  return contact;\n};\n\nexport const genMnemonic = () => {\n  return [\n    faker.animal.bird().split(' ').join('').toLowerCase(),\n    faker.animal.bird().split(' ').join('').toLowerCase(),\n    faker.color.human().split(' ').join('').toLowerCase(),\n    faker.color.human().split(' ').join('').toLowerCase(),\n    faker.color.human().split(' ').join('').toLowerCase(),\n    faker.animal.fish().split(' ').join('').toLowerCase(),\n    faker.animal.fish().split(' ').join('').toLowerCase(),\n    faker.animal.fish().split(' ').join('').toLowerCase(),\n    faker.animal.insect().split(' ').join('').toLowerCase(),\n    faker.hacker.noun().split(' ').join('').toLowerCase(),\n    faker.hacker.noun().split(' ').join('').toLowerCase(),\n    faker.hacker.noun().split(' ').join('').toLowerCase(),\n  ].join(' ');\n};\n","export interface WindowExtend extends Window {\n  evolu: Evolu<Database>;\n  Video: any;\n}\n\ndeclare global {\n  var evolu: Evolu<Database>;\n  var Video: any;\n  var window: WindowExtend;\n}\n\nimport uuid from 'react-native-uuid';\nimport * as S from '@effect/schema/Schema';\n\nimport {createEvolu, database} from '@evolu/react-native';\n\nimport {ItemTable} from './tables/item';\nimport {\n  Auction,\n  Contact,\n  DatabaseItem,\n  Device,\n  Folder,\n  FolderType,\n  Media,\n  UserInfo,\n} from '../../types';\n\nimport {Platform} from 'react-native';\nimport {QueryClient} from 'react-query';\nimport {Evolu, EvoluConfig} from '@evolu/common';\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n      refetchOnReconnect: false,\n    },\n  },\n});\n\nconst Database = database({\n  item: ItemTable,\n});\n\nexport type Database = S.Schema.To<typeof Database>;\n\nconst dbConns: {[key: string]: Evolu<Database>} = {};\n\nwindow.dbConns = dbConns;\n\nexport const dbMnemoCons: {[key: string]: Evolu<Database>} = {};\n\nexport let defaultDBName = 'starpy2';\n\nexport let dbSocket: WebSocket | undefined;\nexport const createDBConn = (\n  dbname = `${defaultDBName}`,\n  mnemonic?: string,\n  index?: boolean,\n): Evolu<Database> | Promise<Evolu<Database>> => {\n  if (dbConns[dbname]) return dbConns[dbname];\n  if (mnemonic && dbMnemoCons[mnemonic]) return dbMnemoCons[mnemonic];\n\n  const ops: Partial<EvoluConfig<Database>> = {\n    name: dbname,\n    syncUrl: 'https://db.starpy.me',\n  };\n  if (Platform.OS == 'web') {\n    ops.enableWebsocketConnection = true;\n  } else {\n    if (dbname === defaultDBName)\n      ops.enableWebsocketConnection = true;\n    else ops.externalWebsocketConnection = dbSocket;\n  }\n  if (mnemonic) ops.mnemonic = mnemonic;\n  const db = createEvolu(Database, ops);\n  if (dbname === defaultDBName)\n    db.socket.then(socket => {\n      dbSocket = socket;\n      console.info('dbSocket', socket);\n    });\n  dbConns[dbname] = db;\n  if (mnemonic) dbMnemoCons[mnemonic] = db;\n  if (index === true) {\n    return new Promise(res => {\n      indexAllFoldersForDB(db).then(() => res(db));\n\n      db.subscribeSyncState(async () => {\n        const state = db.getSyncState();\n        if (state._tag === 'SyncStateIsSynced') {\n          if (!isFirstSync[dbname]) {\n            isFirstSync[dbname] = true;\n          }\n          // console.info('state', state, dbname);\n          queryClient.refetchQueries('folderContent_' + dbname);\n          indexAllFoldersForDB(db);\n        }\n      });\n    });\n  }\n  return db;\n};\nconst isFirstSync: {[key: string]: boolean} = {};\n\nexport const indexAllFoldersForDB = async (e: Evolu<Database>) => {\n  try {\n    const query = e?.createQuery(db =>\n      db\n        .selectFrom('item')\n        .selectAll()\n        .where('mnemonic', 'is not', null)\n        .where('isDeleted', 'is', null),\n    );\n    const folders = await e?.loadQuery(query);\n    // console.info('folders', folders.rows);\n    const folderPromises = folders.rows\n      .map(async nitem => {\n        const item = {...nitem, ...nitem.item};\n        if (item.isDeleted) return;\n        if (!isFirstSync[item.id]) {\n          isFirstSync[item.id] = true;\n          dbConns[item.id] = e;\n        }\n        if (item.isAuction) {\n          queryClient.refetchQueries('auction_' + item.id);\n        }\n        await queryClient.refetchQueries('folderContent_' + item.id);\n      })\n      .filter(i => i);\n    await Promise.all(folderPromises);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport const getUserData = async (\n  apiKey?: string,\n): Promise<UserInfo> => {\n  if (Platform.OS === 'web') {\n    if (!apiKey) apiKey = localStorage?.getItem('authToken');\n  }\n  // const url = domain+\"api/v1/backend/?authToken=\"+apiKey || \"\"\n  // const authData =  (await (await fetch(url, {\n  //     credentials:\"include\",\n  //     method:\"GET\",\n  //   })\n  // ).json())\n  const authData = {};\n  const [userData] = await findBy('userDoc', true);\n  const devices = await findBy('isDevice', true);\n  // console.info('get user data', userData)\n  return {\n    ...userData,\n    ...authData,\n    // photo: authData?.picture,\n    devices,\n  };\n};\n\nexport const getFolderContent = async (folderId: string) => {\n  const folder: Folder = await getById(folderId);\n  let e = evolu;\n  if (folder && folder.mnemonic) {\n    e = await createDBConn(folderId, folder.mnemonic, true);\n    // console.info('dbconn', e)\n  }\n  const query = e?.createQuery(db =>\n    db\n      .selectFrom('item')\n      .selectAll()\n      .where('folderId', '=', folderId)\n      .where('isDeleted', 'is', null)\n      .orderBy('orderId', 'asc')\n      .orderBy('lastUpdated', 'desc'),\n  );\n  const data = await e?.loadQuery(query);\n  // console.info(\"getFolderContent\", folderId, data)\n  return data.rows.map(i => i.item as Folder | Media | Contact);\n};\n\nexport const getPublicFolderContent = async (folderId: string) =>\n  getFolderContent(folderId);\n\nexport const getFoldersByType = async (\n  type: FolderType,\n): Promise<Folder[]> => {\n  const query = evolu?.createQuery(db =>\n    db\n      .selectFrom('item')\n      .selectAll()\n      .where('folderType', '=', type)\n      .where('folderId', 'is', null)\n      .where('isDeleted', 'is', null),\n  );\n  const data = await evolu?.loadQuery(query);\n  // console.info('folders', data.rows)\n  return data.rows.map(i => i.item as Folder);\n};\n\nexport const writeItem = async (data: any, e?: Evolu<Database>) => {\n  const parentFolderId =\n    Platform.OS === 'web'\n      ? new URL(window?.location?.toString()).searchParams.get(\n          'parentFolderId',\n        )\n      : '';\n  let createdNewDbConn = false;\n  if (data.folderId || parentFolderId) {\n    const folder: Folder = await getById(\n      data.folderId || parentFolderId,\n    );\n    if (folder && folder.mnemonic) {\n      e = await createDBConn(data.folderId, folder.mnemonic);\n      if (\n        data.isFolder ||\n        data.isEditorLayer ||\n        data.isEditorProject\n      ) {\n        data.mnemonic = folder.mnemonic;\n        dbConns[data.id] = e;\n        createdNewDbConn = true;\n      }\n      if (data.isMediaNew || data.isEncoderProject) {\n        data.extractor = 'wt';\n      }\n    }\n  }\n  console.info('writeItem data', data);\n  const item = await (e || evolu).createOrUpdate('item', {\n    id: data.id,\n    title: data.title,\n    name: data.name,\n    item: data,\n    isFolder: data.isFolder,\n    isContact: data.isContact,\n    isMediaNew: data.isMediaNew,\n    isDevice: data.isDevice,\n    userDoc: data.userDoc,\n    folderId: data.folderId,\n    folderType: data.folderType,\n    chatId: data.chatId,\n    createdAt: data.createdAt,\n    isDeleted: data.isDeleted,\n    isEditorProject: data.isDeleted,\n    isEditorLayer: data.isDeleted,\n    orderId: data.orderId || 1,\n    mediaId: data.mediaId,\n    auctionId: data.auctionId,\n    mnemonic: data.mnemonic,\n    lastUpdated: new Date().valueOf(),\n  });\n  if (data.mnemonic && data.isFolder && !e) {\n    console.info('create a new index for a new folder');\n    e = await createDBConn(data.id, data.mnemonic, true);\n  }\n  return item;\n};\n\nexport const findByOriginalId = async (id: string) =>\n  findBy('originalId', id);\n\nexport const findBy = async (\n  key: string,\n  value: string | boolean | number,\n) => {\n  const query = evolu?.createQuery(db =>\n    db.selectFrom('item').selectAll().where(key, '=', value),\n  );\n  const data = await evolu?.loadQuery(query);\n  console.info('findBy', data);\n  return data.rows.map(i => i.item);\n};\n\nexport const getById = async (\n  id: string,\n  folderId?: string,\n): Promise<Media | Folder | Contact | Device | Auction> => {\n  let e = evolu;\n  if (folderId) {\n    e = dbConns[folderId];\n    if (!e && id !== folderId) {\n      const folder: Folder = await getById(folderId);\n      if (folder?.mnemonic) {\n        e = await createDBConn(folder.id, folder.mnemonic);\n      } else {\n        e = evolu;\n      }\n    }\n  }\n  const query = e?.createQuery(db =>\n    db.selectFrom('item').selectAll().where('id', '=', id),\n  );\n  const item = await e?.loadQuery(query);\n  let i = item?.row?.item;\n  if (i?.isFolder || i?.isEditorLayer || i?.isEditorProject) {\n    if (!dbConns[i.id] && i.mnemonic) {\n      dbConns[i] = e;\n    }\n  }\n  if (!i && id !== '' && id !== undefined && id !== null) {\n    if (dbConns[id] && id !== folderId) return await getById(id, id);\n    // const parentFolderId = new URL(window.location.toString()).searchParams.get(\"parentFolderId\")\n    // if(!folderId && parentFolderId) {\n    //   folderId = parentFolderId\n    //   return await getById(id, folderId)\n    // }\n  }\n  if (!i) {\n    const max = await Promise.all(\n      Object.keys(dbConns).map(\n        async dbConnId => await dbConns[dbConnId].loadQuery(query),\n      ),\n    );\n    const fmx = max.filter(m => m.rows.length).flat();\n    console.info('i', max, fmx);\n    if (fmx.length) i = fmx[0].row.item;\n  }\n  // console.info('getById', id, folderId, i)\n  // console.info(i)\n  return i;\n};\n\nexport const initDatabaseRecord = async (\n  dbname: string,\n  mnemonic: string,\n  e?: Evolu,\n) => {\n  let databases;\n  if (!e) {\n    console.info(\n      'checking for database record for initial db ',\n      defaultDBName,\n    );\n    databases = await getFoldersByType(FolderType.database);\n    if (databases.length) {\n      const exists = databases.find(i => i.mnemonic === mnemonic);\n      if (exists) return exists;\n    }\n  }\n  const id = uuid.v4().toString();\n  const ndb: DatabaseItem = {\n    id,\n    title: `${dbname}_${id}`,\n    mnemonic,\n    isDatabase: true,\n    folderType: FolderType.database,\n    date: new Date().valueOf(),\n    added: new Date().valueOf().toString(),\n    orderId: databases?.length + 1 || 2,\n    userId: 'super',\n  };\n  return await writeItem(ndb, e);\n};\n\nconst evolu = createDBConn();\n\nexport {evolu};\n","import {getFoldersByType, initDatabaseRecord, evolu} from '.';\nimport {DatabaseItem, FolderType} from '../../types';\n\nexport const getDatabases = async (): Promise<DatabaseItem[]> => {\n  try {\n    if (evolu) {\n      await initDatabaseRecord('starpy2', evolu.getOwner().mnemonic);\n    }\n  } catch (err) {\n    console.error(err);\n  }\n\n  return (await getFoldersByType(\n    FolderType.database,\n  )) as DatabaseItem[];\n};\n","import * as S from '@effect/schema/Schema';\n\nimport {\n  NonEmptyString1000,\n  SqliteBoolean,\n  id,\n  table,\n  JsonObjectOrArray,\n  String1000,\n} from '@evolu/common';\n\nconst SomeJson = S.Struct({foo: S.String, bar: S.Boolean});\n\ntype SomeJson = S.Schema.To<typeof SomeJson>;\n\nconst ItemId = id('Item');\n\ntype ItemId = S.Schema.To<typeof ItemId>;\n\nexport const ItemTable = table({\n  id: ItemId,\n  name: String1000,\n  title: String1000,\n  isCompleted: SqliteBoolean,\n  item: SomeJson,\n  isMediaNew: SqliteBoolean,\n  isContact: SqliteBoolean,\n  folderId: String1000,\n  isDevice: SqliteBoolean,\n  isFolder: SqliteBoolean,\n  folderType: String1000,\n  userDoc: SqliteBoolean,\n  chatId: String1000,\n  orderId: String1000,\n  mediaId: String1000,\n  auctionId: String1000,\n  lastUpdated: String1000,\n  isEditorProject: SqliteBoolean,\n  isEditorLayer: SqliteBoolean,\n  isDatabase: SqliteBoolean,\n  mnemonic: String1000,\n});\n\nexport type ItemTable = S.Schema.To<typeof ItemTable>;\n","// export {FFmpeg, fetchFile, toBlobURL};\nimport {Platform} from 'react-native';\nimport {\n  EditorLayer,\n  EditorProject,\n  EncoderProject,\n  Media,\n} from '../types';\nimport {getFileOpfs, writeFileOpfs} from './fs';\nimport {appDirectory, ffMpegWasmBaseUrl} from '../db/defaults';\nimport {downloadFileById} from './wt';\nimport {FFmpegKit} from 'ffmpeg-kit-react-native';\nimport * as ExpoFileSystem from 'expo-file-system';\nconst documentDir =\n  Platform.OS === 'web'\n    ? ''\n    : ExpoFileSystem.documentDirectory?.replace('file://', '/') || '';\nconst cachedMedia: {[key: string]: string} = {};\n\nlet ffmpeg;\n\nexport type CBProgressParams = {progress: number; time: number};\nexport type CBProgressCallback = (progress: CBProgressParams) => void;\n\nexport const cancelEncoding = () => {\n  try {\n    ffmpeg.terminate();\n  } catch (err) {\n    // console.error('terminate ffmpeg error', err)\n  }\n};\n\nexport let FFmpeg;\nlet util;\nexport let fetchFile, toBlobURL;\nconst createFFmpeg = async (cb: CBProgressCallback) => {\n  if (Platform.OS === 'web') {\n    if (!FFmpeg) {\n      util = await import('@ffmpeg/util');\n      fetchFile = util.fetchFile;\n      toBlobURL = util.toBlobURL;\n      FFmpeg = (await import('@ffmpeg/ffmpeg')).FFmpeg;\n    }\n    ffmpeg = new FFmpeg();\n    // ffmpeg.mount(\"NODEFS\", {} as WorkerFSMountData, \"/\")\n    window.ffmpeg = ffmpeg;\n    ffmpeg.on('log', ({message}: {message: string}) => {\n      console.log('ffmpeg', message);\n    });\n    ffmpeg.on('progress', (params: CBProgressParams) => {\n      console.info('ffmpeg progress', params);\n      if (cb) cb(params || 0);\n    });\n    await ffmpeg.load({\n      coreURL: await toBlobURL(\n        `${ffMpegWasmBaseUrl}/ffmpeg-core.js`,\n        'text/javascript',\n      ),\n      wasmURL: await toBlobURL(\n        `${ffMpegWasmBaseUrl}/ffmpeg-core.wasm`,\n        'application/wasm',\n      ),\n    });\n  }\n};\n\nexport const encodeMedia = async (\n  media: EncoderProject,\n  cb?: CBProgressCallback,\n  isPrerender?: boolean,\n): Promise<string | undefined> => {\n  const id = media.isCopy || media?.id;\n  const nmedia = {...media, id};\n  const fileId = `${id}_${media?.filename}`;\n  const {encoding} = media;\n  const cachedId = encoding?.lastUpdated || 0;\n  console.info('cachedId', cachedId);\n  const outPostfix = `.output.${cachedId}.${\n    encoding?.output || 'mp4'\n  }`;\n  const outFileId = fileId + outPostfix;\n  try {\n    if (cachedMedia[id]) return cachedMedia[id];\n    if (cachedId === 0) {\n      // const opfsFile =\n      cachedMedia[id] = await getFileOpfs(nmedia);\n      return cachedMedia[id];\n    }\n    const dirCore = await window.navigator.storage.getDirectory(\n      appDirectory,\n    );\n    const dir = await dirCore.getDirectoryHandle(nmedia.folderId);\n    const cache = await dir.getFileHandle(`${id}_${outFileId}`);\n    const file = await cache?.getFile();\n    if (file) {\n      cachedMedia[id] = URL.createObjectURL(file);\n      return cachedMedia[id];\n    }\n  } catch (err) {\n    console.error('get cache error', err);\n  }\n  cancelEncoding();\n  await createFFmpeg(cb);\n  try {\n    let opfsFile;\n    try {\n      opfsFile = await getFileOpfs(nmedia);\n    } catch (err) {\n      console.info('file not found locally downloading', err);\n      const dlFIle = await downloadFileById(\n        nmedia.id,\n        nmedia.folderId,\n        cb && (progress => cb({progress, time: 0})),\n      );\n      console.info('dlFIle', dlFIle);\n      opfsFile = URL.createObjectURL(await dlFIle.getFile());\n      if (cachedId === 0) {\n        return encodeMedia(media, cb, isPrerender);\n      }\n    }\n    const execCmd = genExecCmd(nmedia, isPrerender);\n    await execEncode({\n      files: [fileId],\n      encoded: [opfsFile],\n      outFileId,\n      execCmd,\n      mediaOut: nmedia,\n    });\n  } catch (err) {\n    console.error('ffmpeg error ', err);\n  }\n};\n\nexport const execEncode = async (cmd: {\n  files: (string | undefined)[];\n  encoded: (string | undefined)[];\n  outFileId: string;\n  execCmd: string[];\n  mediaOut: Media;\n}) => {\n  console.info('execEncode', cmd);\n  try {\n    if (Platform.OS === 'web') {\n      const outFileId = cmd.outFileId;\n      try {\n        await Promise.all(\n          cmd.encoded.map(async (opfsFile, index) => {\n            const fileId = cmd.files[index];\n            const fs = await fetchFile(opfsFile);\n            await ffmpeg.writeFile(fileId, fs);\n          }),\n        );\n      } catch (err) {\n        console.error('load files in ffmpeg error', err);\n        throw err;\n      }\n      console.info('after loading files into ffmpeg', cmd.execCmd);\n      const exec = await ffmpeg.exec(cmd.execCmd);\n      console.info('after exec', exec, outFileId);\n      const data = await ffmpeg.readFile(outFileId);\n      console.info('after processing', data);\n      data.name = outFileId;\n      const file = await (\n        await writeFileOpfs(cmd.mediaOut, data)\n      )?.getFile();\n      cachedMedia[cmd.mediaOut.id] = URL.createObjectURL(file);\n      console.info(\n        'cachedMedia for project',\n        cachedMedia[cmd.mediaOut.id],\n      );\n      return cachedMedia[cmd.mediaOut.id];\n    } else {\n      const exec = await FFmpegKit.executeAsync(\n        cmd.execCmd.join(' '),\n      );\n      console.info('after exec ffmpeg', exec);\n    }\n  } catch (err) {\n    console.error('encodeProject error', err);\n  }\n};\n\nexport const encodeProject = async (\n  projectData: EditorProject,\n  layers: EditorLayer[],\n  isPrerender?: boolean,\n  cb?: CBProgressCallback,\n  logs?: (line: string) => void,\n) => {\n  try {\n    const cmd = genRenderCmd(projectData, layers, isPrerender);\n    const id = projectData.id;\n    const files = cmd.files.filter(i => i !== '-i');\n    console.info(\n      'encodeProject',\n      projectData,\n      layers,\n      isPrerender,\n      cmd,\n    );\n    const cachedId = projectData.editor?.lastUpdated || 0;\n    // try {\n    //     if(cachedMedia[id])\n    //         return cachedMedia[id]\n    //     if(cachedId === 0) {\n    //         // const opfsFile =\n    //         cachedMedia[id] =  await getFileOpfs(nmedia)\n    //         return cachedMedia[id]\n    //     }\n    //     const dirCore = await window.navigator.storage.getDirectory(appDirectory)\n    //     const dir = await dirCore.getDirectoryHandle(projectData.folderId)\n    //     const cache = await dir.getFileHandle(`${id}_${cmd.outFileId}`);\n    //     const file = await cache?.getFile()\n    //     if(file) {\n    //         cachedMedia[id] = URL.createObjectURL(file)\n    //         return cachedMedia[id]\n    //     }\n    // } catch(err) {\n    //     console.error(\"get cache error\", err)\n    // }\n    const encoded = await Promise.all(\n      cmd.medias.map(media =>\n        encodeMedia(\n          media!,\n          progress => {\n            console.info('encoding media', media.id, progress);\n            if (cb) cb(progress);\n          },\n          isPrerender,\n        ),\n      ),\n    );\n    console.info('encoded', encoded, files, cmd.execCmd);\n    cancelEncoding();\n    await createFFmpeg(cb);\n    cmd.files = files;\n    cmd.encoded = encoded;\n    cmd.mediaOut = projectData;\n    await execEncode(cmd);\n  } catch (err) {\n    console.error('encodeproject error', err);\n  }\n};\n\nexport const genRenderCmd = (\n  projectData: EditorProject,\n  layers: EditorLayer[],\n  isPrerender?: boolean,\n) => {\n  if (projectData?.id === undefined || layers?.length < 1)\n    return {execCmd: [], medias: [], files: []};\n  const fileId = `${projectData.id}_${projectData.title}`;\n  const {editor: encoding} = projectData;\n  const outPostfix = `.output.${encoding?.lastUpdated || 0}.${\n    encoding?.output || 'mp4'\n  }`;\n  const outFileId = fileId + outPostfix;\n  const threads =\n    Platform.OS === 'web' &&\n    window.navigator.hardwareConcurrency.toString();\n  const extraCode: string[] =\n    encoding?.code && encoding.code[0] != ''\n      ? encoding.code\n          .filter(i => i !== '')\n          .map(i =>\n            i\n              .trim()\n              .replace(/[\\r\\n]+/gm, '')\n              .trim(),\n          )\n      : [];\n  const medias = layers\n    ?.map(layer => layer?.media?.map(m => ({...m, layer})))\n    .flat()\n    .filter(i => i)\n    .filter(i => !i.isContact);\n  const files =\n    medias\n      ?.map(e => [\n        '-i',\n        `${documentDir}${e?.id}_${e?.filename}.output.${\n          e?.encoding?.lastUpdated || 0\n        }.${e?.encoding?.output || 'mp4'}`,\n      ])\n      .flat() || [];\n  const hasAudio = layers?.reduce((a, layer) => {\n    if (a === true) return a;\n\n    return !layer.editor?.muted;\n  }, false);\n  const hasVideo = layers?.reduce((a, layer) => {\n    if (a === true) return a;\n\n    return !layer.editor?.videoDisabled;\n  }, false);\n  const audioOutput = hasAudio ? '[a_concat]' : '';\n  const audioMap = hasAudio ? ['-map', audioOutput] : [];\n  const videoOutput = hasVideo ? '[v_concat]' : '';\n  const videoMap = hasVideo ? ['-map', videoOutput] : [];\n  const aspectRatio = projectData?.editor?.aspectRatio || '16/9';\n  const scale = `scale=${encoding?.width || 1280}:${\n    encoding?.height || 720\n  },setdar=${aspectRatio}`;\n  const filterTrim =\n    medias?.map((e, index) => {\n      const trimV =\n        `[${index}:v]trim=start=${\n          e?.encoding.start || 0\n        }:end=${parseInt(\n          e?.encoding?.end || e?.duration,\n        )},setpts=PTS-STARTPTS` +\n        ',' +\n        scale +\n        `[v${index}]`;\n\n      const trimA = `[${index}:a]atrim=start=${\n        e?.encoding.start || 0\n      }:end=${parseInt(\n        e?.encoding?.end || e?.duration,\n      )},asetpts=PTS-STARTPTS[a${index}]`;\n      //`,volume=${e?.encoding?.soundVolume/100 || 1},amix[a${index}]`\n      let trim = trimV + ', \\n' + trimA;\n      if (e?.layer?.editor?.muted) trim = trimV;\n      if (e?.layer?.editor?.videoDisabled) trim = trimA;\n      return trim;\n    }) || [];\n  // console.info('medias', medias)\n  const videosLength =\n    medias?.filter(i => i?.layer?.editor?.videoDisabled !== true)\n      .length || 1;\n  const audiosLength =\n    medias?.filter(i => i?.layer?.editor?.muted !== true).length || 1;\n  const videoConcat =\n    (medias\n      ?.map((a, i) => {\n        if (a.layer?.editor?.videoDisabled !== true) return `[v${i}]`;\n        return undefined;\n      })\n      ?.filter(i => i)\n      .join('') || '') +\n    `concat=n=${videosLength}:v=1:a=0${videoOutput}`;\n  const audioConcat =\n    (medias\n      ?.map((a, i) => {\n        if (a.layer?.editor?.muted !== true) return `[a${i}]`;\n        return undefined;\n      })\n      ?.filter(i => i)\n      ?.join('') || '') +\n    `concat=n=${audiosLength}:v=0:a=1${audioOutput}`;\n  // [a3]volume=enable='between(t,0,49)'${audioOutput}`\n  const filterConcat = videoConcat + ';\\n' + audioConcat;\n  filterTrim.push(filterConcat);\n  const execCmd: string[] = [\n    ...files,\n    '-crf',\n    encoding?.compressionLevel?.toString() || '20',\n    '-threads',\n    threads,\n    '-filter_complex',\n    `${filterTrim.join(';\\n')}`,\n    '-preset',\n    encoding?.preset || 'veryfast',\n    '-movflags',\n    '+faststart',\n    ...extraCode,\n    ...videoMap,\n    ...audioMap,\n    '-r',\n    encoding?.framerate?.toString() || '30',\n    `${documentDir}${outFileId}`,\n  ];\n  return {execCmd, medias, files, outFileId};\n};\n\nexport const genExecCmd = (\n  projectData: EncoderProject,\n  isPrerender?: boolean,\n) => {\n  if (projectData?.id === undefined) return [];\n  const fileId = `${projectData.id}_${projectData.filename}`;\n  const {encoding} = projectData;\n  const outPostfix = `.output.${encoding?.lastUpdated || 0}.${\n    encoding?.output || 'mp4'\n  }`;\n  const outFileId = fileId + outPostfix;\n  const threads = window.navigator.hardwareConcurrency.toString();\n  const extraCode: string[] =\n    encoding?.code && encoding.code[0] != ''\n      ? encoding.code\n          .filter(i => i !== '')\n          .map(i =>\n            i\n              .trim()\n              .replace(/[\\r\\n]+/gm, '')\n              .trim(),\n          )\n      : [];\n  const prerenderOptionalCode = !isPrerender\n    ? [\n        '-ss',\n        genExecTime(encoding?.start || 0),\n        '-to',\n        genExecTime(encoding?.end || projectData?.duration),\n      ]\n    : [];\n  const execCmd = [\n    '-i',\n    `${documentDir}${fileId}`,\n    '-crf',\n    encoding?.compressionLevel?.toString() || '20',\n    '-threads',\n    threads,\n    '-filter_complex',\n    `scale=${encoding?.width || projectData.width}x${\n      encoding?.height || projectData.height\n    }`,\n    '-preset',\n    encoding?.preset || 'veryfast',\n    '-movflags',\n    '+faststart',\n    ...prerenderOptionalCode,\n    ...extraCode,\n    `${documentDir}${outFileId}`,\n  ];\n  return execCmd;\n};\n\nexport const genExecTime = (seconds: number, comma?: boolean) => {\n  const end = parseInt(seconds, 10);\n  let endMins = parseInt(end / 60, 10);\n  let endSeconds = parseInt(end - endMins * 60, 10);\n  if (endMins.toString().length === 1) endMins = '0' + endMins;\n  if (endSeconds.toString().length === 1)\n    endSeconds = '0' + endSeconds;\n  const separator = comma ? ',' : ':';\n  const extraSymbol = comma ? '' : '00:';\n  return `${extraSymbol}${endMins}${separator}${endSeconds}`;\n};\n\nexport const getActiveProjectLayer = (\n  layers: EditorLayer[],\n  currentPosition: number,\n) => {\n  let activeMedia: EncoderProject | undefined;\n  let layerCount = 0;\n  let offset = 0;\n  let layer: EditorLayer | undefined;\n\n  while (activeMedia?.id === undefined) {\n    layer = layers[layerCount];\n\n    if (layerCount > layers.length + 1) {\n      console.error('layers', layers, layerCount);\n      throw 'no_layer_found';\n    }\n\n    if (layer?.id === undefined) {\n      layerCount++;\n      continue;\n    }\n    if (layer?.editor?.videoDisabled === true) {\n      layerCount++;\n      continue;\n    }\n\n    const layerMedia = layer.media;\n    activeMedia = layerMedia!.reduce((a, media: EncoderProject) => {\n      if (a.id) return a;\n\n      a +=\n        (media?.encoding?.end || media?.duration) -\n        (media?.encoding?.start || 0);\n      if (a >= currentPosition) return media;\n\n      offset = a;\n      return a;\n    }, 0);\n    layerCount++;\n  }\n  return {offset, layer, activeLayer: layerCount, activeMedia};\n};\n\nexport const getNextActiveProjectMedia = (\n  layers: EditorLayer[],\n  startPosition: number,\n  media: EncoderProject,\n) => {\n  const currentDuration =\n    (media?.encoding?.end || media?.duration) -\n    (media?.encoding?.start || 0);\n  const nextPosition = startPosition + currentDuration + 1;\n  const next = getActiveProjectLayer(layers, nextPosition);\n  console.info('nextPosition', nextPosition, next);\n  return next;\n};\n\nexport const getTotalTime = (layers: EditorLayer[]): number => {\n  const time = layers.reduce((a, layer) => {\n    const t = layer.media?.reduce((agv, media) => {\n      agv +=\n        (media?.encoding?.end || media?.duration) -\n        (media?.encoding?.start || 0);\n      return agv;\n    }, 0);\n    if (!t) return a;\n    if (a > t) return a;\n    if (t > a) return t;\n  }, 0);\n  return time;\n};\n\nexport const getProjectMedia = async (\n  layers: EditorLayer[],\n  currentPosition: number,\n  cb: CBProgressCallback,\n) => {\n  const {offset, layer, activeLayer, activeMedia} =\n    getActiveProjectLayer(layers, currentPosition);\n  const offsetPosition =\n    currentPosition -\n    offset +\n    parseFloat(activeMedia?.encoding.start || 0);\n  const totalTime = getTotalTime(layers);\n  console.info(\n    'getProjectMedia offset',\n    offsetPosition,\n    currentPosition,\n    offset,\n    activeMedia.encoding.start,\n    activeMedia?.id,\n  );\n  const encode = async () => {\n    const e = encodeMedia(activeMedia, cb, true);\n    return new Promise(res => {\n      e.then(async r => {\n        res(r);\n        try {\n          const next = getNextActiveProjectMedia(\n            layers,\n            offset,\n            activeMedia,\n          );\n          if (next) {\n            await encodeMedia(next.activeMedia, () => {}, true);\n          }\n        } catch (err) {\n          console.error('prepare next video error', err);\n        }\n      });\n    });\n  };\n  const url = activeMedia?.id !== undefined ? await encode() : null;\n  return {\n    url,\n    currentPosition: offsetPosition,\n    muted: layer?.editor?.muted,\n    activeMedia,\n    totalTime,\n    offset,\n    activeLayer,\n  };\n};\n","import * as ExpoFileSystem from 'expo-file-system';\nimport {Platform} from 'react-native';\nimport {Folder, Media} from '../types';\nimport {writeItem} from './db';\nimport {getBlobForArrayBuffer} from './wt';\n\nimport * as ExpoDocumentPicker from 'expo-document-picker';\nimport {createBlobDB} from './blobdb';\nimport {\n  AssetType,\n  Dirs,\n  FileStat,\n  FileSystem,\n} from 'react-native-file-access';\nimport {useShare} from '../hooks/useShare';\n\nexport async function* streamFileChunks(\n  path: string,\n  bytesOffset: number,\n  chunkSize: number,\n  byteEnd: number,\n) {\n  let currentOffset = bytesOffset;\n  while (currentOffset < byteEnd) {\n    const buf = Buffer.from(\n      await FileSystem.readFileChunk(\n        path,\n        currentOffset,\n        chunkSize,\n        'base64',\n      ),\n      'base64',\n    );\n    currentOffset += chunkSize;\n    yield buf;\n  }\n}\nfunction iteratorToStream(\n  iterator: ReturnType<typeof streamFileChunks>,\n) {\n  return new ReadableStream({\n    async pull(controller) {\n      const {value, done} = await iterator.next();\n\n      if (done) {\n        controller.close();\n      } else {\n        controller.enqueue(value);\n      }\n    },\n  });\n}\nexport const streamFile = (\n  path: string,\n  bytesOffset: number,\n  chunkSize: number,\n  byteEnd: number,\n) => {\n  const streamGen = streamFileChunks(\n    path,\n    bytesOffset,\n    chunkSize,\n    byteEnd,\n  );\n  const stream = iteratorToStream(streamGen);\n  stream.clone = () =>\n    streamFile(path, bytesOffset, chunkSize, byteEnd);\n  return stream;\n};\n\nexport const checkFolderMobile = async (dirPath: string) => {\n  try {\n    const checkFolder = await ExpoFileSystem.readDirectoryAsync(\n      dirPath,\n    );\n    if (!checkFolder || checkFolder.length === 0) {\n      await ExpoFileSystem.makeDirectoryAsync(dirPath);\n    }\n  } catch (err) {\n    await ExpoFileSystem.makeDirectoryAsync(dirPath);\n  }\n};\n\nexport const writeFileOpfs = async (\n  media: Media,\n  file: File | ExpoDocumentPicker.DocumentPickerAsset,\n) => {\n  if (Platform.OS === 'web') {\n    const dirCore = await window.navigator.storage.getDirectory();\n    const dir = await dirCore.getDirectoryHandle(media.folderId, {\n      create: true,\n    });\n    const fileId = `${media.id}_${file.name}`;\n    const fileHandle = await dir.getFileHandle(fileId, {\n      create: true,\n    });\n    const writable = await fileHandle.createWritable();\n\n    await writable.write(file);\n    await writable.close();\n    if (!media.isDownloaded) {\n      media.isDownloaded = true;\n      await writeItem(media);\n    }\n    return fileHandle;\n  }\n  const dirPath = `${ExpoFileSystem.documentDirectory}${media.folderId}`;\n  await checkFolderMobile(dirPath);\n  const fileId = `${media.id}_${media.filename}`;\n  const fileUri = `${dirPath}/${fileId}`;\n  await ExpoFileSystem.copyAsync({\n    to: fileUri,\n    from: (file as ExpoDocumentPicker.DocumentPickerAsset).uri,\n  });\n  return fileUri.replace('file://', '');\n};\n\nexport const getFileStats = async (\n  media: Media,\n): Promise<FileStat> => {\n  const fileData = await getFileReaderOpfs(media);\n\n  if (Platform.OS === 'web') {\n    const file = fileData as File & {\n      filename: string;\n      path: string;\n      type: 'file';\n    };\n    return file;\n  } else {\n    const file = FileSystem.stat(fileData as string);\n    return file;\n  }\n};\n\nexport const removeObject = async (\n  objectItem: Media | Folder,\n): Promise<void> => {\n  try {\n    if (Platform.OS === 'web') {\n      const dirCore = await window.navigator.storage.getDirectory();\n      if ((objectItem as Media).isMediaNew) {\n        const media = objectItem as Media;\n        const fileId = `${media.id}_${media.filename}`;\n        const dir = await dirCore.getDirectoryHandle(media.folderId);\n        dir.removeEntry(fileId);\n      } else {\n        // const dir = await dirCore.getDirectoryHandle(objectItem.folderId as string);\n        dirCore.removeEntry(objectItem.id, {recursive: true});\n      }\n    } else {\n      if ((objectItem as Media).isMediaNew) {\n        const media = objectItem as Media;\n        const filePath = (await getFileReaderOpfs(media)) as string;\n        await ExpoFileSystem.deleteAsync(filePath);\n      } else {\n        await ExpoFileSystem.deleteAsync(objectItem.id);\n      }\n    }\n  } catch (err) {\n    console.error('delete file rror', err);\n  }\n};\n\nexport const getFileOpfs = async (\n  media: Media,\n): Promise<string | undefined> => {\n  try {\n    console.info('get file', media.id);\n\n    const file = await getFileReaderOpfs(media);\n    if (typeof file === 'string') return file;\n\n    if (!file) throw 'no_file_found';\n\n    const url = URL.createObjectURL(file);\n    return url;\n  } catch (err) {\n    // console.error('get file error', err);\n    throw err;\n  }\n};\n\nexport const exportFile = async (media: Media): Promise<void> => {\n  if (Platform.OS === 'web') {\n    const file = (await getFileOpfs(media)) as string;\n    const a = document.createElement('a');\n    a.style = 'display:none;';\n    document.body.appendChild(a);\n    a.download = media.filename;\n    a.href = file;\n    a.click();\n  } else {\n    const {share} = useShare();\n    const file = (await getFileReaderOpfs(media)) as string;\n    share(file);\n  }\n};\n\nexport const getFileReaderOpfs = async (\n  media: Media,\n): Promise<File | string | undefined> => {\n  try {\n    const fileId = `${media.id}_${media.filename}`;\n    if (Platform.OS === 'web') {\n      const dirCore = await window.navigator.storage.getDirectory();\n      const dir = await dirCore.getDirectoryHandle(media.folderId, {\n        create: true,\n      });\n      const fileHandle = await dir.getFileHandle(fileId);\n      const file = await fileHandle?.getFile();\n      return file;\n    } else {\n      const fileUri = `${ExpoFileSystem.documentDirectory}${media.folderId}/${fileId}`;\n      console.info('fileUri', fileUri);\n      const file = await ExpoFileSystem.getInfoAsync(fileUri);\n      console.info('rn fs file', file);\n      return (file?.exists && file.uri) || undefined;\n    }\n  } catch (err) {\n    // console.error('get file reader error', err);\n  }\n};\nlet chunksCount = {};\nlet savePromises = {};\nlet savesCompleted = {};\nexport const saveFileToData = async (\n  filename: string,\n  fileUri: string,\n  saveCount: number,\n): Promise<void> => {\n  console.info(\n    'save ',\n    filename,\n    saveCount,\n    savesCompleted[filename],\n  );\n  if (savePromises[filename])\n    return savePromises[filename].then(() =>\n      saveFileToData(filename, fileUri, saveCount),\n    );\n  else\n    savePromises[filename] = new Promise(async (resolve, rej) => {\n      try {\n        const {readBlobs} = await createBlobDB();\n        let blobs = await readBlobs(filename);\n        let bbs = blobs.map(i => i.data);\n        let buffers = bbs.reduce(\n          (a, i) => _appendBuffer(a, Uint8Array.from(i)),\n          new Uint8Array(),\n        );\n        if (chunksCount[filename])\n          chunksCount[filename] += blobs.length;\n        else chunksCount[filename] = blobs.length;\n        console.info(\n          'save file to data',\n          filename,\n          buffers.length,\n          blobs.length,\n          bbs.length,\n        );\n        console.info(\n          'current chunk on saving file',\n          chunksCount[filename],\n        );\n        let nfile = getBlobForArrayBuffer(buffers.buffer) as Blob & {\n          name: string;\n        };\n        nfile.name = filename;\n        const fr = new FileReader();\n        fr.onload = async () => {\n          // console.info('file reader result', fr)\n          try {\n            const data = fr.result.replace('data:blob;base64,', '');\n            await FileSystem.appendFile(\n              fileUri.replace('file://', ''),\n              data,\n              'base64',\n            );\n            resolve(null);\n          } catch (err) {\n            const error = (err as Error)?.message || err;\n            console.error('fs worker err', error);\n            rej(error);\n          }\n        };\n        fr.readAsDataURL(nfile);\n      } catch (err) {\n        savePromises[filename] = null;\n        console.error(\n          'fs worker err',\n          (err as Error)?.message || err,\n        );\n        rej((err as Error)?.message || err);\n      }\n    });\n  await savePromises[filename];\n  if (savesCompleted[filename])\n    savesCompleted[filename].push(saveCount);\n  else savesCompleted[filename] = [saveCount];\n  savePromises[filename] = null;\n};\n\nexport const _appendBuffer = function (\n  buffer1: ArrayBuffer,\n  buffer2: ArrayBuffer,\n) {\n  const tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n  tmp.set(new Uint8Array(buffer1), 0);\n  tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n  return tmp;\n};\n\nexport const DocumentPicker = {\n  pickSingle: async () =>\n    new Promise(async resolve => {\n      if (Platform.OS === 'web') {\n        const fileInput = document.getElementById(\n          'fileInput',\n        ) as HTMLInputElement | null;\n        fileInput?.click();\n        fileInput?.addEventListener('change', async () => {\n          if (fileInput?.files?.length) {\n            const file = fileInput?.files?.[0];\n            const nfile = {\n              file,\n              type: file?.type,\n              title: file?.name,\n              name: file?.name,\n              extractor: 'local',\n              size: file?.size,\n              originalId: file?.name + file?.size,\n            };\n            return resolve(nfile);\n          }\n        });\n      } else {\n        const exres = await ExpoDocumentPicker.getDocumentAsync({\n          multiple: false,\n        });\n        const asset = exres?.assets?.[0];\n        console.info('expo res', exres, asset);\n        if (!asset) return resolve(undefined);\n        const nfile = {\n          asset,\n          file: asset,\n          uri: asset.uri,\n          type: asset.mimeType,\n          size: asset.size,\n          title: asset.name,\n          name: asset.name,\n          extractor: 'local',\n          originalId: asset.name + asset.size,\n        };\n        return resolve(nfile);\n      }\n    }),\n};\n","export * from '../db/defaults';\nexport * from './db';\nexport * from './media';\nexport * from './chat';\nexport * from './fs';\nimport {getWT, startUpMediaSharing} from './media';\nimport {writeItem, getUserData, getById} from './db';\ndeclare global {\n  var ethers: any;\n  var ethereum: any;\n  var publicSocketCallback: any;\n  var newMediaCallback: any;\n  var setupPartyView: any;\n  var playMediaLink: any;\n  var playMesh: any;\n  var mediaClient: any;\n  var windowClosedCallback: any;\n  // var localStorage: any;\n  var showOpenFilePicker: any;\n}\nexport {evolu, createDBConn} from './db';\nimport * as ExpoDevice from 'expo-device';\n\nimport {colors, domain, userDocKey} from '../db/defaults';\n\nimport {CurrentUserData, Device} from '../types';\nimport {Platform} from 'react-native';\nimport {doInitialMigration} from '../db/migration';\n\nconst apiURL = `${domain}api/v1/`;\n\nexport let UserData: CurrentUserData = {\n  user: {\n    id: 'test',\n    name: 'test',\n  },\n  isEditingFolder: {},\n  colors,\n  searchItems: [],\n  currentFolderIds: {},\n};\n\nexport const initUserData = async () => {\n  try {\n    UserData.user = await doInitialMigration(writeItem, getUserData);\n    const userAgent =\n      ExpoDevice.designName?.replace(/[^\\w\\s]/gi, '') ||\n      'unknown_agent';\n    const os = ExpoDevice.osName || 'unknown_os';\n    const browserName = ExpoDevice.brand || 'web';\n    console.info('browserName', browserName);\n    const deviceId = userAgent + os + browserName;\n    // console.info('deviceId', deviceId)\n    const device = (await getById(deviceId)) as Device;\n    // console.info('device', device)\n    if (!device || !device.manufacturer) {\n      const ndevice: Device = {\n        id: deviceId,\n        manufacturer: browserName,\n        isDevice: true,\n        userAgent,\n        createdAt: new Date().valueOf(),\n        model: browserName,\n        os,\n        platform: Platform.OS,\n      };\n      console.info(ndevice);\n      await writeItem(ndevice);\n    }\n    console.info('initUserData', UserData);\n    if (Platform.OS === 'web') {\n      // startUpMediaSharing();\n    }\n  } catch (err) {\n    console.error('initUserData Error', err);\n  }\n};\n\nexport const publicPartyPref = () => {};\nexport const deleteById = (id: string) => {};\nexport const setOpenItem = () => {};\nexport const removeFile = () => {};\nexport const downloadFile = () => {};\n\nexport const getUnreadMessages = () => {};\nexport const extractMedia = async (link: string) => {\n  const media = await getWT(link);\n  console.info('onMedia', media);\n  return {\n    url: media.magnetURI,\n    title: media.name,\n    originalId: media.infoHash,\n    id: media.infoHash,\n    filename: media.files[0].name,\n    extractor: 'wt',\n    isFolder:\n      media.files && media.files?.length > -1 ? true : undefined,\n    files:\n      media.files && media.files?.length > -1\n        ? media.files\n        : undefined,\n  };\n};\n","export * from './fs';\nexport * from './wt';\nexport * from './encoder';\n\nimport {EditorLayer, EditorProject, Folder, Media} from '../types';\n\nimport {getById, getFolderContent, evolu} from './db';\nimport {cast} from '@evolu/common';\nimport {shareFileToWT} from './wt';\nimport {FolderPreviewContentType} from '../hooks/useFolders';\nimport {getFileOpfs} from './fs';\n\nexport const recursiveShare = async (\n  media: FolderPreviewContentType,\n): Promise<void> => {\n  if ((media as Media).isDownloaded) {\n    try {\n      shareFileToWT(media.id, media.folderId);\n      return;\n    } catch (err) {\n      // console.error(\"shareFileToWT\", err)\n    }\n  }\n  if (\n    (media as Folder).isFolder ||\n    (media as EditorProject).isEditorProject ||\n    (media as EditorLayer).isEditorLayer\n  ) {\n    const innerContent: (Media | Folder)[] = await getFolderContent(\n      media.id,\n    );\n    await Promise.all(innerContent.map(recursiveShare));\n    return;\n  }\n  return undefined;\n};\n\nexport const shareFolder = async (folder: Folder) => {\n  const content: (Media | Folder)[] = await getFolderContent(\n    folder.id,\n  );\n  // for (let n = 0; n < content.length; n++) {\n  // const contentItem =\n  // await recursiveShare(content[n]);\n  // const shared = (await Promise.all(content.map(recursiveShare))).flat().filter((i)=>i)\n  // }\n};\nexport const startUpMediaSharing = async () => {\n  try {\n    // await new Promise(res=>setTimeout(()=>res(), 20000))\n    const query = (await evolu).createQuery(db =>\n      db\n        .selectFrom('item')\n        .selectAll()\n        .where('isFolder', '=', cast(true))\n        .where('mnemonic', 'is not', null)\n        .orderBy('createdAt', 'desc'),\n    );\n\n    // const sharedFolders: Folder[] = (\n    //   await (await evolu).loadQuery(query)\n    // )?.rows?.map(i => i.item);\n    // console.info(\"sharedFolders\", sharedFolders)\n    // for (let i = 0; i < sharedFolders.length; i++) {\n    //   const folder = sharedFolders[i];\n    // await shareFolder(folder);\n    // return shared;\n    // }\n    // const sharedFiles = (\n    //   await Promise.all(\n    //     sharedFolders.map(async folder => {\n    //       const content: (Media | Folder)[] = await getFolderContent(\n    //         folder.id,\n    //       );\n    //       const shared = (\n    //         await Promise.all(content.map(recursiveShare))\n    //       )\n    //         .flat()\n    //         .filter(i => i);\n    //       return shared;\n    //     }),\n    //   )\n    // ).flat();\n    // console.info('sharedFiles', sharedFiles);\n  } catch (err) {\n    console.error('startUpMediaSharing error', err);\n  }\n};\n\nexport const getMediaAndEnq = async (\n  mediaId: string,\n  filename: string,\n) => {\n  const media: Media = (await getById(mediaId)) as any;\n  console.info('playing media', media);\n  if (media.extractor === 'local') {\n    media.url = (await getFileOpfs(media)) as string;\n  }\n  return enqMedia(media, filename);\n};\n\nexport const enqMedia = async (media: Media, filename: string) => {\n  return playMediaLink(media.url, media.currentPosition, filename);\n};\n","import {Platform} from 'react-native';\nimport {ethers} from 'ethers';\nimport {TransactionPayload} from '../types';\nexport const maticId = '0x89';\nexport async function switchNet(chainId = `${maticId}`) {\n  await window.ethereum.request({\n    method: 'wallet_switchEthereumChain',\n    params: [\n      {\n        chainId,\n      },\n    ],\n  });\n}\n\nexport const provider = new ethers.EtherscanProvider(\n  'matic',\n  '7JUYWWYGE3HA26QBJQ2Y5AGRZDZRPDUJFE',\n);\nexport const providerCloud = new ethers.AlchemyProvider(\n  'matic',\n  'alcht_neMEQZIacGItzL30PS4QlWiEwlw6Z9',\n);\nexport async function sendMatic(\n  from: string,\n  to: string,\n  valueNum: number,\n  payload: TransactionPayload = {},\n): Promise<string> {\n  if (Platform.OS === 'web') {\n    await switchNet();\n    const value = ethers.parseEther(valueNum.toString()).toString(16);\n    const abiCoder = new ethers.AbiCoder();\n    const data = abiCoder.encode(\n      ['string'],\n      [JSON.stringify(payload)],\n    );\n    // const decoded = coder.decode([\"string\"], data)\n    const txParams = {\n      // The user's active address.\n      from,\n      // Required except during contract publications.\n      to,\n      // Only required to send ether to the recipient from the initiating external account.\n      value,\n      // Transaction payload\n      data,\n      // Customizable by the user during MetaMask confirmation.\n      gasLimit: '0x76c0',\n      gasPrice: (await provider.getFeeData()).gasPrice?.toString(16),\n      // Customizable by the user during MetaMask confirmation.\n      // maxPriorityFeePerGas: '0x3b9aca00',\n      // // Customizable by the user during MetaMask confirmation.\n      // maxFeePerGas: '0x2540be400',\n    };\n    console.info('txparams', txParams);\n    const txHash: string = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: [txParams],\n    });\n    console.info('new transaction', txHash);\n    return txHash;\n  }\n  return '';\n}\n\nexport async function requestAccounts(): Promise<string[]> {\n  if (Platform.OS === 'web') {\n    await switchNet();\n    const accounts: string[] = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    return accounts;\n  }\n  return [];\n}\n","import {Platform} from 'react-native';\n\nconst algo = {\n  name: 'RSA-OAEP',\n  modulusLength: 4096,\n  publicExponent: new Uint8Array([1, 0, 1]),\n  hash: 'SHA-256',\n} as AlgorithmIdentifier;\nconst keyEncAlgo = {\n  name: 'RSA-OAEP',\n};\nconst payloadKeyEncAlgo = {\n  name: 'AES-GCM',\n  length: 256,\n};\nconst payloadEncAlgo = {\n  name: 'AES-GCM',\n};\nexport async function generateNewKeyPair(\n  seed?: string,\n): Promise<{publicKey: string; privateKey: string} | void> {\n  if (Platform.OS === 'web') {\n    const keyPair = (await window.crypto.subtle.generateKey(\n      algo,\n      true,\n      ['encrypt', 'decrypt'],\n    )) as CryptoKeyPair;\n    const kp = {\n      publicKey: JSON.stringify(\n        await window.crypto.subtle.exportKey(\n          'jwk',\n          keyPair.publicKey,\n        ),\n      ),\n      privateKey: JSON.stringify(\n        await window.crypto.subtle.exportKey(\n          'jwk',\n          keyPair.privateKey,\n        ),\n      ),\n    };\n    return kp;\n  }\n}\nasync function encodeBuffer(array: ArrayBuffer): Promise<string> {\n  return new Promise(resolve => {\n    const blob = new Blob([array]);\n    const reader = new FileReader();\n\n    reader.onload = event => {\n      const dataUrl = reader.result as string;\n      const [_, base64] = dataUrl.split(',');\n\n      resolve(base64 as string);\n    };\n\n    reader.readAsDataURL(blob);\n  });\n}\n\nexport async function generateAesKey() {\n  const key = await window.crypto.subtle.generateKey(\n    payloadKeyEncAlgo,\n    true,\n    ['encrypt', 'decrypt'],\n  );\n  // console.info('aeskey', key);\n  const kp = JSON.stringify(\n    await window.crypto.subtle.exportKey('jwk', key),\n  );\n  return {kp, key};\n}\n\n// generateAesKey();\n\nfunction base64ToArrayBuffer(base64: string) {\n  const binaryString = atob(base64);\n  let bytes = new Uint8Array(binaryString.length);\n  for (var i = 0; i < binaryString.length; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\nexport async function decryptAesKey(\n  key: string,\n  privateKey: JsonWebKey,\n) {\n  try {\n    const k = await window.crypto.subtle.importKey(\n      'jwk',\n      privateKey,\n      algo,\n      true,\n      ['decrypt'],\n    );\n    const encoder = new TextEncoder();\n    const encoded = base64ToArrayBuffer(key);\n    // console.info('encoded key buffer', encoded);\n    const decrypted = await window.crypto.subtle.decrypt(\n      keyEncAlgo,\n      k,\n      encoded,\n    );\n    // console.info('decryptedKey', decrypted);\n    const decoder = new TextDecoder();\n    const decode = decoder.decode(decrypted, {});\n    // console.info('textdecoder decode', decode);\n    const aesKey = await window.crypto.subtle.importKey(\n      'jwk',\n      JSON.parse(decode),\n      payloadKeyEncAlgo,\n      true,\n      ['encrypt', 'decrypt'],\n    );\n    return aesKey;\n  } catch (err) {\n    console.error('decryptkey error', err);\n    throw err;\n  }\n}\n\nexport async function decryptPayload(\n  k: CryptoKey,\n  payload: string,\n  ivb: string,\n): Promise<string> {\n  const iv = base64ToArrayBuffer(ivb);\n  const encoded = base64ToArrayBuffer(payload);\n  // console.info('encoded into buffer', encoded);\n  const decrypted = await window.crypto.subtle.decrypt(\n    {...payloadEncAlgo, iv},\n    k,\n    encoded,\n  );\n  // console.info('decryptedPayload', decrypted);\n  const decoder = new TextDecoder();\n  const decode = decoder.decode(decrypted);\n  return decode;\n}\n\nexport async function encryptAesKey(key: string, pubKey: JsonWebKey) {\n  const k = await window.crypto.subtle.importKey(\n    'jwk',\n    pubKey,\n    algo,\n    true,\n    ['encrypt'],\n  );\n  const encoder = new TextEncoder();\n  const encoded = encoder.encode(key);\n  const encrypted = await window.crypto.subtle.encrypt(\n    keyEncAlgo,\n    k,\n    encoded,\n  );\n  // const decoder = new TextDecoder();\n  // const decode = decoder.decode(encrypted)\n  return encodeBuffer(encrypted);\n}\n\nexport async function encryptPayload(k: CryptoKey, payload: string) {\n  try {\n    const encoder = new TextEncoder();\n    const encoded = encoder.encode(payload);\n    // console.info('encoded into buffer', encoded);\n    const iv = window.crypto.getRandomValues(new Uint8Array(12));\n    const encrypted = await window.crypto.subtle.encrypt(\n      {...payloadEncAlgo, iv},\n      k,\n      encoded,\n    );\n    // console.info('encrypted', encrypted);\n    return {\n      encryptedPayload: await encodeBuffer(encrypted),\n      iv: await encodeBuffer(iv.buffer),\n    };\n  } catch (err) {\n    console.error('encrypt payload err', err);\n    throw err;\n  }\n}\n","export const getBrowserName = () => {\n  // Opera 8.0+\n  const isOpera =\n    (!!window.opr && !!opr.addons) ||\n    !!window.opera ||\n    navigator.userAgent.indexOf(' OPR/') >= 0;\n  if (isOpera) return 'opera';\n  // Firefox 1.0+\n  const isFirefox = typeof window.InstallTrigger !== 'undefined';\n\n  if (isFirefox) return 'firefox';\n\n  // Safari 3.0+ \"[object HTMLElementConstructor]\"\n  const isSafari =\n    /constructor/i.test(window.HTMLElement) ||\n    (function (p) {\n      return p.toString() === '[object SafariRemoteNotification]';\n    })(\n      !window['safari'] ||\n        (typeof window.safari !== 'undefined' &&\n          window['safari'].pushNotification),\n    );\n\n  if (isSafari) return 'apple-safari';\n\n  // Internet Explorer 6-11\n  const isIE = /*@cc_on!@*/ false || !!window.document.documentMode;\n\n  if (isIE) return 'microsoft-internet-explorer';\n  // Edge 20+\n  const isEdge = !isIE && !!window.StyleMedia;\n\n  if (isEdge) return 'microsoft-edge';\n\n  // Chrome 1 - 79\n  const isChrome = window.chrome;\n\n  if (isChrome) return 'google-chrome';\n\n  // Edge (based on chromium) detection\n  const isEdgeChromium =\n    window.isChrome &&\n    window.navigator.userAgent.indexOf('Edg') != -1;\n\n  if (isEdgeChromium) return 'microsoft-edge';\n\n  // Blink engine detection\n  const isBlink = (window.isChrome || isOpera) && !!window.CSS;\n\n  if (isBlink) return 'blink';\n};\n\nconst units = [\n  'bytes',\n  'KiB',\n  'MiB',\n  'GiB',\n  'TiB',\n  'PiB',\n  'EiB',\n  'ZiB',\n  'YiB',\n];\nexport const niceBytes = (x: string) => {\n  let l = 0,\n    n = parseInt(x, 10) || 0;\n\n  while (n >= 1024 && ++l) {\n    n = n / 1024;\n  }\n\n  return n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + units[l];\n};\n","import {Platform} from 'react-native';\nimport * as ExpoFileSystem from 'expo-file-system';\nimport {ReadingOptions} from 'expo-file-system';\nimport {getById, writeItem} from './db';\nimport {\n  _appendBuffer,\n  checkFolderMobile,\n  getFileReaderOpfs,\n  saveFileToData,\n  streamFile,\n  writeFileOpfs,\n} from './fs';\nimport {createBlobDB} from './blobdb';\nimport {Media} from '../types';\n\nconst rtcConfig: RTCConfiguration = {\n  iceServers: [\n    {\n      urls: ['stun:turn.starpy.me', 'turn:turn.starpy.me'],\n      username: 'username1',\n      credential: 'password1',\n    },\n  ],\n  sdpSemantics: 'unified-plan',\n  bundlePolicy: 'max-bundle',\n  iceCandidatePoolSize: 1,\n  iceTransportPolicy: 'relay',\n};\n\nlet mediaClient: any, mediaWorker: any;\nexport let getBlobForArrayBuffer: (arrayBuffer: ArrayBuffer) => Blob;\nexport let getArrayBufferForBlob: (Blob: Blob) => ArrayBuffer;\nconst announce = ['wss://media.starpy.me'];\nconst createMediaClient = async () => {\n  const ops = {\n    tracker: {\n      rtcConfig,\n      announce,\n    },\n    // secure:true,\n    announce,\n  };\n  if (Platform.OS === 'web') {\n    mediaClient = new WebTorrent(ops);\n  } else {\n    const jsi = await import('react-native-blob-jsi-helper');\n    getBlobForArrayBuffer = jsi.getBlobForArrayBuffer;\n    getArrayBufferForBlob = jsi.getArrayBufferForBlob;\n\n    const wt = (await import('webtorrent/dist/webtorrent.min.js'))\n      .default;\n    mediaClient = new wt(ops);\n  }\n  mediaClient.on('error', function (err) {\n    console.error('mediaclient err: ' + err.message);\n    // reject(err)\n  });\n\n  const resolveWorker = async reg => {\n    const worker = reg.active || reg.waiting || reg.installing;\n    await new Promise(resolvd2 => {\n      const checkState = worker => {\n        mediaWorker = worker;\n        const res = worker.state === 'activated';\n        if (res) {\n          console.info('after load worker');\n          mediaClient.loadWorker(worker, resolvd2);\n        }\n        return res;\n      };\n      if (!checkState(worker)) {\n        mediaWorker.addEventListener('statechange', ({target}) =>\n          checkState(target),\n        );\n      }\n    });\n  };\n  const prs = await new Promise(async resolve => {\n    if (Platform.OS === 'web') {\n      const reg = await navigator.serviceWorker.register(\n        '/sw.min.js',\n      );\n      const wp = await resolveWorker(reg);\n    } else {\n      return resolve(mediaClient);\n    }\n  });\n  return prs;\n};\ncreateMediaClient();\nexport const downloadFileById = async (\n  mediaId: string,\n  folderId?: string,\n  progressCB?: (progress: number) => void,\n) => {\n  const media: Media = await getById(mediaId, folderId);\n  if (media?.extractor === 'wt') {\n    // const wt = await getVideoWT(media);\n    let wt;\n    let stream;\n    let cbt = null;\n    // if (wt) {\n    if (mediaClientFiles[mediaId]) {\n      wt = mediaClientFiles[mediaId];\n    } else {\n      const mediaData = await getVideoWT(media);\n      wt = mediaData.torrent;\n      stream = mediaData.stream;\n    }\n    wt.on('download', bytes => {\n      if (progressCB) progressCB(wt.progress);\n    });\n    if (Platform.OS === 'web') {\n      const blob = await (await fetch(stream)).arrayBuffer();\n      const file = new File([blob], media.filename);\n      return await writeFileOpfs(media, file);\n    }\n  }\n};\n\nexport const downloadFileByMedia = async (\n  media: Media,\n  progressCB?: (progress: number) => void,\n) => {\n  const mediaId = media.id;\n  if (media?.extractor === 'wt') {\n    // const wt = await getVideoWT(media);\n    let wt;\n    let stream;\n    let cbt = null;\n    // if (wt) {\n    if (mediaClientFiles[mediaId]) {\n      wt = mediaClientFiles[mediaId];\n    } else {\n      const mediaData = await getVideoWT(media);\n      wt = mediaData.torrent;\n      stream = mediaData.stream;\n    }\n    wt.on('download', bytes => {\n      if (progressCB) progressCB(wt.progress);\n    });\n    if (Platform.OS === 'web') {\n      const blob = await (await fetch(stream)).arrayBuffer();\n      const file = new File([blob], media.filename);\n      return await writeFileOpfs(media, file);\n    }\n  }\n};\n\nconst isVideo = (file: any) =>\n  file?.name?.endsWith('.mp4') ||\n  file?.name?.endsWith('.webm') ||\n  file?.name?.endsWith('.mkv') ||\n  file?.name?.endsWith('.mov');\n\nconst mediaClientFiles = {};\nconst streamUrls: {[key: string]: string | undefined} = {};\nconst mobileStreamingForFileIsRunning: {\n  [key: string]: Promise<string | undefined> | undefined;\n} = {};\nconst processWT = async (\n  wt,\n  media: Media,\n  filename?: string,\n): Promise<string | undefined> => {\n  let file = filename\n    ? wt.files.find(i => i.name || i.filename === filename)\n    : wt.files.find(file => isVideo(file));\n\n  if (!file && wt.files?.length) file = wt.files[0];\n\n  if (streamUrls[file.name]) return streamUrls[file.name];\n\n  if (mobileStreamingForFileIsRunning[file.name])\n    return await mobileStreamingForFileIsRunning[file.name];\n\n  if (!file?.name) throw new Error('no_file_found_in_metadata');\n\n  console.info('file name found', file?.name);\n\n  mobileStreamingForFileIsRunning[file.name] = new Promise(\n    async (resolve, reject) => {\n      try {\n        const process = (err: Error, url: string) => {\n          if (err) return reject(err);\n          resolve(url);\n        };\n        // isVideo(file) ?\n        if (Platform.OS === 'web') {\n          file?.getStreamURL(process);\n        } else {\n          const dirPath = `${ExpoFileSystem.documentDirectory}${media.folderId}`;\n          await checkFolderMobile(dirPath);\n          const fileUri = `${dirPath}/${file.name}`;\n          await ExpoFileSystem.writeAsStringAsync(fileUri, '', {\n            encoding: 'base64',\n          });\n          file.select();\n          const {writeBlob} = await createBlobDB();\n          const stream = file.createReadStream();\n          let countChunks = 0;\n          let lastSave = 0;\n          const saveThreshold = 5;\n          const startTheshold = 70;\n          let saveCount = 0;\n          stream.on('data', (chunk: Uint8Array) => {\n            countChunks++;\n            const chunkId = parseInt(countChunks.toString(), 10);\n            writeBlob(file.name, chunk).then(() => {\n              try {\n                if (\n                  chunkId - lastSave > saveThreshold &&\n                  lastSave !== chunkId\n                ) {\n                  lastSave = countChunks;\n                  saveCount++;\n                  saveFileToData(file.name, fileUri, saveCount).then(\n                    () => {\n                      if (startTheshold >= saveCount)\n                        resolve(fileUri);\n                    },\n                  );\n                }\n              } catch (err) {\n                console.error('write blob err', err);\n              }\n            });\n          });\n\n          file.on('done', async () => {\n            console.info('file done', file.name);\n            saveCount++;\n            await saveFileToData(file.name, fileUri, saveCount);\n            mobileStreamingForFileIsRunning[file.name] = undefined;\n            resolve(fileUri);\n          });\n        }\n      } catch (err) {\n        mobileStreamingForFileIsRunning[file.name] = undefined;\n        console.error('get stream err', err);\n      }\n    },\n  ).catch(err => {\n    mobileStreamingForFileIsRunning[file.name] = undefined;\n    console.error('get stream url error', err);\n  }) as Promise<string | undefined>;\n\n  streamUrls[file.name] = await mobileStreamingForFileIsRunning[\n    file.name\n  ];\n  console.info('after stream url', streamUrls[file.name]);\n  return streamUrls[file.name];\n};\n\nexport const getVideoWT = async (\n  media: Media,\n  filename?: string,\n): Promise<{stream: string | undefined; torrent: any}> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      if (mediaClientFiles[media.id]) {\n        resolve({\n          stream: await processWT(\n            mediaClientFiles[media.id],\n            media,\n            filename,\n          ),\n          torrent: mediaClientFiles[media.id],\n        });\n        return;\n      }\n      // console.info('before media client add', media.filename, );\n      const torrentFileName = 'torrent.file.' + media.id;\n      const torrentBuffer =\n        media?.torrentFile && Platform.OS === 'web'\n          ? new File(\n              [\n                Uint8Array.from(Object.values(media.torrentFile))\n                  .buffer,\n              ],\n              torrentFileName,\n            )\n          : media?.torrentFile &&\n            Uint8Array.from(Object.values(media.torrentFile));\n      // if(torrentBuffer)\n      //   torrentBuffer.name = torrentFileName\n\n      console.info('torrentFile', torrentBuffer);\n\n      mediaClient.add(torrentBuffer || media.url, wt => {\n        try {\n          mediaClientFiles[media.id] = wt;\n          console.info('after mediaclient add', media.filename, wt);\n          processWT(wt, media, filename)\n            .then(streamUrl =>\n              resolve({stream: streamUrl, torrent: wt}),\n            )\n            .catch(err => reject(err));\n        } catch (err) {\n          console.error('getVideoWT err', err);\n          reject(err);\n        }\n      });\n    } catch (err) {\n      console.error('get video wt err', err);\n      reject(err);\n    }\n  });\n};\n\nexport const getWT = async (magnet: string): Promise<any> => {\n  return await new Promise(async (resolve, reject) => {\n    mediaClient.add(magnet, async wt => resolve(wt));\n  });\n};\n\nconst isSharing: {[key: string]: true | undefined} = {};\nexport const shareFileToWT = async (\n  mediaId: string,\n  folderId?: string,\n): Promise<void> => {\n  try {\n    const media: Media = await getById(mediaId, folderId);\n    if (\n      (media.infoHash && isSharing[media.infoHash]) ||\n      isSharing[mediaId]\n    ) {\n      console.info('issharing already', isSharing);\n      return;\n    }\n    if (media.infoHash) isSharing[media.infoHash] = true;\n    isSharing[mediaId] = true;\n\n    let file = await getFileReaderOpfs(media);\n    console.info('filepath', file);\n    if (Platform.OS !== 'web') {\n      // const bs64 = await ExpoFileSystem.readAsStringAsync(\n      //   file as string,\n      //   {encoding: 'base64'},\n      // );\n      // file = `data:${media.fileType || \"video/mp4\"};base64,${bs64}`\n      const fileDL = file.replace('file://', '');\n      // file = await (await fetch(fileDL)).blob()\n      file = new Blob([], {type: media.fileType, size: media.size});\n      const stream = streamFile(\n        fileDL,\n        0,\n        5000,\n        media.size as number,\n      );\n      stream.length = media.size;\n      file.length = media.size;\n      // file.size = media.size\n      // file.stream = () => fsd.body;\n      file.stream = () => stream;\n      file.name = media.filename;\n      // file = arrayBuffer;\n      // file = new File(arrayBuffer, media.filename);\n    }\n    console.info('share file wt', file);\n    if (!file) throw 'no_file';\n    // if(Platform.OS === \"web\")\n    shareFile(file, announce, media);\n    // return runOnRuntime(bgRuntime, shareFile)(file, announce, media)\n  } catch (err) {\n    console.error('shareFileToWt err', err);\n  }\n};\nconst onProgress = progress => {\n  // console.info('ontorrentcreateprogress', progress)\n};\nconst shareFile = (\n  file: File | string,\n  announce: string[],\n  media: Media,\n) => {\n  'worklet';\n  new Promise((resolve, reject) => {\n    try {\n      mediaClient.seed(file, {announce, onProgress}, async wt => {\n        try {\n          console.info('after wt create', wt);\n          if (\n            media.extractor === 'wt' &&\n            media.url &&\n            media.url.search('file://') === -1\n          )\n            return resolve(media);\n          media.torrentFile = wt.torrentFile;\n          media.url = wt.magnetURI;\n          media.infoHash = wt.infoHash;\n          media.extractor = 'wt';\n          media.isDownloaded = true;\n\n          await writeItem(media);\n          resolve(media);\n        } catch (err) {\n          console.error('create wt err', err);\n          reject(err);\n        }\n      });\n    } catch (err) {\n      console.error('create wt err', err);\n      reject(err);\n    }\n  });\n};\n","import React, {\n  useState,\n  useEffect,\n  useContext,\n  useRef,\n  createContext,\n} from 'react';\n\nimport {Text} from 'react-native';\n\nimport {NavigationContainer, Theme} from '@react-navigation/native';\n\nimport RootStackNav from './nav';\n\nimport {GestureHandlerRootView} from 'react-native-gesture-handler';\nimport {linking} from '../routes/routes';\nimport {MD3DarkTheme} from 'react-native-paper';\n\nconst AppComponent = () => {\n  return (\n    <GestureHandlerRootView style={{width: '100%', height: '100%'}}>\n      <NavigationContainer\n        // onStateChange={(state)=>console.info('state change', state)}\n        theme={MD3DarkTheme as any}\n        linking={linking}\n        fallback={<Text>Loading...</Text>}>\n        <RootStackNav />\n      </NavigationContainer>\n    </GestureHandlerRootView>\n  );\n};\n\nexport default AppComponent;\n","import {useRoute} from '@react-navigation/native';\nimport React from 'react';\nimport {View} from 'react-native';\nimport {useQuery} from 'react-query';\nimport {AuctionParams} from '../../types/nav';\nimport {useFolder} from '../../hooks/useFolder';\nimport {Auction, FolderType, UserInfo} from '../../types';\nimport {getById, getFolderContent, getUserData} from '../../api';\nimport {useRouteContact} from '../../hooks/useRouteContact';\nimport ChatView from '../contacts/chatview';\nimport {\n  ActivityIndicator,\n  AnimatedFAB,\n  Button,\n  Chip,\n  List,\n} from 'react-native-paper';\nimport {useAuctionActions} from '../../hooks/useAuctionActions';\nimport {useRouteAuction} from '../../hooks/useRouteAuction';\nimport {useAppSelector} from '../../store/hooks';\n\nexport function AuctionPage() {\n  const route = useRoute();\n  const params = route.params as AuctionParams;\n  const {auctionId} = params;\n  const userQuery = useQuery('UserData', () => getUserData());\n  const auctionQuery = useQuery(\n    'auction_' + auctionId,\n    async () => await getById(auctionId, auctionId),\n  );\n  const auction = auctionQuery.data as Auction;\n  const isLoading = !userQuery.isFetched || !auctionQuery.isFetched;\n  const user = userQuery?.data as UserInfo;\n  const isOwner = !isLoading && user?.id === auction?.userId;\n  const isWinner = !isLoading && user?.id === auction?.winnerId;\n  const sellerReleasedDownload =\n    !isLoading && auction?.encryptedKey !== undefined;\n  const winnerPaid =\n    !isLoading && auction?.winnerPaymentTransactionId !== undefined;\n  const isClosed = auction?.isClosed;\n  const isDownloading = useAppSelector(\n    state => state.auction.downloadProgress,\n  );\n  let downloadText = isDownloading\n    ? `Downloading ${parseInt((isDownloading * 100).toString(), 10)}%`\n    : 'Download';\n  const {\n    createBid,\n    closeAuction,\n    currentBid,\n    payForAuction,\n    downloadAuctionMedia,\n    releaseDownload,\n    auctionTransaction,\n  } = useAuctionActions(auctionId, auction, user);\n  const confirmationText = !auctionTransaction\n    ? 'Waiting For Confirmation'\n    : (auctionTransaction.receipt?.status || 0) + ' Confirmation';\n  useRouteAuction(auction, isLoading);\n\n  return (\n    <View style={{width: '100%', height: '100%'}}>\n      <View style={{width: '100%', height: '40%'}}>\n        {isLoading ? (\n          <ActivityIndicator />\n        ) : (\n          <List.Section>\n            <List.Item\n              title={'Auction Name'}\n              description={auction?.title}\n            />\n            <List.Item\n              title={'Author Name'}\n              description={auction?.authorName}\n            />\n            <List.Item\n              title={'Auction Current Bid'}\n              description={currentBid || auction?.minPrice}\n            />\n            <List.Item\n              title={'Auction Minimum Step'}\n              description={auction?.minStep}\n            />\n            <List.Item\n              title={'Auction Minimum Price'}\n              description={auction?.minPrice}\n            />\n          </List.Section>\n        )}\n        {!isOwner && !isClosed && (\n          <Button\n            icon={'plus'}\n            onPress={createBid}\n            mode={'outlined'}\n            style={{\n              bottom: 16,\n              right: 16,\n              position: 'absolute',\n            }}>\n            Make A Bid\n          </Button>\n        )}\n        {isOwner && !isClosed && (\n          <Button\n            icon={'clipboard-check'}\n            onPress={closeAuction}\n            mode={'outlined'}\n            style={{\n              top: 16,\n              right: 16,\n              position: 'absolute',\n            }}>\n            Close Auction\n          </Button>\n        )}\n        {isWinner && !winnerPaid && (\n          <Button\n            icon={'currency-usd'}\n            onPress={payForAuction}\n            mode={'outlined'}\n            style={{\n              bottom: 16,\n              right: 16,\n              position: 'absolute',\n            }}>\n            Pay\n          </Button>\n        )}\n        {isWinner && sellerReleasedDownload && (\n          <Button\n            icon={'file'}\n            onPress={downloadAuctionMedia}\n            mode={'outlined'}\n            style={{\n              bottom: 16,\n              right: 16,\n              position: 'absolute',\n            }}>\n            {downloadText}\n          </Button>\n        )}\n\n        {isOwner && winnerPaid && (\n          <Button\n            icon={'file'}\n            onPress={releaseDownload}\n            mode={'outlined'}\n            disabled={!auctionTransaction || sellerReleasedDownload}\n            style={{\n              bottom: 16,\n              right: 16,\n              position: 'absolute',\n            }}>\n            Release File\n          </Button>\n        )}\n        {isClosed && (\n          <Chip\n            style={{\n              top: 16,\n              right: 16,\n              position: 'absolute',\n            }}\n            icon={'clipboard-check'}>\n            {' '}\n            Auction Closed{' '}\n          </Chip>\n        )}\n        {isClosed && winnerPaid && (\n          <Chip\n            style={{\n              top: 50,\n              right: 16,\n              position: 'absolute',\n            }}\n            icon={'timer-cog-outline'}>\n            {confirmationText}\n          </Chip>\n        )}\n      </View>\n      <View style={{width: '100%', height: '60%'}}>\n        <ChatView\n          params={{user, contact: auction}}\n          chatId={auctionId}\n        />\n      </View>\n    </View>\n  );\n}\n","import {View} from 'react-native';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {setBidAmount, setBidWallet} from '../../store/slices/auction';\nimport {Button, Divider, TextInput} from 'react-native-paper';\nimport {useMutation} from 'react-query';\nimport {requestAccounts} from '../../api/metamask';\nimport {MetamaskAccountsButton} from './metamaskaccountsbutton';\n// import { TextInput } from \"react-native-gesture-handler\";\n\nexport function BidDialogBody() {\n  const dispatch = useAppDispatch();\n  const bid = useAppSelector(state => state.auction.bidAmount);\n  const wallet = useAppSelector(state => state.auction.bidWallet);\n  const pricePlaceholder = 'Bid Amount';\n  const walletPlaceholder = 'Bid Crypto Wallet';\n  return (\n    <View style={{width: '100%', height: 'auto'}}>\n      <TextInput\n        label={pricePlaceholder}\n        style={{width: '100%'}}\n        keyboardType=\"number-pad\"\n        value={bid.toString()}\n        onChangeText={value =>\n          dispatch(setBidAmount(parseFloat(value)))\n        }\n        mode={'outlined'}\n      />\n      {/* <TextInput\n        label={walletPlaceholder}\n        style={{width: '100%'}}\n        keyboardType=\"number-pad\"\n        value={wallet}\n        onChangeText={value => dispatch(setBidWallet(value))}\n        mode={'outlined'}\n      />\n      <MetamaskAccountsButton type=\"bid\" /> */}\n    </View>\n  );\n}\n","import {Button} from 'react-native-paper';\nimport {requestAccounts} from '../../api/metamask';\nimport {useAppDispatch} from '../../store/hooks';\nimport {\n  setAuctionWallet,\n  setBidWallet,\n  setPayWallet,\n} from '../../store/slices/auction';\nimport {useMutation} from 'react-query';\n\nexport function MetamaskAccountsButton({\n  type,\n}: {\n  type: 'bid' | 'sell' | 'pay';\n}) {\n  const dispatch = useAppDispatch();\n  const getWallets = useMutation(async () => {\n    const accounts = await requestAccounts();\n    console.info('accounts');\n    if (type === 'bid') dispatch(setBidWallet(accounts[0]));\n    if (type === 'sell') dispatch(setAuctionWallet(accounts[0]));\n    if (type === 'pay') dispatch(setPayWallet(accounts[0]));\n  });\n  return (\n    <Button\n      icon={'wallet'}\n      mode=\"outlined\"\n      onPress={() => getWallets.mutateAsync()}>\n      Show Metamask Wallets\n    </Button>\n  );\n}\n","import {View} from 'react-native';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  setBidAmount,\n  setBidWallet,\n  setPayWallet,\n} from '../../store/slices/auction';\nimport {Button, Divider, Text, TextInput} from 'react-native-paper';\nimport {useMutation} from 'react-query';\nimport {requestAccounts} from '../../api/metamask';\nimport {MetamaskAccountsButton} from './metamaskaccountsbutton';\nimport {MetamaskPayButton} from './metamaskpaybutton';\n// import { TextInput } from \"react-native-gesture-handler\";\n\nexport function PayDialogBody() {\n  const dispatch = useAppDispatch();\n  const wallet = useAppSelector(state => state.auction.payWallet);\n  const winnerPrice = useAppSelector(\n    state => state.auction.winnerPrice,\n  );\n  const walletPlaceholder = 'Payment Crypto Wallet';\n  return (\n    <View style={{width: '100%', height: 'auto'}}>\n      <Text>\n        As the winner you need to pay {winnerPrice} Matik to receive\n        the media file\n      </Text>\n      <TextInput\n        label={walletPlaceholder}\n        style={{width: '100%'}}\n        keyboardType=\"number-pad\"\n        value={wallet}\n        onChangeText={value => dispatch(setPayWallet(value))}\n        mode={'outlined'}\n      />\n      <MetamaskAccountsButton type=\"pay\" />\n    </View>\n  );\n}\n","import React from 'react';\nimport {View} from 'react-native';\nimport {TextInput} from 'react-native-paper';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  setAuctioName,\n  setAuctionPrice,\n  setAuctionWallet,\n} from '../../store/slices/auction';\nimport {MetamaskAccountsButton} from './metamaskaccountsbutton';\n\nexport function SellDialogBody() {\n  const dispatch = useAppDispatch();\n  const name = useAppSelector(state => state.auction.newAuctionName);\n  const price = useAppSelector(\n    state => state.auction.newAuctionPrice,\n  );\n  const wallet = useAppSelector(\n    state => state.auction.newAuctionWallet,\n  );\n  const namePlaceholder = 'Auction name';\n  const walletPlaceholder = 'Auction ERC20 Wallet';\n  const pricePlaceholder = 'Minimum Price in Matic';\n  return (\n    <View style={{width: '100%', height: 'auto'}}>\n      <TextInput\n        placeholder={namePlaceholder}\n        label={namePlaceholder}\n        style={{width: '100%'}}\n        value={name}\n        onChangeText={text => dispatch(setAuctioName(text))}\n        mode={'outlined'}\n      />\n\n      <TextInput\n        label={pricePlaceholder}\n        placeholder={pricePlaceholder}\n        style={{width: '100%'}}\n        keyboardType=\"number-pad\"\n        value={price.toString()}\n        onChangeText={value =>\n          dispatch(setAuctionPrice(parseFloat(value)))\n        }\n        mode={'outlined'}\n      />\n      <TextInput\n        label={walletPlaceholder}\n        placeholder={walletPlaceholder}\n        style={{width: '100%'}}\n        value={wallet}\n        onChangeText={text => dispatch(setAuctionWallet(text))}\n        mode={'outlined'}\n      />\n      <MetamaskAccountsButton type=\"sell\" />\n    </View>\n  );\n}\n","import React from 'react';\nimport ChatView from './chatview';\nimport {useQuery} from 'react-query';\nimport {ActivityIndicator} from 'react-native-paper';\nimport {useRouteContact} from '../../hooks/useRouteContact';\nimport {useRoute} from '@react-navigation/native';\nimport {getById, getFolderContent, getUserData} from '../../api';\nimport {Contact, FolderType, UserInfo} from '../../types';\nimport {ChatParams} from '../../types/nav';\nimport {useFolder} from '../../hooks/useFolder';\nimport {View, useWindowDimensions} from 'react-native';\nimport {FolderNavigator} from '../folder/foldernavigator';\nimport ContentItem from '../folder/items/contentitem';\nimport {styles} from './styles';\n\nfunction Chat({isEmbed}: {isEmbed?: boolean}) {\n  const route = useRoute();\n  const params = route.params as ChatParams;\n  const chatId = params.chatId;\n  const userQuery = useQuery('UserData', () => getUserData(), {\n    refetchOnMount: false,\n    refetchOnReconnect: false,\n    refetchOnWindowFocus: false,\n    onError(err) {\n      console.error('on get contact error', err);\n    },\n  });\n  const contactQuery = useQuery(\n    'contact_' + chatId,\n    () => getById(chatId),\n    {\n      refetchOnMount: false,\n      refetchOnReconnect: false,\n      refetchOnWindowFocus: false,\n      onError(err) {\n        console.error('on get contact error', err);\n      },\n    },\n  );\n  const isLoading = !userQuery.isFetched || !contactQuery.isFetched;\n  const contact = contactQuery?.data as Contact;\n  const user = userQuery?.data as UserInfo;\n  const dim = useWindowDimensions();\n  const {width} = dim;\n\n  const parentFolderId =\n    params?.parentFolderId ||\n    params?.parentFolderId! ||\n    ((contact && contact.folderId) as string);\n  const parentFolderHook = useFolder(\n    parentFolderId,\n    getFolderContent,\n    getById,\n    FolderType.contact,\n  );\n\n  useRouteContact(contact, isLoading, user, params);\n  const isMobile = width > 700 && !isEmbed ? false : true;\n  return (\n    <View\n      style={{\n        width: '100%',\n        height: '100%',\n        flexDirection: 'row',\n        backgroundColor: 'black',\n      }}>\n      {!isMobile ? (\n        <FolderNavigator\n          folderType={FolderType.contact}\n          renderContent={({item}) => (\n            <ContentItem\n              i={item}\n              key={item.id}\n              dataHook={parentFolderHook}\n              styles={styles}\n              width={!isMobile ? (width / 100) * 70 : width}\n            />\n          )}\n          parentFolderId={parentFolderId}\n          parentFolderHook={parentFolderHook}\n        />\n      ) : null}\n      <View style={{width: isMobile ? '100%' : '70%'}}>\n        <ChatView params={{user, contact}} chatId={chatId} />\n      </View>\n    </View>\n  );\n}\n\nexport default Chat;\n","import React, {\n  useState,\n  useEffect,\n  useRef,\n  useContext,\n  useCallback,\n} from 'react';\nimport {ChatMessage, Contact} from '../../types/Contact';\nimport {UserInfo} from '../../types/UserInfo';\nimport {View, TouchableOpacity, Platform} from 'react-native';\n\nimport {UserCtx} from '../../ctx';\n\nimport {useMessages} from '../../hooks/useMessages';\nimport {\n  ActivityIndicator,\n  List,\n  ProgressBar,\n  useTheme,\n} from 'react-native-paper';\n\nimport {\n  Bubble,\n  BubbleProps,\n  Composer,\n  GiftedAvatar,\n  GiftedChat,\n  InputToolbar,\n} from 'react-native-gifted-chat';\nimport {textAccentColor} from './styles';\nimport {Auction} from '../../types';\n\nexport interface ChatViewParams {\n  chatId: string;\n  params: {contact: Contact | Auction; user: UserInfo};\n  isEmbeded?: boolean;\n}\ntype OnSendType = {\n  onSend: (t: {text: string}[], b: boolean) => void;\n  focus: () => void;\n};\n\nconst ChatView = (chatViewParams: ChatViewParams) => {\n  const {chatId, params} = chatViewParams;\n\n  const {user} = params;\n  const {messages, sendMessage, nextPage, isLoadingEarlier} =\n    useMessages(chatId);\n\n  const onSend = (text: string) => sendMessage(text);\n\n  const current = useContext(UserCtx);\n\n  const renderBubble = (\n    props: Readonly<BubbleProps<ChatMessage>>,\n  ) => {\n    return (\n      <Bubble\n        {...props}\n        textStyle={{\n          left: {color: textAccentColor},\n        }}\n        wrapperStyle={{\n          right: {\n            backgroundColor: '#871e69',\n            alignSelf: 'auto',\n            maxWidth: '60%',\n          },\n          left: {\n            backgroundColor: '#344868',\n            alignSelf: 'auto',\n            maxWidth: '60%',\n          },\n        }}\n      />\n    );\n  };\n  const theme = useTheme();\n  const composerRef = useRef<typeof Composer | undefined>();\n  const {surface} = theme.colors;\n  return (\n    <View\n      style={{\n        backgroundColor: current!.colors.backgroundColor,\n        height: '100%',\n        width: '100%',\n        flexDirection: 'row',\n      }}>\n      <GiftedChat\n        scrollToBottom={true}\n        renderLoading={() => <ActivityIndicator size={72} />}\n        messages={messages.map((m: ChatMessage) => {\n          // console.info(\"messages\", m)\n          return {\n            ...m,\n            _id: m.id,\n            user: {\n              _id: m.userId,\n              name: m.userName,\n            },\n          };\n        })}\n        onSend={([message]) => onSend(message.text)}\n        user={{\n          _id: user?.id,\n          avatar: user?.photo,\n        }}\n        renderBubble={renderBubble}\n        timeTextStyle={{}}\n        renderAvatar={props => (\n          <GiftedAvatar\n            {...props}\n            user={props?.currentMessage?.user}\n            avatarStyle={{\n              backgroundColor: 'transparent',\n              borderWidth: 1,\n              borderColor: surface,\n            }}\n          />\n        )}\n        listViewProps={{\n          scrollEventThrottle: 400,\n          onEndReached: () => {\n            console.info('on end of chat reached', isLoadingEarlier);\n            if (isLoadingEarlier === true) return;\n            nextPage();\n          },\n        }}\n        isLoadingEarlier={isLoadingEarlier}\n        loadEarlier={true}\n        onLoadEarlier={() => nextPage()}\n        renderLoadEarlier={props => (\n          <View style={{height: 100, width: '100%'}}>\n            {props.isLoadingEarlier ? (\n              <ActivityIndicator size={32} />\n            ) : (\n              <View style={{height: 100}} />\n            )}\n          </View>\n        )}\n        renderChatEmpty={() => (\n          <View style={{transform: [{scaleY: -1}]}}>\n            <List.Item\n              left={p => (\n                <List.Icon\n                  {...p}\n                  color={textAccentColor}\n                  icon={'lock'}\n                />\n              )}\n              titleStyle={{color: textAccentColor}}\n              title={'Decrypting Messages...'}\n            />\n            <ProgressBar indeterminate visible={true} />\n          </View>\n        )}\n        renderInputToolbar={inputProps => (\n          <InputToolbar\n            {...inputProps}\n            containerStyle={{\n              backgroundColor: 'black',\n              borderColor: 'gray',\n            }}\n            primaryStyle={{borderColor: 'white'}}\n            renderComposer={props => (\n              <Composer\n                ref={composerRef}\n                {...props}\n                textInputStyle={{\n                  color: textAccentColor,\n                  padding: 10,\n                }}\n                multiline={true}\n                textInputAutoFocus={true}\n                textInputProps={{\n                  ...props.textInputProps,\n                  // for enabling the Return key to send a message only on web\n                  blurOnSubmit: Platform.OS === 'web',\n                  onSubmitEditing: e => {\n                    if (props.text && (props as OnSendType).onSend) {\n                      (props as OnSendType).onSend(\n                        [{text: props.text?.trim()}],\n                        true,\n                      );\n                    }\n                    Platform.OS === 'web' &&\n                      setTimeout(() => {\n                        (\n                          e.nativeEvent as unknown as {\n                            target: {focus: () => void};\n                          }\n                        ).target.focus();\n                      }, 300);\n                  },\n                }}\n              />\n            )}\n            renderSend={props => (\n              <TouchableOpacity\n                onPress={() => {\n                  (props as OnSendType).onSend(\n                    [{text: props.text as string}],\n                    true,\n                  );\n                }}>\n                <List.Icon\n                  style={{padding: 10}}\n                  {...props}\n                  icon={'send'}\n                />\n              </TouchableOpacity>\n            )}\n          />\n        )}\n        placeholder=\"Write your message\"\n        showUserAvatar={false}\n      />\n    </View>\n  );\n};\n\nexport default ChatView;\n","import React, {memo} from 'react';\n\nimport {useContacts} from '../../hooks/useContacts';\nimport FolderLibrary from '../folder/folderlibrary';\nimport {\n  getFolderContent,\n  getFoldersByType,\n  writeItem,\n} from '../../api';\n\nconst ContactLibrary = () => {\n  const dataHook = useContacts(\n    getFoldersByType,\n    getFolderContent,\n    writeItem,\n  );\n\n  return <FolderLibrary dataHook={dataHook} />;\n};\n\nexport default memo(ContactLibrary);\n","import React from 'react';\n\nimport {View} from 'react-native';\n\nimport ContactLibrary from './contactlibrary';\n\nconst ContactsView = (props: any) => {\n  return (\n    <View\n      style={{\n        height: '100%',\n        width: '100%',\n      }}>\n      <View>\n        <ContactLibrary {...props} showPublicParty={true} />\n      </View>\n    </View>\n  );\n};\nexport default ContactsView;\n","export const styles = {\n  container: {\n    flex: 1,\n    paddingTop: 0,\n    marginTop: 0,\n  },\n  item: {\n    paddingTop: 15,\n    paddingLeft: 5,\n    fontSize: 12,\n    height: 160,\n    color: 'black',\n    width: 80,\n  },\n  tinyLogo: {\n    marginTop: 2,\n    width: 22,\n    height: 22,\n  },\n  scroll: {\n    height: '100%',\n    display: 'flex',\n    position: 'relative',\n    backgroundColor: 'black',\n    // marginTop,\n    width: '100%',\n  },\n  icon: {\n    paddingLeft: 10,\n  },\n};\nexport const textAccentColor = '#b4c0d1';\n","import React, {memo, useRef} from 'react';\nimport {Platform, View, useWindowDimensions} from 'react-native';\nimport {Banner, Divider, useTheme} from 'react-native-paper';\nimport {useQuery} from 'react-query';\nimport {EditorLayer, EditorProject} from '../../types';\nimport EncoderProject from '../encoder/encoderproject';\nimport EditorForm from './editorform';\nimport EditorVideoComponent from './editorvideo';\nimport {ScrollView} from 'react-native-gesture-handler';\nimport {getFolderContent, getById, writeItem} from '../../api';\nimport Chat from '../contacts/chat';\nimport {EditorPlayControls} from './editorplaycontrols';\nimport {ProjectParams} from '../../types/nav';\nfunction EditorBanner({\n  projectId,\n  height,\n  routeParams,\n}: {\n  projectId: string;\n  height: number;\n  routeParams: ProjectParams;\n}) {\n  const theme = useTheme();\n  const mediaData = useQuery(\n    ['projectdata', projectId],\n    async () => await getById(projectId),\n    {\n      enabled: projectId ? true : false,\n    },\n  );\n  const video2 = useRef<JSX.IntrinsicElements['video'] | undefined>();\n  const mediaRes: EditorProject = mediaData.data;\n\n  const layersQuery = useQuery(\n    ['projectLayers', projectId],\n    async () => {\n      const data = await getFolderContent(projectId);\n      const m = await Promise.all(\n        data.map(async i => {\n          return {\n            ...i,\n            media: await getFolderContent(i?.id),\n          };\n        }),\n      );\n      return m;\n    },\n  );\n  const {width} = useWindowDimensions();\n  const codeWidth = width * 0.24 - 50;\n  const layers: EditorLayer[] | undefined = layersQuery?.data;\n  const isMobile = width < 700 || Platform.OS !== 'web';\n  if (isMobile) {\n    return (\n      <View\n        style={{margin: 0, padding: 0, display: 'flex'}}\n        className=\"video-banner\">\n        {/* <Divider /> */}\n        <Banner\n          visible={projectId ? true : false}\n          theme={theme}\n          style={{\n            backgroundColor: 'black',\n            padding: 0,\n            margin: 0,\n            // height: height/3,\n            width,\n            marginHorizontal: 0,\n            paddingHorizontal: 0,\n            overflow: 'hidden',\n            display: 'flex',\n            flexDirection: 'row',\n          }}\n          contentStyle={{\n            width,\n            flex: 1,\n            height: '100%',\n            padding: 0,\n            margin: 0,\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'stretch',\n            overflow: 'hidden',\n            marginHorizontal: 0,\n            paddingHorizontal: 0,\n          }}>\n          <View\n            style={{\n              width: '100%',\n              height: isMobile ? height / 2.5 : height / 2,\n              borderLeftWidth: isMobile ? 0 : 1,\n              borderRightWidth: isMobile ? 0 : 1,\n              margin: 0,\n              padding: 0,\n              borderLeftColor: 'rgb(73, 69, 79)',\n              borderRightColor: 'rgb(73, 69, 79)',\n              display: 'flex',\n            }}\n            key={2}>\n            <EditorVideoComponent\n              video2={video2}\n              projectId={projectId}\n              mediaRes={mediaRes}\n              layers={layers}\n            />\n            <EditorPlayControls />\n          </View>\n        </Banner>\n      </View>\n    );\n  }\n  return (\n    <View\n      style={{margin: 0, display: 'flex'}}\n      className=\"video-banner\">\n      <Divider />\n      <Banner\n        visible={projectId ? true : false}\n        theme={theme}\n        style={{\n          backgroundColor: 'black',\n          padding: 0,\n          margin: 0,\n          height: '100%',\n          overflow: 'hidden',\n          display: 'flex',\n          flexDirection: 'row',\n        }}\n        contentStyle={{\n          width: '100%',\n          height: '100%',\n          maxWidth: 'auto',\n          padding: 0,\n          margin: 0,\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'stretch',\n          overflow: 'hidden',\n        }}>\n        <View\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            width: '100%',\n            height: '100%',\n          }}>\n          <ScrollView\n            style={{\n              width: '24%',\n              height: height / 2,\n              display: 'flex',\n              marginRight: 5,\n            }}\n            key={1}\n            showsHorizontalScrollIndicator={false}\n            showsVerticalScrollIndicator={false}>\n            <EditorForm\n              projectId={projectId}\n              mediaRes={mediaRes}\n              video2={video2}\n              layers={layers}\n              projectQuery={mediaData}\n              writeItem={writeItem}\n            />\n          </ScrollView>\n          <View\n            style={{\n              width: '50%',\n              height: height / 2,\n              borderLeftWidth: 1,\n              borderRightWidth: 1,\n              borderLeftColor: 'rgb(73, 69, 79)',\n              borderRightColor: 'rgb(73, 69, 79)',\n              display: 'flex',\n            }}\n            key={2}>\n            <EditorVideoComponent\n              video2={video2}\n              projectId={projectId}\n              mediaRes={mediaRes}\n              layers={layers}\n            />\n          </View>\n          <View\n            style={{\n              width: '24%',\n              height: height / 2,\n              display: 'flex',\n            }}\n            key={3}>\n            {routeParams?.encoder && (\n              <EncoderProject params={routeParams} />\n            )}\n            {routeParams?.chatId && <Chat />}\n          </View>\n        </View>\n      </Banner>\n      <Divider />\n    </View>\n  );\n}\n\nexport default memo(EditorBanner);\n","import React from 'react';\nimport {\n  HandlerStateChangeEvent,\n  PanGestureHandler,\n  PanGestureHandlerEventPayload,\n  State,\n} from 'react-native-gesture-handler';\n\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  setCaretPosition,\n  setScrollPosition,\n} from '../../store/slices/editor';\nimport {Animated, useWindowDimensions, View} from 'react-native';\n\nfunction EditorCaret() {\n  const dispatch = useAppDispatch();\n  const caretPosition = useAppSelector(\n    state => state.editor.caretPosition,\n  );\n  const {width, height} = useWindowDimensions();\n  const translateX = new Animated.Value(0);\n  const onGestureEvent = Animated.event(\n    [\n      {\n        nativeEvent: {\n          translationX: translateX,\n        },\n      },\n    ],\n    {\n      listener: event => {\n        // console.info('ongesture', event)\n      },\n      useNativeDriver: true,\n    },\n  );\n\n  const onHandlerStateChange = (\n    event: HandlerStateChangeEvent<PanGestureHandlerEventPayload>,\n  ): number | undefined => {\n    if (event.nativeEvent.oldState === State.ACTIVE) {\n      const newOffset = event.nativeEvent.translationX;\n      let fullOffset = caretPosition + newOffset;\n      if (fullOffset < 0) fullOffset = 0;\n\n      translateX.setOffset(fullOffset);\n      translateX.setValue(0);\n      dispatch(setCaretPosition(fullOffset));\n      return fullOffset;\n    }\n  };\n  return (\n    <View style={{cursor: 'pointer', height: 0}}>\n      <PanGestureHandler\n        onGestureEvent={onGestureEvent}\n        onHandlerStateChange={onHandlerStateChange}>\n        <Animated.View\n          style={[\n            {\n              width: 50,\n              opacity: 0.5,\n              height: height / 2,\n              justifyContent: 'center',\n              alignItems: 'center',\n              backgroundColor: 'red',\n              cursor: 'pointer',\n            },\n            {\n              transform: [\n                {\n                  translateX: translateX.interpolate({\n                    inputRange: [0, width],\n                    outputRange: [caretPosition, width],\n                    extrapolate: 'extend',\n                  }),\n                },\n              ],\n            },\n          ]}></Animated.View>\n      </PanGestureHandler>\n    </View>\n  );\n}\nexport default EditorCaret;\n","import {useNavigation, useRoute} from '@react-navigation/native';\nimport {useAppSelector} from '../../store/hooks';\nimport {Animated, View} from 'react-native';\nimport {useMutation, useQueryClient} from 'react-query';\nimport {\n  EditorComment,\n  EditorProject,\n  EncoderProject,\n} from '../../types';\nimport {\n  PanGestureHandler,\n  TouchableOpacity,\n  State,\n} from 'react-native-gesture-handler';\nimport {Avatar, IconButton, List} from 'react-native-paper';\nimport React from 'react';\nconst minDuration = 40;\n\nconst EditorContentItem = ({\n  item,\n  onDragEnd,\n  onDragStart,\n  index,\n  layerIndex,\n  writeItem,\n  parentDataHook,\n}: {\n  item: EncoderProject | EditorComment;\n  folder: EditorProject;\n}) => {\n  const nav = useNavigation();\n  const route = useRoute();\n  const queryClient = useQueryClient();\n  const editor = useAppSelector(state => state.editor);\n  const {pixelsPerSecond} = editor;\n  const {projectId} = route.params;\n  const maxDuration = ((item?.duration || 0) - 1) * pixelsPerSecond;\n  const start = item.encoding?.start || 0;\n  const end = item.encoding?.end || item.duration;\n  let currentDuration = end\n    ? (end - start) * pixelsPerSecond\n    : maxDuration;\n  // if(currentDuration < minDuration)\n  // \tcurrentDuration = minDuration / 2\n  let width = new Animated.Value(currentDuration);\n  const writeItemMutation = useMutation((item: EncoderProject) =>\n    writeItem(item),\n  );\n  const onGestureEvent = Animated.event(\n    [\n      {\n        nativeEvent: {\n          translationX: width,\n        },\n      },\n    ],\n    {\n      listener: event => {\n        // console.info('ongesture', event)\n      },\n      useNativeDriver: true,\n    },\n  );\n  const combIndex = index + layerIndex;\n  let backgroundColor = combIndex % 2 ? 'darkcyan' : 'green';\n  if (combIndex % 3 > 1) backgroundColor = 'darkslateblue';\n\n  const deleteItem = async () => {\n    parentDataHook.onRemoveFolder(item);\n  };\n  const onHandlerStateChange = async event => {\n    if (event.nativeEvent.oldState === State.ACTIVE) {\n      let newvalue = width._value;\n\n      if (newvalue > maxDuration) newvalue = maxDuration;\n      if (newvalue < minDuration) newvalue = minDuration;\n\n      if (width._value !== newvalue) width.setValue(newvalue);\n\n      if (!item.encoding) item.encoding = {};\n      newvalue = newvalue / pixelsPerSecond;\n      if (newvalue < item.encoding?.start || 0)\n        newvalue += item.encoding?.start;\n      item.encoding.end = newvalue;\n      // item.encoding.lastUpdated = new Date().valueOf()\n      await writeItemMutation.mutateAsync(item);\n    }\n  };\n  return (\n    <View key={item.id} style={{height: 68, position: 'relative'}}>\n      <Animated.View\n        style={{\n          width: !item.isContact\n            ? width.interpolate({\n                inputRange: [start, maxDuration],\n                outputRange: [start, maxDuration],\n                extrapolate: 'clamp',\n              })\n            : 75,\n          height: '100%',\n          top: 0,\n          padding: 0,\n          margin: 0,\n          left: item.currentPosition\n            ? pixelsPerSecond * item.currentPosition\n            : 0,\n          position: item.currentPosition ? 'absolute' : 'relative',\n          backgroundColor,\n          zIndex: 2,\n          borderWidth:\n            item.id === route.params.encoder ||\n            item.id === route.params.chatId\n              ? 1\n              : 0,\n          borderRadius: item.isContact ? 100 : 0,\n          borderColor: 'white',\n        }}>\n        {!item.isContact && (\n          <>\n            <PanGestureHandler\n              // onGestureEvent={onGestureEvent}\n              onHandlerStateChange={onHandlerStateChange}>\n              <View\n                style={{\n                  position: 'absolute',\n                  left: 0,\n                  bottom: 0,\n                  transform: [{rotate: '90deg'}],\n                  cursor: 'pointer',\n                  zIndex: 100,\n                }}>\n                <List.Icon\n                  icon={'resize-bottom-right'}\n                  style={{padding: 0, margin: 0}}\n                />\n              </View>\n            </PanGestureHandler>\n            <PanGestureHandler\n              // onGestureEvent={onGestureEvent}\n              onHandlerStateChange={onHandlerStateChange}>\n              <View\n                style={{\n                  position: 'absolute',\n                  right: 0,\n                  bottom: 0,\n                  cursor: 'pointer',\n                  zIndex: 100,\n                }}>\n                <List.Icon\n                  icon={'resize-bottom-right'}\n                  style={{padding: 0, margin: 0}}\n                />\n              </View>\n            </PanGestureHandler>\n          </>\n        )}\n        <List.Item\n          onPress={() =>\n            nav.setParams({\n              ...route.params,\n              encoder: !item.isContact && item.id,\n              chatId: item.isContact && item.id,\n            })\n          }\n          style={{height: '100%'}}\n          title={item.isContact ? '' : item.title}\n          right={() => (\n            <>\n              {!item.isContact && (\n                <TouchableOpacity\n                  onPressIn={onDragStart}\n                  onPressOut={onDragEnd}\n                  style={{pointerEvents: 'auto'}}>\n                  <IconButton size={18} icon={'drag'} />\n                </TouchableOpacity>\n              )}\n              {item.isContact && (\n                <Avatar.Text\n                  size={30}\n                  label={[\n                    item.title?.split(' ')[0][0],\n                    item.title?.split(' ')[1][0],\n                  ].join('')}\n                  style={{\n                    marginLeft: -10,\n                    marginTop: 8,\n                    backgroundColor: 'transparent',\n                  }}\n                />\n              )}\n              <IconButton\n                size={18}\n                icon={'delete'}\n                onPress={deleteItem}\n              />\n            </>\n          )}\n        />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default EditorContentItem;\n","import React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {\n  SafeAreaView,\n  View,\n  useWindowDimensions,\n  Clipboard,\n  Platform,\n} from 'react-native';\nimport {\n  Button,\n  Divider,\n  IconButton,\n  List,\n  Menu,\n  TextInput,\n} from 'react-native-paper';\nimport {\n  EditorLayer,\n  EditorProject,\n  FFMpegOutputType,\n  FFMpegPreset,\n} from '../../types';\nimport {\n  genRenderCmd,\n  genExecTime,\n  getTotalTime,\n  encodeProject,\n} from '../../api/media';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  addNewLogLine,\n  setActiveLayer,\n  setCaretPosition,\n  setIsRendering,\n  setRenderProgress,\n  setRenderUrl,\n  setScrollPosition,\n} from '../../store/slices/editor';\nimport {useMutation} from 'react-query';\nimport SyntaxHighlighter from 'react-native-syntax-highlighter';\nimport {xonokai} from 'react-syntax-highlighter/src/styles/prism';\nimport CodeEditor, {\n  CodeEditorSyntaxStyles,\n} from '@rivascva/react-native-code-editor';\nimport {writeItem} from '../../api';\nfunction EditorForm(props: {\n  mediaRes: EditorProject;\n  layers: EditorLayer[];\n}) {\n  const {mediaRes, video2, layers, projectQuery} = props;\n\n  const dispatch = useAppDispatch();\n  const caretPosition = useAppSelector(\n    state => state.editor.caretPosition,\n  );\n  const scrollPosition = useAppSelector(\n    state => state.editor.scrollPosition,\n  );\n  const pixelsPerSecond = useAppSelector(\n    state => state.editor.pixelsPerSecond,\n  );\n  const activeLayer = useAppSelector(\n    state => state.editor.activeLayer,\n  );\n  const isPlaying = useAppSelector(state => state.editor.isPlaying);\n  const isRendering = useAppSelector(\n    state => state.editor.isRendering,\n  );\n  const renderOutputURL = useAppSelector(\n    state => state.editor.renderOutputURL,\n  );\n  const renderProgress = useAppSelector(\n    state => state.editor.renderProgress,\n  );\n  const ffmpegLogs = useAppSelector(state => state.editor.ffmpegLogs);\n  const ffmpegError = useAppSelector(\n    state => state.editor.ffmpegError,\n  );\n  const totalTime = layers?.length ? getTotalTime(layers) : 0;\n  const [showCode, setShowCode] = useState(false);\n  const {width} = useWindowDimensions();\n  const codeEditorRef = useRef();\n  const currentPosition =\n    (caretPosition + scrollPosition) / pixelsPerSecond;\n  const fontSize = 12;\n  const inputWidth = 120;\n  const codeWidth = width * 0.24 - 50;\n  const [outputMenuVisible, setOutputMenuVisible] = useState(false);\n  const [presetMenuVisible, setPresetMenuVisible] = useState(false);\n  const outputTypes = Object.keys(FFMpegOutputType);\n  const execCmd = genRenderCmd(mediaRes, layers, true).execCmd;\n  const codeString = execCmd.join('\\n');\n  const closeMenu = () => {\n    setOutputMenuVisible(false);\n    setPresetMenuVisible(false);\n  };\n  const projectWriteMutation = useMutation(\n    (item: EditorProject) => writeItem(item),\n    {\n      onSuccess: () => {\n        console.info('after writing project');\n        projectQuery.refetch();\n      },\n    },\n  );\n  const processKey = useCallback(\n    ev => {\n      const step = 5;\n      if (ev.code === 'ArrowLeft') {\n        if (!video2.current?.paused) {\n          video2.current?.pause();\n        }\n        console.info(\n          'arrowLeft, caretPosition, scrollPosition',\n          caretPosition,\n          scrollPosition,\n        );\n        caretPosition > 0\n          ? dispatch(setCaretPosition(caretPosition - step))\n          : dispatch(setScrollPosition(scrollPosition - step));\n      }\n      if (ev.code === 'ArrowRight') {\n        if (!video2.current?.paused) {\n          video2.current?.pause();\n        }\n        console.info(\n          'arrowRight, caretPosition, scrollPosition',\n          caretPosition,\n          scrollPosition,\n        );\n        dispatch(setCaretPosition(caretPosition + step));\n      }\n      if (ev.code === 'Space') {\n        if (video2.current?.paused) video2.current?.play();\n        else video2.current?.pause();\n      }\n    },\n    [caretPosition, scrollPosition],\n  );\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      document.onkeyup = ev => processKey(ev);\n    }\n  }, [processKey]);\n  const selectValue = (\n    valueType: keyof EditorProject['editor'],\n    value: string | number,\n  ) => {\n    const np = mediaRes;\n    const numericTypes = [\n      'width',\n      'height',\n      'start',\n      'end',\n      'framerate',\n    ];\n    const nonRenderTypes = ['start', 'end'];\n    const shouldRerender = !nonRenderTypes.includes(valueType);\n    if (numericTypes.includes(valueType) && isNaN(value)) {\n      console.info('invalid type');\n      return;\n    }\n    if (!np.editor) {\n      np.editor = {};\n    }\n    np.editor[valueType] = value;\n\n    if (shouldRerender) np.editor.lastUpdated = new Date().valueOf();\n\n    projectWriteMutation.mutateAsync(np);\n    closeMenu();\n  };\n  return (\n    <>\n      <List.Item\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'clock'} />\n        )}\n        title={genExecTime(currentPosition)}\n        right={p => (\n          <IconButton\n            {...p}\n            size={fontSize}\n            icon={!isPlaying ? 'play' : 'pause'}\n            onPress={() => {\n              if (video2?.current?.paused === true) {\n                // dispatch(resetCurrentVideoStateToMain())\n                dispatch(\n                  setActiveLayer({\n                    activeLayerId: activeLayer,\n                    caretPosition,\n                    scrollPosition,\n                  }),\n                );\n                video2?.current.play();\n              } else {\n                video2?.current.pause();\n                // dispatch(resetCurrentVideoStateToMain())\n              }\n            }}\n          />\n        )}\n      />\n      <Divider key={'divinputrender'} />\n      <Button\n        icon={'movie'}\n        style={{pointerEvents: 'auto', cursor: 'pointer'}}\n        onPress={async () => {\n          dispatch(setIsRendering(true));\n          const render = await encodeProject(\n            mediaRes,\n            layers,\n            false,\n            renderParams => dispatch(setRenderProgress(renderParams)),\n            logLine => dispatch(addNewLogLine(logLine)),\n          );\n          dispatch(setRenderUrl(render));\n          dispatch(setIsRendering(false));\n        }}\n        loading={isRendering}\n        disabled={isRendering}\n        mode={'outlined'}>\n        {isRendering\n          ? `Rendering project: ${parseInt(\n              (renderProgress * 100).toString(),\n              10,\n            )}%`\n          : ffmpegError\n          ? 'Render Project (Error! check logs)'\n          : 'Render Project'}\n      </Button>\n      <Divider key={'divinputdownload'} />\n      {renderOutputURL && (\n        <a\n          href={renderOutputURL}\n          download={true}\n          style={{width: '100%'}}>\n          <Button\n            icon={'film'}\n            style={{\n              pointerEvents: 'auto',\n              cursor: 'pointer',\n              width: '100%',\n            }}\n            mode={'outlined'}>\n            Download video\n          </Button>\n        </a>\n      )}\n      <Divider key={'div01'} />\n      <List.Item\n        key={'start'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'clock-plus'} />\n        )}\n        titleStyle={{fontSize}}\n        title={'Start'}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={0}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('start', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div7'} />\n      <List.Item\n        key={'end'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'clock-minus'} />\n        )}\n        titleStyle={{fontSize}}\n        title={`End`}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={genExecTime(totalTime) || 0}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('end', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div3'} />\n      <List.Item\n        key={'width'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'ruler'} />\n        )}\n        title={`Width`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={mediaRes?.editor?.width}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('width', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div2'} />\n      <List.Item\n        key={'height'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'ruler'} />\n        )}\n        title={`Height`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={mediaRes?.editor?.height}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('height', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'divaspect'} />\n      <List.Item\n        key={'aspect'}\n        left={p => (\n          <List.Icon\n            {...p}\n            style={{fontSize}}\n            icon={'aspect-ratio'}\n          />\n        )}\n        titleStyle={{fontSize}}\n        title={'Aspect Ratio'}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={mediaRes?.editor?.aspectRatio || '16/9'}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"default\"\n              onChangeText={text => selectValue('aspectRatio', text)}\n            />\n          </View>\n        )}\n      />\n      <Divider key={'divrate'} />\n      <List.Item\n        key={'frames'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'movie-roll'} />\n        )}\n        titleStyle={{fontSize}}\n        title={'Frame Rate'}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={mediaRes?.editor?.framerate || 30}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('framerate', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div1'} />\n      <List.Item\n        key={'output'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'file-export'} />\n        )}\n        title={'Output'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <Menu\n              visible={outputMenuVisible}\n              onDismiss={closeMenu}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setOutputMenuVisible(true)}>\n                  {mediaRes?.editor?.output}\n                </Button>\n              }>\n              <>\n                {outputTypes.map(item => (\n                  <Menu.Item\n                    key={item}\n                    onPress={() => selectValue('output', item)}\n                    title={item}\n                  />\n                ))}\n              </>\n            </Menu>\n          </View>\n        )}\n      />\n      <Divider key={'divPreset'} />\n      <List.Item\n        key={'preset'}\n        left={p => (\n          <List.Icon {...p} style={{fontSize}} icon={'file-export'} />\n        )}\n        title={'Preset'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <Menu\n              visible={presetMenuVisible}\n              onDismiss={closeMenu}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setPresetMenuVisible(true)}>\n                  {mediaRes?.editor?.preset}\n                </Button>\n              }>\n              <>\n                {Object.keys(FFMpegPreset).map(item => (\n                  <Menu.Item\n                    key={item}\n                    onPress={() => selectValue('preset', item)}\n                    title={item}\n                  />\n                ))}\n              </>\n            </Menu>\n          </View>\n        )}\n      />\n      <Divider key={'divinputcode2'} />\n      <Button\n        icon={'code-brackets'}\n        onPress={() => setShowCode(!showCode)}>\n        Show FFMpeg Code\n      </Button>\n      {showCode === true ? (\n        <View>\n          <Divider key={'divinputcode'} />\n          <List.Item\n            key={'code'}\n            left={p => <List.Icon {...p} icon={'code-brackets'} />}\n            title={''}\n            titleStyle={{fontSize}}\n            onPress={() => codeEditorRef?.current?.focus()}\n            right={p => (\n              <SafeAreaView style={{width: codeWidth, zIndex: 10}}>\n                <CodeEditor\n                  className={'codeEditor'}\n                  ref={codeEditorRef}\n                  style={{\n                    fontSize,\n                    inputLineHeight: fontSize,\n                    highlighterLineHeight: fontSize,\n                    marginLeft: 0,\n                  }}\n                  language=\"bash\"\n                  syntaxStyle={CodeEditorSyntaxStyles.xonokai}\n                  initialValue={\n                    mediaRes.editor?.code?.join(',') || ''\n                  }\n                  onChange={text => {\n                    if (\n                      text === mediaRes.editor?.code?.join(',') ||\n                      ''\n                    )\n                      return;\n                    selectValue('code', text.split(','));\n                  }}\n                  autoFocus={false}\n                  showLineNumbers\n                />\n              </SafeAreaView>\n            )}\n          />\n          <Divider key={'divoutputcode'} />\n          {codeString && (\n            <List.Item\n              key={'output_code'}\n              left={p => <List.Icon {...p} icon={'code-tags'} />}\n              title=\"\"\n              onPress={() => Clipboard.setString(codeString)}\n              titleStyle={{fontSize}}\n              right={() => (\n                <View style={{width: codeWidth}}>\n                  <SyntaxHighlighter\n                    language=\"bash\"\n                    style={xonokai}\n                    fontSize={fontSize}\n                    pointerEvents={true}\n                    scroll={true}\n                    highlighter={'prism'}>\n                    {codeString}\n                  </SyntaxHighlighter>{' '}\n                </View>\n              )}\n            />\n          )}\n          <Divider key={'divlogs'} />\n          {codeString && (\n            <List.Item\n              key={'output_logs'}\n              left={p => (\n                <List.Icon {...p} icon={'code-parentheses'} />\n              )}\n              title=\"\"\n              onPress={() => Clipboard.setString(ffmpegLogs)}\n              titleStyle={{fontSize}}\n              right={() => (\n                <View\n                  style={{width: codeWidth, pointerEvents: 'auto'}}>\n                  <SyntaxHighlighter\n                    language=\"bash\"\n                    style={xonokai}\n                    customStyle={{\n                      pointerEvents: 'auto',\n                      userSelect: 'all',\n                    }}\n                    fontSize={fontSize}\n                    userSelect={true}\n                    pointerEvents={true}\n                    scroll={true}\n                    highlighter={'prism'}>\n                    {ffmpegLogs}\n                  </SyntaxHighlighter>{' '}\n                </View>\n              )}\n            />\n          )}\n          <Divider key={'div8'} />\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nexport default EditorForm;\n","import React from 'react';\nimport {\n  View,\n  GestureResponderEvent,\n  useWindowDimensions,\n} from 'react-native';\nimport {useFolder} from '../../hooks/useFolder';\nimport {\n  EditorLayer,\n  EncoderProject,\n  Folder,\n  FolderType,\n} from '../../types';\nimport {Divider, IconButton, List, Text} from 'react-native-paper';\n\nimport DragList from 'react-native-draglist';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\n\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport uuid from 'react-native-uuid';\nimport {\n  DocumentPicker,\n  getById,\n  getFolderContent,\n  writeItem,\n} from '../../api';\nimport {startOnboarding} from '../../store/slices/upload';\nimport EditorContentItem from './editorcontentitem';\n\nexport function EditorLayerHeaderComponent(props) {\n  const dataHook = useFolder(\n    props.folderId,\n    getFolderContent,\n    itemId => getById(itemId, props.parentFolderId),\n    FolderType.editor,\n    writeItem,\n  );\n  const {width} = useWindowDimensions();\n  const isMobile = width < 700;\n  const folder = dataHook.folder as EditorLayer;\n  const layer = folder?.editor;\n  const showComments = useAppSelector(\n    state => state.editor.showComments,\n  );\n  const toggleLayerProp = async (propName: keyof typeof layer) => {\n    await writeItem({\n      ...dataHook.folder,\n      editor: {\n        ...(layer || {}),\n        [propName]: layer && layer[propName] === true ? false : true,\n      },\n    } as EditorLayer);\n    dataHook.folderData.refetch();\n  };\n\n  const muteLayer = (_e: GestureResponderEvent) =>\n    toggleLayerProp('muted');\n\n  const hideLayer = (_e: GestureResponderEvent) =>\n    toggleLayerProp('videoDisabled');\n\n  const isCommentLayer =\n    folder?.id !== undefined && layer?.isCommentLayer;\n\n  if (isCommentLayer && !showComments) return <></>;\n  const Controls = (p = {}) => (\n    <View style={{flexDirection: 'row', padding: 0}}>\n      <IconButton\n        {...p}\n        size={iconSize}\n        icon={layer?.muted ? 'volume-off' : 'volume-high'}\n        mode={'outlined'}\n        onPress={muteLayer}\n      />\n      <IconButton\n        size={iconSize}\n        {...p}\n        mode={'outlined'}\n        icon={layer?.videoDisabled ? 'video-off' : 'video'}\n        onPress={hideLayer}\n      />\n      <IconButton\n        size={iconSize}\n        {...p}\n        icon={'delete'}\n        onPress={async () => {\n          await dataHook.onRemoveFolder({\n            id: props.folderId,\n          } as Folder);\n          props.parentHook.folderContentQuery.refetch();\n        }}\n        mode={'outlined'}\n      />\n    </View>\n  );\n  const iconSize = isMobile ? 10 : 14;\n  return (\n    <View style={{display: 'flex', flexDirection: 'row', height: 68}}>\n      <View style={{width: '100%'}}>\n        <Divider />\n        <List.Item\n          title={() =>\n            isMobile ? (\n              <Controls />\n            ) : (\n              <TouchableOpacity\n                onPressIn={props.onDragStart}\n                onPressOut={props.onDragEnd}\n                style={{pointerEvents: 'auto'}}>\n                <Text style={{fontSize: 14}}>\n                  {dataHook.folder?.title}\n                </Text>\n              </TouchableOpacity>\n            )\n          }\n          right={p => {\n            if (isMobile) return null;\n            if (!isCommentLayer) return <Controls />;\n\n            return (\n              <IconButton\n                size={iconSize}\n                {...p}\n                mode={'outlined'}\n                icon={'forum'}\n              />\n            );\n          }}\n        />\n      </View>\n    </View>\n  );\n}\n\nexport function EditorLayerBodyComponent(props) {\n  const dispatch = useAppDispatch();\n  const dataHook = useFolder(\n    props.folderId,\n    getFolderContent,\n    itemId => getById(itemId, props.parentFolderId),\n    FolderType.editor,\n    writeItem,\n  );\n  const folder = dataHook.folder as EditorLayer;\n  const layer = folder?.editor;\n  const showComments = useAppSelector(\n    state => state.editor.showComments,\n  );\n  const isCommentLayer =\n    folder?.id !== undefined && layer?.isCommentLayer;\n  if (isCommentLayer && !showComments) return <></>;\n\n  const renderContent = ({\n    item,\n    onDragEnd,\n    onDragStart,\n    index,\n  }: {\n    item: EncoderProject;\n  }) => (\n    <EditorContentItem\n      onDragEnd={onDragEnd}\n      onDragStart={onDragStart}\n      item={item}\n      index={index}\n      layerIndex={props.layerIndex}\n      writeItem={writeItem}\n      parentDataHook={dataHook}\n    />\n  );\n  const onClickAddContent = async () => {\n    const pickerResult = await DocumentPicker.pickSingle({\n      presentationStyle: 'fullScreen',\n    });\n    console.info('pickerResult', pickerResult, dataHook.folder);\n    // setMediaModalVisible(true)\n    if (!pickerResult) return;\n    const url = pickerResult.uri;\n    let fId = props.folderId;\n    const nd: Media = {\n      id: uuid.v4().toString(),\n      url,\n      title: pickerResult.name,\n      originalId: pickerResult.name,\n      filename: pickerResult.name,\n      fileType: pickerResult.type,\n      folderId: fId,\n      userId: props.userId,\n      date: new Date().valueOf(),\n      isMediaNew: false,\n      isEncoderProject: true,\n      type: pickerResult.file.type,\n      size: pickerResult.file.size,\n      extractor: dataHook.folder?.mnemonic ? 'wt' : 'local',\n    };\n    dispatch(startOnboarding({file: pickerResult.file, media: nd}));\n  };\n  const data = dataHook.folderContent;\n  return (\n    <View style={{display: 'flex', flexDirection: 'row'}}>\n      <View\n        style={{width: '80%', display: 'flex', flexDirection: 'row'}}>\n        {!isCommentLayer && data !== undefined && (\n          <>\n            <DragList\n              horizontal={true}\n              renderItem={renderContent}\n              keyExtractor={item => item.id || item.date.toString()}\n              data={data}\n              onReordered={dataHook.onReordered}\n              style={{width: '100%'}}\n              showsHorizontalScrollIndicator={false}\n              showsVerticalScrollIndicator={false}\n            />\n            <List.Item\n              title={'Add Content'}\n              titleStyle={{fontSize: 14}}\n              style={{pointerEvents: 'auto'}}\n              onPress={() => onClickAddContent()}\n              right={props => (\n                <>\n                  <IconButton\n                    {...props}\n                    icon={'plus'}\n                    onPress={() => onClickAddContent()}\n                    mode={'outlined'}\n                  />\n                </>\n              )}\n            />\n          </>\n        )}\n        {isCommentLayer && data !== undefined && (\n          <>\n            {data?.map((item, index) => (\n              <EditorContentItem\n                item={item}\n                index={index}\n                layerIndex={props.layerIndex}\n                writeItem={writeItem}\n                parentDataHook={dataHook}\n              />\n            ))}\n            <List.Item\n              title={''}\n              titleStyle={{fontSize: 14}}\n              style={{pointerEvents: 'auto', height: 68}}\n              // right={(p)=><IconButton size={14} {...p} mode={\"outlined\"} icon={\"forum\"} /> }\n            />\n          </>\n        )}\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport {IconButton, List} from 'react-native-paper';\nimport {genExecTime} from '../../api';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  setActiveLayer,\n  setIsPlaying,\n} from '../../store/slices/editor';\nimport {useWindowDimensions} from 'react-native';\n\nexport function EditorPlayControls() {\n  const {width} = useWindowDimensions();\n  const dispatch = useAppDispatch();\n  const caretPosition = useAppSelector(\n    state => state.editor.caretPosition,\n  );\n  const scrollPosition = useAppSelector(\n    state => state.editor.scrollPosition,\n  );\n  const pixelsPerSecond = useAppSelector(\n    state => state.editor.pixelsPerSecond,\n  );\n  const isPlaying = useAppSelector(state => state.editor.isPlaying);\n  // const isRendering = useAppSelector(\n  //   state => state.editor.isRendering,\n  // );\n  const activeLayer = useAppSelector(\n    state => state.editor.activeLayer,\n  );\n  const currentPosition =\n    (caretPosition + scrollPosition) / pixelsPerSecond;\n  return (\n    <List.Item\n      style={{\n        width,\n        height: 50,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        backgroundColor: 'transparent',\n        zIndex: 10000,\n      }}\n      left={p => <List.Icon {...p} icon={'clock'} />}\n      title={genExecTime(currentPosition)}\n      right={p => (\n        <IconButton\n          {...p}\n          // size={fontSize}\n          mode=\"contained\"\n          icon={!isPlaying ? 'play' : 'pause'}\n          onPress={async () => {\n            try {\n              // console.info('toggle play', video3.current, video3.current?.playAsync)\n              if (isPlaying === false) {\n                console.info('start play');\n                // dispatch(resetCurrentVideoStateToMain())\n                dispatch(\n                  setActiveLayer({\n                    activeLayerId: activeLayer,\n                    caretPosition,\n                    scrollPosition,\n                  }),\n                );\n                dispatch(setIsPlaying(true));\n                // (video3.current as Video).shouldPlay = true\n              } else {\n                // await (video3.current as Video).stopAsync()\n                dispatch(setIsPlaying(false));\n                // dispatch(resetCurrentVideoStateToMain())\n              }\n            } catch (err) {\n              console.error(err);\n            }\n          }}\n        />\n      )}\n    />\n  );\n}\n","import React, {useCallback, useEffect, useRef} from 'react';\nimport {\n  View,\n  useWindowDimensions,\n  VirtualizedList,\n} from 'react-native';\nimport {useFolder} from '../../hooks/useFolder';\nimport {EditorLayer, EncoderProject, FolderType} from '../../types';\nimport {useRoute} from '@react-navigation/native';\nimport {Divider, IconButton, List} from 'react-native-paper';\n\nimport DragList from 'react-native-draglist';\nimport {ScrollView} from 'react-native-gesture-handler';\n\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  setScrollPosition,\n  setScrollParams,\n  setCaretPosition,\n  setIsPlaying,\n} from '../../store/slices/editor';\nimport uuid from 'react-native-uuid';\nimport {useMutation} from 'react-query';\nimport {getById, getFolderContent, writeItem} from '../../api';\nimport EditorCaret from './editorcaret';\nimport {ProjectParams} from '../../types/nav';\nimport {\n  EditorLayerBodyComponent,\n  EditorLayerHeaderComponent,\n} from './editorlayer';\nconst folderType = FolderType.editor;\n\nfunction EditorProjectComponent(props: {userId: string}) {\n  const {width} = useWindowDimensions();\n  const isMobile = width < 700;\n  const route = useRoute();\n  const {userId} = props;\n  const scrollPosition = useAppSelector(\n    state => state.editor.scrollPosition,\n  );\n  const scrollParams = useAppSelector(\n    state => state.editor.scrollParams,\n  );\n  const {projectId, parentFolderId} = route.params as ProjectParams;\n  // console.info('parentFolderId', parentFolderId)\n  const getByIdCallback = useCallback(\n    itemId => getById(itemId, parentFolderId),\n    [parentFolderId],\n  );\n  const dispatch = useAppDispatch();\n  const dataHook = useFolder(\n    projectId,\n    getFolderContent,\n    getByIdCallback,\n    FolderType.editor,\n    writeItem,\n  );\n  useEffect(() => {\n    console.info('reset');\n    dispatch(setIsPlaying(false));\n    dispatch(setScrollPosition(0));\n    dispatch(setCaretPosition(0));\n    return () => {\n      dispatch(setIsPlaying(false));\n      dispatch(setScrollPosition(0));\n      dispatch(setCaretPosition(0));\n      // dispatch(setV)\n    };\n  }, [projectId]);\n  const writeItemMutation = useMutation((item: EditorLayer) =>\n    writeItem(item),\n  );\n  const onClickAddLayer = async () => {\n    const layer: EditorLayer = {\n      id: uuid.v4().toString(),\n      title: 'Layer' + parseInt(dataHook.folderContent.length + 1),\n      folderId: projectId,\n      userId,\n      isEditorLayer: true,\n      orderId: dataHook.folderContent.length + 1,\n      folderType,\n      isFolder: false,\n      date: new Date().valueOf(),\n      mnemonic: dataHook.folder?.mnemonic,\n    };\n    await writeItemMutation.mutateAsync(layer);\n    dataHook.folderContentQuery.refetch();\n  };\n  const renderContent = ({\n    item,\n    onDragEnd,\n    onDragStart,\n    index,\n  }: {\n    item: EncoderProject;\n  }) => (\n    <EditorLayerHeaderComponent\n      {...props}\n      key={item.id}\n      onDragEnd={onDragEnd}\n      onDragStart={onDragStart}\n      folderId={item.id}\n      layerIndex={index}\n      parentHook={dataHook}\n      parentFolderId={parentFolderId}\n    />\n  );\n  const horizontalScroll = useRef();\n  const isOpen = true;\n  // const\n  const contentContainerWidth = isMobile\n    ? isOpen\n      ? '60%'\n      : '90%'\n    : '80%';\n  const controlsContainerWidth = isMobile\n    ? isOpen\n      ? '40%'\n      : 0\n    : '20%';\n  return (\n    <ScrollView\n      style={{width, height: '100%', position: 'absolute'}}\n      showsHorizontalScrollIndicator={false}\n      showsVerticalScrollIndicator={false}>\n      <View style={{display: 'flex', flexDirection: 'column'}}>\n        <View style={{width: '100%', flexDirection: 'row'}}>\n          <View style={{width: controlsContainerWidth}}>\n            {dataHook.folderContent !== undefined && (\n              <DragList\n                renderItem={renderContent}\n                keyExtractor={item => item.id || item.date.toString()}\n                data={dataHook.folderContent}\n                onReordered={async (start, end) => {\n                  await dataHook.onReordered(start, end);\n                }}\n                showsHorizontalScrollIndicator={false}\n                showsVerticalScrollIndicator={false}\n              />\n            )}\n          </View>\n          <ScrollView\n            horizontal={true}\n            style={{\n              width: contentContainerWidth,\n              display: 'flex',\n              flexDirection: 'row',\n              height: '100%',\n            }}\n            onScroll={e => {\n              dispatch(\n                setScrollPosition(e.nativeEvent.contentOffset.x),\n              );\n            }}\n            ref={e => {\n              horizontalScroll.current = e;\n              const totalWidth =\n                horizontalScroll?.current?.clientWidth;\n              const totalScroll =\n                horizontalScroll.current?.scrollWidth;\n              if (\n                scrollParams.totalScroll !== totalScroll ||\n                scrollParams.totalWidth !== totalWidth\n              ) {\n                dispatch(\n                  setScrollParams({\n                    totalWidth,\n                    totalScroll,\n                  }),\n                );\n              }\n              horizontalScroll?.current?.scrollTo({\n                x: scrollPosition,\n              });\n            }}\n            scrollEventThrottle={50}\n            showsHorizontalScrollIndicator={false}\n            showsVerticalScrollIndicator={false}>\n            <VirtualizedList\n              renderItem={({item, index}) => (\n                <EditorLayerBodyComponent\n                  {...props}\n                  key={item.id}\n                  folderId={item.id}\n                  layerIndex={index}\n                  parentFolderId={parentFolderId}\n                />\n              )}\n              keyExtractor={item => item.id || item.date.toString()}\n              getItem={dataHook.getContentItem}\n              getItemCount={dataHook.getContentCount}\n              data={dataHook.folderContent}\n              showsHorizontalScrollIndicator={false}\n              showsVerticalScrollIndicator={false}\n            />\n          </ScrollView>\n        </View>\n        <View style={{width: controlsContainerWidth}}>\n          <Divider />\n          <List.Item\n            titleStyle={{fontSize: 14}}\n            onPress={() => onClickAddLayer()}\n            right={props => (\n              <>\n                <IconButton\n                  {...props}\n                  icon={'plus'}\n                  mode={'outlined'}\n                />\n              </>\n            )}\n          />\n        </View>\n        <View\n          style={{\n            width: contentContainerWidth,\n            position: 'absolute',\n            height: 0,\n            left: controlsContainerWidth,\n          }}>\n          <EditorCaret />\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\nexport default EditorProjectComponent;\n","import React, {useState} from 'react';\nimport {Appbar, Menu} from 'react-native-paper';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {\n  setPixelsPerSecond,\n  setShowComments,\n} from '../../store/slices/editor';\nimport {\n  createNewParty,\n  getActiveProjectLayer,\n  sendChatMessage,\n  getById,\n  writeItem,\n} from '../../api';\nimport {useQuery, useQueryClient} from 'react-query';\nimport {\n  EditorComment,\n  EditorLayer,\n  EncoderProject,\n} from '../../types';\nimport {getFolderContent, getUserData} from '../../api';\n\nimport uuid from 'react-native-uuid';\nimport {Platform, useWindowDimensions} from 'react-native';\n\nexport default function EditorToolBar(props) {\n  const {projectId, routeParams} = props;\n  const {encoder} = routeParams;\n  const dispatch = useAppDispatch();\n  const queryClient = useQueryClient();\n  const caretPosition = useAppSelector(\n    state => state.editor.caretPosition,\n  );\n  const scrollPosition = useAppSelector(\n    state => state.editor.scrollPosition,\n  );\n  const pixelsPerSecond = useAppSelector(\n    state => state.editor.pixelsPerSecond,\n  );\n  const showComments = useAppSelector(\n    state => state.editor.showComments,\n  );\n  const {width} = useWindowDimensions();\n  const isMobile = width < 700 || Platform.OS !== 'web';\n  const showEditor = useAppSelector(state => state.editor.showEditor);\n  const currentPosition =\n    (caretPosition + scrollPosition) / pixelsPerSecond;\n  const [isRefreshing, setRefreshing] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const onHideMenu = () => setMenuOpen(false);\n  const openMenu = () => setMenuOpen(true);\n\n  const layersQuery = useQuery(\n    ['projectLayersToolbar', projectId],\n    async () => {\n      const data = await getFolderContent(projectId);\n      const m = await Promise.all(\n        data.map(async i => {\n          return {\n            ...i,\n            media: await getFolderContent(i?.id),\n          };\n        }),\n      );\n      return m;\n    },\n  );\n  const layers: EditorLayer[] | undefined = layersQuery.data;\n  const forgetEverything = async () => {\n    await layersQuery.refetch();\n    await queryClient.refetchQueries(['folderData_' + projectId], {});\n    await queryClient.refetchQueries(['folderContent_' + projectId]);\n    await queryClient.refetchQueries(['project_' + projectId]);\n    await queryClient.refetchQueries(['projectLayers', projectId]);\n    await queryClient.refetchQueries(['encodedMedia', projectId]);\n    await queryClient.refetchQueries([\n      'folderContent_' + projectId + '_comments',\n    ]);\n    const folders = layers?.map(layer => layer.id);\n    console.info('project.folders', folders);\n    if (folders?.length)\n      for (let f = 0; f < folders.length; f++) {\n        const fId = folders[f];\n        queryClient.refetchQueries(['folderContent_' + fId]);\n      }\n  };\n\n  const onClickSetScale = (scale: '+' | '-') => {\n    let nscale =\n      scale === '+' ? pixelsPerSecond * 1.25 : pixelsPerSecond * 0.75;\n    if (nscale < 0.5) nscale = 0.5;\n    dispatch(setPixelsPerSecond(nscale));\n  };\n\n  const onClickCopy = async () => {\n    if (isRefreshing) {\n      return;\n    }\n    setRefreshing(true);\n    try {\n      const item = await getById(encoder, projectId);\n      item.isCopy = item.isCopy || item.id;\n      item.id = uuid.v4().toString();\n      item.orderId += 1;\n      item.createdAt = new Date().valueOf().toString();\n      console.info('click copy', {encoder, currentPosition, item});\n      await writeItem(item);\n      await queryClient.refetchQueries(['projectLayers', projectId]);\n      await queryClient.refetchQueries([\n        'folderContent_' + item.folderId,\n      ]);\n      await forgetEverything();\n    } catch (err) {\n      console.error('oncClickCopy', err);\n    }\n    setRefreshing(false);\n  };\n\n  const onClickCut = async () => {\n    if (isRefreshing) {\n      return;\n    }\n    setRefreshing(true);\n    try {\n      const currentData = getActiveProjectLayer(\n        layers,\n        currentPosition,\n      );\n      const item: EncoderProject = await getById(encoder, projectId);\n      const offsetPosition =\n        currentPosition -\n        currentData.offset +\n        (item.encoding.start || 0);\n\n      const nitem = JSON.parse(JSON.stringify({...item}));\n      nitem.isCopy = item.isCopy || item.id;\n      nitem.id = uuid.v4().toString();\n      nitem.orderId -= 1;\n      nitem.encoding.start = offsetPosition;\n      nitem.encoding.end = item.encoding.end || item.duration || 0;\n      nitem.createdAt = new Date().valueOf().toString();\n\n      item.encoding.end = offsetPosition;\n      await writeItem(item);\n      await writeItem(nitem);\n      await forgetEverything();\n    } catch (err) {\n      console.error('oncClickCut', err);\n    }\n    setRefreshing(false);\n  };\n\n  const onClickRefresh = async () => {\n    try {\n      if (isRefreshing) {\n        return;\n      }\n      setRefreshing(true);\n\n      await forgetEverything();\n    } catch (err) {\n      console.error('onClickRefresh', err);\n    }\n    setRefreshing(false);\n  };\n  const onClickShowComments = () =>\n    dispatch(setShowComments(!showComments));\n\n  const onClickAddComment = async () => {\n    const user = await getUserData();\n    const id = uuid.v4().toString();\n    const mnemonic = layers[0]?.mnemonic;\n    const comment: EditorComment = {\n      id,\n      partyId: id,\n      userId: user.id,\n      title: user.name,\n      currentPosition,\n      isContact: true,\n      isParty: true,\n      authorName: user.name,\n      name: user.name,\n      mnemonic,\n      folderId: projectId + '_comments',\n      isFolder: true,\n      duration: 10,\n      encoding: {\n        start: 0,\n        end: 10,\n      },\n    };\n    await createNewParty(comment);\n    await forgetEverything();\n    console.info(mnemonic);\n    await sendChatMessage(\n      comment.id,\n      user.name + ' has created comment',\n      mnemonic!,\n      {system: true},\n    );\n  };\n\n  const onClickUndo = () => {};\n\n  const onClickRedo = () => {};\n\n  return (\n    <>\n      {!isMobile ? (\n        <>\n          <Appbar.Action\n            icon=\"refresh\"\n            disabled={isRefreshing}\n            onPress={() => onClickRefresh()}\n          />\n          {showComments ? (\n            <Appbar.Action\n              icon=\"comment-plus\"\n              onPress={() => onClickAddComment()}\n            />\n          ) : null}\n          <Appbar.Action\n            icon={\n              showComments ? 'comment-eye' : 'comment-eye-outline'\n            }\n            onPress={() => onClickShowComments()}\n          />\n          <Appbar.Action\n            icon=\"magnify-plus-outline\"\n            onPress={() => onClickSetScale('+')}\n          />\n          <Appbar.Action\n            icon=\"magnify-minus-outline\"\n            onPress={() => onClickSetScale('-')}\n          />\n          {showEditor && (\n            <Appbar.Action\n              disabled={isRefreshing}\n              icon=\"content-cut\"\n              onPress={() => onClickCut()}\n            />\n          )}\n          {showEditor && (\n            <Appbar.Action\n              disabled={isRefreshing}\n              icon=\"content-copy\"\n              onPress={() => onClickCopy()}\n            />\n          )}\n        </>\n      ) : (\n        <Menu\n          visible={menuOpen}\n          onDismiss={onHideMenu}\n          anchor={\n            <Appbar.Action icon={'dots-grid'} onPress={openMenu} />\n          }>\n          <Menu.Item\n            leadingIcon=\"refresh\"\n            title=\"Refresh\"\n            disabled={isRefreshing}\n            onPress={() => onClickRefresh()}\n          />\n          <Menu.Item\n            leadingIcon=\"comment-plus\"\n            title=\"Add comment\"\n            onPress={() => onClickAddComment()}\n          />\n          <Menu.Item\n            title=\"Toggle comments\"\n            leadingIcon={\n              showComments ? 'comment-eye' : 'comment-eye-outline'\n            }\n            onPress={() => onClickShowComments()}\n          />\n          <Menu.Item\n            title=\"Magnify timeline\"\n            leadingIcon=\"magnify-plus-outline\"\n            onPress={() => onClickSetScale('+')}\n          />\n          <Menu.Item\n            title=\"Scale timeline\"\n            leadingIcon=\"magnify-minus-outline\"\n            onPress={() => onClickSetScale('-')}\n          />\n          {showEditor && (\n            <Menu.Item\n              title=\"Cut Content\"\n              disabled={isRefreshing}\n              leadingIcon=\"content-cut\"\n              onPress={() => onClickCut()}\n            />\n          )}\n          {showEditor && (\n            <Menu.Item\n              title=\"Copy Content\"\n              disabled={isRefreshing}\n              leadingIcon=\"content-copy\"\n              onPress={() => onClickCopy()}\n            />\n          )}\n        </Menu>\n      )}\n    </>\n  );\n}\n","import React, {Ref, RefObject, useCallback, useRef} from 'react';\nimport {\n  Platform,\n  StyleSheet,\n  useWindowDimensions,\n} from 'react-native';\nimport {IconButton, List, ProgressBar} from 'react-native-paper';\nimport {useQuery} from 'react-query';\nimport {\n  CBProgressParams,\n  genExecTime,\n  getActiveProjectLayer,\n  getProjectMedia,\n} from '../../api/media';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {useIsFocused} from '@react-navigation/native';\nimport {\n  setEncoderProgress,\n  setCaretPosition,\n  setScrollPosition,\n  setIsPlaying,\n  setActiveLayer,\n} from '../../store/slices/editor';\nimport {ResizeMode, Video} from 'expo-av';\nimport {EditorLayer, EditorProject, Media} from '../../types';\n\nconst styles = StyleSheet.create({\n  video: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  chip: {\n    fontSize: 18,\n  },\n});\nfunction EditorVideoComponent({\n  video2,\n  mediaRes,\n  layers,\n  projectId,\n}: {\n  projectId: string;\n  layers: EditorLayer[];\n  mediaRes: EditorProject;\n  video2: RefObject<JSX.IntrinsicElements['video'] | undefined>;\n}) {\n  const dispatch = useAppDispatch();\n  const encoderProgress = useAppSelector(\n    state => state.editor.encoderProgress,\n  );\n  const pixelsPerSecond = useAppSelector(\n    state => state.editor.pixelsPerSecond,\n  );\n  const caretPosition = useAppSelector(\n    state => state.editor.videoCaretPosition,\n  );\n  const scrollPosition = useAppSelector(\n    state => state.editor.videoScrollPosition,\n  );\n  const video3 = useRef<Video | null>();\n  const isPlaying = useAppSelector(state => state.editor.isPlaying);\n  const canScroll = useAppSelector(state => state.editor.canScroll);\n  const scroll = useAppSelector(state => state.editor.scroll);\n  const activeLayer = useAppSelector(\n    state => state.editor.activeLayer,\n  );\n  const focused = useIsFocused();\n  const currentPosition =\n    (caretPosition + scrollPosition) / pixelsPerSecond || 0.0;\n  const encodedMediaQuery = useQuery(\n    ['encodedMedia', projectId, currentPosition, activeLayer],\n    async () =>\n      await getProjectMedia(\n        layers!,\n        currentPosition,\n        (progress: CBProgressParams) =>\n          dispatch(setEncoderProgress(progress.progress)),\n      ),\n    {\n      enabled:\n        mediaRes?.id !== undefined && layers?.length && focused\n          ? true\n          : false,\n      keepPreviousData: false,\n      onSuccess: () => {\n        console.info('after query');\n        if (video2?.current)\n          video2.current.currentPosition =\n            encodedMediaQuery.data?.currentPosition || 0.0;\n      },\n    },\n  );\n\n  const queryPosition =\n    encodedMediaQuery.data?.currentPosition || 0.0;\n  const offsetPosition = encodedMediaQuery.data?.offset || 0.0;\n  // console.info('queryPosition', queryPosition)\n  // console.info('offsetPosition', offsetPosition)\n  const onTimeUpdate = useCallback(\n    (currentTime: number, paused: boolean) => {\n      try {\n        const newtime =\n          (offsetPosition || 0) +\n          currentTime -\n          (encodedMediaQuery.data?.activeMedia.encoding.start || 0);\n\n        if (newtime >= encodedMediaQuery.data?.totalTime) {\n          if (Platform.OS === 'web') video2.current?.pause();\n          else video3.current?.setStatusAsync({shouldPlay: false});\n          dispatch(setIsPlaying(false));\n        }\n\n        const newoffset = newtime * pixelsPerSecond;\n        const activeLayerId = getActiveProjectLayer(layers!, newtime)\n          ?.activeMedia?.id;\n        const layerSwitched =\n          activeLayerId && activeLayerId !== activeLayer;\n        let nscrollPosition = 0;\n        let ncaretPosition = caretPosition;\n\n        if (!paused) {\n          if (canScroll) {\n            const offset = newoffset - scroll;\n            console.info('offset', offset, scroll, newoffset);\n            if (offset > 0) {\n              const diff = newoffset - offset;\n              console.info('diff', diff, offset, scroll, newoffset);\n              nscrollPosition = diff;\n              ncaretPosition = offset;\n            } else {\n              nscrollPosition = newoffset - caretPosition;\n            }\n          } else {\n            ncaretPosition = newoffset;\n          }\n          dispatch(setIsPlaying(true));\n          dispatch(setCaretPosition(ncaretPosition));\n          dispatch(setScrollPosition(nscrollPosition));\n        }\n        if (paused && isPlaying && Platform.OS === 'web')\n          dispatch(setIsPlaying(false));\n        if (layerSwitched) {\n          // console.info('layerSwitched', layerSwitched, activeLayer, activeLayerId)\n          dispatch(\n            setActiveLayer({\n              activeLayerId,\n              scrollPosition: nscrollPosition,\n              caretPosition: ncaretPosition,\n            }),\n          );\n        }\n      } catch (err) {\n        console.error('ontimeupdate rr', err);\n      }\n    },\n    [encodedMediaQuery, canScroll, isPlaying, layers, offsetPosition],\n  );\n  const {width, height} = useWindowDimensions();\n  const fontSize = 12;\n  return (\n    <>\n      {(encoderProgress && encoderProgress !== 1) ||\n      encodedMediaQuery.isFetching ? (\n        <ProgressBar\n          style={{\n            height: '100%',\n            width: '100%',\n            position: 'absolute',\n            top: 0,\n          }}\n          progress={encoderProgress}\n        />\n      ) : (\n        <>\n          {Platform.OS === 'web' ? (\n            <video\n              controls={false}\n              style={styles.video}\n              src={(encodedMediaQuery.data?.url as string) || ''}\n              muted={encodedMediaQuery.data?.muted}\n              ref={e => {\n                // console.info('rerender video')\n                // console.info(\"ref\", e, encodedMediaQuery.data)\n                if (e) {\n                  e.currentTime = queryPosition;\n                  video2.current = e;\n                  if (isPlaying) e.play();\n                }\n              }}\n              onPlaying={e => {\n                dispatch(setIsPlaying(true));\n              }}\n              onPause={e => {\n                dispatch(setIsPlaying(false));\n              }}\n              onEnded={p => {\n                console.info('ended', p);\n              }}\n              onTimeUpdate={e =>\n                onTimeUpdate(\n                  (\n                    e.nativeEvent\n                      .target as JSX.IntrinsicElements['video']\n                  ).currentTime,\n                  (\n                    e.nativeEvent\n                      .target as JSX.IntrinsicElements['video']\n                  ).paused,\n                )\n              }\n            />\n          ) : (\n            <Video\n              source={{\n                uri: (encodedMediaQuery.data?.url as string) || '',\n              }}\n              positionMillis={parseInt(queryPosition * 1000)}\n              shouldPlay={isPlaying}\n              ref={e => {\n                console.info('onref', e);\n                video3.current = e;\n                if (isPlaying) e?.setStatusAsync({shouldPlay: true});\n              }}\n              isMuted={encodedMediaQuery.data?.muted}\n              style={{\n                width,\n                height: height / 3,\n                position: 'absolute',\n                left: -15,\n                top: 0,\n                padding: 0,\n                margin: 0,\n              }}\n              volume={1}\n              resizeMode={ResizeMode.CONTAIN}\n              useNativeControls={false}\n              onPlaybackStatusUpdate={async status => {\n                if (status.isLoaded && status.positionMillis) {\n                  onTimeUpdate(\n                    status.positionMillis / 1000,\n                    !status.isPlaying,\n                  );\n                }\n              }}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n}\nexport default EditorVideoComponent;\n","import React, {useRef} from 'react';\nimport {ImageBackground, StyleSheet, View} from 'react-native';\nimport {\n  ActivityIndicator,\n  Banner,\n  Chip,\n  Divider,\n  ProgressBar,\n  Text,\n  useTheme,\n} from 'react-native-paper';\nimport {useQuery, useQueryClient} from 'react-query';\nimport {EncoderProject} from '../../types';\nimport {\n  getFileOpfs,\n  encodeMedia,\n  getVideoWT,\n  getById,\n} from '../../api';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {useIsFocused} from '@react-navigation/native';\nimport {niceBytes} from '../../api/util';\nimport {setEncoderProgress} from '../../store/slices/encoder';\n\nconst styles = StyleSheet.create({\n  video: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  chip: {\n    fontSize: 18,\n  },\n});\nexport default function EncoderBanner({\n  projectId,\n  height,\n  folderId,\n}: {\n  projectId: string;\n  height: number;\n  folderId: string;\n}) {\n  const dispatch = useAppDispatch();\n  const state = useAppSelector(state => state.encoder);\n  const theme = useTheme();\n  const queryClient = useQueryClient();\n  const mediaData = useQuery(\n    ['projectdata', projectId],\n    async () => await getById(projectId, folderId),\n    {\n      enabled: projectId ? true : false,\n    },\n  );\n  const focused = useIsFocused();\n\n  const mediaRes = mediaData.data as EncoderProject | undefined;\n  // const {encoder} = mediaRes\n\n  const localMediaQuery = useQuery(\n    ['localMedia', projectId],\n    async () => {\n      if (!mediaRes?.id) return undefined;\n      // const folder = await getById(mediaRes.folderId)\n      let file;\n      try {\n        file = await getFileOpfs(mediaRes);\n      } catch (err) {\n        console.error(err);\n      }\n\n      if (mediaRes.extractor === 'wt' && !file)\n        file = await getVideoWT(mediaRes);\n\n      return file;\n    },\n    {\n      enabled:\n        mediaData.isFetched && focused && mediaRes?.id !== undefined\n          ? true\n          : false,\n    },\n  );\n\n  const encodedMediaQuery = useQuery(\n    ['encodedMedia', projectId],\n    async () =>\n      mediaRes?.id &&\n      encodeMedia(mediaRes, params =>\n        dispatch(setEncoderProgress(params.progress)),\n      ),\n    {\n      enabled:\n        mediaData.isFetched && focused && mediaRes?.id !== undefined\n          ? true\n          : false,\n    },\n  );\n\n  const encodedFileSize = useQuery(\n    ['encodedFileSize', projectId],\n    async () => {\n      // console.info(\"encoded url\", encodedMediaQuery.data)\n      if (!encodedMediaQuery.data) return '0';\n      const head = await fetch(encodedMediaQuery.data, {\n        cache: 'no-cache',\n      });\n      // console.info('head', head)\n      return head.headers.get('Content-Length')?.toString();\n    },\n    {\n      enabled:\n        !mediaData.isFetching &&\n        focused &&\n        encodedMediaQuery.data &&\n        encodedMediaQuery.data.search('blob') > -1\n          ? true\n          : false,\n\n      retry: false,\n    },\n  );\n\n  const mediaLoading =\n    mediaData.isFetching || localMediaQuery.isFetching;\n  console.info('encodedFileSize', encodedFileSize.data);\n  const mediaSrc = localMediaQuery.data;\n  const video2 = useRef<JSX.IntrinsicElements['video']>();\n  const video1 = useRef<JSX.IntrinsicElements['video']>();\n  if (!mediaRes) {\n    return <ActivityIndicator size={72} />;\n  }\n  return (\n    <>\n      <Divider />\n      <Banner\n        visible={projectId ? true : false}\n        theme={theme}\n        style={{\n          backgroundColor: 'black',\n          padding: 0,\n          margin: 0,\n        }}\n        contentStyle={{\n          width: '100%',\n          height: '100%',\n          maxWidth: 'auto',\n          padding: 0,\n          margin: 0,\n        }}>\n        <View\n          style={{\n            width: '50%',\n            height: height / 2,\n            borderRightWidth: 1,\n            borderRightColor: 'rgb(73, 69, 79)',\n          }}>\n          <Text style={{textAlign: 'left', zIndex: 10}}>\n            <Chip textStyle={styles.chip}>\n              Before: {mediaRes?.size && niceBytes(mediaRes.size)}\n            </Chip>\n          </Text>\n          {mediaLoading ? <ActivityIndicator size={72} /> : null}\n\n          {projectId && !mediaLoading && focused ? (\n            <video\n              controls={true}\n              style={styles.video}\n              onPlaying={e => {\n                const {currentTime} = e.nativeEvent.target;\n                window.video1 = e.nativeEvent.target;\n                if (video2.current)\n                  video2.current.currentTime = currentTime;\n                if (video2.current && video2.current.paused)\n                  video2.current.play();\n              }}\n              onPause={e => {\n                const {currentTime} = e.nativeEvent.target;\n                if (video2.current)\n                  video2.current.currentTime = currentTime;\n                if (video2.current && !video2.current.paused)\n                  video2.current.pause();\n              }}\n              onEnded={p => {\n                console.info('ended', p);\n              }}\n              onTimeUpdate={e => {\n                const {currentTime, paused} = e.nativeEvent.target;\n                if (video2.current && paused)\n                  video2.current.currentTime = currentTime;\n              }}\n              ref={video1}\n              src={mediaSrc}\n            />\n          ) : null}\n        </View>\n        <View\n          style={{\n            width: '50%',\n            height: height / 2,\n            borderLeftWidth: 1,\n            borderLeftColor: 'rgb(73, 69, 79)',\n          }}>\n          {encodedMediaQuery.isFetching ? (\n            <>\n              <Text style={{textAlign: 'right', zIndex: 10}}> </Text>\n              <ProgressBar\n                style={{\n                  height: '100%',\n                  position: 'absolute',\n                  top: -25,\n                }}\n                progress={state.encoderProgress}\n              />\n              <View\n                style={{\n                  position: 'absolute',\n                  top: '40%',\n                  display: 'flex',\n                  width: '100%',\n                }}>\n                <Text style={{textAlign: 'center', color: 'coral'}}>\n                  Loading{' '}\n                  {parseFloat(\n                    Math.abs(state.encoderProgress * 100),\n                  ).toFixed(2)}\n                  %\n                </Text>\n              </View>\n            </>\n          ) : (\n            <Text style={{textAlign: 'right', zIndex: 10}}>\n              <Chip textStyle={styles.chip}>\n                After:{' '}\n                {!encodedFileSize.isFetching &&\n                  encodedFileSize.data &&\n                  niceBytes(encodedFileSize.data)}\n              </Chip>\n              <a href={encodedMediaQuery.data} download={true}>\n                <Chip textStyle={styles.chip} onPress={() => {}}>\n                  Download\n                </Chip>\n              </a>\n            </Text>\n          )}\n\n          {projectId && !encodedMediaQuery.isFetching && focused ? (\n            <>\n              {mediaRes?.encoding?.output === 'mp4' && (\n                <video\n                  controls={true}\n                  style={styles.video}\n                  onPlaying={e => {\n                    if (video1.current?.paused)\n                      video1.current?.play();\n                  }}\n                  onPause={e => {\n                    if (!video1.current?.paused)\n                      video1.current?.pause();\n                  }}\n                  ref={video2}\n                  src={encodedMediaQuery.data}\n                />\n              )}\n              {mediaRes?.encoding?.output === 'gif' && (\n                <ImageBackground\n                  source={{uri: encodedMediaQuery.data}}\n                  resizeMode=\"contain\"\n                  style={styles.video}\n                />\n              )}\n            </>\n          ) : null}\n        </View>\n      </Banner>\n      <Divider />\n    </>\n  );\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  memo,\n} from 'react';\nimport {SafeAreaView, View, useWindowDimensions} from 'react-native';\nimport {\n  ActivityIndicator,\n  Button,\n  Divider,\n  List,\n  Menu,\n  TextInput,\n} from 'react-native-paper';\nimport {useMutation, useQuery, useQueryClient} from 'react-query';\nimport {findBy, genExecCmd, getById, writeItem} from '../../api';\n// import {genExecCmd} from '../../api/media';\nimport {useRoute} from '@react-navigation/native';\nimport {\n  EncoderProject as EncoderProjectType,\n  FFMpegOutputType,\n  FFMpegPreset,\n} from '../../types';\nimport {ScrollView} from 'react-native-gesture-handler';\nimport SyntaxHighlighter from 'react-native-syntax-highlighter';\nimport {xonokai} from 'react-syntax-highlighter/src/styles/prism';\nimport CodeEditor, {\n  CodeEditorSyntaxStyles,\n} from '@rivascva/react-native-code-editor';\nimport {ProjectParams} from '../../types/nav';\nfunction EncoderProject(props?: {params?: ProjectParams}) {\n  // const {writeItem} = props;\n  const route = useRoute();\n  const queryClient = useQueryClient();\n  const [showCode, setShowCode] = useState(false);\n  const params = route.params as ProjectParams;\n  console.info('params', params);\n  let {projectId, encoder, folderId, parentFolderId} = params || {};\n  if (encoder) projectId = encoder;\n  const project = useQuery(\n    'project_' + projectId,\n    async () => await getById(projectId, parentFolderId || folderId),\n  );\n  const projectData: EncoderProjectType = project.data;\n  console.info('projectData', projectData);\n  const afterWrite = useRef<number | undefined>();\n  const codeEditorRef = useRef();\n  const {width} = useWindowDimensions();\n  const codeWidth = props.codeWidth || width - 200;\n  const projectWriteMutation = useMutation(\n    async (np: EncoderProjectType) => {\n      const ni = await writeItem(np);\n      clearTimeout(afterWrite.current);\n      afterWrite.current = setTimeout(() => {\n        queryClient.refetchQueries({\n          queryKey: ['folderContent_' + projectData?.folderId],\n        });\n        queryClient.refetchQueries({\n          queryKey: ['projectdata', projectId],\n        });\n        queryClient.resetQueries({\n          queryKey: ['encodedMedia', projectId],\n          exact: true,\n        });\n        queryClient.resetQueries({\n          queryKey: ['encodedFileSize', projectId],\n          exact: true,\n        });\n        queryClient.resetQueries({\n          queryKey: ['encodedFileSize', projectId],\n          exact: true,\n        });\n        project.refetch();\n      }, 1000);\n      return ni;\n    },\n  );\n  const [outputMenuVisible, setOutputMenuVisible] = useState(false);\n  const [presetMenuVisible, setPresetMenuVisible] = useState(false);\n  const outputTypes = Object.keys(FFMpegOutputType);\n  const closeMenu = () => {\n    setOutputMenuVisible(false);\n    setPresetMenuVisible(false);\n  };\n  const selectValue = (\n    valueType: keyof EncoderProjectType['encoding'],\n    value: string | number,\n  ) => {\n    const np = projectData;\n    const numericTypes = [\n      'width',\n      'compressionLevel',\n      'height',\n      'start',\n      'end',\n      'soundVolume',\n    ];\n    const nonRenderTypes = ['start', 'end', 'soundVolume'];\n    const shouldRerender = !nonRenderTypes.includes(valueType);\n    if (numericTypes.includes(valueType) && isNaN(value)) {\n      console.info('invalid type');\n      return;\n    }\n    if (value === '') {\n      return;\n    }\n    if (!np.encoding) {\n      np.encoding = {};\n    }\n    np.encoding[valueType] = value;\n    console.info(np);\n\n    if (shouldRerender)\n      np.encoding.lastUpdated = new Date().valueOf();\n\n    projectWriteMutation.mutateAsync(np);\n    closeMenu();\n  };\n  if (project.isFetching) {\n    return <ActivityIndicator size={72} />;\n  }\n  const execCmd = genExecCmd(projectData);\n  const codeString = execCmd.join('\\n');\n  const fontSize = 12;\n  const inputWidth = 120;\n  return (\n    <ScrollView\n      showsVerticalScrollIndicator={false}\n      showsHorizontalScrollIndicator={false}>\n      <Divider key={'div00'} />\n      <List.Item\n        key={'info'}\n        left={p => <List.Icon {...p} icon={'information'} />}\n        title={projectData?.title}\n      />\n      <Divider key={'div01'} />\n      <List.Item\n        key={'start'}\n        left={p => <List.Icon {...p} icon={'clock-plus'} />}\n        title={'Start'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.start || 0}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('start', parseFloat(text))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div7'} />\n      <List.Item\n        key={'end'}\n        left={p => <List.Icon {...p} icon={'clock-minus'} />}\n        title={`End (${projectData?.duration})`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={\n                projectData?.encoding?.end || projectData?.duration\n              }\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('end', parseFloat(text))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div4'} />\n      <List.Item\n        key={'cl'}\n        left={p => <List.Icon {...p} icon={'zip-box'} />}\n        title={'Compression'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.compressionLevel}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('compressionLevel', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'divvolume'} />\n      <List.Item\n        key={'volume'}\n        left={p => <List.Icon {...p} icon={'zip-box'} />}\n        title={'Sound Volume'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.soundVolume || 100}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('soundVolume', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div3'} />\n      <List.Item\n        key={'width'}\n        left={p => <List.Icon {...p} icon={'ruler'} />}\n        title={`Width(${projectData?.width})`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.width}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('width', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div2'} />\n      <List.Item\n        key={'height'}\n        left={p => <List.Icon {...p} icon={'ruler'} />}\n        title={`Height(${projectData?.height})`}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <TextInput\n              dense={true}\n              mode=\"outlined\"\n              value={projectData?.encoding?.height}\n              style={{textAlign: 'right', pointerEvents: 'auto'}}\n              keyboardType=\"numeric\"\n              onChangeText={text =>\n                selectValue('height', parseInt(text, 10))\n              }\n            />\n          </View>\n        )}\n      />\n      <Divider key={'div1'} />\n      <List.Item\n        key={'output'}\n        left={p => <List.Icon {...p} icon={'file-export'} />}\n        title={'Output'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <Menu\n              visible={outputMenuVisible}\n              onDismiss={closeMenu}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setOutputMenuVisible(true)}>\n                  {projectData?.encoding?.output}\n                </Button>\n              }>\n              <>\n                {outputTypes.map(item => (\n                  <Menu.Item\n                    key={item}\n                    onPress={() => selectValue('output', item)}\n                    title={item}\n                  />\n                ))}\n              </>\n            </Menu>\n          </View>\n        )}\n      />\n      <Divider key={'div'} />\n      <List.Item\n        key={'preset'}\n        left={p => <List.Icon {...p} icon={'cog'} />}\n        title={'Preset'}\n        titleStyle={{fontSize}}\n        right={p => (\n          <View style={{width: inputWidth}}>\n            <Menu\n              visible={presetMenuVisible}\n              onDismiss={closeMenu}\n              anchor={\n                <Button\n                  mode=\"outlined\"\n                  onPress={() => setPresetMenuVisible(true)}>\n                  {projectData?.encoding?.preset}\n                </Button>\n              }>\n              <>\n                {Object.keys(FFMpegPreset).map(item => (\n                  <Menu.Item\n                    key={item}\n                    onPress={() => selectValue('preset', item)}\n                    title={item}\n                  />\n                ))}\n              </>\n            </Menu>\n          </View>\n        )}\n      />\n      {showCode === true ? (\n        <View>\n          <Divider key={'div5'} />\n          <List.Item\n            key={'code'}\n            left={p => <List.Icon {...p} icon={'code-brackets'} />}\n            title={''}\n            titleStyle={{fontSize}}\n            onPress={() => codeEditorRef?.current?.focus()}\n            right={p => (\n              <SafeAreaView style={{width: codeWidth, zIndex: 10}}>\n                <CodeEditor\n                  className={'codeEditor'}\n                  ref={codeEditorRef}\n                  style={{\n                    fontSize,\n                    inputLineHeight: fontSize,\n                    highlighterLineHeight: fontSize,\n                    display: 'flex',\n                  }}\n                  language=\"bash\"\n                  syntaxStyle={CodeEditorSyntaxStyles.xonokai}\n                  initialValue={\n                    projectData?.encoding?.code?.join(',') || ''\n                  }\n                  onChange={text => {\n                    if (\n                      text ===\n                        projectData?.encoding?.code?.join(',') ||\n                      ''\n                    )\n                      return;\n                    selectValue('code', text.split(','));\n                  }}\n                  autoFocus={false}\n                  showLineNumbers\n                />\n              </SafeAreaView>\n            )}\n          />\n          <Divider key={'div6'} />\n          {codeString && (\n            <List.Item\n              key={'output_code'}\n              left={p => <List.Icon {...p} icon={'code-tags'} />}\n              title=\"\"\n              titleStyle={{fontSize}}\n              right={() => (\n                <View style={{width: codeWidth}}>\n                  <SyntaxHighlighter\n                    language=\"bash\"\n                    style={xonokai}\n                    highlighter={'prism'}\n                    fontSize={fontSize}>\n                    {codeString}\n                  </SyntaxHighlighter>{' '}\n                </View>\n              )}\n            />\n          )}\n          <Divider key={'div8'} />\n        </View>\n      ) : null}\n      <Button\n        icon={'code-brackets'}\n        onPress={() => setShowCode(!showCode)}>\n        Show FFMpeg Code\n      </Button>\n    </ScrollView>\n  );\n}\n\nexport default memo(EncoderProject);\n","import React from 'react';\n\nimport {DataHook, DataHookFolders, Folder} from '../../types';\n\nimport {\n  SafeAreaView,\n  StyleSheet,\n  View,\n  useWindowDimensions,\n  VirtualizedList,\n} from 'react-native';\n\nimport FolderItem from './items/folderitem';\nimport {ActivityIndicator} from 'react-native-paper';\nimport {\n  CommonActions,\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\nimport {FileStackParams, FolderParams} from '../../types/nav';\n\nexport interface FolderLibraryProps {\n  dataHook: DataHookFolders;\n}\n\nconst FolderLibrary = (folderLibraryProps: FolderLibraryProps) => {\n  const {dataHook} = folderLibraryProps;\n  const dim = useWindowDimensions();\n  const {height} = dim;\n  const drawerOffset = dim.width > 700 ? 80 : 0;\n  const width = dim.width - drawerOffset;\n  const iconSize = 30;\n  const iconColor = 'black';\n  let marginTop = 0;\n  const navigation = useNavigation<NavigationProp<FileStackParams>>();\n  const {\n    folders,\n    currentFolderId,\n    getItem,\n    getItemCount,\n    isEditingFolder,\n    currentFolderEditorName,\n    setFolderEditorName,\n    folderNameInputRef,\n    onFolderActionPress,\n    loadingContent,\n    loadingFolders,\n    onRemoveFolder,\n    abortEditFolder,\n  } = dataHook;\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: 0,\n      marginTop: 0,\n    },\n    item: {\n      paddingLeft: 5,\n      fontSize: 12,\n      height: 120,\n      color: 'black',\n      width: '100%',\n    },\n    tinyLogo: {\n      marginTop: 2,\n      width: 22,\n      height: 22,\n    },\n    scroll: {\n      height: height - 55,\n      display: 'flex',\n      position: 'relative',\n      backgroundColor: 'black',\n      marginTop,\n      width: '100%',\n    },\n    icon: {\n      paddingLeft: 10,\n    },\n  });\n  const renderFolder = (item: Folder) => (\n    <View style={{width}} key={item.id}>\n      <FolderItem\n        key={item.id}\n        folder={{\n          ...item,\n          isOpen: item.id === currentFolderId && !isEditingFolder,\n          isInfoOpen: item.id === isEditingFolder,\n        }}\n        styles={styles}\n        abortEditFolder={abortEditFolder}\n        folderNameInputRef={folderNameInputRef}\n        iconColor={iconColor}\n        iconSize={iconSize}\n        width={width}\n        isLoadingContent={\n          currentFolderId === item.id && loadingContent\n        }\n        isOpen={item.id === currentFolderId}\n        currentFolderEditorName={currentFolderEditorName}\n        setFolderEditorName={setFolderEditorName}\n        onFolderPress={() => {\n          navigation.navigate({\n            name: 'Folder',\n            params: {\n              folderId: item.id,\n              title: item.title,\n              mnemonic: item.mnemonic,\n              userId: item.userId,\n            },\n          });\n        }}\n        onShareFolder={() => dataHook.onShareFolder(item)}\n        onFolderActionPress={() => onFolderActionPress(item.id)}\n        onRemoveFolder={() => onRemoveFolder(item)}>\n        {item.id === currentFolderId && !isEditingFolder ? (\n          <View style={{width, height: 'auto'}}></View>\n        ) : null}\n      </FolderItem>\n    </View>\n  );\n  // console.info('loadingFolders', folders, loadingFolders)\n  if (loadingFolders) {\n    return <ActivityIndicator size={72} />;\n  }\n  return (\n    <SafeAreaView style={{...styles.scroll}}>\n      <VirtualizedList\n        onEndReached={() => {\n          console.info('onEndReached');\n        }}\n        data={folders}\n        initialNumToRender={100}\n        renderItem={({item}) => renderFolder(item)}\n        keyExtractor={(item: Folder) =>\n          item.id || item.date.toString()\n        }\n        getItemCount={getItemCount}\n        getItem={getItem}\n        getItemLayout={(data, index) => ({\n          length: 50,\n          offset: 50 * index,\n          index,\n        })}\n      />\n    </SafeAreaView>\n  );\n};\n\nexport default FolderLibrary;\n","import React, {memo} from 'react';\n\nimport {\n  ListRenderItemInfo,\n  SafeAreaView,\n  View,\n  VirtualizedList,\n  useWindowDimensions,\n} from 'react-native';\n\nimport {\n  FolderPreviewContentType,\n  useFolders,\n} from '../../hooks/useFolders';\n\nimport {ActivityIndicator} from 'react-native-paper';\nimport Medialibrary from '../media/medialibrary';\nimport {FolderType} from '../../types';\nimport Contactlibrary from '../contacts/contactlibrary';\nimport FolderLibrary from './folderlibrary';\nimport {\n  getFolderContent,\n  getFoldersByType,\n  writeItem,\n} from '../../api';\nimport {styles} from './styles';\nimport {useFolder} from '../../hooks/useFolder';\n\nexport type RenderContentType = (\n  item: ListRenderItemInfo<FolderPreviewContentType>,\n) => JSX.Element;\n\nexport const FolderNavigator = ({\n  parentFolderId,\n  parentFolderHook,\n  renderContent,\n  folderType,\n}: {\n  renderContent: RenderContentType;\n  parentFolderId: string | null;\n  parentFolderHook: ReturnType<typeof useFolder>;\n  folderType: FolderType;\n}) => {\n  const foldersHook = useFolders(folderType, false);\n  const {height} = useWindowDimensions();\n  return (\n    <View style={{width: '30%', height: '100%'}}>\n      {!parentFolderId ? (\n        <FolderLibrary dataHook={foldersHook} />\n      ) : null}\n      {parentFolderId ? (\n        <>\n          {!parentFolderHook.folderContentQuery.isFetching &&\n          !parentFolderHook.isLoadingFolder &&\n          parentFolderHook.folderContent?.length ? (\n            <VirtualizedList\n              onEndReached={() => {\n                console.info('onEndReached');\n                // parentFolderHook.folderContentQuery.refetch()\n              }}\n              scrollEnabled={true}\n              style={{height}}\n              data={parentFolderHook.folderContent}\n              pagingEnabled={true}\n              initialNumToRender={1000}\n              renderItem={renderContent}\n              keyExtractor={(item: FolderPreviewContentType) =>\n                item.id || item.date.toString()\n              }\n              showsHorizontalScrollIndicator={false}\n              showsVerticalScrollIndicator={false}\n              getItemCount={parentFolderHook.getContentCount}\n              getItem={parentFolderHook.getContentItem}\n              onScrollToTop={() => {\n                // console.info('ontop');\n              }}\n              getItemLayout={(_data, index) => ({\n                length: 130,\n                offset: 130 * index,\n                index,\n              })}\n            />\n          ) : (\n            <ActivityIndicator size={72} />\n          )}\n        </>\n      ) : null}\n    </View>\n  );\n};\n","import React, {memo} from 'react';\n\nimport {\n  SafeAreaView,\n  View,\n  useWindowDimensions,\n  Platform,\n} from 'react-native';\n\nimport DragList, {\n  DragListRenderItemInfo,\n} from 'react-native-draglist';\n\nimport {FolderPreviewContentType} from '../../hooks/useFolders';\n\nimport ContentItem from './items/contentitem';\nimport {useFolder} from '../../hooks/useFolder';\nimport {\n  ActivityIndicator,\n  IconButton,\n  List,\n} from 'react-native-paper';\nimport {useIsFocused, useRoute} from '@react-navigation/native';\nimport {FolderType} from '../../types';\nimport {ScrollView} from 'react-native-gesture-handler';\nimport {getById, getFolderContent, writeItem} from '../../api';\nimport {FolderParams} from '../../types/nav';\nimport {FolderNavigator, RenderContentType} from './foldernavigator';\nimport {styles} from './styles';\n\nexport interface FolderLibraryProps {\n  folderId?: string;\n  folderType: FolderType;\n}\nconst FolderPage = (props: FolderLibraryProps) => {\n  const {folderType} = props;\n  const isFocused = useIsFocused();\n  const {height, width} = useWindowDimensions();\n  const isMobile = width > 700 ? false : true;\n  const route = useRoute();\n  let marginTop = Platform.OS === 'web' ? 0 : 0;\n  const params = route.params as FolderParams;\n  const {folderId, mnemonic, title, userId} = params;\n  const dataHook = useFolder(\n    folderId,\n    getFolderContent,\n    getById,\n    folderType,\n    writeItem,\n    mnemonic,\n    title,\n    userId,\n  );\n  const {\n    folderContent,\n    isLoadingFolder,\n    isLoadingFolderContent,\n    folderData,\n    folderContentQuery,\n    folder,\n    onReordered,\n    addMedia,\n  } = dataHook;\n\n  let parentFolderId =\n    params?.parentFolderId || (folder && folder.folderId) || null;\n  if (parentFolderId === folderId) parentFolderId = null;\n  const parentFolderHook = useFolder(\n    parentFolderId,\n    getFolderContent,\n    getById,\n    folderType,\n    writeItem,\n  );\n\n  const mstyles = styles;\n  mstyles.item.width = width - 80;\n  mstyles.scroll.height = height - 65;\n  mstyles.scroll.marginTop = marginTop;\n  if (!isFocused) return <></>;\n  const renderContent = ({\n    item: i,\n    onDragEnd,\n    onDragStart,\n  }: DragListRenderItemInfo<FolderPreviewContentType>) => (\n    <ContentItem\n      i={i}\n      key={i.id}\n      dataHook={dataHook}\n      styles={mstyles}\n      width={!isMobile ? (width / 100) * 70 : width}\n      onDragStart={onDragStart}\n      onDragEnd={onDragEnd}\n    />\n  );\n  return (\n    <SafeAreaView>\n      <View\n        style={{\n          height: '100%',\n          width: '100%',\n          flexDirection: 'row',\n        }}>\n        {!isMobile ? (\n          <FolderNavigator\n            parentFolderId={parentFolderId}\n            parentFolderHook={parentFolderHook}\n            renderContent={renderContent as RenderContentType}\n            folderType={folderType}\n          />\n        ) : null}\n        {!isLoadingFolder &&\n        !folderContentQuery.isFetching &&\n        folderContent !== undefined ? (\n          <DragList\n            renderItem={renderContent}\n            keyExtractor={item => item?.id || item?.date.toString()}\n            style={{\n              width: '100%',\n              height,\n              paddingBottom: 50,\n            }}\n            data={folderContent}\n            showsVerticalScrollIndicator={false}\n            showsHorizontalScrollIndicator={false}\n            scrollEnabled={true}\n            ListEmptyComponent={() => (\n              <List.Item\n                title={'Create your first project'}\n                left={() => (\n                  <IconButton icon={'creation'} mode=\"outlined\" />\n                )}\n                style={{padding: 10}}\n                onPress={() => addMedia()}\n              />\n            )}\n            onReordered={onReordered}\n          />\n        ) : (\n          <ActivityIndicator size={72} />\n        )}\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default memo(FolderPage);\n","import React, {memo} from 'react';\n\nimport {Contact} from '../../../types';\n\nimport {Divider, List} from 'react-native-paper';\nimport {\n  NavigationProp,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport {ChatParams, ChatStackParams} from '../../../types/nav';\n\nexport interface ContactItemProps {\n  i: Contact;\n  width: number;\n}\n\nconst ContactItem = (contactItemProps: ContactItemProps) => {\n  const {i, width} = contactItemProps;\n  const route = useRoute();\n  const params = route.params as ChatParams;\n  const navigation = useNavigation<NavigationProp<ChatStackParams>>();\n  const isOpen = params?.chatId === i.id;\n  const contact = i;\n  const title = i.name || i.id;\n  const icon = isOpen ? 'chat' : 'chat-outline';\n  const onPressContact = () => {\n    navigation.navigate({\n      name: 'Chat',\n      params: {\n        chatId: contact.id,\n        name: contact.name,\n        parentFolderId: contact.folderId,\n        mnemonic: contact.mnemonic,\n      },\n    });\n  };\n\n  const children = isOpen ? <></> : null;\n  return (\n    <>\n      <List.Accordion\n        style={{width}}\n        expanded={isOpen}\n        title={title}\n        onPress={onPressContact}\n        left={props => <List.Icon {...props} icon={icon} />}\n        right={() => <></>}>\n        {children}\n      </List.Accordion>\n      <Divider />\n    </>\n  );\n};\nexport default memo(ContactItem);\n","import React from 'react';\n\nimport {\n  Folder,\n  Media,\n  Contact,\n  EditorProject,\n  DataHook,\n  FolderType,\n} from '../../../types';\n\nimport {useWindowDimensions} from 'react-native';\n\nimport MediaItem from './mediaitem';\n\nimport ContactItem from './contactitem';\n\nimport FolderItem from './folderitem';\n\nimport ProjectItem from './projectitem';\nimport {useFolders} from '../../../hooks/useFolders';\nimport {useMedia} from '../../../hooks/useMedia';\nimport {\n  NavigationProp,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport {FileStackParams, FolderParams} from '../../../types/nav';\nimport {useAppDispatch} from '../../../store/hooks';\nimport {setFolderMenuItemId} from '../../../store/slices/ui';\nconst enableMove = false;\n\nexport interface ContentItemProps {\n  dataHook: DataHook;\n  styles: any;\n  i: Contact | Media | Folder;\n  width: number;\n  onDragEnd?: () => void;\n  onDragStart?: () => void;\n}\n\nconst ContentItem = (ContentItemProps: ContentItemProps) => {\n  const dispatch = useAppDispatch();\n  const {dataHook, styles, i, onDragEnd, onDragStart} =\n    ContentItemProps;\n  const navigation = useNavigation<NavigationProp<FileStackParams>>();\n  const route = useRoute();\n  const params = route.params as FolderParams;\n  const currentFolderId = params?.folderId;\n  const dim = useWindowDimensions();\n  const drawerOffset = dim.width > 700 ? 80 : 0;\n  const width = ContentItemProps.width - drawerOffset;\n  const iconSize = 30;\n  const iconColor = 'black';\n  const showMenu = () =>\n    dispatch(setFolderMenuItemId({itemId: i.id}));\n  const hideMenu = () =>\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n  if ((i as Media).isMediaNew) {\n    const {\n      onMediaPress,\n      onRemoveMediaPress,\n      onDownloadMediaPress,\n      onCopyLinkPress,\n      onEditMediaPress,\n      isLoadingMedia,\n      onRemoveFile,\n      currentContentId,\n      currentMediaId,\n      onExportFile,\n      onSellPress,\n    } = dataHook as ReturnType<typeof useMedia>;\n    return (\n      <MediaItem\n        key={i.id}\n        i={i as Media}\n        width={width}\n        onMediaPress={onMediaPress}\n        onRemoveMediaPress={() => onRemoveMediaPress(i.id)}\n        onDownloadMediaPress={onDownloadMediaPress}\n        onCopyLinkPress={onCopyLinkPress}\n        onEditMediaPress={onEditMediaPress}\n        onDragEnd={onDragEnd}\n        onDragStart={onDragStart}\n        onSellPress={onSellPress}\n        showMenu={showMenu}\n        hideMenu={hideMenu}\n        onExportFile={() => onExportFile(i.id)}\n        onRemoveFile={() => onRemoveFile(i.id)}\n        itemLoading={\n          i.id === currentMediaId && isLoadingMedia\n            ? currentMediaId\n            : false\n        }\n        isOpen={i.id === currentContentId ? true : false}\n        isPlaying={\n          i.id === currentMediaId && !isLoadingMedia ? true : false\n        }\n        enableMove={enableMove}\n      />\n    );\n  }\n\n  if (\n    (i as Media).isEncoderProject ||\n    (i as EditorProject).isEditorProject\n  ) {\n    return (\n      <ProjectItem\n        item={i as Media}\n        folderType={dataHook.folderType as FolderType}\n        onRemoveFolder={() => dataHook.onRemoveFolder(i as Folder)}\n      />\n    );\n  }\n\n  if ((i as Contact).isContact) {\n    return <ContactItem key={i.id} i={i as Contact} width={width} />;\n  }\n  if ((i as Folder).isFolder) {\n    const {\n      onRemoveFolder,\n      isEditingFolder,\n      onFolderActionPress,\n      setFolderEditorName,\n      currentFolderEditorName,\n      folderNameInputRef,\n      abortEditFolder,\n      onShareFolder,\n    } = dataHook as ReturnType<typeof useFolders>;\n    return (\n      <FolderItem\n        key={i.id}\n        folder={{\n          ...(i as Folder),\n          isInfoOpen: i.id === isEditingFolder,\n          isOpen: i.id === currentFolderId,\n        }}\n        styles={styles}\n        setFolderEditorName={setFolderEditorName}\n        currentFolderEditorName={currentFolderEditorName}\n        folderNameInputRef={folderNameInputRef}\n        iconColor={iconColor}\n        iconSize={iconSize}\n        enableMove={enableMove}\n        width={width}\n        onDragEnd={onDragEnd}\n        onDragStart={onDragStart}\n        showMenu={showMenu}\n        hideMenu={hideMenu}\n        isOpen={i.id === currentFolderId}\n        onRemoveFolder={() => onRemoveFolder(i as Folder)}\n        onShareFolder={() => onShareFolder(i as Folder)}\n        onFolderActionPress={() => onFolderActionPress(i.id)}\n        onFolderPress={() =>\n          navigation.navigate({\n            name: 'Folder',\n            params: {\n              folderId: (i as Folder).id,\n              title: (i as Folder).title,\n              parentFolderId: i.folderId as string,\n              mnemonic: (i as Folder).mnemonic,\n              userId: (i as Folder).userId,\n            },\n          })\n        }\n        isSecondLevel={true}\n        abortEditFolder={() => abortEditFolder()}>\n        {i.id === currentFolderId ? <></> : null}\n      </FolderItem>\n    );\n  }\n  return <></>;\n};\n\nexport default ContentItem;\n","import React, {MutableRefObject, useMemo} from 'react';\n\nimport {Folder} from '../../../types';\n\nimport {View, TextInput as TextInputType} from 'react-native';\nimport {defaultFolders} from '../../../db/defaults';\nimport {\n  ActivityIndicator,\n  Divider,\n  List,\n  Text,\n  useTheme,\n  TextInput,\n  IconButton,\n  Menu,\n} from 'react-native-paper';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {recursiveShare} from '../../../api';\nimport {\n  setFolderMenuItemId,\n  setToastText,\n} from '../../../store/slices/ui';\n\ntype FolderItemCallback = (\n  i: Folder,\n  isSecondLevel?: boolean,\n) => void;\n\nexport interface FolderItemProps {\n  folder: Folder;\n  enableMove?: boolean;\n  currentFolderEditorName?: string;\n  styles: any;\n  folderNameInputRef?: MutableRefObject<TextInputType | null>;\n  setFolderEditorName?: any;\n  iconColor: string;\n  iconSize: number;\n  onFolderPress: FolderItemCallback;\n  onFolderActionPress?: FolderItemCallback;\n  onRemoveFolder?: FolderItemCallback;\n  onMoveFolder?: FolderItemCallback;\n  onShareFolder?: FolderItemCallback;\n  abortEditFolder?: FolderItemCallback;\n  width: number;\n  isSecondLevel?: boolean;\n  children?: React.ReactNode;\n  isOpen?: boolean;\n  isLoadingContent?: boolean;\n  onDragEnd?: () => void;\n  onDragStart?: () => void;\n  showMenu?: () => void;\n  hideMenu?: () => void;\n}\n\nconst FolderItem = (props: FolderItemProps) => {\n  const {\n    folder,\n    width,\n    onFolderPress,\n    onRemoveFolder,\n    onFolderActionPress,\n    isSecondLevel,\n    children,\n    isOpen,\n    isLoadingContent,\n    currentFolderEditorName,\n    folderNameInputRef,\n    setFolderEditorName,\n    abortEditFolder,\n    onShareFolder,\n    onDragStart,\n    onDragEnd,\n    showMenu,\n    hideMenu,\n  } = props;\n  const theme = useTheme();\n\n  let folderIcon = folder.isOpen ? 'folder-open' : 'folder-outline';\n  let folderAccesory = folder.isInfoOpen\n    ? 'checkbox-outline'\n    : 'pencil-outline';\n  let isDefaultFolder = false;\n  if (defaultFolders.includes(folder.id)) {\n    isDefaultFolder = true;\n    folderAccesory = 'star';\n  }\n  if (folder.mnemonic) {\n    folderIcon = folder.isOpen\n      ? 'folder-network'\n      : 'folder-network-outline';\n  }\n  if (folder.isInfoOpen) {\n    folderIcon = 'arrow-left-circle';\n  }\n  const touchableStyle = {\n    pointerEvents: 'auto',\n    padding: isOpen ? 5 : 0,\n    paddingTop: 15,\n  } as any;\n  const dispatch = useAppDispatch();\n  const shareAllMedia = () => {\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n    recursiveShare(folder);\n    dispatch(setToastText('All folder files have been shared'));\n  };\n\n  const isMenuOpen = useAppSelector(\n    state => state.ui.folderItemMenuOpen === folder.id,\n  );\n  useMemo(() => {\n    if (folder.isInfoOpen) setFolderEditorName(folder.title);\n  }, [folder.isInfoOpen]);\n\n  const remove = async () => {\n    if (onRemoveFolder) await onRemoveFolder(folder);\n  };\n  const edit = async () => {\n    if (isDefaultFolder) return;\n\n    if (onFolderActionPress)\n      await onFolderActionPress(folder, isSecondLevel);\n    setTimeout(() => {\n      folderNameInputRef?.current?.focus();\n    }, 300);\n  };\n\n  const leftItem = (props: any) =>\n    isLoadingContent ? (\n      <ActivityIndicator style={{paddingLeft: 20}} />\n    ) : (\n      <TouchableOpacity\n        onPress={() => onFolderPress(folder, isSecondLevel)}\n        style={touchableStyle}>\n        <List.Icon {...props} icon={folderIcon} />\n      </TouchableOpacity>\n    );\n\n  const rightItem = (props: any) => (\n    <View style={{flexDirection: 'row', flexWrap: 'wrap'}}>\n      {!isDefaultFolder && !folder.isInfoOpen ? (\n        <>\n          <TouchableOpacity\n            onPressIn={onDragStart}\n            onPressOut={onDragEnd}\n            style={{pointerEvents: 'auto'}}>\n            <IconButton icon={'dots-grid'} />\n          </TouchableOpacity>\n          <Menu\n            anchor={\n              <IconButton icon={'dots-vertical'} onPress={showMenu} />\n            }\n            style={{marginTop: 50}}\n            visible={isMenuOpen}\n            onDismiss={hideMenu}>\n            <>\n              <Menu.Item\n                leadingIcon={'heart'}\n                title={'Share All Media'}\n                onPress={() => shareAllMedia()}\n              />\n              <Divider />\n            </>\n            <>\n              <Menu.Item\n                leadingIcon={'share'}\n                title={'Share Folder'}\n                onPress={() => onShareFolder && onShareFolder(folder)}\n              />\n              <Divider />\n            </>\n            <>\n              <Menu.Item\n                leadingIcon={folderAccesory}\n                title={'Edit Folder'}\n                onPress={edit}\n              />\n              <Divider />\n            </>\n            <>\n              <Menu.Item\n                leadingIcon={'delete'}\n                title={'Delete Folder'}\n                onPress={remove}\n              />\n            </>\n          </Menu>\n        </>\n      ) : null}\n    </View>\n  );\n  return (\n    <>\n      <Divider />\n      {!children ? (\n        <List.Item\n          style={{width}}\n          title={({ellipsizeMode, color: titleColor, fontSize}) => (\n            <>\n              {folder.isInfoOpen ? (\n                <TextInput\n                  mode=\"outlined\"\n                  style={\n                    {\n                      height: 50,\n                      width: '100%',\n                      pointerEvents: 'auto',\n                    } as any\n                  }\n                  placeholder={'new folder name'}\n                  theme={theme}\n                  value={currentFolderEditorName}\n                  ref={folderNameInputRef}\n                  onChangeText={setFolderEditorName}\n                  left={\n                    <TextInput.Icon\n                      onPress={() =>\n                        abortEditFolder && abortEditFolder(folder)\n                      }\n                      icon={folderIcon}\n                    />\n                  }\n                  right={\n                    <TextInput.Icon\n                      onPress={edit}\n                      icon={folderAccesory}\n                    />\n                  }\n                  autoFocus\n                  id=\"test-input\"\n                />\n              ) : (\n                <TouchableOpacity\n                  style={{pointerEvents: 'auto'} as any}\n                  onPress={() =>\n                    onFolderPress(folder, isSecondLevel)\n                  }>\n                  <View style={{}}>\n                    <Text\n                      ellipsizeMode={ellipsizeMode}\n                      style={{color: titleColor, fontSize}}\n                      numberOfLines={2}>\n                      {folder.title}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              )}\n            </>\n          )}\n          left={!folder.isInfoOpen ? leftItem : () => <></>}\n          right={rightItem}\n          theme={theme}\n        />\n      ) : (\n        <List.Accordion\n          expanded={isOpen}\n          title={folder.title}\n          style={{width}}\n          left={leftItem}\n          right={() => <></>}\n          onPress={() => onFolderPress(folder, isSecondLevel)}\n          theme={theme}>\n          {children}\n        </List.Accordion>\n      )}\n      {/* <Divider/> */}\n    </>\n  );\n};\n\nexport default FolderItem;\n","import React from 'react';\n\nimport {Media} from '../../../types';\n\nimport {View, StyleSheet, ImageBackground} from 'react-native';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\n\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nexport interface MediaItemProps {\n  i: Media;\n  itemLoading: string | boolean;\n  enableMove: boolean;\n  width: number;\n  onMediaPress: (media: Media) => void;\n  onRemoveMediaPress: (media: Media) => void;\n  onDownloadMediaPress: (mediaId: string) => void;\n  onCopyLinkPress: (mediaId: string) => void;\n  onEditMediaPress: (mediaId: string) => void;\n  isOpen: boolean;\n  isPlaying: boolean;\n  onDragEnd: () => void;\n  onDragStart: () => void;\n  showMenu: () => void;\n  hideMenu: () => void;\n  onRemoveFile: () => void;\n  onExportFile: () => void;\n}\nimport {\n  List,\n  ActivityIndicator,\n  useTheme,\n  Divider,\n  Text,\n  Chip,\n  IconButton,\n  Menu,\n} from 'react-native-paper';\n\nimport {useQuery} from 'react-query';\n\nimport {getFileStats, shareFileToWT} from '../../../api/media';\nimport {setSharing} from '../../../store/slices/fs';\nimport {useAuction} from '../../../hooks/useAuction';\nimport {findBy} from '../../../api';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n  customTitle: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  additionalPadding: {\n    paddingTop: 8,\n  },\n  image: {\n    width: '100%',\n    height: 'auto',\n    opacity: 0.6,\n    position: 'absolute',\n    resizeMode: 'cover',\n    zIndex: -1,\n    flex: 1,\n  },\n});\n\nconst MediaItem = (props: MediaItemProps) => {\n  const {\n    i,\n    itemLoading,\n    width,\n    onMediaPress,\n    onRemoveMediaPress,\n    onDownloadMediaPress,\n    onCopyLinkPress,\n    onEditMediaPress,\n    isPlaying,\n    onDragEnd,\n    onDragStart,\n    showMenu,\n    hideMenu,\n    onRemoveFile,\n    onExportFile,\n  } = props;\n  const {onSellPress} = useAuction();\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  // const width = \"100%\"\n  const thisItemIsLoading = i.id === itemLoading;\n\n  const onActionPress = () => onEditMediaPress(i.id);\n  const onCellPress = () => onMediaPress(i);\n  const onRemove = async () => onRemoveMediaPress(i);\n  const onCopyLink = async () => onCopyLinkPress(i.id);\n  const onSell = async () => onSellPress(i.id, i.folderId);\n  const isDownloading = useAppSelector(\n    state => state.fs.downloadingProgress[i.id],\n  );\n  const isMenuOpen = useAppSelector(\n    state => state.ui.folderItemMenuOpen === i.id,\n  );\n  const isSharing = useAppSelector(state => state.fs.sharing[i.id]);\n  const isDownloadedQuery = useQuery(\n    ['isDownloaded', i.id, i.isDownloaded],\n    async () => {\n      try {\n        // let file = undefined\n        const file = await getFileStats(i);\n        // console.info('hasfile', file);\n        if (file) {\n          const onep = (i.size as number) / 100;\n          const percent = parseFloat(file.size / onep).toFixed(2);\n          return percent;\n        } else {\n          return false;\n        }\n      } catch (err) {\n        return false;\n      }\n    },\n    {\n      refetchOnMount: false,\n      refetchOnReconnect: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n    },\n  );\n  const isDownloaded = isDownloadedQuery?.data;\n  const onDownloadToggle = async () =>\n    isDownloaded ? null : onDownloadMediaPress(i.id);\n  const imageSource = {uri: i.thumbnail, cache: 'force-cache'};\n  let iconName = isPlaying\n    ? 'stop-circle-outline'\n    : 'play-circle-outline';\n\n  let offlineTitle = isDownloaded\n    ? 'Remove From Device'\n    : 'Download To Device';\n\n  let offlineIconName =\n    isDownloadedQuery.isFetched && isDownloaded\n      ? 'floppy'\n      : 'cloud-download-outline';\n\n  if (isDownloading) {\n    offlineTitle = 'Downloading / Cancel';\n  }\n  let extractorIcon = i.extractor.toLowerCase();\n  if (extractorIcon === 'wt') extractorIcon = 'folder-network';\n  if (extractorIcon === 'local') extractorIcon = 'file';\n  const height = 100;\n  const cloudIcon =\n    isDownloading !== undefined\n      ? () => <ActivityIndicator animating={true} theme={theme} />\n      : offlineIconName;\n  const controlIconPaddingTop = 30;\n  const touchableStyle = {\n    pointerEvents: 'auto',\n    paddingTop: controlIconPaddingTop,\n  } as any;\n  let downloadText = isDownloading\n    ? `Downloading ${parseInt((isDownloading * 100).toString(), 10)}%`\n    : 'Download';\n\n  if (isDownloaded) downloadText = `Downloaded ${isDownloaded}%`;\n  return (\n    <View style={{width, height}}>\n      <List.Item\n        style={{height, zIndex: 2, position: 'absolute', width}}\n        left={props => (\n          <TouchableOpacity\n            onPress={onCellPress}\n            style={touchableStyle}>\n            <List.Icon\n              {...props}\n              icon={\n                thisItemIsLoading\n                  ? () => (\n                      <ActivityIndicator\n                        animating={true}\n                        theme={theme}\n                      />\n                    )\n                  : iconName\n              }\n            />\n          </TouchableOpacity>\n        )}\n        right={props => (\n          <>\n            <TouchableOpacity\n              onPressIn={onDragStart}\n              onPressOut={onDragEnd}\n              style={{pointerEvents: 'auto'}}>\n              <IconButton icon={'dots-grid'} />\n            </TouchableOpacity>\n            <Menu\n              anchor={\n                <IconButton\n                  icon={'dots-vertical'}\n                  onPress={showMenu}\n                />\n              }\n              style={{marginTop: 50}}\n              visible={isMenuOpen}\n              onDismiss={hideMenu}>\n              {isDownloaded && (\n                <>\n                  <Menu.Item\n                    leadingIcon={'share'}\n                    title={'Export File'}\n                    onPress={onExportFile}\n                  />\n                  <Divider />\n                </>\n              )}\n              {isDownloaded && (\n                <>\n                  <Menu.Item\n                    leadingIcon={'file'}\n                    title={'Delete File'}\n                    onPress={onRemoveFile}\n                  />\n                  <Divider />\n                </>\n              )}\n              <Menu.Item\n                leadingIcon={'currency-usd'}\n                title={'Sell Item'}\n                onPress={onSell}\n              />\n              <Menu.Item\n                leadingIcon={'delete'}\n                title={'Delete Item'}\n                onPress={onRemove}\n              />\n            </Menu>\n          </>\n        )}\n        title={({ellipsizeMode, color: titleColor, fontSize}) => (\n          <View\n            style={[\n              styles.container,\n              styles.row,\n              styles.customTitle,\n            ]}>\n            <Text\n              ellipsizeMode={ellipsizeMode}\n              style={{color: titleColor, fontSize}}\n              numberOfLines={2}>\n              {i.title}\n            </Text>\n          </View>\n        )}\n        // onPress={()=>{}}\n        description={({\n          ellipsizeMode,\n          color: descriptionColor,\n          fontSize,\n        }) => (\n          <View style={[styles.container, styles.column]}>\n            <Text\n              numberOfLines={1}\n              ellipsizeMode={ellipsizeMode}\n              style={{color: descriptionColor, fontSize}}>\n              {i.description}\n            </Text>\n            <View\n              style={[\n                styles.container,\n                styles.row,\n                styles.additionalPadding,\n                {gap: 10},\n              ]}>\n              <Chip\n                icon={'file'}\n                onPress={onDownloadToggle}\n                style={{height: 30}}\n                textStyle={{fontSize}}>\n                {downloadText}\n              </Chip>\n              {isDownloaded && (\n                <Chip\n                  icon={isSharing ? 'heart' : 'network'}\n                  onPress={() => {\n                    if (isSharing) return;\n                    dispatch(\n                      setSharing({itemId: i.id, status: true}),\n                    );\n                    shareFileToWT(i.id, i.folderId);\n                  }}\n                  style={{height: 30}}\n                  textStyle={{fontSize}}>\n                  {isSharing ? 'Sharing' : 'Share'}\n                </Chip>\n              )}\n            </View>\n          </View>\n        )}\n      />\n      {i.thumbnail ? (\n        <ImageBackground\n          source={{uri: i.thumbnail, cache: 'force-cache'}}\n          resizeMethod=\"resize\"\n          resizeMode=\"cover\"\n          style={{\n            ...styles.image,\n            height,\n            width,\n          }}\n          imageStyle={{...styles.image, height, width}}\n        />\n      ) : null}\n      <Divider />\n    </View>\n  );\n};\n\nexport default MediaItem;\n","import React from 'react';\nimport {Divider, IconButton, List} from 'react-native-paper';\nimport {FolderType, Media} from '../../../types';\nimport {\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\nimport {ProjectsStackedParams} from '../../../types/nav';\nfunction ProjectItem({\n  item,\n  folderType,\n  onRemoveFolder,\n}: {\n  item: Media;\n  folderType: FolderType;\n  onRemoveFolder: (item: {id: string}) => void;\n}) {\n  const navigation =\n    useNavigation<NavigationProp<ProjectsStackedParams>>();\n  const projectType =\n    folderType === FolderType.encoder\n      ? 'EncoderProject'\n      : 'EditorProject';\n  const projectIcon =\n    folderType === FolderType.editor ? 'film' : 'matrix';\n  return (\n    <>\n      <Divider />\n      <List.Item\n        style={{padding: 19}}\n        title={item.title}\n        onPress={() => {\n          navigation.navigate({\n            name: projectType,\n            params: {\n              projectId: item.id,\n              mnemonic: item.mnemonic,\n              parentFolderId: item.folderId,\n            },\n          });\n        }}\n        left={() => <List.Icon icon={projectIcon} />}\n        right={() => (\n          <IconButton\n            icon={'delete'}\n            onPress={() => onRemoveFolder(item)}\n          />\n        )}\n      />\n    </>\n  );\n}\n\nexport default ProjectItem;\n","import {TextStyle, ViewStyle} from 'react-native';\n\nexport const styles = {\n  container: {\n    flex: 1,\n    paddingTop: 0,\n    marginTop: 0,\n  } as ViewStyle,\n  item: {\n    paddingTop: 15,\n    paddingLeft: 5,\n    fontSize: 12,\n    height: 160,\n    color: 'black',\n    width: 80,\n  } as ViewStyle,\n  tinyLogo: {\n    marginTop: 2,\n    width: 22,\n    height: 22,\n  } as ViewStyle,\n  scroll: {\n    height: 65,\n    display: 'flex',\n    position: 'relative',\n    backgroundColor: 'black',\n    width: '100%',\n    marginTop: 0,\n  } as ViewStyle,\n  icon: {\n    paddingLeft: 10,\n  } as TextStyle,\n};\n","import React, {memo} from 'react';\n\nimport {View} from 'react-native';\n\nimport MediaLibrary from './medialibrary';\n\nconst HomeView = () => {\n  return (\n    <View\n      style={{\n        height: '100%',\n        width: '100%',\n      }}>\n      <View>\n        <MediaLibrary />\n      </View>\n    </View>\n  );\n};\n\nexport default memo(HomeView);\n","import React, {useRef} from 'react';\nimport {\n  Image,\n  ImageBackground,\n  Platform,\n  View,\n  useWindowDimensions,\n} from 'react-native';\nimport {\n  ActivityIndicator,\n  Banner,\n  Divider,\n  IconButton,\n  useTheme,\n} from 'react-native-paper';\nimport {useMutation, useQuery} from 'react-query';\nimport {Media} from '../../types';\nimport {getFileOpfs, getVideoWT} from '../../api/media';\nimport {useIsFocused} from '@react-navigation/native';\nimport {\n  MediaActionType,\n  loaded,\n  togglePause,\n} from '../../store/slices/media';\nimport {useAppDispatch} from '../../store/hooks';\nimport {ResizeMode, Video} from 'expo-av';\nimport {getById} from '../../api';\nimport {useMediaPlayer} from '../../hooks/useMediaPlayer';\nimport {UnifiedStackParam} from '../../types/nav';\n\nexport default function MediaBanner({\n  height,\n  mediaPlayer,\n}: {\n  mediaPlayer: ReturnType<typeof useMediaPlayer>;\n  height: number;\n}) {\n  const theme = useTheme();\n  const dispatch = useAppDispatch();\n  const {currentMediaId, currentMedia} = mediaPlayer;\n  const fileType = currentMedia?.fileType;\n  const isImage = fileType?.search('image') > -1;\n  const {width} = useWindowDimensions();\n  const focused = useIsFocused();\n  const mediaRes = currentMedia as Media;\n  const updateMediaTime = useMutation(\n    async (currentTime: number) => {\n      if (mediaRes) {\n        // mediaRes.currentPosition = currentTime;\n        // await writeItem(mediaRes)\n        // await mediaData.refetch()\n      }\n    },\n    {retry: false},\n  );\n\n  const mediaQuery = useQuery(\n    'wtMedia_' + currentMediaId,\n    async () => {\n      let file: string | undefined;\n\n      try {\n        file = await getFileOpfs(mediaRes);\n      } catch (err) {}\n\n      if (!file) file = (await getVideoWT(mediaRes)).stream;\n\n      dispatch(\n        loaded({\n          actionType: MediaActionType.loaded,\n          mediaId: currentMediaId!,\n        }),\n      );\n      return file;\n    },\n    {\n      enabled: focused ? true : false,\n      refetchOnMount: true,\n    },\n  );\n  const mediaLoading = mediaQuery.isLoading;\n  const mediaSrc = mediaQuery?.data;\n  const currentPosition = mediaRes?.currentPosition || 0;\n  const isMobile = width < 700;\n  const bannerHeight = isMobile ? height / 4 : height / 2;\n  const videoRef = useRef();\n  return (\n    <>\n      <Banner\n        visible={currentMediaId ? true : false}\n        theme={theme}\n        style={{\n          backgroundColor: 'black',\n          padding: 0,\n          margin: 0,\n          width,\n          height: bannerHeight,\n          position: 'static',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n        }}\n        contentStyle={{\n          width: isMobile ? width : '100%',\n          height: bannerHeight,\n          padding: 0,\n          margin: 0,\n        }}>\n        <View\n          style={{\n            width: isMobile ? width : '100%',\n            height: bannerHeight - 40,\n            position: 'relative',\n          }}>\n          {isImage && currentMediaId && mediaSrc && (\n            <ImageBackground\n              style={{height: bannerHeight}}\n              resizeMethod=\"scale\"\n              imageStyle={{resizeMode: 'contain'}}\n              // imageStyle={{width: '100%', height: '100%'}}\n              source={{uri: mediaSrc}}\n            />\n          )}\n          {!isImage && currentMediaId && mediaSrc ? (\n            Platform.OS === 'web' ? (\n              <video\n                // autoPlay={!media.isMediaPaused ? true : false}\n                controls={true}\n                style={{\n                  width: '100%',\n                  height: '100%',\n                  objectFit: 'contain',\n                }}\n                onPlaying={e => {\n                  const {currentTime} = e.nativeEvent\n                    .target as any as {currentTime: number};\n                  updateMediaTime.mutateAsync(currentTime);\n                  dispatch(\n                    togglePause({\n                      pause: false,\n                      actionType: MediaActionType.pause,\n                    }),\n                  );\n                }}\n                onPause={e => {\n                  dispatch(\n                    togglePause({\n                      pause: true,\n                      actionType: MediaActionType.pause,\n                    }),\n                  );\n                }}\n                onEnded={p => {\n                  console.info('ended', p);\n                }}\n                onTimeUpdate={e => {\n                  const {currentTime} = e.nativeEvent\n                    .target as any as {currentTime: number};\n                  // console.info('time', currentTime)\n                  const minimumTimeDiff = 5;\n                  if (\n                    currentTime > minimumTimeDiff &&\n                    currentTime - currentPosition > minimumTimeDiff &&\n                    !updateMediaTime.isLoading\n                  ) {\n                    updateMediaTime.mutateAsync(currentTime);\n                  }\n                }}\n                onResize={() => {\n                  console.info('resize');\n                }}\n                onLoadedData={e => {\n                  if (!mediaPlayer.isMediaPaused)\n                    e.nativeEvent.target.play();\n                }}\n                ref={el => {\n                  // console.info(\"onmount\", el)\n                  if (\n                    el &&\n                    el.paused &&\n                    el.currentTime !== currentPosition\n                  ) {\n                    // el.currentTime = currentPosition\n                  }\n                }}\n                src={mediaSrc}>\n                <track\n                  label=\"language one\"\n                  kind=\"subtitles\"\n                  srcLang=\"en\"\n                  default\n                />\n              </video>\n            ) : (\n              <Video\n                source={{uri: mediaSrc}}\n                ref={videoRef}\n                shouldPlay={true}\n                style={{\n                  width: '100%',\n                  height: '100%',\n                  position: 'absolute',\n                  left: -10,\n                  top: 0,\n                  padding: 0,\n                  margin: 0,\n                }}\n                volume={1}\n                resizeMode={ResizeMode.CONTAIN}\n                useNativeControls={true}\n                onPlaybackStatusUpdate={async status => {\n                  if (status.isLoaded) {\n                    // console.info('is loaded');\n                    if (status.isBuffering && !status.isPlaying) {\n                      // console.info('is buffering and paused');\n                    }\n                  }\n                }}\n              />\n            )\n          ) : null}\n          {mediaLoading ? (\n            <ActivityIndicator\n              style={{position: 'relative', flexBasis: 'auto'}}\n              size={72}\n            />\n          ) : null}\n          <IconButton\n            style={{\n              position: 'absolute',\n              cursor: 'pointer',\n              right: Platform.select({native: 10, web: 0}),\n              top: Platform.select({native: -20, web: 0}),\n              pointerEvents: 'auto',\n              zIndex: 100000,\n            }}\n            icon={'close'}\n            mode=\"outlined\"\n            size={25}\n            onPress={() => mediaPlayer.onMediaPress('')}\n          />\n        </View>\n      </Banner>\n      <Divider />\n    </>\n  );\n}\n","import React, {memo} from 'react';\nimport {useMedia} from '../../hooks/useMedia';\nimport FolderLibrary from '../folder/folderlibrary';\nimport {\n  getFolderContent,\n  getFoldersByType,\n  writeItem,\n} from '../../api';\n\nconst MediaLibrary = () => {\n  const dataHook = useMedia(\n    getFoldersByType,\n    getFolderContent,\n    writeItem,\n  );\n\n  return <FolderLibrary dataHook={dataHook} />;\n};\n\nexport default memo(MediaLibrary);\n","import React from 'react';\n\nimport {createMaterialBottomTabNavigator} from 'react-native-paper/react-navigation';\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport {SafeAreaInsetsContext} from 'react-native-safe-area-context';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\nimport CustomNavigationBar from './nav/appnav';\n\nimport {createFileStack} from '../navigators/filestack';\nimport {Platform, useWindowDimensions} from 'react-native';\nimport DrawerItems from './nav/drawer';\nimport {createChatStack} from '../navigators/chatstack';\nimport {createSettings} from '../navigators/settings';\nimport {createEncoder} from '../navigators/encoder';\nimport {createEditor} from '../navigators/editor';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {setCurrentPage} from '../store/slices/ui';\nimport {useKeyboardDispatcher} from '../hooks/useKeyboardListener';\nimport {\n  ExtendedNavState,\n  StackRouteName,\n  UnifiedStackParam,\n  RootStackName,\n  RootStackRouteNames,\n} from '../types/nav';\n\nconst DrawerNav = createDrawerNavigator();\n\nconst Tab = createMaterialBottomTabNavigator();\n\nconst RootStack = createNativeStackNavigator();\n\nconst FileStack = createFileStack();\n\nconst ChatStackScreen = createChatStack();\n\nconst SettingsStack = createSettings();\n\nconst EncoderStack = createEncoder();\n\nconst EditorStack = createEditor();\n\nconst TabNav = () => {\n  const dim = useWindowDimensions();\n  const dispatch = useAppDispatch();\n  const isNavHidden = useAppSelector(\n    state => state.ui.isTabBarHidden,\n  );\n  useKeyboardDispatcher();\n  const screenStateListener = (navState: ExtendedNavState) => {\n    try {\n      const currentTab =\n        navState?.data?.state?.routes[\n          navState?.data.state?.index || 0\n        ] || {};\n      const currentNavPage =\n        currentTab?.state?.routes[currentTab?.state?.index || 0];\n      const parentName = currentTab.name as RootStackRouteNames;\n      const currentPage = currentNavPage?.name as StackRouteName;\n      const params = currentNavPage?.params as UnifiedStackParam;\n      dispatch(setCurrentPage({currentPage, params, parentName}));\n    } catch (err) {}\n  };\n  if (dim.width > 700 && Platform.OS === 'web') {\n    return (\n      <SafeAreaInsetsContext.Consumer>\n        {insets => {\n          const {left, right} = insets || {left: 0, right: 0};\n          const collapsedDrawerWidth = 80 + Math.max(left, right);\n          const nonCollasedWidth = 180;\n          const collapsed = true;\n          return (\n            <DrawerNav.Navigator\n              screenOptions={{\n                drawerStyle: {\n                  width: collapsed\n                    ? collapsedDrawerWidth\n                    : nonCollasedWidth,\n                },\n                drawerPosition: 'left',\n                drawerType: 'permanent',\n              }}\n              detachInactiveScreens={true}\n              defaultStatus=\"open\"\n              screenListeners={{\n                state: state =>\n                  screenStateListener(state as ExtendedNavState),\n              }}\n              drawerContent={props => <DrawerItems {...props} />}>\n              <DrawerNav.Screen\n                name=\"FilesTab\"\n                component={FileStack}\n                options={{\n                  headerShown: false,\n                  drawerIcon: ({color, size}) => (\n                    <Ionicons\n                      name=\"folder-outline\"\n                      color={color}\n                      size={24}\n                    />\n                  ),\n                  title: 'Files',\n                }}\n              />\n              <DrawerNav.Screen\n                name=\"ContactsTab\"\n                component={ChatStackScreen}\n                options={{\n                  headerShown: false,\n                  title: 'Contacts',\n                }}\n              />\n              <DrawerNav.Screen\n                name=\"EncoderTab\"\n                component={EncoderStack}\n                options={{\n                  headerShown: false,\n                  title: 'Encoder',\n                }}\n              />\n              <DrawerNav.Screen\n                name=\"EditorTab\"\n                component={EditorStack}\n                options={{\n                  headerShown: false,\n                  title: 'Editor',\n                }}\n              />\n              <DrawerNav.Screen\n                name=\"SettingsTab\"\n                component={SettingsStack}\n                options={{\n                  headerShown: false,\n                  drawerIcon: ({color, size}) => (\n                    <Ionicons\n                      name=\"people-outline\"\n                      color={color}\n                      size={24}\n                    />\n                  ),\n                  title: 'Contacts',\n                }}\n              />\n            </DrawerNav.Navigator>\n          );\n        }}\n      </SafeAreaInsetsContext.Consumer>\n    );\n  }\n  return (\n    <Tab.Navigator\n      barStyle={{display: isNavHidden ? 'none' : 'flex'}}\n      screenListeners={{\n        state: state =>\n          screenStateListener(state as ExtendedNavState),\n      }}>\n      <Tab.Screen\n        name=\"FilesTab\"\n        options={{\n          tabBarLabel: 'Files',\n          tabBarIcon: 'folder',\n        }}\n        component={FileStack}\n      />\n      <Tab.Screen\n        name=\"ContactsTab\"\n        component={ChatStackScreen}\n        options={{\n          tabBarLabel: 'Contacts',\n          tabBarIcon: 'contacts',\n        }}\n      />\n      <Tab.Screen\n        name=\"EditorTab\"\n        component={EditorStack}\n        options={{\n          tabBarLabel: 'Editor',\n          tabBarIcon: 'scissors-cutting',\n        }}\n      />\n      <Tab.Screen\n        name=\"SettingsTab\"\n        options={{\n          tabBarLabel: 'Settings',\n          tabBarIcon: 'cog',\n        }}\n        component={SettingsStack}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst RootStackNav = () => (\n  <RootStack.Navigator\n    screenOptions={{\n      header: props => <CustomNavigationBar {...props} />,\n    }}>\n    <RootStack.Screen\n      name={RootStackName}\n      component={TabNav}\n      options={{\n        orientation: 'portrait',\n        freezeOnBlur: true,\n      }}\n    />\n  </RootStack.Navigator>\n);\n\nexport default RootStackNav;\n","import React, {useContext, useState, useMemo, useEffect} from 'react';\nimport {\n  Appbar,\n  useTheme,\n  TextInput,\n  Searchbar,\n} from 'react-native-paper';\n\nimport {Platform} from 'react-native';\nimport {useWindowDimensions} from 'react-native';\nimport {useAppSelector} from '../../store/hooks';\nimport uuid from 'react-native-uuid';\n\nimport {UserDataState} from '../../ctx';\nimport {\n  CurrentUserData,\n  Folder,\n  FolderType,\n  Media,\n} from '../../types';\nimport {useMutation, useQuery, useQueryClient} from 'react-query';\nimport {\n  encoderProjectTypes,\n  extractMedia,\n  getUserData,\n  writeItem,\n} from '../../api';\n\nimport {FolderParams} from '../../types/nav';\n\nimport {NativeStackHeaderProps} from '@react-navigation/native-stack';\nimport {BannerContainer} from './components/bannercontainer';\nimport {Actions} from './components/actions';\n\nimport {\n  Audio,\n  InterruptionModeAndroid,\n  InterruptionModeIOS,\n} from 'expo-av';\nimport {\n  NavInput,\n  addFolderPlaceholder,\n  chatPlacehoder,\n  defaulPlaceHolderText,\n  searchContactsPlaceholderText,\n} from './components/navinput';\nexport default function CustomNavigationBar({\n  options,\n}: NativeStackHeaderProps) {\n  useEffect(() => {\n    const enableAudio = async () => {\n      await Audio.setAudioModeAsync({\n        allowsRecordingIOS: false,\n        interruptionModeIOS: InterruptionModeIOS.DuckOthers,\n        playsInSilentModeIOS: true,\n        staysActiveInBackground: true,\n        interruptionModeAndroid: InterruptionModeAndroid.DuckOthers,\n        shouldDuckAndroid: false,\n      });\n    };\n    enableAudio();\n  }, []);\n  const theme = useTheme();\n  const queryClient = useQueryClient();\n  const [searchValue, setSearch] = useState('');\n  const {width, height} = useWindowDimensions();\n  const mode = useAppSelector(state => state.ui.editingMode);\n  const userState = useContext(UserDataState) as CurrentUserData;\n  const userData = useQuery('UserData', () => getUserData());\n  const userId = userData?.data?.id;\n  const [isLocked, setLocked] = useState(false);\n  const writeItemMutation = useMutation(\n    (item: Media | Folder) => writeItem(item),\n    {retry: true},\n  );\n\n  const params = useAppSelector(state => state.ui.params);\n  const folderType = useAppSelector(state => state.ui.folderType);\n\n  const folderId =\n    (params as FolderParams)?.folderId || params?.parentFolderId;\n\n  const newFolderType = 'new_' + folderType;\n  const isEncoderProject = encoderProjectTypes.includes(folderType);\n\n  const extractLink = async () => {\n    if (\n      searchValue.search('http') === -1 &&\n      searchValue.search('magnet') === -1\n    )\n      return;\n    console.info(searchValue);\n\n    if (isLocked === true) return;\n    setLocked(true);\n    setTimeout(() => {\n      setLocked(false);\n    }, 20000);\n\n    let exData = await extractMedia(searchValue);\n    if (exData && exData.id) {\n      const {id} = exData;\n\n      try {\n        const nd: Media & {isFolder?: boolean} = {\n          ...exData,\n          originalId: id,\n          id: uuid.v4().toString(),\n          folderId: folderId || newFolderType,\n          userId: userState.user.id,\n          date: new Date().valueOf(),\n          isMediaNew: true,\n          isFolder:\n            exData.files && exData.files.length ? true : undefined,\n          files:\n            exData.files &&\n            exData.files.map((i: {name: string; length: number}) => ({\n              name: i.name,\n              size: i.length,\n            })),\n        };\n        await writeItemMutation.mutateAsync(nd);\n        await queryClient.refetchQueries({\n          queryKey: 'folderContent_' + nd.folderId,\n        });\n        setSearch('');\n      } catch (err) {\n        console.error('extractLink', err);\n      }\n    }\n    setLocked(false);\n  };\n\n  useMemo(() => {\n    extractLink();\n  }, [searchValue]);\n  const showFullSearchBar = width > 700 && Platform.OS !== 'macos';\n\n  let placeholderText = addFolderPlaceholder;\n\n  if (mode === 'party') {\n    placeholderText = chatPlacehoder;\n  }\n  if (mode === 'search') {\n    placeholderText = 'type to search';\n  }\n  return (\n    <>\n      <Appbar.Header theme={theme}>\n        <NavInput\n          options={options}\n          folderId={folderId as string}\n          isLocked={isLocked}\n          searchValue={searchValue}\n          setSearch={setSearch}\n        />\n        <Actions\n          showFullSearchBar={showFullSearchBar}\n          isEncoderProject={isEncoderProject}\n          userId={userId}\n        />\n        {showFullSearchBar ? (\n          <Searchbar\n            loading={isLocked}\n            mode=\"bar\"\n            placeholder={\n              folderType === FolderType.contact\n                ? searchContactsPlaceholderText\n                : defaulPlaceHolderText\n            }\n            theme={theme}\n            style={{height: 40, width: 300}}\n            inputStyle={{paddingBottom: 14}}\n            value={searchValue}\n            onChangeText={setSearch}\n          />\n        ) : null}\n      </Appbar.Header>\n      <BannerContainer\n        userId={userId}\n        isEncoderProject={isEncoderProject}\n        height={height}\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport {StyleSheet, useWindowDimensions} from 'react-native';\nimport {\n  Dialog,\n  Portal,\n  Button,\n  Text,\n  useTheme,\n} from 'react-native-paper';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {setAppDialogParams} from '../../../store/slices/ui';\n\nexport const ChooseDialog = () => {\n  const dispatch = useAppDispatch();\n  const left = useAppSelector(\n    state => state.ui.appDialogOnSelectLeftt,\n  );\n  const right = useAppSelector(\n    state => state.ui.appDialogOnSelectRight,\n  );\n  const theme = useTheme();\n  const {width, height} = useWindowDimensions();\n  const visible = useAppSelector(state => state.ui.appDialogVisible);\n  const Body = useAppSelector(state => state.ui.appDialogBody);\n  const title = useAppSelector(state => state.ui.appDialogTitle);\n  const icon = useAppSelector(state => state.ui.appDialogIcon);\n  const close = () =>\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: false,\n        appDialogBody: undefined,\n        appDialogControls: undefined,\n        appDialogIcon: undefined,\n        appDialogTitle: undefined,\n        appDialogOnSelectLeftt: undefined,\n        appDialogOnSelectRight: undefined,\n      }),\n    );\n  return (\n    <Portal>\n      <Dialog\n        theme={theme}\n        style={{\n          width: '80%',\n          height: 'auto',\n          maxWidth: 400,\n          maxHeight: 400,\n          left: (width - 400) / 2,\n        }}\n        onDismiss={close}\n        visible={visible}>\n        <Dialog.Icon icon={icon as string} />\n        <Dialog.Title style={styles.title}>{title}</Dialog.Title>\n        {Body && (\n          <Dialog.Content>\n            {typeof Body === 'string' ? (\n              <Text style={{width: '100%', padding: 20}}>{Body}</Text>\n            ) : (\n              <Body />\n            )}\n          </Dialog.Content>\n        )}\n        <Dialog.Actions>\n          <Button\n            onPress={left || close}\n            mode=\"outlined\"\n            style={{padding: 5}}>\n            Disagree\n          </Button>\n          <Button\n            onPress={right}\n            mode=\"outlined\"\n            style={{padding: 5}}>\n            Agree\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  title: {\n    textAlign: 'center',\n  },\n});\n","import React, {useState} from 'react';\nimport {\n  GestureHandlerRootView,\n  ScrollView,\n} from 'react-native-gesture-handler';\nimport {\n  Portal,\n  Modal,\n  Card,\n  Avatar,\n  Button,\n  List,\n  Divider,\n  Banner,\n  ProgressBar,\n  useTheme,\n} from 'react-native-paper';\nimport {useMutation, useQueryClient} from 'react-query';\nimport {domain, cdndomain} from '../../../db/defaults';\nimport {\n  EditorLayer,\n  EditorProject,\n  EncoderProject,\n  FFMpegOutputType,\n  FFMpegPreset,\n  Folder,\n  FolderType,\n  Media,\n} from '../../../types';\n\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {\n  setFileUploadProgress,\n  setMediaModalVisible,\n  setUploadInProgress,\n} from '../../../store/slices/upload';\nimport {shareFileToWT, writeFileOpfs} from '../../../api/media';\nimport {useNavigation} from '@react-navigation/native';\nimport {niceBytes} from '../../../api/util';\nimport uuid from 'react-native-uuid';\nimport {getById, writeItem} from '../../../api';\nimport {Platform} from 'react-native';\nimport {AVPlaybackStatusSuccess, Video} from 'expo-av';\nconst preset = FFMpegPreset.superfast;\nconst output = FFMpegOutputType.mp4;\nconst compressionLevel = 20;\n\nexport default function FileUpload(props: any) {\n  //FILE UPLOAD\n  const {\n    userId,\n    folderType,\n    hideMedialModal,\n    folderId,\n    routeName,\n    projectId,\n    isEncoderProject,\n  } = props;\n  const theme = useTheme();\n  const queryClient = useQueryClient();\n  const uploadState = useAppSelector(state => state.upload);\n  const dispatch = useAppDispatch();\n  const nav = useNavigation();\n  const mediaModalVisible = uploadState.modalVisible;\n  const pickerFile = uploadState.file;\n  const pickerFileMeta = uploadState.media;\n  const uploadToCloud = uploadState.uploadToCloud;\n  const shareToWt = uploadState.shareToWT;\n  const encryptionEnabled = uploadState.encryption;\n  const fileUploadProgress = uploadState.fileUploadProgress;\n  const isUploadInProgress = uploadState.isUploadInProgress;\n  const uuidFilename = `${pickerFileMeta?.id}-${pickerFileMeta?.filename}`;\n  const authToken =\n    Platform.OS === 'web' ? localStorage?.getItem('authToken') : '';\n  const writeItemMutation = useMutation(\n    (item: Media | Folder | EditorProject | EditorLayer) =>\n      writeItem(item),\n  );\n  const [videoMeta, setVideoMeta] = useState({});\n\n  const uploadFileMutation = useMutation(\n    () => ({}),\n    // axios.request({\n    //   url: `${domain}api/v1/backend/files/${uuidFilename}?authToken=${authToken}`,\n    //   method: 'PUT',\n    //   data: pickerFile,\n    //   withCredentials: true,\n    //   onUploadProgress: progress =>\n    //     dispatch(setFileUploadProgress(progress)),\n    // }),\n    {\n      retry(attempts) {\n        if (attempts < 4) return true;\n      },\n    },\n  );\n\n  const writeItemToLocalStoreMutation = useMutation(meta =>\n    writeFileOpfs({...meta, ...videoMeta}, pickerFile!),\n  );\n\n  const writingItem =\n    writeItemMutation.isLoading || uploadFileMutation.isLoading;\n  let peerShared = shareToWt;\n  if (pickerFileMeta?.extractor === 'wt') {\n    peerShared = true;\n  }\n  const confirmFile = async () => {\n    try {\n      const meta: Media = JSON.parse(JSON.stringify(pickerFileMeta!));\n      const {width, height} = videoMeta;\n      const end = videoMeta.duration - 1;\n      console.info('routeName', routeName, 'folderType', folderType);\n      meta.isDownloaded = true;\n      let folder: Folder = await getById(meta.folderId);\n      if (!folder) {\n        folder = (await getById(meta.folderId, folderId)) as Folder;\n      }\n      console.info('project folder', folder, folderId, meta.folderId);\n      if (folder?.mnemonic) {\n        peerShared = true;\n      }\n      if (\n        folderType === FolderType.editor &&\n        routeName !== 'EditorProject'\n      ) {\n        console.info('creating a new editor project from file');\n        const editor: EditorProject = {\n          id: uuid.v4().toString(),\n          title: meta.title,\n          userId,\n          isEditorProject: true,\n          folderType,\n          folderId,\n          orderId: 1,\n          isFolder: false,\n          editor: {\n            length: 1 * 60 * 1000,\n            width,\n            height,\n            preset,\n            output,\n            lastUpdated: new Date().valueOf(),\n            compressionLevel,\n            code: [],\n          },\n          mnemonic: folder?.mnemonic,\n          date: new Date().valueOf(),\n        };\n        await writeItemMutation.mutateAsync(editor);\n        const layer: EditorLayer = {\n          id: uuid.v4().toString(),\n          title: 'Layer 1',\n          folderId: editor.id,\n          userId,\n          isEditorLayer: true,\n          orderId: 1,\n          folderType,\n          isFolder: false,\n          date: new Date().valueOf(),\n          editor: {\n            videoDisabled: false,\n            muted: false,\n          },\n          mnemonic: folder?.mnemonic,\n        };\n        await writeItemMutation.mutateAsync(layer);\n        const comment_layer: EditorLayer = {\n          id: editor.id + '_comments',\n          title: 'Comments',\n          folderId: editor.id,\n          userId,\n          isEditorLayer: true,\n          orderId: 1,\n          folderType,\n          isFolder: false,\n          date: new Date().valueOf(),\n          editor: {\n            videoDisabled: true,\n            muted: true,\n            isCommentLayer: true,\n          },\n          mnemonic: folder?.mnemonic,\n        };\n        await writeItemMutation.mutateAsync(comment_layer);\n        meta.folderId = layer.id;\n        meta.isMediaNew = isEncoderProject;\n        meta.isEncoderProject = isEncoderProject;\n        meta.encoding = {\n          end,\n          width,\n          height,\n          preset,\n          output,\n          compressionLevel,\n        };\n      }\n      if (folderType === FolderType.editor) {\n        (meta as EncoderProject).encoding = {\n          end,\n          width,\n          height,\n          preset,\n          output,\n          compressionLevel,\n        };\n      }\n      console.info('foldertype saveitem', folderType, meta);\n      await writeItemToLocalStoreMutation.mutateAsync(meta);\n      await writeItemMutation.mutateAsync({...meta, ...videoMeta});\n      try {\n        if (peerShared) shareFileToWT(meta.id, meta.folderId);\n      } catch (err) {\n        console.error('share to wt error', err);\n      }\n      if (uploadToCloud) {\n        dispatch(setUploadInProgress(true));\n        dispatch(setMediaModalVisible(false));\n        await uploadFileMutation.mutateAsync();\n        const fileUrl = cdndomain + userId + '/' + uuidFilename;\n        meta.webpage_url = fileUrl;\n        meta.hasCloud = true;\n        meta.extractor = 'cloud';\n        meta.url = fileUrl;\n        console.info('after upload File Mutation', meta);\n      }\n      await queryClient.refetchQueries({\n        queryKey: ['folderContent_' + meta.folderId],\n      });\n      await queryClient.refetchQueries({\n        queryKey: ['folderContent_' + folderId],\n      });\n      await queryClient.refetchQueries({\n        queryKey: ['projectLayers', projectId],\n      });\n      await queryClient.refetchQueries({\n        queryKey: ['encodedMedia', projectId],\n      });\n      dispatch(setUploadInProgress(false));\n      dispatch(setMediaModalVisible(false));\n      if (!folderId) {\n        nav.navigate('Folder', {folderId: meta.folderId});\n      }\n    } catch (err) {\n      console.error('media upload modal error', err);\n    }\n  };\n  return (\n    <>\n      <Banner theme={theme} visible={isUploadInProgress}>\n        <Card.Title\n          titleStyle={{fontSize: 20}}\n          title=\"Uploading file\"\n          subtitle={pickerFileMeta?.filename}\n          left={props => <Avatar.Icon {...props} icon=\"file\" />}\n        />\n        <Divider />\n        <ProgressBar\n          animatedValue={fileUploadProgress?.progress || 0}\n        />\n      </Banner>\n      <Portal>\n        <Modal\n          visible={mediaModalVisible}\n          onDismiss={hideMedialModal}\n          theme={theme}\n          style={{padding: 20}}>\n          <Card>\n            <Card.Title\n              titleStyle={{fontSize: 20}}\n              title=\"Adding a new file\"\n              subtitle=\"Please confirm\"\n              left={props => <Avatar.Icon {...props} icon=\"file\" />}\n            />\n            <Divider />\n            <GestureHandlerRootView style={{height: '70%'}}>\n              <ScrollView>\n                <Card.Content>\n                  <List.Section>\n                    <List.Item\n                      title={'Filename'}\n                      description={pickerFileMeta?.filename}\n                    />\n                    <List.Item\n                      title={'Format'}\n                      description={pickerFileMeta?.type}\n                    />\n                    <List.Item\n                      title={'Duration'}\n                      description={videoMeta?.duration}\n                    />\n                    <List.Item\n                      title={'Width'}\n                      description={videoMeta?.width}\n                    />\n                    <List.Item\n                      title={'Height'}\n                      description={videoMeta?.height}\n                    />\n                    <List.Item\n                      title={'Size'}\n                      description={niceBytes(\n                        pickerFileMeta?.size?.toString(),\n                      )}\n                    />\n                    <List.Item\n                      title={'FolderId'}\n                      description={pickerFileMeta?.folderId}\n                    />\n                    {pickerFile && Platform.OS === 'web' ? (\n                      <video\n                        style={{display: 'none'}}\n                        src={URL.createObjectURL(pickerFile)}\n                        onLoadedMetadata={e => {\n                          // console.info(\"metaLoaded\", e.nativeEvent.target, e.nativeEvent.target.videoWidth, e.nativeEvent.target.videoHeight, e.nativeEvent.target.duration)\n                          // window.video1 = e.nativeEvent.target\n                          setVideoMeta({\n                            width: e.nativeEvent.target.videoWidth,\n                            height: e.nativeEvent.target.videoHeight,\n                            duration: e.nativeEvent.target.duration,\n                          });\n                        }}\n                      />\n                    ) : (\n                      <Video\n                        // style={{display: 'none'}}\n                        source={{uri: pickerFileMeta?.url as string}}\n                        onLoad={e => {\n                          e;\n                        }}\n                        onReadyForDisplay={e => {\n                          console.info('metaLoaded', e);\n                          // window.video1 = e.nativeEvent.target\n                          setVideoMeta({\n                            width: e.naturalSize.width,\n                            height: e.naturalSize.height,\n                            duration:\n                              (e.status as AVPlaybackStatusSuccess)\n                                .durationMillis / 1000,\n                          });\n                        }}\n                      />\n                    )}\n                    {/* <List.Item \n                  onPress={()=>dispatch(setShareToWt(!shareToWt))}\n                  title={\"Share To WebTorrent\"} \n                  right={(props)=><Switch theme={theme} value={peerShared || shareToWt}/>\n                } /> */}\n                    {/* <List.Item\n                  onPress={()=>dispatch(setUploadToCloud(!uploadToCloud))} \n                  title={\"Upload To Cloud\"} \n                  right={(props)=><Switch theme={theme} value={uploadToCloud}/>} \n                /> */}\n                    {/* <List.Item\n                  onPress={()=>dispatch(setEncrypt(!encryptionEnabled))} \n                  title={\"Encrypt\"} \n                  right={(props)=><Switch theme={theme} value={encryptionEnabled}/>} \n                /> */}\n                  </List.Section>\n                </Card.Content>\n              </ScrollView>\n            </GestureHandlerRootView>\n            <Divider />\n            <Card.Actions style={{height: 'auto'}}>\n              <Button\n                disabled={writingItem}\n                onPress={hideMedialModal}>\n                Cancel\n              </Button>\n              <Button\n                loading={writeItemMutation.isLoading}\n                onPress={confirmFile}>\n                Confirm\n              </Button>\n            </Card.Actions>\n          </Card>\n        </Modal>\n      </Portal>\n    </>\n  );\n}\n","import {Portal, Snackbar, useTheme} from 'react-native-paper';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {setToastText} from '../../../store/slices/ui';\nimport React from 'react';\nexport function ToastDialog() {\n  const text = useAppSelector(state => state.ui.toastText);\n  const icon = useAppSelector(state => state.ui.toastIcon);\n  const dispatch = useAppDispatch();\n  const theme = useTheme();\n  const visible = text !== undefined;\n  return (\n    <Portal>\n      <Snackbar\n        theme={theme}\n        visible={visible}\n        icon={icon}\n        onDismiss={() => dispatch(setToastText(undefined))}>\n        {text}\n      </Snackbar>\n    </Portal>\n  );\n}\n","import uuid from 'react-native-uuid';\nimport React from 'react';\nimport {Appbar, Tooltip} from 'react-native-paper';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {startOnboarding} from '../../../store/slices/upload';\nimport {FolderType} from '../../../types';\nimport {FolderParams, ProjectParams} from '../../../types/nav';\nimport EditorToolBar from '../../editor/editortoolbar';\nimport {DocumentPicker, writeItem} from '../../../api';\nimport {setEditingMode} from '../../../store/slices/ui';\n\nexport function Actions({\n  showFullSearchBar,\n  isEncoderProject,\n  userId,\n}: {\n  showFullSearchBar: boolean;\n  isEncoderProject: boolean;\n  userId?: string;\n}) {\n  const dispatch = useAppDispatch();\n  const params = useAppSelector(state => state.ui.params);\n  const folderType = useAppSelector(state => state.ui.folderType);\n  const routeName = useAppSelector(state => state.ui.currentPage);\n  const projectId = (params as ProjectParams)?.projectId;\n  const folderId = (params as FolderParams)?.folderId;\n  const isEditing =\n    useAppSelector(state => state.ui.editingMode) !== undefined;\n  console.info('isEditing', isEditing);\n  let addFileEnabled = [\n    FolderType.media,\n    FolderType.editor,\n    FolderType.encoder,\n  ].includes(folderType);\n\n  let addFolderEnabled = folderType !== FolderType.settings;\n  const showScaleControls = routeName === 'EditorProject';\n\n  const newFolderType = 'new_' + folderType;\n\n  if (showScaleControls) {\n    addFileEnabled = false;\n    addFolderEnabled = false;\n  }\n\n  const onClickFile = async () => {\n    const pickerResult = await DocumentPicker.pickSingle({\n      presentationStyle: 'fullScreen',\n    });\n    console.info('pickerResult', pickerResult);\n    // setMediaModalVisible(true)\n    if (!pickerResult) return;\n    const url = pickerResult.uri;\n    let fId = folderId || newFolderType;\n    console.info('isEncoderProject', isEncoderProject);\n    const nd: Media = {\n      id: uuid.v4().toString(),\n      url,\n      title: pickerResult.name,\n      originalId: pickerResult.name,\n      filename: pickerResult.name,\n      fileType: pickerResult.type,\n      folderId: fId,\n      userId,\n      date: new Date().valueOf(),\n      isMediaNew: !isEncoderProject,\n      isEncoderProject,\n      type: pickerResult.file.type,\n      size: pickerResult.file.size,\n      extractor: 'local',\n    };\n    dispatch(startOnboarding({file: pickerResult.file, media: nd}));\n    // setPickerFile(pickerResult.file)\n    // setPickerFileMeta(nd)\n  };\n\n  const onClickFolder = () => {\n    dispatch(setEditingMode('folder'));\n  };\n\n  const onClickSearch = () => {\n    dispatch(setEditingMode('search'));\n  };\n\n  const onClickContact = () => {\n    dispatch(setEditingMode('party'));\n  };\n\n  const onClickDatabase = () => {\n    dispatch(setEditingMode('database'));\n  };\n\n  return (\n    <>\n      {routeName === 'Databases' ? (\n        <Appbar.Action\n          icon={'database-plus'}\n          onPress={onClickDatabase}\n        />\n      ) : null}\n      {addFolderEnabled && !isEditing ? (\n        <Tooltip title=\"Create a folder\">\n          <Appbar.Action\n            icon=\"folder-plus\"\n            onPress={() => onClickFolder()}\n          />\n        </Tooltip>\n      ) : null}\n      {showScaleControls && (\n        <EditorToolBar projectId={projectId} routeParams={params} />\n      )}\n      {!isEditing && folderType === 'contact' ? (\n        <Tooltip title=\"Create a chat\">\n          <Appbar.Action\n            icon=\"chat-plus\"\n            onPress={() => onClickContact()}\n          />\n        </Tooltip>\n      ) : null}\n      {addFileEnabled && !isEditing ? (\n        <Tooltip title=\"Select a file\">\n          <Appbar.Action\n            icon=\"file-plus\"\n            onPress={() => onClickFile()}\n          />\n        </Tooltip>\n      ) : null}\n      {!showFullSearchBar && !isEditing ? (\n        <Appbar.Action\n          icon=\"magnify\"\n          onPress={() => onClickSearch()}\n        />\n      ) : null}\n    </>\n  );\n}\n","import React from 'react';\nimport {Appbar} from 'react-native-paper';\nimport {\n  FolderParams,\n  ProjectParams,\n  RootScreens,\n  RootStackName,\n  RootStackRouteNames,\n  StackRouteName,\n  UnifiedStackParams,\n} from '../../../types/nav';\nimport {useAppSelector} from '../../../store/hooks';\nimport {Folder} from '../../../types';\nimport {\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\n\nexport function BackButton({folder}: {folder: Folder | undefined}) {\n  const navigation =\n    useNavigation<NavigationProp<UnifiedStackParams>>();\n  const params = useAppSelector(state => state.ui.params);\n  const parentName = useAppSelector(state => state.ui.parentName);\n  const folderId = (params as FolderParams)?.folderId;\n  const parentFolderId =\n    (params as ProjectParams)?.parentFolderId ||\n    (folder?.folderId as string);\n  const backPress = () => {\n    const folderParams: FolderParams = {\n      folderId: parentFolderId,\n      mnemonic:\n        parentFolderId?.search('new_') === -1\n          ? folder?.mnemonic\n          : undefined,\n      title: folder?.title as string,\n    };\n    console.info({folderParams});\n    if (folderParams.folderId && folderParams.folderId !== folderId) {\n      navigation.navigate(RootStackName, {\n        screen: parentName,\n        params: {\n          screen: 'Folder',\n          params: folderParams,\n        },\n      });\n      return;\n    }\n\n    navigation.navigate(RootStackName, {\n      screen: parentName,\n      params: {\n        screen: RootScreens[parentName],\n        params: undefined,\n      },\n    });\n  };\n  return <Appbar.Action icon=\"chevron-left\" onPress={backPress} />;\n}\n","import React from 'react';\nimport {useMediaPlayer} from '../../../hooks/useMediaPlayer';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\nimport {cancel} from '../../../store/slices/upload';\nimport {ProjectParams, FolderParams} from '../../../types/nav';\nimport EditorBanner from '../../editor/editorbanner';\nimport EncoderBanner from '../../encoder/encoderbanner';\nimport FileUpload from '../banners/fileupload';\nimport MediaBanner from '../../media/mediabanner';\nimport {View} from 'react-native';\nimport {ChooseDialog} from '../banners/choosedialog';\nimport {ToastDialog} from '../banners/toastdialog';\n\nexport function BannerContainer({\n  userId,\n  isEncoderProject,\n  height,\n}: {\n  userId: string | undefined;\n  isEncoderProject: boolean;\n  height: number;\n}) {\n  const params = useAppSelector(state => state.ui.params);\n  const folderType = useAppSelector(state => state.ui.folderType);\n  const routeName = useAppSelector(state => state.ui.currentPage);\n  const projectId = (params as ProjectParams)?.projectId;\n  const folderId = (params as FolderParams)?.folderId;\n  const parentFolderId = (params as ProjectParams)?.parentFolderId;\n  const dispatch = useAppDispatch();\n\n  const hideMedialModal = () => {\n    dispatch(cancel());\n  };\n\n  const mediaPlayer = useMediaPlayer();\n\n  return (\n    <View style={{padding: 0, margin: 0}}>\n      <FileUpload\n        projectId={projectId}\n        userId={userId}\n        folderType={folderType}\n        hideMedialModal={hideMedialModal}\n        folderId={folderId || parentFolderId}\n        routeName={routeName}\n        isEncoderProject={isEncoderProject}\n      />\n      {mediaPlayer.currentMediaId ? (\n        <MediaBanner height={height} mediaPlayer={mediaPlayer} />\n      ) : null}\n      {routeName === 'EncoderProject' ? (\n        <EncoderBanner\n          projectId={projectId}\n          height={height}\n          folderId={folderId || parentFolderId}\n        />\n      ) : null}\n      {routeName === 'EditorProject' ? (\n        <EditorBanner\n          projectId={projectId}\n          height={height}\n          routeParams={params}\n          folderId={folderId || parentFolderId}\n        />\n      ) : null}\n      <ChooseDialog />\n      <ToastDialog />\n    </View>\n  );\n}\n","import React, {useContext, useState, useMemo, useEffect} from 'react';\nimport {\n  Appbar,\n  useTheme,\n  TextInput,\n  Searchbar,\n  useAppThe,\n} from 'react-native-paper';\n\nimport {getHeaderTitle} from '@react-navigation/elements';\nimport {View} from 'react-native';\nimport {useAppDispatch, useAppSelector} from '../../../store/hooks';\n\nimport {\n  ChatParams,\n  FolderParams,\n  UnifiedStackParams,\n} from '../../../types/nav';\n\nimport uuid from 'react-native-uuid';\n\nimport {BackButton} from './backbutton';\nimport {setEditingMode} from '../../../store/slices/ui';\nimport {NativeStackNavigationOptions} from '@react-navigation/native-stack';\nimport {\n  createNewParty,\n  getById,\n  getUserData,\n  writeItem,\n} from '../../../api';\nimport {\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\nimport {useMutation, useQuery, useQueryClient} from 'react-query';\nimport {Folder, Media} from '../../../types';\nexport const defaulPlaceHolderText = 'type to search your collection';\nexport const addFolderPlaceholder = 'Type name of the folder';\nexport const searchContactsPlaceholderText =\n  'type to search your contacts';\nexport const chatPlacehoder = 'Type name of the new chat';\n\nexport function NavInput({\n  options,\n  folderId,\n  isLocked,\n  searchValue,\n  setSearch,\n}: {\n  options: NativeStackNavigationOptions;\n  folderId: string;\n  isLocked: boolean;\n  searchValue: string;\n  setSearch: (s: string) => void;\n}) {\n  const queryClient = useQueryClient();\n  const navigation =\n    useNavigation<NavigationProp<UnifiedStackParams>>();\n  const params = useAppSelector(state => state.ui.params);\n  const folderType = useAppSelector(state => state.ui.folderType);\n  const dispatch = useAppDispatch();\n  const isEditing = useAppSelector(state => state.ui.isEditing);\n  const mode = useAppSelector(state => state.ui.editingMode);\n  const [textValue, setText] = useState('');\n  const routeName: string = useAppSelector(\n    state => state.ui.currentPage,\n  );\n  const userData = useQuery('UserData', () => getUserData());\n  const userId = userData?.data?.id as string;\n  const theme = useTheme();\n  const writeItemMutation = useMutation(\n    (item: Media | Folder) => writeItem(item),\n    {retry: true},\n  );\n  const folderDataQuery = useQuery(\n    'folderData_' + folderId,\n    async () => await getById(folderId as string),\n    {retry: true, enabled: folderId ? true : false},\n  );\n  const folder = folderDataQuery.data;\n  const back = useAppSelector(state => state.ui.isBackEnabled);\n  const newFolderType = 'new_' + folderType;\n  const title =\n    (params as ChatParams)?.name ||\n    (params as FolderParams)?.title ||\n    getHeaderTitle(options, routeName!);\n  let placeholderText = addFolderPlaceholder;\n\n  if (mode === 'party') {\n    placeholderText = chatPlacehoder;\n  }\n  if (mode === 'search') {\n    placeholderText = 'type to search';\n  }\n\n  const onClickExtra = async () => {\n    console.info('mode', mode);\n    try {\n      switch (mode) {\n        case 'party':\n          console.info('createNewParty');\n          const partyId = userId + '_' + uuid.v4();\n          const party = await createNewParty({\n            id: partyId,\n            name: textValue,\n            partyId,\n            folderId: folderId || newFolderType,\n          });\n          navigation.navigate('Chat', {\n            chatId: partyId,\n            name: textValue,\n            mnemonic: party.mnemonic,\n            parentFolderId: folderId || newFolderType,\n          });\n          console.info('createNewParty done', party);\n          break;\n        case 'folder':\n          const newFolderId = 'folder_' + uuid.v4() + '_' + userId;\n          const nFolder: Folder = {\n            id: newFolderId,\n            title: textValue,\n            isFolder: true,\n            date: new Date().valueOf(),\n            userId,\n            folderType,\n            folderId,\n          };\n          await writeItemMutation.mutateAsync(nFolder);\n          break;\n\n        case 'search':\n          dispatch(setEditingMode(undefined));\n          break;\n      }\n    } catch (err) {\n      console.error('onClickExtra err', err);\n    }\n    if (folderId) {\n      await queryClient.refetchQueries({\n        queryKey: 'folderContent_' + folderId,\n      });\n    } else {\n      await queryClient.refetchQueries({\n        queryKey: 'folders_' + folderType,\n      });\n    }\n\n    dispatch(setEditingMode(undefined));\n    return true;\n  };\n  const showTextField = isEditing && mode !== 'database';\n  return (\n    <>\n      {!showTextField && back ? (\n        <BackButton folder={folder as Folder} />\n      ) : null}\n\n      {!showTextField ? (\n        <Appbar.Content\n          title={title}\n          theme={theme}\n          style={{paddingLeft: !back ? 15 : 0}}\n        />\n      ) : null}\n      {showTextField ? (\n        <View style={{width: '100%'}}>\n          <TextInput\n            placeholder={placeholderText}\n            onChangeText={query =>\n              mode === 'search' ? setSearch(query) : setText(query)\n            }\n            style={{\n              width: '100%',\n              textAlignVertical: 'bottom',\n              lineHeight: 30,\n              padding: 10,\n              height: 40,\n            }}\n            theme={theme}\n            value={mode === 'search' ? searchValue : textValue}\n            left={\n              <TextInput.Icon\n                style={{marginTop: 20}}\n                icon=\"arrow-left-circle\"\n                onPress={() => {\n                  dispatch(setEditingMode(undefined));\n                }}\n              />\n            }\n            autoFocus\n            maxLength={100}\n            right={\n              <TextInput.Icon\n                style={{marginTop: 20}}\n                onPress={onClickExtra}\n                icon=\"check-circle\"\n                loading={isLocked}\n              />\n            }\n          />\n        </View>\n      ) : null}\n    </>\n  );\n}\n","import * as React from 'react';\nimport {I18nManager, StyleSheet, View, Platform} from 'react-native';\n\nimport {\n  DrawerContentComponentProps,\n  DrawerContentScrollView,\n} from '@react-navigation/drawer';\nimport {Drawer, useTheme} from 'react-native-paper';\n\nconst DrawerCollapsedItemsData = [\n  {\n    label: 'Media',\n    focusedIcon: 'folder',\n    unfocusedIcon: 'folder-outline',\n    key: 0,\n    screen: 'FilesTab',\n  },\n  {\n    label: 'Chat',\n    focusedIcon: 'forum',\n    unfocusedIcon: 'forum-outline',\n    key: 1,\n    screen: 'ContactsTab',\n  },\n  {\n    label: 'Encode\\nCompress',\n    focusedIcon: 'state-machine',\n    unfocusedIcon: 'state-machine',\n    key: 2,\n    screen: 'EncoderTab',\n  },\n  {\n    label: 'Video\\nEditor',\n    focusedIcon: 'scissors-cutting',\n    unfocusedIcon: 'scissors-cutting',\n    key: 3,\n    screen: 'EditorTab',\n  },\n  {\n    label: 'Settings',\n    focusedIcon: 'cog',\n    unfocusedIcon: 'cog-outline',\n    key: 4,\n    screen: 'SettingsTab',\n  },\n];\n\nfunction DrawerItems(props: DrawerContentComponentProps) {\n  const nav = props.navigation;\n  const drawerItemIndex = props.state.index;\n  const theme = useTheme();\n  const isV3 = true;\n  const collapsed = true;\n\n  return (\n    <DrawerContentScrollView\n      alwaysBounceVertical={false}\n      style={[\n        styles.drawerContent,\n        {\n          backgroundColor: theme.colors.surface,\n        },\n      ]}\n      showsVerticalScrollIndicator={false}\n      showsHorizontalScrollIndicator={false}>\n      {isV3 && collapsed && (\n        <>\n          {DrawerCollapsedItemsData.map((props, index) => (\n            <Drawer.Section\n              style={styles.collapsedSection}\n              key={props.key}>\n              <Drawer.CollapsedItem\n                {...props}\n                key={props.key}\n                active={drawerItemIndex === index}\n                onPress={() => {\n                  nav.navigate(props.screen);\n                }}\n              />\n            </Drawer.Section>\n          ))}\n        </>\n      )}\n    </DrawerContentScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  drawerContent: {\n    flex: 1,\n  },\n  preference: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n  },\n  v3Preference: {\n    height: 56,\n    paddingHorizontal: 28,\n  },\n  badge: {\n    alignSelf: 'center',\n  },\n  collapsedSection: {\n    marginTop: 16,\n    fontSize: 12,\n  },\n  annotation: {\n    marginHorizontal: 24,\n    marginVertical: 6,\n  },\n});\n\nexport default DrawerItems;\n","import React, {useState} from 'react';\nimport {\n  ActivityIndicator,\n  Button,\n  Chip,\n  Dialog,\n  Divider,\n  IconButton,\n  List,\n  Text,\n  TextInput,\n} from 'react-native-paper';\nimport {useMutation, useQuery} from 'react-query';\nimport {View, Clipboard, Platform} from 'react-native';\nimport {\n  createDBConn,\n  dbMnemoCons,\n  evolu,\n  initDatabaseRecord,\n} from '../../api/db';\nimport {getDatabases} from '../../api/db/supervisor';\nimport {DatabaseItem} from '../../types';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {setEditingMode} from '../../store/slices/ui';\nimport {genMnemonic} from '../../api';\n\nexport function DatabaseItemComponent({\n  db,\n  totalLength,\n  showMnemonic,\n}: {\n  db: DatabaseItem;\n  totalLength: number;\n  showMnemonic: (i: DatabaseItem) => void;\n}) {\n  const currentMnemonic = evolu!.getOwner()?.mnemonic;\n  const isCurrent = db.mnemonic === currentMnemonic;\n  const mnemonic = db.mnemonic as string;\n  const loginMutation = useMutation(async () => {\n    try {\n      if (!dbMnemoCons[mnemonic]) {\n        await createDBConn(db.title, db.mnemonic, true);\n      }\n      await initDatabaseRecord(\n        'previous',\n        currentMnemonic,\n        dbMnemoCons[mnemonic],\n      );\n    } catch (err) {\n      console.error(err);\n    }\n    evolu.restoreOwner(db.mnemonic);\n  });\n  const logoutDatabase = (i: DatabaseItem) => {};\n  const loginDatabase = (i: DatabaseItem) => {\n    loginMutation.mutateAsync();\n  };\n  return (\n    <List.Item\n      key={db.id}\n      left={props => <List.Icon {...props} icon={'database'} />}\n      right={props => (\n        <>\n          {/* {totalLength > 1 && (\n              <Button\n                {...props}\n                icon={'logout'}\n                mode=\"outlined\"\n                onPress={() => logoutDatabase(db)}>\n                Logout\n              </Button>\n            )} */}\n          {!isCurrent && (\n            <Button\n              {...props}\n              icon={'archive-arrow-down'}\n              mode=\"outlined\"\n              onPress={() => loginDatabase(db)}>\n              Switch\n            </Button>\n          )}\n          <Button\n            {...props}\n            icon={'eye'}\n            mode=\"outlined\"\n            onPress={() => showMnemonic(db)}>\n            Show\n          </Button>\n        </>\n      )}\n      description={\n        <View style={{gap: 10, flexDirection: 'row'}}>\n          <Chip>{`${new Date(db.date).toDateString()}`}</Chip>\n          {isCurrent && (\n            <Chip style={{backgroundColor: 'green'}}>Current</Chip>\n          )}\n        </View>\n      }\n      title={`${db.title}`}\n    />\n  );\n}\n\nexport default function DatabasesScreen() {\n  const dbReq = useQuery('Databases', () => getDatabases(), {\n    refetchOnWindowFocus: false,\n  });\n  const isLoading = dbReq.isLoading;\n  const dbs = dbReq.data;\n  const [mnemonic, setShowMnemonic] = useState<string | undefined>(\n    undefined,\n  );\n  const [dbName, setDbName] = useState<string>('');\n  const [dbMnemonic, setDbMnemonic] = useState<string>('');\n  const showMnemonic = (i: DatabaseItem) =>\n    setShowMnemonic(i.mnemonic);\n\n  const createDBMutation = useMutation(\n    async () => {\n      console.info('createdb');\n      return await initDatabaseRecord(dbName, dbMnemonic);\n    },\n    {\n      onSuccess: () => {\n        dispatch(setEditingMode(undefined));\n        dbReq.refetch();\n      },\n    },\n  );\n  const showCreate = useAppSelector(\n    state => state.ui.editingMode === 'database',\n  );\n  const dispatch = useAppDispatch();\n  if (isLoading) return <ActivityIndicator size={72} />;\n  return (\n    <>\n      <List.Section>\n        {dbs?.map(db => (\n          <DatabaseItemComponent\n            db={db}\n            totalLength={dbs.length}\n            showMnemonic={showMnemonic}\n          />\n        ))}\n      </List.Section>\n      <Dialog\n        style={{maxWidth: 500}}\n        visible={mnemonic !== undefined}\n        onDismiss={() => setShowMnemonic(undefined)}>\n        <Dialog.Title>Mnemonic</Dialog.Title>\n        <Dialog.Content>\n          <Text>{mnemonic}</Text>\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button\n            icon={'clipboard'}\n            onPress={() => (\n              Clipboard.setString(mnemonic as string),\n              setShowMnemonic(undefined)\n            )}>\n            Copy\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n      <Dialog\n        visible={showCreate}\n        style={{maxWidth: 500}}\n        onDismiss={() => dispatch(setEditingMode(undefined))}>\n        <Dialog.Title>Create a new Database</Dialog.Title>\n        <Dialog.Content>\n          <TextInput\n            label={'Database Name'}\n            value={dbName}\n            onChangeText={setDbName}\n          />\n          <TextInput\n            label={'Database Mnemonic'}\n            value={dbMnemonic}\n            onChangeText={setDbMnemonic}\n          />\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button\n            key={'close'}\n            icon={'close'}\n            onPress={() => {\n              dispatch(setEditingMode(undefined));\n            }}>\n            Cancel\n          </Button>\n          <Button\n            key={'matrix'}\n            icon={'matrix'}\n            onPress={() => {\n              setDbMnemonic(genMnemonic());\n            }}>\n            Generate New Mnemonic\n          </Button>\n          <Button\n            key={'check'}\n            icon={'check'}\n            disabled={\n              dbName.length < 3 || dbMnemonic.split(' ').length !== 12\n            }\n            onPress={() => createDBMutation.mutateAsync()}\n            loading={createDBMutation.isLoading}>\n            Save\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </>\n  );\n}\n","import React from 'react';\nimport {ActivityIndicator, Divider, List} from 'react-native-paper';\nimport {useQuery} from 'react-query';\nimport {Device} from '../../types';\nimport {View} from 'react-native';\n\nexport default function DevicesScreen(props: any) {\n  const user = useQuery('UserData', () => props.getUserData(), {\n    refetchOnWindowFocus: false,\n  });\n  const userLoading = user.isLoading;\n  const userData = user.data;\n  if (userLoading) return <ActivityIndicator size={72} />;\n  return (\n    <List.Section>\n      {userData.devices.map((device: Device) => (\n        <View key={device.id}>\n          {device.id !== 'unknown' && device.manufacturer ? (\n            <>\n              <Divider />\n              <List.Item\n                key={device.id}\n                left={props => (\n                  <List.Icon\n                    {...props}\n                    icon={device.manufacturer.toLowerCase()}\n                  />\n                )}\n                right={props => (\n                  <List.Icon {...props} icon={'logout'} />\n                )}\n                description={`Created: ${new Date(\n                  device.createdAt,\n                ).toDateString()}`}\n                title={`${device.model.replace(\n                  new RegExp('-'),\n                  ' ',\n                )} on ${device.platform}`}\n              />\n              <Divider />\n            </>\n          ) : null}\n        </View>\n      ))}\n    </List.Section>\n  );\n}\n","import React, {useCallback, useState} from 'react';\n\nimport {\n  View,\n  Linking,\n  StyleSheet,\n  Pressable,\n  Platform,\n} from 'react-native';\n\nimport {UserInfo} from '../../types';\nimport {useMutation, useQuery} from 'react-query';\nimport {\n  ActivityIndicator,\n  List,\n  Avatar,\n  Divider,\n  Switch,\n  Text,\n  Chip,\n  useTheme,\n  TextInput,\n} from 'react-native-paper';\nimport {\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\nimport {getUserData, writeItem} from '../../api';\nimport {SettingsStackParams} from '../../types/nav';\nimport {useAppDispatch, useAppSelector} from '../../store/hooks';\nimport {setIsEditingProfile} from '../../store/slices/ui';\nimport {Style} from 'react-native-paper/lib/typescript/components/List/utils';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n  customTitle: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  additionalPadding: {\n    paddingTop: 8,\n  },\n  image: {\n    width: '100%',\n    height: 'auto',\n    opacity: 0.6,\n    position: 'absolute',\n    resizeMode: 'cover',\n    zIndex: -1,\n    flex: 1,\n  },\n});\nconst SettingsView = () => {\n  const userDataQuery = useQuery('UserData', () => getUserData());\n  const isLoadingUserData = userDataQuery.isLoading;\n  const nav = useNavigation<NavigationProp<SettingsStackParams>>();\n  const UserData = userDataQuery.data;\n  const dispatch = useAppDispatch();\n  const isEditing = useAppSelector(\n    state => state.ui.isEditingProfile,\n  );\n  const openDevices = () => nav.navigate('Devices');\n  const openDbs = () => nav.navigate('Databases');\n  const showDiskStatus = () => nav.navigate('Drive');\n  const [userName, setUserName] = useState('');\n  const [userDescription, setUserDescription] = useState('');\n  const onEditProfile = () => {\n    dispatch(setIsEditingProfile(true));\n    setUserName(UserData?.name as string);\n    setUserDescription(UserData?.description as string);\n  };\n  const writeProfileMutation = useMutation(async () => {\n    const nuser = UserData as UserInfo;\n    nuser.name = userName;\n    nuser.description = userDescription;\n    await writeItem(nuser);\n  });\n  const onSaveProfile = () => {\n    writeProfileMutation.mutateAsync().then(async () => {\n      await userDataQuery.refetch();\n      dispatch(setIsEditingProfile(false));\n    });\n  };\n  const editIcon = isEditing ? 'check-outline' : 'pencil-outline';\n  const AvatarSize = 72;\n  const controlIconPaddingTop = 20;\n  const touchableStyle = {\n    pointerEvents: 'auto',\n    paddingTop: controlIconPaddingTop,\n  } as any;\n  const theme = useTheme();\n  const leftItem = (props: {color: string; style: Style}) => {\n    // return UserData?.photo ? (\n    //   <Avatar.Image\n    //     style={props.style}\n    //     source={{\n    //       uri: UserData?.photo,\n    //       cache: 'force-cache',\n    //     }}\n    //     size={AvatarSize}\n    //   />\n    // ) : (\n    return (\n      <Avatar.Text\n        style={props.style}\n        label={\n          (UserData?.name &&\n            UserData?.name.split(' ').map(i => i[0])) ||\n          ''\n        }\n        size={AvatarSize}\n      />\n    );\n    // );\n  };\n  return (\n    <View\n      style={{\n        height: '100%',\n        width: '100%',\n      }}>\n      {isLoadingUserData ? (\n        <ActivityIndicator animating={true} size={72} />\n      ) : (\n        <>\n          <List.Section>\n            <List.Item\n              theme={theme}\n              title={isEditing ? null : UserData?.name}\n              style={{height: isEditing ? 160 : 'auto'}}\n              left={leftItem}\n              description={({\n                ellipsizeMode,\n                color: descriptionColor,\n                fontSize,\n              }) => (\n                <View style={[styles.container, styles.column]}>\n                  {!isEditing ? (\n                    <Text\n                      theme={theme}\n                      numberOfLines={1}\n                      ellipsizeMode={ellipsizeMode}\n                      style={{color: descriptionColor, fontSize}}>\n                      {UserData?.description}\n                    </Text>\n                  ) : (\n                    <>\n                      <TextInput\n                        theme={theme}\n                        mode=\"outlined\"\n                        onChangeText={setUserName}\n                        value={userName}\n                      />\n                      <TextInput\n                        theme={theme}\n                        mode=\"outlined\"\n                        onChangeText={setUserDescription}\n                        value={userDescription}\n                      />\n                    </>\n                  )}\n                  <View\n                    style={[\n                      styles.container,\n                      styles.row,\n                      styles.additionalPadding,\n                    ]}>\n                    {Platform.OS == 'macos' ? (\n                      <Chip\n                        icon=\"laptop\"\n                        onPress={() => {}}\n                        style={{height: 30}}>\n                        MacOS\n                      </Chip>\n                    ) : null}\n                    {Platform.OS === 'web' ? (\n                      <Chip\n                        icon=\"web\"\n                        onPress={() => {}}\n                        style={{height: 30}}>\n                        WEB\n                      </Chip>\n                    ) : null}\n                  </View>\n                </View>\n              )}\n              right={props => (\n                <Pressable\n                  style={touchableStyle}\n                  onPress={isEditing ? onSaveProfile : onEditProfile}>\n                  <List.Icon {...props} icon={editIcon} />\n                </Pressable>\n              )}\n            />\n            {/* <Divider />\n            <List.Item\n              onPress={showDiskStatus}\n              title={'Drive Status'}\n              left={props => (\n                <List.Icon icon=\"harddisk\" style={props.style} />\n              )}\n            /> */}\n            <Divider />\n            <List.Item\n              onPress={openDevices}\n              title={'Devices'}\n              left={props => (\n                <List.Icon icon=\"devices\" style={props.style} />\n              )}\n            />\n            <Divider />\n            <List.Item\n              onPress={openDbs}\n              title={'Databases'}\n              left={props => (\n                <List.Icon icon=\"database\" style={props.style} />\n              )}\n            />\n            <Divider />\n          </List.Section>\n        </>\n      )}\n    </View>\n  );\n};\n\nexport default SettingsView;\n","import {createContext} from 'react';\n\nimport {CurrentUserData} from '../types';\n\nimport {UserDataAction} from '../hooks/useUserData';\n\nexport const PeerCtx = createContext(null);\n\nexport const MediaCtx = createContext(null);\n\nexport const PartyCtx = createContext(null);\n\nexport const UserCtx = createContext<CurrentUserData | null>(null);\n\nexport const LocalCtx = createContext(null);\n\nexport const LoadingContext = createContext(false);\n\nexport const UserDataState = createContext<CurrentUserData | null>(\n  null,\n);\n\nexport const UserDataDispatch =\n  createContext<React.Dispatch<UserDataAction> | null>(null);\n","export * from './ctx';\n","import {FolderType} from '../types';\n\nexport const migrationKey = 'afanassii25662';\n// export const migrationKey = 'p2';\nexport const dbID = migrationKey;\nexport const userDocKey = 'userDoc';\nexport const domain = 'https://www.starpy.me/';\nexport const cdndomain = 'https://cdn.starpy.me/';\nexport const contactPrefix = 'contact_';\nexport const publicPartyPref = 'public_party_';\nexport const ffMpegWasmBaseUrl =\n  'https://unpkg.com/@ffmpeg/core@0.12.6/dist/umd';\nexport const appDirectory = 'starp';\n\nexport const encoderProjectTypes = [\n  FolderType.encoder,\n  FolderType.editor,\n];\nexport const googleDocumentKey = 'google_document';\nexport const defaultFolders = [\n  'demo',\n  'new',\n  'nearby',\n  publicPartyPref,\n  'tutorial',\n  'new_editor',\n  'new_media',\n  'new_chat',\n  'new_encoder',\n];\nexport const loaderURI =\n  'https://raw.githubusercontent.com/AboutReact/sampleresource/master/old_logo.png';\n\nexport const MEDIA = [\n  {\n    id: 'sintel',\n    title: 'Sintel',\n    thumbnail: 'https://starpy.me/webapp/sintel.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:08ada5a7a6183aae1e09d831df6748d566095a10&dn=Sintel&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fsintel.torrent',\n  },\n  {\n    id: 'tears',\n    title: 'Tears of Steel',\n    thumbnail: 'https://starpy.me/webapp/tearsOfSteel.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:209c8226b299b308beaf2b9cd3fb49212dbd13ec&dn=Tears+of+Steel&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Ftears-of-steel.torrent',\n  },\n  {\n    id: 'cosmoslaundromat',\n    title: 'Cosmos Laundromat',\n    thumbnail: 'https://starpy.me/webapp/cosmosLaundromat.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:c9e15763f722f23e98a29decdfae341b98d53056&dn=Cosmos+Laundromat&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fcosmos-laundromat.torrent',\n  },\n  {\n    id: 'bbb',\n    title: 'Big Buck Bunny',\n    thumbnail: 'https://starpy.me/webapp/bigBuckBunny.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:dd8255ecdc7ca55fb0bbf81323d87062db1f6d1c&dn=Big+Buck+Bunny&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fbig-buck-bunny.torrent',\n  },\n];\n\nconst FOLDERS = [\n  {\n    id: 'wired',\n    title: 'The WIRED CD - Rip. Sample. Mash. Share',\n    posterFileName: 'wiredCd.jpg',\n    torrentFileName: 'wiredCd.torrent',\n  },\n];\n\nexport const colors = {\n  textColor: 'white',\n  backgroundColor: 'black',\n  mediaItemTextColor: 'palegoldenrod',\n  mediaBackgroundColor: '#2b2b2b',\n  mediaBorderColor: 'black',\n  navTextColor: '#e1d76a',\n  navInactiveColor: '#585858',\n  folderColor: '#585858',\n  folderTextColor: 'black',\n  deleteBackgroundColor: 'red',\n  deleteTextColor: 'black',\n  navBorderColor: '#585858',\n  contactItemBackgroundColor: '#2b2b2b',\n  contactItemTitleColor: '#e1d76a',\n  contactItemOnlineColor: 'green',\n  theme: 'dark',\n  currentUserColor: '#585858',\n  remoteUserColor: 'cornflowerblue',\n};\n","import {migrationKey, MEDIA} from './defaults';\nexport * from './defaults';\n\nimport {faker} from '@faker-js/faker';\n\nimport uuid from 'react-native-uuid';\n\nimport {\n  UserInfo,\n  DocsGeneric,\n  DocsGenericArray,\n  FolderType,\n} from '../types';\n\nconst baseFolder = {\n  id: 'folder01',\n  title: 'My First Folder',\n  isFolder: true,\n};\n\nexport const createUser = async (): Promise<UserInfo> => {\n  const photo = faker.image.cats();\n  const name = faker.name.fullName();\n  const description = faker.animal.cat();\n  const year = '19' + new Date(faker.date.birthdate()).getFullYear();\n  const id = uuid.v4().toString();\n  const handle =\n    '@' + (name + description + year).replace(/[^A-Z0-9]+/gi, '');\n  return {\n    handle,\n    photo,\n    name,\n    description,\n    year,\n    id,\n    idHash: id,\n    userDoc: true,\n    version: migrationKey,\n    prevVersion: '',\n  };\n};\n\nexport const createNewUser = async (writeItem: any) => {\n  try {\n    const newUser = await createUser();\n    console.info('==== creating temp user ====', newUser);\n    await writeItem(newUser);\n    return newUser;\n  } catch (err) {\n    console.error('==== error on creating a new user ====', err);\n  }\n};\n\nexport const doInitialMigration = async (\n  writeItem: any,\n  getUserData: any,\n) => {\n  console.info('==== do migration ====');\n  try {\n    let user = await getUserData();\n    console.info('initialMigrationUserCheck', user);\n    if (user && user.id) {\n      return user;\n    }\n\n    if (!user || !user.id) {\n      user = await createNewUser(writeItem);\n    }\n\n    const userId = user.id;\n    await Promise.all([\n      writeItem({\n        ...baseFolder,\n        title: 'Demo',\n        id: 'demo',\n        folderType: FolderType.media,\n        date: new Date().toISOString(),\n        userId,\n      }),\n      ...MEDIA.map(async media =>\n        writeItem({\n          ...media,\n          isMediaNew: true,\n          folderId: 'demo',\n          date: new Date().valueOf(),\n        }),\n      ),\n    ]);\n  } catch (err) {\n    console.error('====migration err===', err);\n  }\n  console.info('==== after migration ====');\n};\n","import {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {\n  findBy,\n  genMnemonic,\n  getById,\n  getUserData,\n  sendChatMessage,\n  writeItem,\n} from '../api';\nimport {Auction, FolderType, Media} from '../types';\nimport {\n  setAppDialogParams,\n  setFolderMenuItemId,\n} from '../store/slices/ui';\nimport {useMutation} from 'react-query';\nimport uuid from 'react-native-uuid';\nimport {SellDialogBody} from '../components/auction/selldialogbody';\nimport {useCloseDialog} from './useCloseDialog';\nimport {\n  NavigationProp,\n  useNavigation,\n} from '@react-navigation/native';\nimport {FileStackParams} from '../types/nav';\nimport {\n  setAuctioName,\n  setAuctionBetStep,\n  setAuctionPrice,\n} from '../store/slices/auction';\n\nexport function useAuction() {\n  const dispatch = useAppDispatch();\n\n  const navigation = useNavigation<NavigationProp<FileStackParams>>();\n  const {closeDialog} = useCloseDialog();\n  const {\n    newAuctionName: title,\n    newAuctionPrice: minPrice,\n    newAuctionWallet,\n    newAuctionBetStep,\n  } = useAppSelector(state => state.auction);\n  const startAuctionMutation = useMutation(\n    async (media: Media) => {\n      const user = await getUserData();\n      const auctionId = uuid.v4().toString();\n      const nmedia: Media = JSON.parse(JSON.stringify(media));\n      delete nmedia.url;\n      delete nmedia.torrentFile;\n      // nmedia.folderId = auctionId;\n      nmedia.isAuctionMedia = true;\n      const newAuction: Auction = {\n        id: auctionId,\n        mediaId: media.id,\n        minPrice,\n        title,\n        isFolder: true,\n        date: new Date().valueOf(),\n        mnemonic: genMnemonic(),\n        wallet: newAuctionWallet,\n        userId: user.id,\n        minStep: newAuctionBetStep,\n        authorName: user.name,\n        isAuction: true,\n        folderType: FolderType.auction,\n        orderId: 1,\n        media: nmedia,\n      };\n      console.info('newAuction', newAuction)\n      if(newAuction.wallet === \"\")\n        throw \"invalid_wallet\"\n      await writeItem(newAuction);\n      await writeItem({...newAuction, folderId: auctionId});\n\n      await sendChatMessage(\n        auctionId,\n        user.name + ' has created auction ' + title,\n        newAuction.mnemonic,\n        {system: true},\n      );\n\n      return newAuction;\n    },\n    {\n      onSuccess: ({id, mnemonic, title}) =>\n        navigation.navigate('Auction', {\n          auctionId: id,\n          mnemonic,\n          title,\n        }),\n    },\n  );\n  const onSellPress = async (mediaId: string, folderId: string) => {\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n    dispatch(setAuctionPrice(0.1));\n    dispatch(setAuctionBetStep(0.1));\n    const media = (await getById(mediaId, folderId)) as Media;\n    dispatch(setAuctioName(media.filename));\n    const auctionItems = await findBy('mediaId', mediaId);\n    if (auctionItems.length) {\n      const {id, mnemonic, title} = auctionItems[0];\n      navigation.navigate('Auction', {\n        auctionId: id,\n        mnemonic,\n        title,\n      });\n      return;\n    }\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: true,\n        appDialogTitle: `Sell Media`,\n        appDialogIcon: 'currency-btc',\n        appDialogOnSelectRight: async () => {\n          startAuctionMutation.mutateAsync(media);\n          closeDialog();\n        },\n        appDialogOnSelectLeftt: undefined,\n        appDialogBody: SellDialogBody,\n        appDialogControls: undefined,\n      }),\n    );\n  };\n  return {\n    onSellPress,\n  };\n}\n","import {useMutation, useQuery} from 'react-query';\nimport {BidDialogBody} from '../components/auction/biddialogbody';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {\n  setBidAmount,\n  setDownloadProgress,\n  setWinnerPrice,\n} from '../store/slices/auction';\nimport {setAppDialogParams} from '../store/slices/ui';\nimport {\n  Auction,\n  AuctionBid,\n  AuctionBuyerKey,\n  FolderType,\n  Media,\n  TransactionPayload,\n  UserInfo,\n} from '../types';\nimport {useCloseDialog} from './useCloseDialog';\nimport {\n  downloadFile,\n  downloadFileById,\n  downloadFileByMedia,\n  exportFile,\n  findBy,\n  getById,\n  sendChatMessage,\n  shareFileToWT,\n  writeItem,\n} from '../api';\nimport {useFolder} from './useFolder';\nimport {useCallback, useMemo} from 'react';\nimport {PayDialogBody} from '../components/auction/paydialogbody';\nimport {sendMatic, maticId, provider} from '../api/metamask';\nimport uuid from 'react-native-uuid';\nimport {\n  decryptAesKey,\n  decryptPayload,\n  encryptAesKey,\n  encryptPayload,\n  generateAesKey,\n  generateNewKeyPair,\n} from '../api/ssl';\n// import {gener}\nimport {\n  Block,\n  ethers,\n  TransactionReceipt,\n  TransactionResponse,\n} from 'ethers';\nexport function useAuctionActions(\n  auctionId: string,\n  auction: Auction | undefined,\n  user: UserInfo,\n) {\n  // console.info('auction', auction)\n  const dispatch = useAppDispatch();\n  const {closeDialog} = useCloseDialog();\n  const {folderContent} = useFolder(\n    auctionId,\n    undefined,\n    undefined,\n    FolderType.auction,\n    undefined,\n    auction?.mnemonic,\n  );\n  const currentBidItem = useMemo(() => {\n    if (!folderContent || !folderContent?.length) return 0;\n    const bids = folderContent.filter(i => i.isBid);\n    const bid = bids?.length\n      ? bids.sort((a, b) => b.amount - a.amount)?.[0]\n      : undefined;\n    return bid;\n  }, [folderContent]);\n  const auctionTransaction = useQuery(\n    'auction_trx_' + auctionId,\n    async () => {\n      // const trxId = \"0xc99fe6bd012ce0d5795c0e2d1d965f953808f1025a89ca792919589a65b5aade\"\n      const trxId = auction.winnerPaymentTransactionId as string;\n      console.info('trxId', trxId);\n      const trx:\n        | (TransactionResponse & {\n            block?: Block | null;\n            receipt?: TransactionReceipt | null;\n          })\n        | null = await provider.getTransaction(trxId); //auction.winnerPaymentTransactionId as string)\n      // // const block = await providerCloud.getBlock(trx?.blockHash as string)\n      // trx.block = await trx?.getBlock()\n      if (trx) {\n        trx.block = await trx.getBlock();\n        trx.receipt = await provider.getTransactionReceipt(trxId);\n      }\n\n      console.info('trx', trx, auction);\n      return trx;\n    },\n    {\n      refetchInterval: 20000,\n      // d => {\n      // if (!d?.data && d?.receipt?.status !== 1)\n      // return 30000;\n      // return false;\n      // },\n      enabled: auction?.winnerPaymentTransactionId !== undefined,\n    },\n  );\n  const trxData = auctionTransaction.data;\n  const currentBid = currentBidItem?.amount;\n  const wallet = useAppSelector(state => state.auction.bidWallet);\n  const amount = useAppSelector(state => state.auction.bidAmount);\n  const createBidMutation = useMutation(async () => {\n    if (isNaN(amount)) {\n      console.error('invalid amount', amount);\n      return;\n    }\n    if (amount < auction.minStep + auction.minPrice) {\n      console.error(\n        'bid too low',\n        amount,\n        auction.minStep + auction.minPrice,\n      );\n      return;\n    }\n    if (currentBid && amount < currentBid) {\n      console.error('bid less than current bid', amount, currentBid);\n      return;\n    }\n    let name = user.name;\n    await sendChatMessage(\n      auctionId,\n      name + ' has created a bid of ' + amount,\n      auction.mnemonic,\n      {system: true, isBid: true, wallet, amount},\n    );\n  });\n  const closeAuctionMutation = useMutation(async () => {\n    let name = user.name;\n    let message = currentBid\n      ? name +\n        ' has closed the auction with the winning bid of ' +\n        currentBid\n      : name + ' has closed this auction without a winner';\n    await sendChatMessage(auctionId, message, auction.mnemonic, {\n      system: true,\n      isBid: true,\n      wallet,\n      amount,\n    });\n    auction.isClosed = true;\n    auction.winnerId = (currentBidItem as AuctionBid).userId;\n    auction.winnerPrice = currentBid;\n    await writeItem(auction);\n  });\n  useMemo(() => {\n    if (auction?.minStep) {\n      const {minPrice, minStep} = auction;\n      const nextBidValue =\n        currentBid !== undefined\n          ? parseFloat(minStep) + parseFloat(currentBid)\n          : parseFloat(minPrice) + parseFloat(minStep);\n      dispatch(\n        setBidAmount(parseFloat(parseFloat(nextBidValue).toFixed(2))),\n      );\n    }\n  }, [currentBid, auction]);\n  const createBid = () => {\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: true,\n        appDialogTitle: 'Create Bid',\n        appDialogIcon: 'currency-usd',\n        appDialogOnSelectRight: async () => {\n          await createBidMutation.mutateAsync();\n          closeDialog();\n        },\n        appDialogOnSelectLeftt: undefined,\n        appDialogBody: BidDialogBody,\n        appDialogControls: undefined,\n      }),\n    );\n  };\n\n  const closeAuction = () => {\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: true,\n        appDialogTitle: 'Close Auction',\n        appDialogIcon: 'currency-usd',\n        appDialogOnSelectRight: async () => {\n          await closeAuctionMutation.mutateAsync();\n          closeDialog();\n        },\n        appDialogOnSelectLeftt: undefined,\n        appDialogBody:\n          'The auction will be closed and the winner will be assigned',\n        appDialogControls: undefined,\n      }),\n    );\n  };\n  const payWallet = useAppSelector(state => state.auction.payWallet);\n  const pay = useMutation(async () => {\n    try {\n      const auctionKeyId = uuid.v4().toString();\n      const keyPair =\n        (await generateNewKeyPair()) as AuctionBuyerKey['keyPair'];\n      const auctionKey: AuctionBuyerKey = {\n        id: auctionKeyId,\n        auctionId,\n        keyPair,\n        folderId: 'auction_keys',\n        isKeyPair: true,\n      };\n      const {publicKey} = keyPair;\n      await writeItem(auctionKey);\n      console.info('auction.wallet', auction, auction.wallet)\n      const transactionId = await sendMatic(\n        payWallet,\n        auction.wallet,\n        auction.winnerPrice as number,\n        {publicKey},\n      );\n      auction.winnerPaymentTransactionId = transactionId;\n      await writeItem({\n        ...auction,\n        winnerPaymentTransactionId: transactionId,\n      });\n    } catch (err) {\n      console.error('pay err', err);\n    }\n  });\n  const payForAuction = () => {\n    dispatch(setWinnerPrice(auction.winnerPrice as number));\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: true,\n        appDialogTitle: 'Pay For Auction',\n        appDialogIcon: 'currency-usd',\n        appDialogOnSelectRight: async () => {\n          await pay.mutateAsync();\n          closeDialog();\n        },\n        appDialogOnSelectLeftt: undefined,\n        appDialogBody: PayDialogBody,\n        appDialogControls: undefined,\n      }),\n    );\n  };\n  const releaseMutation = useMutation(async () => {\n    const abiCoder = new ethers.AbiCoder();\n    const pubKeyData = abiCoder.decode(\n      ['string'],\n      trxData?.data as string,\n    );\n    console.info('pubKeyData', pubKeyData);\n    const payload = JSON.parse(pubKeyData[0]) as TransactionPayload;\n    const pubKey = JSON.parse(\n      payload.publicKey as string,\n    ) as JsonWebKey;\n    console.info('pubkey', pubKey);\n    const mediaOriginal = await getById(\n      auction.mediaId,\n      auction.media.folderId,\n    ) as Media\n    console.info('mediaOriginal', mediaOriginal);\n    if (!mediaOriginal) throw 'no_media_original_found';\n    const aesKey = await generateAesKey();\n    const encryptedKey = await encryptAesKey(aesKey.kp, pubKey);\n    const {encryptedPayload, iv} = await encryptPayload(\n      aesKey.key,\n      JSON.stringify(mediaOriginal),\n    );\n    auction.encryptedPayload = encryptedPayload;\n    auction.ivb = iv;\n    auction.encryptedKey = encryptedKey;\n    await writeItem(auction);\n    await shareFileToWT(mediaOriginal.id, mediaOriginal.folderId)\n    console.info('auction', auction);\n  });\n  const releaseDownload = () => {\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: true,\n        appDialogTitle: 'Release File',\n        appDialogIcon: 'cloud-upload',\n        appDialogOnSelectRight: async () => {\n          await releaseMutation.mutateAsync();\n          closeDialog();\n        },\n        appDialogOnSelectLeftt: undefined,\n        appDialogBody:\n          'The auction file will be released and the winner will be able to download',\n        appDialogControls: undefined,\n      }),\n    );\n  };\n  const downloadAuctionMedia = async () => {\n    const [auctionKey] = (await findBy(\n      'auctionId',\n      auctionId,\n    )) as AuctionBuyerKey[];\n    console.info('downloadAuctionMedia', auction, auctionKey);\n    const {encryptedKey, encryptedPayload, ivb} = auction;\n    const aesKey = await decryptAesKey(\n      encryptedKey as string,\n      auctionKey.keyPair.privateKey as JsonWebKey,\n    );\n    console.info('decrypted aes key', aesKey);\n    const payload = await decryptPayload(\n      aesKey,\n      encryptedPayload as string,\n      ivb as string,\n    );\n    const media = JSON.parse(payload);\n    console.info('decrypted payload', payload);\n    media.folderId = 'new_media';\n    await writeItem(media);\n    let didDownload = false;\n    await downloadFileByMedia(media, progress => {\n      console.info('download progress', progress);\n      dispatch(setDownloadProgress(progress));\n      if (progress === 1) {\n        console.info('finished');\n        if(!didDownload) {\n          didDownload = true;\n          exportFile(media);\n        }\n      }\n    });\n  };\n  return {\n    createBid,\n    closeAuction,\n    currentBid,\n    payForAuction,\n    downloadAuctionMedia,\n    releaseDownload,\n    auctionTransaction: auctionTransaction.data,\n  };\n}\n","import {useAppDispatch} from '../store/hooks';\nimport {setAppDialogParams} from '../store/slices/ui';\n\nexport function useCloseDialog() {\n  const dispatch = useAppDispatch();\n  const closeDialog = () =>\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: false,\n        appDialogBody: undefined,\n        appDialogControls: undefined,\n        appDialogIcon: undefined,\n        appDialogTitle: undefined,\n        appDialogOnSelectLeftt: undefined,\n        appDialogOnSelectRight: undefined,\n      }),\n    );\n  return {closeDialog};\n}\n","import {UseFoldersState, useFolders} from './useFolders';\n\nimport {Folder, FolderType, Contact} from '../types';\n\nexport interface UseContactsState extends UseFoldersState<Contact> {}\n\nexport const useContacts = (\n  getFoldersByType: (folderType: FolderType) => Promise<Folder[]>,\n  getFolderContent: (folderId: string) => Promise<Contact[]>,\n  writeItem: any,\n): UseContactsState => {\n  const getContactsFolders = async () => {\n    const contacts = await getFoldersByType(FolderType.contact);\n    return contacts;\n  };\n\n  const getContactsFolderContent = async (folderId: string) => {\n    const content = await getFolderContent(folderId);\n    return content;\n  };\n\n  const useFoldersState = useFolders<Contact>(\n    FolderType.contact,\n    getContactsFolders,\n    getContactsFolderContent,\n    writeItem,\n  );\n\n  return useFoldersState;\n};\n","import {useMutation, useQuery, useQueryClient} from 'react-query';\nimport {\n  CurrentUserData,\n  Folder,\n  Media,\n  EditorProject,\n  EditorLayer,\n} from '../types';\nimport {useMediaPlayer} from './useMediaPlayer';\nimport {useContext, useMemo, useRef, useState} from 'react';\nimport {UserDataDispatch, UserDataState} from '../ctx';\nimport {UserDataAction, UserDataActionType} from './useUserData';\nimport {TextInput} from 'react-native-gesture-handler';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {useRoute} from '@react-navigation/native';\nimport {Clipboard} from 'react-native';\nimport {\n  DocumentPicker,\n  domain,\n  genMnemonic,\n  getById as getByIdMain,\n  writeItem as writeItemMain,\n  getFolderContent as getFolderContentMain,\n  getUserData,\n  removeObject,\n} from '../api';\nimport {startOnboarding} from '../store/slices/upload';\nimport uuid from 'react-native-uuid';\nimport {\n  setAppDialogParams,\n  setFolderMenuItemId,\n  setToastText,\n} from '../store/slices/ui';\nimport {useCloseDialog} from './useCloseDialog';\n\nexport function useFolder(\n  folderId: string,\n  getFolderContentProxy:\n    | ((folderId: string) => Promise<[]>)\n    | undefined,\n  getByIdProxy: ((folderId: string) => Promise<any>) | undefined,\n  folderType: string,\n  writeItemProxy?: any,\n  mnemonic?: string,\n  title?: string,\n  userId?: string,\n) {\n  const {closeDialog} = useCloseDialog();\n  const getFolderContent =\n    getFolderContentProxy || getFolderContentMain;\n  const getById = getByIdProxy || getByIdMain;\n  const writeItem = writeItemProxy || writeItemMain;\n  const route = useRoute();\n  const mediaPlayer = useMediaPlayer(folderId);\n  const dispatch = useAppDispatch();\n  const queryKey = 'folderContent_' + folderId;\n  const queryClient = useQueryClient();\n  const folderContentQuery = useQuery(\n    queryKey,\n    async () => {\n      // console.info('useFolder', folderId, mnemonic);\n      let folder;\n      try {\n        folder = await getById(folderId);\n        // console.info('folder', folder);\n      } catch (err) {\n        console.error(err);\n      }\n      // console.info('mnemonic', mnemonic, title);\n      if (mnemonic && title && !folder?.id) {\n        folder = await writeItem({\n          id: folderId,\n          mnemonic,\n          title,\n          isFolder: true,\n          folderId: 'new_' + folderType,\n          folderType,\n          userId,\n        });\n        // console.info('after create new folder, nf', folder);\n      }\n      // console.info('folder', folder);\n      const content = await getFolderContent(folderId);\n      return {folder, content};\n    },\n    {\n      refetchOnWindowFocus: true,\n      refetchOnMount: true,\n    },\n  );\n  const deleteFolderMutation = useMutation(\n    async (folderId: string) => {\n      const folder = (await getById(folderId)) as Folder;\n      try {\n        await removeObject(folder);\n      } catch (err) {\n        console.error('removeObject error', err);\n      }\n\n      await writeItem({\n        ...folder,\n        isDeleted: true,\n      });\n\n      await folderContentQuery.refetch();\n      if (route.params?.projectId) {\n        const {projectId} = route.params;\n        await queryClient.refetchQueries(['folderData_' + projectId]);\n      }\n    },\n  );\n  const folderContent = folderContentQuery.data?.content;\n  const folder = folderContentQuery.data?.folder;\n  const isLoadingFolderContent = folderContentQuery.isFetching;\n  const writeItemMutation = useMutation(item => writeItem(item));\n\n  const folderFiles =\n    folder && folder.files\n      ? (folder?.files?.map((file: string) => ({\n          id: file,\n          url: file,\n          title: file,\n          filename: file,\n          isMediaNew: true,\n          folderId: folder!.id,\n          _id: file,\n          date: (folder! as any as Media).date,\n          originalId: (folder! as any as Media).originalId,\n          webpage_url: (folder! as any as Media).webpage_url,\n          thumbnail: (folder! as any as Media).thumbnail,\n          extractor: (folder! as any as Media).extractor,\n        })) as Media[])\n      : [];\n  const userState = useContext(UserDataState) as CurrentUserData;\n  const userDispatch = useContext(\n    UserDataDispatch,\n  ) as React.Dispatch<UserDataAction>;\n  const isEditingFolder = userState.isEditingFolder[folderId];\n  const folderNameInputRef = useRef<TextInput | null>(null);\n  const [currentFolderEditorName, setFolderEditorName] = useState('');\n  const editableFolder = folderContent?.find(\n    (f: Folder) => f.id === isEditingFolder,\n  );\n\n  const content =\n    isLoadingFolderContent || folderContent === undefined\n      ? undefined\n      : folderFiles.concat(folderContent!);\n\n  const updateFolderTitleMutation = useMutation(\n    async (folder: Folder) => await writeItem(folder),\n  );\n  const onRemoveFolder = async (folder: Folder) => {\n    console.info('onRemoveFolder', folder);\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: true,\n        appDialogTitle: 'Delete Folder',\n        appDialogIcon: 'delete',\n        appDialogOnSelectRight: async () => {\n          await deleteFolderMutation.mutateAsync(folder.id);\n          closeDialog();\n        },\n        appDialogOnSelectLeftt: undefined,\n        appDialogBody:\n          'This folder will remain for other users who may have access',\n        appDialogControls: undefined,\n      }),\n    );\n    console.info('after delete mutation');\n  };\n\n  const abortEditFolder = () =>\n    userDispatch({\n      actionType: UserDataActionType.setEditingFolder,\n      folderId: undefined,\n      folderType: folderId as any,\n    });\n\n  const editFolder = (fId: string) =>\n    userDispatch({\n      actionType: UserDataActionType.setEditingFolder,\n      folderId: fId,\n      folderType: folderId as any,\n    });\n\n  const onFolderActionPress = async (folderId: string) => {\n    console.info(\n      'isEditingFolder: ' + (folderId === isEditingFolder),\n      folderId,\n    );\n    if (editableFolder?.id === folderId) {\n      editableFolder.title = currentFolderEditorName;\n      await updateFolderTitleMutation.mutateAsync(editableFolder);\n      abortEditFolder();\n      await folderContentQuery.refetch();\n      return;\n    }\n    editFolder(folderId);\n  };\n\n  const onReordered = async (start: number, end: number) => {\n    console.info('dragend', start, end);\n\n    if (start === end) return;\n    content[start].orderId = end + 1;\n    const didEnd = content[end]\n      ? (content[end].orderId = start + 1)\n      : undefined;\n\n    await writeItemMutation.mutateAsync(content[start]);\n    didEnd ? await writeItemMutation.mutateAsync(content[end]) : null;\n  };\n\n  const onShareFolder = async (folder: Folder) => {\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n    const {id, title, userId} = folder;\n    const folderPref =\n      domain +\n      'webapp/' +\n      folderType +\n      '/folder/' +\n      id +\n      '?title=' +\n      title +\n      '&userId=' +\n      userId +\n      '&mnemonic=';\n    if (folder.mnemonic) {\n      console.info('folder has mnemonic');\n      const folderUrl =\n        folderPref + encodeURIComponent(folder.mnemonic);\n      console.info(folderUrl);\n      Clipboard.setString(folderUrl);\n    }\n    if (!folder.mnemonic) {\n      const mnemonic = genMnemonic();\n      folder.mnemonic = mnemonic;\n      await updateFolderTitleMutation.mutateAsync(folder);\n      const folderUrl = folderPref + encodeURIComponent(mnemonic);\n      console.info(folderUrl);\n      Clipboard.setString(folderUrl);\n    }\n    dispatch(setToastText('Link to folder has been copied'));\n  };\n\n  const addMedia = async () => {\n    const pickerResult = await DocumentPicker.pickSingle({\n      presentationStyle: 'fullScreen',\n    });\n    console.info('pickerResult', pickerResult);\n    // setMediaModalVisible(true)\n    if (!pickerResult) return;\n    const user = await getUserData();\n    const url = pickerResult.uri;\n    let fId = folderId;\n    const nd: Media = {\n      id: uuid.v4().toString(),\n      url,\n      title: pickerResult.name,\n      originalId: pickerResult.name,\n      filename: pickerResult.name,\n      fileType: pickerResult.type,\n      folderId: fId,\n      userId: user.id,\n      date: new Date().valueOf(),\n      type: pickerResult.file.type,\n      size: pickerResult.file.size,\n      extractor: 'local',\n    };\n    dispatch(startOnboarding({file: pickerResult.file, media: nd}));\n  };\n\n  return {\n    isLoadingFolderContentError: folderContentQuery.error,\n    isLoadingFolderContent,\n    folderContentQuery,\n    folder,\n    folderContent: content,\n    isEditingFolder,\n    abortEditFolder,\n    folderNameInputRef,\n    currentFolderEditorName,\n    setFolderEditorName,\n    onFolderActionPress,\n    onRemoveFolder,\n    onShareFolder,\n    folderType,\n    getContentItem: (_data: unknown, index: number) => content[index],\n    getContentCount: () => content?.length || 0,\n    ...mediaPlayer,\n    onReordered,\n    addMedia,\n  };\n}\n","import {useState, useRef, useContext} from 'react';\nimport {\n  Contact,\n  Folder,\n  FolderType,\n  Media,\n  CurrentUserData,\n} from '../types';\nimport {Clipboard, TextInput} from 'react-native';\nimport {UserDataState, UserDataDispatch} from '../ctx';\nimport {UserDataAction, UserDataActionType} from './useUserData';\nimport {UseQueryResult, useMutation, useQuery} from 'react-query';\nimport {useIsFocused, useRoute} from '@react-navigation/native';\nimport {\n  domain,\n  genMnemonic,\n  getFolderContent,\n  getFoldersByType,\n  writeItem as superWriteItem,\n  writeItem,\n} from '../api';\nimport {FolderParams} from '../types/nav';\n\nexport type FolderPreviewContentType = Media | Contact | Folder;\n\nexport type getItem = (data: any, index: number) => Folder;\n\nexport type getContentItem = (\n  data: any,\n  index: number,\n) => FolderPreviewContentType;\n\nexport interface FoldersState<T extends FolderPreviewContentType> {\n  folderType: FolderType;\n  isEditingFolder?: string;\n  newFolderName?: string;\n  currentContentId?: string;\n}\n\nexport enum FoldersActionType {\n  edit = 'edit',\n  select = 'select',\n  deselect = 'deselect',\n  abortEdit = 'abortEdit',\n}\n\nexport type FolderGenericActions =\n  | FoldersActionType.abortEdit\n  | FoldersActionType.deselect;\n\nexport interface FolderSelect {\n  actionType: FoldersActionType.select;\n  folderId: string | undefined;\n}\n\nexport interface FolderEdit {\n  actionType: FoldersActionType.edit;\n  folderId: string;\n}\n\nexport type FoldersAction =\n  | {actionType: FolderGenericActions}\n  | FolderSelect\n  | FolderEdit;\n\nexport interface UseFoldersState<T extends FolderPreviewContentType>\n  extends FoldersState<T> {\n  selectFolder: (folderId: string) => Promise<void>;\n  getItem: getItem;\n  getItemCount: () => number;\n  getContentCount: () => number;\n  getContentItem: getContentItem;\n  editFolder: (folderId: string) => void;\n  abortEditFolder: () => void;\n  currentFolderEditorName: string;\n  setFolderEditorName: (newFolderName: string) => void;\n  onFolderActionPress: (folderId: string) => void;\n  onFolderPress: (folderId: string) => void;\n  onRemoveFolder: (folder: Folder) => void;\n  onShareFolder: (folder: Folder) => void;\n  folderNameInputRef: React.MutableRefObject<TextInput | null>;\n  userState: CurrentUserData;\n  userDispatch: React.Dispatch<UserDataAction>;\n  currentFolderId?: string;\n  isFocused: boolean;\n  folderContent: T[];\n  loadingContent: boolean;\n  loadingFolders: boolean;\n  isLoadingFolder?: boolean;\n  folders: Folder[];\n  folderContentQuery: UseQueryResult<T[], unknown>;\n}\nexport const useFolders = <T extends FolderPreviewContentType>(\n  folderType: FolderType,\n  disabled: boolean,\n): UseFoldersState<T> => {\n  const route = useRoute();\n  const params = route.params as FolderParams;\n  const routeFolderId = params?.folderId;\n  const userState = useContext(UserDataState) as CurrentUserData;\n  const userDispatch = useContext(\n    UserDataDispatch,\n  ) as React.Dispatch<UserDataAction>;\n  const currentFolderId = userState.currentFolderIds[folderType];\n  const isEditingFolder = userState.isEditingFolder[folderType];\n  const folderNameInputRef = useRef<TextInput | null>(null);\n  const [currentFolderEditorName, setFolderEditorName] = useState('');\n  const isFocused = useIsFocused();\n\n  const foldersQuery = useQuery(\n    'folders_' + folderType,\n    async () => {\n      const data = await getFoldersByType(folderType);\n\n      const hasNew = data.find(i => i.id === 'new_' + folderType);\n      if (!hasNew && folderType !== FolderType.database)\n        data.unshift({\n          id: 'new_' + folderType,\n          title: 'New',\n          isFolder: true,\n          date: new Date().valueOf(),\n          userId: '',\n          folderType,\n          orderId: 0,\n        });\n      return data;\n    },\n    {\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n      retry: true,\n      enabled: !disabled,\n    },\n  );\n  const loadingFolders = foldersQuery.isFetching;\n  const folders = foldersQuery?.data || [\n    {\n      id: 'new_' + folderType,\n      title: 'New',\n      isFolder: true,\n      date: new Date().valueOf(),\n      userId: '',\n      folderType,\n    },\n  ];\n\n  const editableFolder = folders?.find(f => f.id === isEditingFolder);\n  const folderContentQuery = useQuery(\n    'folderContent_' + folderType,\n    () => getFolderContent(currentFolderId!),\n    {\n      enabled: false,\n      retry: true,\n      refetchOnWindowFocus: false,\n      enabled: !disabled,\n    },\n  );\n  const loadingContent =\n    folderContentQuery.isLoading || folderContentQuery.isFetching;\n  const folderContent = folderContentQuery?.data || [];\n  // console.info(writeItem)\n  const deleteFolderMutation = useMutation(\n    async (folderId: string) =>\n      await writeItem({id: folderId, isDeleted: true}),\n  );\n\n  const updateFolderTitleMutation = useMutation(\n    async (folder: Folder) => await writeItem(folder),\n  );\n  const deselectFolder = () =>\n    userDispatch({\n      actionType: UserDataActionType.setActiveFolder,\n      folderId: undefined,\n      folderType,\n    });\n\n  const selectFolder = async (folderId: string) => {\n    deselectFolder();\n    if (currentFolderId !== folderId) {\n      userDispatch({\n        actionType: UserDataActionType.setActiveFolder,\n        folderId,\n        folderType,\n      });\n    }\n  };\n\n  const editFolder = (folderId: string) =>\n    userDispatch({\n      actionType: UserDataActionType.setEditingFolder,\n      folderId,\n      folderType,\n    });\n\n  const abortEditFolder = () =>\n    userDispatch({\n      actionType: UserDataActionType.setEditingFolder,\n      folderId: undefined,\n      folderType,\n    });\n\n  const onFolderActionPress = async (folderId: string) => {\n    console.info(\n      'isEditingFolder: ' + (folderId === isEditingFolder),\n      folderId,\n    );\n    if (editableFolder?.id === folderId) {\n      editableFolder.title = currentFolderEditorName;\n      await updateFolderTitleMutation.mutateAsync(\n        editableFolder as Folder,\n      );\n      abortEditFolder();\n      await foldersQuery.refetch();\n      return;\n    }\n    editFolder(folderId);\n  };\n\n  const onFolderPress = (folderId: string) => {\n    selectFolder(folderId);\n  };\n\n  const onRemoveFolder = async (folder: Folder) => {\n    console.info('onRemoveFolder', folder);\n    await deleteFolderMutation.mutateAsync(folder.id);\n    await foldersQuery.refetch();\n    console.info('after delete mutation');\n  };\n\n  const onShareFolder = async (folder: Folder) => {\n    console.info('onShareFolder', folder);\n    const {id, title, userId} = folder;\n    const folderPref =\n      domain +\n      'webapp/' +\n      folderType +\n      '/folder/' +\n      id +\n      '?title=' +\n      title +\n      '&userId=' +\n      userId +\n      '&mnemonic=';\n    if (folder.mnemonic) {\n      console.info('folder has mnemonic');\n      const folderUrl =\n        folderPref + encodeURIComponent(folder.mnemonic);\n      console.info(folderUrl);\n      Clipboard.setString(folderUrl);\n    }\n    if (!folder.mnemonic) {\n      const mnemonic = genMnemonic();\n      folder.mnemonic = mnemonic;\n      await updateFolderTitleMutation.mutateAsync(folder);\n      const folderUrl = folderPref + encodeURIComponent(mnemonic);\n      console.info(folderUrl);\n      Clipboard.setString(folderUrl);\n    }\n  };\n\n  return {\n    folderType,\n    selectFolder,\n    currentFolderId: routeFolderId,\n    getItem: (_data: unknown, index: number) =>\n      folders[index] as Folder,\n    getItemCount: () => folders.length,\n    getContentItem: (_data: unknown, index: number) =>\n      folderContent[index],\n    getContentCount: () => folderContent.length,\n    folderContent,\n    loadingContent,\n    loadingFolders,\n    folders: folders as Folder[],\n    onRemoveFolder,\n    editFolder,\n    abortEditFolder,\n    onShareFolder,\n    folderContentQuery,\n    currentFolderEditorName,\n    setFolderEditorName,\n    folderNameInputRef,\n    onFolderPress,\n    onFolderActionPress,\n    userState,\n    userDispatch,\n    isFocused,\n    isLoadingFolder: foldersQuery.isLoading,\n    isEditingFolder,\n  };\n};\n","import {useEffect} from 'react';\nimport {Keyboard} from 'react-native';\nimport {useAppDispatch} from '../store/hooks';\nimport {setKeyboardHeight} from '../store/slices/ui';\n\nexport function useKeyboardDispatcher() {\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    Keyboard.addListener('keyboardDidShow', e =>\n      dispatch(\n        setKeyboardHeight({keyboardHeight: e.endCoordinates.height}),\n      ),\n    );\n    Keyboard.addListener('keyboardDidHide', () =>\n      dispatch(setKeyboardHeight({keyboardHeight: 0})),\n    );\n\n    return () => {\n      Keyboard.removeAllListeners('keyboardDidShow');\n      Keyboard.removeAllListeners('keyboardDidHide');\n    };\n  }, []);\n}\n","import {useFolders} from './useFolders';\n\nimport {Folder, FolderType, Media} from '../types';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {stop} from '../store/slices/media';\nimport {useCallback} from 'react';\nimport {useMediaPlayer} from './useMediaPlayer';\nimport {getFolderContent, getFoldersByType, writeItem} from '../api';\nimport {useAuction} from './useAuction';\n\nexport const useMedia = (\n  getFoldersByTypeProxy: (\n    folderType: FolderType,\n  ) => Promise<Folder[]>,\n  getFolderContentProxy: (folderId: string) => Promise<Media[]>,\n  writeItemProxy?: any,\n) => {\n  const mediaPlayer = useMediaPlayer();\n  const useFoldersState = useFolders<Media>(\n    FolderType.media,\n    getFoldersByTypeProxy || getFoldersByType,\n    getFolderContentProxy || getFolderContent,\n    writeItemProxy || writeItem,\n  );\n  return {\n    ...useFoldersState,\n    ...mediaPlayer,\n  };\n};\n","import {MediaActionType} from '../store/slices/media';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {play, stop, loaded} from '../store/slices/media';\nimport {\n  downloadFileById,\n  exportFile,\n  getById,\n  removeObject,\n  writeItem,\n} from '../api';\nimport {setDownloadingProgress} from '../store/slices/fs';\nimport {Media} from '../types';\nimport {\n  setAppDialogParams,\n  setFolderMenuItemId,\n} from '../store/slices/ui';\nimport {useMutation, useQueryClient} from 'react-query';\nimport {useCloseDialog} from './useCloseDialog';\n\nexport const useMediaPlayer = (folderId?: string) => {\n  const mediaState = useAppSelector(state => state.media);\n  const {closeDialog} = useCloseDialog();\n  const queryClient = useQueryClient();\n  const downloads = useAppSelector(\n    state => state.fs.downloadingProgress,\n  );\n  const dispatch = useAppDispatch();\n\n  const onMediaPress = async (media: Media) => {\n    console.info('mediapress', media);\n    try {\n      const mediaId = media.id;\n      dispatch(stop());\n      if (mediaState.currentMediaId !== mediaId && mediaId !== '') {\n        dispatch(\n          play({actionType: MediaActionType.play, mediaId, media}),\n        );\n      }\n    } catch (err) {\n      console.error('mediapress error', err);\n    }\n  };\n  const deleteMediaMutation = useMutation(async (mediaId: string) => {\n    const media = (await getById(mediaId, folderId)) as Media;\n    try {\n      await removeObject(media);\n    } catch (err) {\n      console.error('removeObject error', err);\n    }\n\n    await writeItem({\n      ...media,\n      isDeleted: true,\n    });\n\n    await queryClient.refetchQueries('folderData_' + folderId);\n  });\n\n  const deleteFileMutation = useMutation(async (mediaId: string) => {\n    const media = (await getById(mediaId, folderId)) as Media;\n    try {\n      await removeObject(media);\n    } catch (err) {\n      console.error('removeObject error', err);\n    }\n\n    await queryClient.refetchQueries('folderData_' + folderId);\n    await queryClient.refetchQueries([\n      'isDownloaded',\n      mediaId,\n      media.isDownloaded,\n    ]);\n  });\n  const exportFileMutation = useMutation(async (mediaId: string) => {\n    const media = (await getById(mediaId, folderId)) as Media;\n    await exportFile(media);\n  });\n\n  const onRemoveMediaPress = (mediaId: string) => {\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: true,\n        appDialogTitle: 'Delete Media',\n        appDialogIcon: 'delete',\n        appDialogOnSelectRight: async () => {\n          await deleteMediaMutation.mutateAsync(mediaId);\n          closeDialog();\n        },\n        appDialogOnSelectLeftt: undefined,\n        appDialogBody:\n          'This media will be removed for you and other users who may have access',\n        appDialogControls: undefined,\n      }),\n    );\n  };\n\n  const onExportFile = (mediaId: string) => {\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: true,\n        appDialogTitle: 'Export Media',\n        appDialogIcon: 'share',\n        appDialogOnSelectRight: async () => {\n          await exportFileMutation.mutateAsync(mediaId);\n          closeDialog();\n        },\n        appDialogOnSelectLeftt: undefined,\n        appDialogBody:\n          'This media will be unencrypted and exported to your device',\n        appDialogControls: undefined,\n      }),\n    );\n  };\n\n  const onRemoveFile = (mediaId: string) => {\n    dispatch(setFolderMenuItemId({itemId: undefined}));\n    dispatch(\n      setAppDialogParams({\n        appDialogVisible: true,\n        appDialogTitle: 'Delete Media',\n        appDialogIcon: 'delete',\n        appDialogOnSelectRight: async () => {\n          await deleteFileMutation.mutateAsync(mediaId);\n          closeDialog();\n        },\n        appDialogOnSelectLeftt: undefined,\n        appDialogBody:\n          'Only the media file will be removed and only from this device',\n        appDialogControls: undefined,\n      }),\n    );\n  };\n\n  const onDownloadMediaPress = async (mediaId: string) => {\n    console.info('onDownloadMediaPress', mediaId);\n    const itemId = mediaId;\n    if (downloads[itemId]) return;\n    dispatch(setDownloadingProgress({itemId, progress: 0.001}));\n    try {\n      await downloadFileById(mediaId, folderId, progress =>\n        dispatch(\n          setDownloadingProgress({\n            itemId,\n            progress,\n          }),\n        ),\n      );\n    } catch (err) {\n      console.error(err);\n    }\n    dispatch(\n      setDownloadingProgress({itemId: mediaId, progress: undefined}),\n    );\n  };\n\n  const onCopyLinkPress = (mediaId: string) => {\n    console.info('onShareMediaPress', mediaId);\n  };\n\n  const onEditMediaPress = (mediaId: string) => {\n    console.info('onEditMediaPress', mediaId);\n  };\n\n  return {\n    ...mediaState,\n    onMediaPress,\n    onRemoveMediaPress,\n    onDownloadMediaPress,\n    onCopyLinkPress,\n    onRemoveFile,\n    onExportFile,\n    onEditMediaPress,\n  };\n};\n","import {getPublicMessages, sendChatMessage} from '../api/';\nimport {useMutation, useQuery} from 'react-query';\nimport {\n  CommonActions,\n  useIsFocused,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport {useAppDispatch, useAppSelector} from '../store/hooks';\nimport {setPaginationState} from '../store/slices/chat';\nimport {ChatParams} from '../types/nav';\n\nexport const useMessages = (chatId: string) => {\n  const isLoadingEarlier = useAppSelector(\n    state => state.chat.loadingPagination[chatId],\n  );\n  const dispatch = useAppDispatch();\n\n  const route = useRoute();\n  const focused = useIsFocused();\n  const navigation = useNavigation();\n  const params = route.params as ChatParams;\n  const mnemonic = params?.mnemonic;\n  const pageIndex = params?.page || 1;\n  const perPage = 25;\n  const messagesQuery = useQuery(\n    'chatMessages_' + chatId,\n    async () => {\n      const [messages] = await Promise.all([\n        getPublicMessages(chatId, mnemonic, perPage * pageIndex, 0),\n      ]);\n      return {messages};\n    },\n    {\n      retry: true,\n      refetchInterval: 1000,\n      enabled: focused,\n    },\n  );\n  const loadingMessages =\n    messagesQuery.isFetching || isLoadingEarlier;\n\n  const sendMessageMutation = useMutation(\n    async (text: string) => {\n      try {\n        const message = await sendChatMessage(chatId, text, mnemonic);\n        await messagesQuery.refetch();\n        return message;\n      } catch (err) {\n        console.error('==== sendMessage error ===', err);\n      }\n    },\n    {retry: true},\n  );\n\n  const messages = messagesQuery.data?.messages || [];\n\n  const nextPage = async () => {\n    if (isLoadingEarlier) return;\n\n    const nPage = parseInt(pageIndex.toString(), 10) + 1;\n    console.info('nextPage', nPage, loadingMessages);\n    dispatch(setPaginationState({[chatId]: true}));\n    navigation.dispatch({\n      ...CommonActions.setParams({page: nPage}),\n      source: route.key,\n    });\n    await messagesQuery.refetch();\n    setTimeout(() => {\n      dispatch(setPaginationState({[chatId]: false}));\n    }, 2000);\n  };\n\n  return {\n    messages,\n    nextPage,\n    loadingMessages,\n    sendingMessage: sendMessageMutation.isLoading,\n    messagesError: messagesQuery.error as string | undefined,\n    sendMessage: sendMessageMutation.mutate,\n    isLoadingEarlier,\n  };\n};\n","import {useMutation, useQueryClient} from 'react-query';\nimport {Auction, Contact, UserInfo} from '../types';\nimport {useMemo} from 'react';\nimport {\n  NavigationProp,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport {\n  AuctionParams,\n  ChatParams,\n  ChatStackParams,\n} from '../types/nav';\nimport {sendChatMessage, writeItem} from '../api';\n\nexport const useRouteAuction = (\n  contact: Auction | undefined,\n  isLoading: boolean,\n) => {\n  const queryClient = useQueryClient();\n  const route = useRoute();\n  const {auctionId, title, mnemonic} = route.params as AuctionParams;\n  const createContactMutation = useMutation(\n    async () => {\n      const nauction = {\n        id: auctionId,\n        isContact: true,\n        folderId: auctionId,\n        name: title,\n        mnemonic,\n      };\n      console.info('nauction', nauction);\n      // await writeItem(nauction);\n    },\n    {\n      retry: true,\n      onSuccess: async () => {\n        try {\n          await queryClient.refetchQueries('auction_' + auctionId);\n          await queryClient.refetchQueries(\n            'current_bid_' + auctionId,\n          );\n          // await queryClient.refetchQueries('current_bid_' + auctionId);\n          // await sendChatMessage(\n          //   auctionId,\n          //   user.name + ' has joined',\n          //   mnemonic,\n          //   {\n          //     system: true,\n          //   },\n          // );\n        } catch (err) {\n          console.error('onadd contact error', err);\n        }\n      },\n    },\n  );\n\n  useMemo(() => {\n    if (!isLoading && !contact && !createContactMutation.isLoading) {\n      createContactMutation.mutateAsync().then(async () => {\n        console.info('after create auction');\n      });\n    }\n  }, [isLoading, contact, createContactMutation]);\n};\n","import {useMutation, useQueryClient} from 'react-query';\nimport {Contact, UserInfo} from '../types';\nimport {useMemo} from 'react';\nimport {\n  NavigationProp,\n  useNavigation,\n  useRoute,\n} from '@react-navigation/native';\nimport {ChatParams, ChatStackParams} from '../types/nav';\nimport {sendChatMessage, writeItem} from '../api';\n\nexport const useRouteContact = (\n  contact: Contact | undefined,\n  isLoading: boolean,\n  user: UserInfo,\n  routeParams: ChatParams,\n) => {\n  const queryClient = useQueryClient();\n  const navigation = useNavigation<NavigationProp<ChatStackParams>>();\n  const route = useRoute();\n  const {chatId, name, mnemonic} =\n    routeParams || (route.params as ChatParams);\n  const folderId = 'new_contact';\n  const createContactMutation = useMutation(\n    async () => {\n      const ncontact = {\n        id: chatId,\n        isContact: true,\n        folderId,\n        name,\n        mnemonic,\n      };\n      console.info('ncotanct', ncontact);\n      await writeItem(ncontact);\n    },\n    {\n      retry: true,\n      onSuccess: async () => {\n        try {\n          await queryClient.refetchQueries('contact_' + chatId);\n          navigation.navigate('Chat', {\n            chatId,\n            name,\n            parentFolderId: folderId,\n            mnemonic,\n          });\n          await sendChatMessage(\n            chatId,\n            user.name + ' has joined',\n            mnemonic,\n            {\n              system: true,\n            },\n          );\n          await queryClient.refetchQueries(\n            'folderContent_' + folderId,\n          );\n        } catch (err) {\n          console.error('onadd contact error', err);\n        }\n      },\n    },\n  );\n\n  useMemo(() => {\n    console.info('useRouteContact Memo', isLoading, contact);\n    if (!isLoading && !contact && !createContactMutation.isLoading) {\n      createContactMutation.mutateAsync().then(async () => {\n        console.info('after create contact');\n      });\n    }\n  }, [isLoading, contact, createContactMutation]);\n};\n","import {Share} from 'react-native';\nexport function useShare() {\n  const share = (url: string) => {\n    Share.share({\n      url,\n      message: 'Share Media',\n    });\n  };\n  return {share};\n}\n","import {useReducer} from 'react';\nimport {CurrentUserData, FolderType, UserInfo} from '../types';\nimport {useQuery} from 'react-query';\n\nexport enum UserDataActionType {\n  setUser = 'setUser',\n  setTheme = 'setTheme',\n  setActiveFolder = 'setActiveFolder',\n  setEditingFolder = 'setEditingFolder',\n  setFolderType = 'setFolderType',\n}\n\nexport type UserDataGenericAction = UserDataActionType.setTheme;\n\nexport interface UserDataSet {\n  actionType: UserDataActionType.setUser;\n  currentUserId: string;\n  userData: UserInfo;\n}\n\nexport interface SetActiveFolder {\n  actionType: UserDataActionType.setActiveFolder;\n  folderId: string | undefined;\n  folderType: FolderType;\n}\n\nexport interface SetEditingFolder {\n  actionType: UserDataActionType.setEditingFolder;\n  folderId: string | undefined;\n  folderType: FolderType;\n}\n\nexport interface SetFolderType {\n  actionType: UserDataActionType.setFolderType;\n  folderType: FolderType;\n}\n\nexport type UserDataAction =\n  | {actionType: UserDataGenericAction}\n  | UserDataSet\n  | SetActiveFolder\n  | SetFolderType\n  | SetEditingFolder;\n\nexport interface UserDataResponse {\n  userDataState: CurrentUserData;\n  userDataDispatch: React.Dispatch<UserDataAction>;\n}\n\nconst userDataReducer = (\n  state: CurrentUserData,\n  action: UserDataAction,\n): CurrentUserData => {\n  const {actionType} = action;\n  switch (actionType) {\n    case UserDataActionType.setUser:\n      return {\n        ...state,\n        user: action.userData,\n      };\n    case UserDataActionType.setActiveFolder:\n      return {\n        ...state,\n        currentFolderIds: {\n          ...(state.currentFolderIds || {}),\n          [action.folderType]: action.folderId,\n        },\n        isEditingFolder: {\n          ...(state.isEditingFolder || {}),\n          [action.folderType]: undefined,\n        },\n      };\n    case UserDataActionType.setFolderType:\n      return {\n        ...state,\n        currentFolderType: action.folderType,\n      };\n    case UserDataActionType.setEditingFolder:\n      return {\n        ...state,\n        isEditingFolder: {\n          ...(state.isEditingFolder || {}),\n          [action.folderType]: action.folderId,\n        },\n        currentFolderIds: {\n          ...(state.currentFolderIds || {}),\n          [action.folderType]: action.folderId,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useUserData = (): UserDataResponse => {\n  // const user = useQuery(\"UserData\", async ()=>await getUserData(), {refetchOnMount:false, refetchOnReconnect:false, refetchOnWindowFocus:false})\n  const [userDataState, userDataDispatch] = useReducer(\n    userDataReducer,\n    {\n      user: {},\n      currentFolderIds: {},\n      colors: {},\n      isEditingFolder: {},\n    },\n  );\n\n  return {\n    userDataState,\n    userDataDispatch,\n  };\n};\n","import React from 'react';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport ContactsView from '../components/contacts/contacts';\nimport Chat from '../components/contacts/chat';\nimport {FolderType} from '../types';\nimport FolderPage from '../components/folder/folderpage';\nimport {ChatStackParams} from '../types/nav';\n\nconst ChatStack = createStackNavigator<ChatStackParams>();\n\nexport const createChatStack = () => {\n  const ChatComponent = () => <Chat />;\n  const FolderComponent = () => {\n    return <FolderPage folderType={FolderType.contact} />;\n  };\n\n  const ContactsComponent = () => <ContactsView />;\n  const ChatStackScreen = () => {\n    return (\n      <ChatStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <ChatStack.Screen\n          name=\"Contacts\"\n          component={ContactsComponent}\n          options={{\n            freezeOnBlur: true,\n          }}\n        />\n        <ChatStack.Screen\n          name=\"Chat\"\n          component={ChatComponent}\n          options={({route}) => ({\n            freezeOnBlur: true,\n          })}\n        />\n        <ChatStack.Screen\n          name=\"Folder\"\n          component={FolderComponent}\n          options={({route}) => ({\n            freezeOnBlur: true,\n          })}\n        />\n      </ChatStack.Navigator>\n    );\n  };\n  return ChatStackScreen;\n};\n","import React, {memo} from 'react';\n\nimport FolderPage from '../components/folder/folderpage';\nimport {FolderType} from '../types';\nimport FolderLibrary from '../components/folder/folderlibrary';\nimport {useFolders} from '../hooks/useFolders';\nimport EditorProject from '../components/editor/editorproject';\nimport {getFolderContent, getFoldersByType, writeItem} from '../api';\nimport {EditorStackParams} from '../types/nav';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\n\nconst folderType = FolderType.editor;\nconst EditorStack = createNativeStackNavigator<EditorStackParams>();\n\nconst FolderComponent = memo(() => (\n  <FolderPage folderType={folderType} />\n));\nconst FolderLibraryComponent = memo(() => (\n  <FolderLibrary\n    dataHook={useFolders(\n      folderType,\n      getFoldersByType,\n      getFolderContent,\n      writeItem,\n    )}\n  />\n));\nexport const createEditor = () => {\n  const EditorProjectScreen = memo(() => <EditorProject />);\n  const EditorStackScreen = () => {\n    return (\n      <EditorStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <EditorStack.Screen\n          name=\"EditorProjects\"\n          options={{orientation: 'portrait'}}\n          component={FolderLibraryComponent}\n        />\n        <EditorStack.Screen\n          name=\"EditorProject\"\n          options={{orientation: 'all'}}\n          component={EditorProjectScreen}\n        />\n        <EditorStack.Screen\n          name=\"Folder\"\n          options={{orientation: 'portrait'}}\n          component={FolderComponent}\n        />\n      </EditorStack.Navigator>\n    );\n  };\n  return EditorStackScreen;\n};\n","import React, {memo} from 'react';\nimport {createStackNavigator} from '@react-navigation/stack';\n\nimport FolderPage from '../components/folder/folderpage';\nimport {FolderType} from '../types';\nimport FolderLibrary from '../components/folder/folderlibrary';\nimport {useFolders} from '../hooks/useFolders';\nimport EncoderProject from '../components/encoder/encoderproject';\nimport {useRoute} from '@react-navigation/native';\nimport {getFolderContent, getFoldersByType, writeItem} from '../api';\nimport {EncoderStackParams} from '../types/nav';\nconst folderType = FolderType.encoder;\n\nconst EncoderStack = createStackNavigator<EncoderStackParams>();\n\nconst FolderComponent = memo(() => (\n  <FolderPage folderType={folderType} />\n));\nconst FolderLibraryComponent = memo(() => (\n  <FolderLibrary\n    dataHook={useFolders(\n      folderType,\n      getFoldersByType,\n      getFolderContent,\n      writeItem,\n    )}\n  />\n));\nexport const createEncoder = () => {\n  const EncoderProjectScreen = memo(() => (\n    <EncoderProject\n      writeItem={writeItem}\n      routeParams={useRoute().params}\n    />\n  ));\n  const EncoderStackScreen = () => {\n    return (\n      <EncoderStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <EncoderStack.Screen\n          name=\"EncoderProjects\"\n          component={FolderLibraryComponent}\n        />\n        <EncoderStack.Screen\n          name=\"EncoderProject\"\n          component={EncoderProjectScreen}\n        />\n        <EncoderStack.Screen\n          name=\"Folder\"\n          component={FolderComponent}\n        />\n      </EncoderStack.Navigator>\n    );\n  };\n  return EncoderStackScreen;\n};\n","import React from 'react';\nimport FolderPage from '../components/folder/folderpage';\nimport HomeView from '../components/media/home';\nimport {FolderType} from '../types';\nimport {FileStackParams} from '../types/nav';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport {AuctionPage} from '../components/auction/auctionpage';\n\nconst FolderComponent = () => (\n  <FolderPage folderType={FolderType.media} />\n);\n\nconst HomeComponent = () => <HomeView />;\n\nconst FileStack = createNativeStackNavigator<FileStackParams>();\n\nexport const createFileStack = () => {\n  const FileStackScreen = () => {\n    return (\n      <FileStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <FileStack.Screen\n          name=\"Files\"\n          options={{orientation: 'portrait'}}\n          component={HomeComponent}\n        />\n        <FileStack.Screen\n          name=\"Auction\"\n          options={{orientation: 'portrait'}}\n          component={AuctionPage}\n        />\n        <FileStack.Screen\n          name=\"Folder\"\n          options={{orientation: 'portrait'}}\n          component={FolderComponent}\n        />\n      </FileStack.Navigator>\n    );\n  };\n  return FileStackScreen;\n};\n","import React from 'react';\nimport {createStackNavigator} from '@react-navigation/stack';\n\nimport SettingsView from '../components/settings/settings';\nimport DevicesScreen from '../components/settings/devices';\nimport DatabasesScreen from '../components/settings/databases';\nimport {SettingsStackParams} from '../types/nav';\n\nconst RenderSettings = (props: any) => <SettingsView {...props} />;\nconst Devices = (props: any) => <DevicesScreen {...props} />;\nconst Databases = (props: any) => <DatabasesScreen {...props} />;\n\nconst SettingsStack = createStackNavigator<SettingsStackParams>();\n\nexport const createSettings = () => {\n  const SettingsStackScreen = () => {\n    return (\n      <SettingsStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n        }}>\n        <SettingsStack.Screen\n          name=\"Settings\"\n          component={RenderSettings}\n        />\n        <SettingsStack.Screen name=\"Devices\" component={Devices} />\n        <SettingsStack.Screen name=\"Drive\" component={Devices} />\n        <SettingsStack.Screen\n          name=\"Databases\"\n          component={Databases}\n        />\n      </SettingsStack.Navigator>\n    );\n  };\n  return SettingsStackScreen;\n};\n","const config = {\n  screens: {\n    Starp: {\n      path: 'webapp',\n      screens: {\n        FilesTab: {\n          path: 'media',\n          screens: {\n            Folder: {\n              path: 'folder/:folderId',\n              // exact:true\n            },\n            Auction: {\n              path: 'auction/:auctionId',\n              // exact:true\n            },\n            Files: {\n              path: '/',\n            },\n          },\n        },\n        SettingsTab: {\n          path: 'settings',\n          screens: {\n            Devices: {\n              path: 'devices',\n              // exact:true\n            },\n            Drive: {\n              path: 'drive',\n              // exact:true\n            },\n            Databases: {\n              path: 'databases',\n              // exact:true\n            },\n            Settings: {\n              path: '/',\n              // exact:true\n            },\n          },\n        },\n        ContactsTab: {\n          path: 'contact',\n          screens: {\n            Chat: {\n              path: 'chat/:chatId',\n              // exact:true\n            },\n            Contacts: {\n              path: '/',\n              // exact:true\n            },\n            Folder: {\n              path: 'folder/:folderId',\n              // exact:true\n            },\n          },\n        },\n        EncoderTab: {\n          path: 'encoder',\n          screens: {\n            EncoderProjects: {\n              path: '/',\n              // exact:true\n            },\n            EncoderProject: {\n              path: 'project/:projectId',\n              // exact:true\n            },\n            Folder: {\n              path: 'folder/:folderId',\n              // exact:true\n            },\n          },\n        },\n        EditorTab: {\n          path: 'editor',\n          screens: {\n            EditorProjects: {\n              path: '/',\n              // exact:true\n            },\n            EditorProject: {\n              path: 'project/:projectId',\n              // exact:true\n            },\n            Folder: {\n              path: 'folder/:folderId',\n              // exact:true\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const linking = {\n  prefixes: [\n    'starpy://',\n    'https://www.starpy.me',\n    /* your linking prefixes */\n  ],\n  config,\n};\n","import {useDispatch, useSelector} from 'react-redux';\nimport type {TypedUseSelectorHook} from 'react-redux';\nimport type {RootState, AppDispatch} from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> =\n  useSelector;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\n\nexport interface AuctionState {\n  newAuctionName: string;\n  newAuctionWallet: string;\n  newAuctionPrice: number;\n  newAuctionBetStep: number;\n  newAuctionEndDate: number;\n  bidAmount: number;\n  bidWallet: string;\n  payWallet: string;\n  winnerPrice: number;\n  payAuctionId: string;\n  downloadProgress: number;\n}\n\nconst initialState: AuctionState = {\n  newAuctionName: '',\n  newAuctionPrice: 0.01,\n  newAuctionBetStep: 0.01,\n  bidAmount: 0.01,\n  newAuctionEndDate: 0,\n  newAuctionWallet: '',\n  bidWallet: '',\n  payWallet: '',\n  winnerPrice: 0,\n  payAuctionId: '',\n  downloadProgress: 0,\n};\n\nexport const AuctionSlice = createSlice({\n  name: 'fs',\n  initialState,\n  reducers: {\n    setAuctioName: (state, {payload}: PayloadAction<string>) => {\n      state.newAuctionName = payload;\n    },\n    setAuctionPrice: (state, {payload}: PayloadAction<number>) => {\n      state.newAuctionPrice = payload;\n    },\n    setBidAmount: (state, {payload}: PayloadAction<number>) => {\n      state.bidAmount = payload;\n    },\n    setBidWallet: (state, {payload}: PayloadAction<string>) => {\n      state.bidWallet = payload;\n    },\n    setAuctioEndDate: (state, {payload}: PayloadAction<number>) => {\n      state.newAuctionEndDate = payload;\n    },\n    setAuctionWallet: (state, {payload}: PayloadAction<string>) => {\n      state.newAuctionWallet = payload;\n    },\n    setPayWallet: (state, {payload}: PayloadAction<string>) => {\n      state.payWallet = payload;\n    },\n    setWinnerPrice: (state, {payload}: PayloadAction<number>) => {\n      state.winnerPrice = payload;\n    },\n    setAuctionBetStep: (state, {payload}: PayloadAction<number>) => {\n      state.newAuctionBetStep = payload;\n    },\n    setDownloadProgress: (\n      state,\n      {payload}: PayloadAction<number>,\n    ) => {\n      state.downloadProgress = payload;\n    },\n  },\n});\n\nexport const {\n  setAuctioName,\n  setAuctioEndDate,\n  setAuctionPrice,\n  setAuctionWallet,\n  setAuctionBetStep,\n  setBidAmount,\n  setBidWallet,\n  setPayWallet,\n  setWinnerPrice,\n  setDownloadProgress,\n} = AuctionSlice.actions;\n\nexport default AuctionSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport type {RootState} from '../store';\nimport {act} from 'react-test-renderer';\n\nexport interface ChatsState {\n  loadingPagination: {[key: string]: boolean};\n}\n\nconst initialState: ChatsState = {\n  loadingPagination: {},\n};\n\nexport const chatSlice = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    setPaginationState: (\n      state,\n      action: PayloadAction<{[key: string]: boolean}>,\n    ) => {\n      const key = Object.keys(action.payload)[0];\n      state.loadingPagination[key] = action.payload[key];\n    },\n  },\n});\n\nexport const {setPaginationState} = chatSlice.actions;\n\nexport default chatSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport {EncoderProject} from '../../types';\n\nexport interface EditorState {\n  encoderProgress: number;\n  caretPosition: number;\n  scrollPosition: number;\n  pixelsPerSecond: number;\n  jobs: BackgroundRenderJob[];\n  jobsProgress: {[key: string]: number};\n  isPlaying: boolean;\n  videoScrollPosition: number;\n  videoCaretPosition: number;\n  scrollParams: {\n    totalWidth: number;\n    totalScroll: number;\n  };\n  canScroll: boolean;\n  activeLayer: string;\n  prevActiveLayer: string;\n  scroll: number;\n  totalTime: number;\n  showEditor: boolean;\n  showComments: boolean;\n  isRendering: boolean;\n  renderProgress: number;\n  renderTime: number;\n  renderOutputURL?: string;\n  ffmpegLogs: string;\n  ffmpegError: boolean;\n}\n\nexport interface BackgroundRenderJob {\n  id: string;\n  encoder?: EncoderProject;\n  progress?: number;\n}\n\nconst initialState: EditorState = {\n  encoderProgress: 0,\n  caretPosition: 0,\n  scrollPosition: 0,\n  pixelsPerSecond: 8,\n  jobs: [],\n  jobsProgress: {},\n  isPlaying: false,\n  videoCaretPosition: 0,\n  videoScrollPosition: 0,\n  scrollParams: {\n    totalWidth: 0,\n    totalScroll: 0,\n  },\n  canScroll: true,\n  activeLayer: '1',\n  prevActiveLayer: '1',\n  scroll: 0,\n  totalTime: 0,\n  showEditor: true,\n  showComments: false,\n  isRendering: false,\n  renderProgress: 0,\n  renderTime: 0,\n  ffmpegLogs: '',\n  ffmpegError: false,\n};\n\nexport const editorSlice = createSlice({\n  name: 'editor',\n  initialState,\n  reducers: {\n    setEncoderProgress: (state, action: PayloadAction<number>) => {\n      state.encoderProgress = action.payload;\n    },\n    setActiveLayer: (\n      state,\n      action: PayloadAction<{\n        activeLayerId: string;\n        caretPosition: number;\n        scrollPosition: number;\n      }>,\n    ) => {\n      if (state.isPlaying === true) {\n        state.videoCaretPosition = action.payload.caretPosition;\n        state.videoScrollPosition = action.payload.scrollPosition;\n        state.activeLayer = action.payload.activeLayerId;\n        // console.info(\"active update video\", state.videoCaretPosition, state.videoScrollPosition)\n      }\n    },\n    setCaretPosition: (state, action: PayloadAction<number>) => {\n      state.caretPosition = action.payload;\n      if (state.isPlaying === false) {\n        state.videoCaretPosition = action.payload;\n      }\n    },\n    setScrollPosition: (state, action: PayloadAction<number>) => {\n      state.scrollPosition = action.payload;\n      if (state.isPlaying === false) {\n        state.videoScrollPosition = action.payload;\n      }\n    },\n    setPixelsPerSecond: (state, action: PayloadAction<number>) => {\n      state.pixelsPerSecond = action.payload;\n    },\n    createBackgroundRenderJob: (\n      state,\n      action: PayloadAction<BackgroundRenderJob>,\n    ) => {\n      state.jobs.push(action.payload);\n    },\n    setJobProgress: (\n      state,\n      action: PayloadAction<BackgroundRenderJob>,\n    ) => {\n      state.jobsProgress[action.payload.id] =\n        action.payload.progress!;\n    },\n    setIsPlaying: (state, action: PayloadAction<boolean>) => {\n      state.isPlaying = action.payload;\n      if (action.payload === false) {\n        state.videoCaretPosition = state.caretPosition;\n        state.videoScrollPosition = state.scrollPosition;\n      }\n    },\n    setTotalTime: (state, action: PayloadAction<number>) => {\n      state.totalTime = action.payload;\n    },\n    setScrollParams: (\n      state,\n      action: PayloadAction<{\n        totalWidth: number;\n        totalScroll: number;\n      }>,\n    ) => {\n      state.scrollParams = action.payload;\n      const canScroll =\n        state.scrollParams.totalScroll >\n        state.scrollParams.totalWidth;\n      const newscroll =\n        state.scrollParams.totalScroll -\n        state.scrollParams.totalWidth;\n      if (\n        state.canScroll !== canScroll &&\n        state.isPlaying === false\n      ) {\n        // console.info('update scroll', newscroll, canScroll)\n        state.canScroll = canScroll;\n      }\n      if (state.scroll !== newscroll && !isNaN(newscroll)) {\n        state.scroll = newscroll;\n      }\n    },\n    setShowEditor: (state, action: PayloadAction<boolean>) => {\n      state.showEditor = action.payload;\n    },\n    setShowComments: (state, action: PayloadAction<boolean>) => {\n      state.showComments = action.payload;\n    },\n    setIsRendering: (state, action: PayloadAction<boolean>) => {\n      state.isRendering = action.payload;\n      if (state.isRendering) {\n        state.ffmpegLogs = '';\n        state.ffmpegError = false;\n      }\n    },\n    setRenderUrl: (\n      state,\n      action: PayloadAction<string | undefined>,\n    ) => {\n      state.renderOutputURL = action.payload;\n    },\n    setRenderProgress: (\n      state,\n      action: PayloadAction<{progress: number; time: number}>,\n    ) => {\n      state.renderProgress = action.payload.progress;\n      state.renderTime = action.payload.time / 1000000;\n      // console.info('renderTime', state.renderTime)\n      state.caretPosition = state.renderTime * state.pixelsPerSecond;\n      state.videoCaretPosition = state.caretPosition;\n    },\n    addNewLogLine: (state, action: PayloadAction<string>) => {\n      state.ffmpegLogs += '\\n' + action.payload;\n      if (action.payload.toLowerCase().search('error') > -1)\n        state.ffmpegError = true;\n    },\n  },\n});\n\nexport const {\n  setEncoderProgress,\n  setCaretPosition,\n  setScrollPosition,\n  setPixelsPerSecond,\n  setIsPlaying,\n  setScrollParams,\n  setActiveLayer,\n  setShowComments,\n  setShowEditor,\n  setIsRendering,\n  setRenderUrl,\n  setRenderProgress,\n  addNewLogLine,\n} = editorSlice.actions;\n\nexport default editorSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport type {RootState} from '../store';\nimport {act} from 'react-test-renderer';\n\nexport interface EncoderState {\n  encoderProgress: number;\n}\n\nconst initialState: EncoderState = {\n  encoderProgress: 0,\n};\n\nexport const encoderSlice = createSlice({\n  name: 'encoder',\n  initialState,\n  reducers: {\n    setEncoderProgress: (state, action: PayloadAction<number>) => {\n      state.encoderProgress = action.payload;\n    },\n  },\n});\n\nexport const {setEncoderProgress} = encoderSlice.actions;\n\nexport default encoderSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\n\nexport interface FileSystemState {\n  isDeleting: boolean;\n  deleteItemId?: string;\n  downloadingProgress: {[key: string]: number | undefined};\n  sharing: {[key: string]: true | undefined};\n}\n\nconst initialState: FileSystemState = {\n  isDeleting: false,\n  downloadingProgress: {},\n  sharing: {},\n};\n\nexport const FileSystemSlice = createSlice({\n  name: 'fs',\n  initialState,\n  reducers: {\n    setDeleteItem: (\n      state,\n      {\n        payload: {deleteItemId},\n      }: PayloadAction<{deleteItemId: string}>,\n    ) => {\n      state.isDeleting = deleteItemId ? true : false;\n      state.deleteItemId = deleteItemId;\n    },\n    setSharing: (\n      state,\n      {\n        payload: {itemId, status},\n      }: PayloadAction<{\n        itemId: string;\n        status: true | undefined;\n      }>,\n    ) => {\n      state.sharing[itemId] = status;\n    },\n    setDownloadingProgress: (\n      state,\n      {\n        payload: {itemId, progress},\n      }: PayloadAction<{\n        itemId: string;\n        progress: number | undefined;\n      }>,\n    ) => {\n      state.downloadingProgress[itemId] = progress;\n    },\n  },\n});\n\nexport const {setDeleteItem, setDownloadingProgress, setSharing} =\n  FileSystemSlice.actions;\n\nexport default FileSystemSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport type {RootState} from '../store';\nimport {Media} from '../../types';\n\nexport interface MediaState {\n  currentMediaPlaying?: string;\n  currentMediaId?: string;\n  isMediaPlaying?: boolean;\n  isMediaPaused?: boolean;\n  isMediaPreloadingPlayback?: boolean;\n  isMediaDownloading?: boolean;\n  isLoadingMedia?: boolean;\n  currentMedia?: Media;\n}\n\nexport enum MediaActionType {\n  stop = 'stop',\n  play = 'play',\n  loaded = 'loaded',\n  pause = 'pause',\n}\n\nexport interface MediaPlayAction {\n  actionType: MediaActionType.play;\n  mediaId: string;\n  media: Media;\n}\nexport interface MediaPauseAction {\n  actionType: MediaActionType.pause;\n  pause: boolean;\n}\n\nexport interface MediaLoadedAction {\n  actionType: MediaActionType.loaded;\n  mediaId: string;\n}\n\nexport type MediaGenericActions = MediaActionType.stop;\n\nexport type MediaAction =\n  | {actionType: MediaGenericActions}\n  | MediaPlayAction\n  | MediaLoadedAction;\n\nconst initialState: MediaState = {};\n\nexport const mediaSlice = createSlice({\n  name: 'media',\n  initialState,\n  reducers: {\n    stop: state => {\n      state.isLoadingMedia = undefined;\n      state.currentMediaId = undefined;\n    },\n    play: (state, action: PayloadAction<MediaPlayAction>) => {\n      state.currentMediaId = action.payload.mediaId;\n      state.currentMedia = action.payload.media;\n      state.isLoadingMedia = true;\n    },\n    togglePause: (state, action: PayloadAction<MediaPauseAction>) => {\n      state.isMediaPaused = action.payload.pause;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    loaded: (state, _action: PayloadAction<MediaLoadedAction>) => {\n      state.isLoadingMedia = false;\n      state.isMediaPlaying = true;\n    },\n  },\n});\n\nexport const {stop, play, loaded, togglePause} = mediaSlice.actions;\n\nexport const selectCurrentMediaId = (state: RootState) =>\n  state.media.currentMediaId;\n\nexport const selectIsLoadingMedia = (state: RootState) =>\n  state.media.isLoadingMedia;\n\nexport const selectIsPlayingMedia = (state: RootState) =>\n  state.media.isMediaPlaying;\n\nexport default mediaSlice.reducer;\n","import {createSlice, PayloadAction} from '@reduxjs/toolkit';\nimport {\n  RootStackRouteNames,\n  StackRouteName,\n  UnifiedStackParam,\n} from '../../types/nav';\nimport {Folder, FolderType} from '../../types';\nimport React from 'react';\n\nexport interface AppDialog {\n  appDialogVisible: boolean;\n  appDialogBody: (() => React.JSX.Element) | string | undefined;\n  appDialogIcon: string | undefined;\n  appDialogTitle: string | undefined;\n  appDialogControls: React.Component | undefined;\n  appDialogOnSelectRight: (() => Promise<void>) | undefined;\n  appDialogOnSelectLeftt: (() => Promise<void>) | undefined;\n}\n\nexport interface UIState extends AppDialog {\n  isTabBarHidden: boolean;\n  isKeyboardOpen: boolean;\n  keyboardHeight: number;\n  currentPage: StackRouteName;\n  parentName: RootStackRouteNames;\n  params: UnifiedStackParam;\n  isReady: boolean;\n  isSignedIn: boolean;\n  isBackEnabled: boolean;\n  isEditing: boolean;\n  toastText: string | undefined;\n  toastIcon: string;\n  editingMode:\n    | 'party'\n    | 'folder'\n    | 'media'\n    | 'search'\n    | 'database'\n    | undefined;\n  folderType: FolderType;\n  folderItemMenuOpen: string | undefined;\n  isEditingProfile: boolean;\n}\n\nconst initialState: UIState = {\n  isTabBarHidden: false,\n  isKeyboardOpen: false,\n  keyboardHeight: 0,\n  currentPage: 'FilesTab',\n  isReady: false,\n  isSignedIn: false,\n  params: undefined,\n  isBackEnabled: false,\n  folderType: FolderType.media,\n  isEditing: false,\n  editingMode: undefined,\n  parentName: 'FilesTab',\n  folderItemMenuOpen: undefined,\n  appDialogVisible: false,\n  appDialogBody: undefined,\n  appDialogIcon: undefined,\n  appDialogTitle: undefined,\n  appDialogControls: undefined,\n  appDialogOnSelectRight: undefined,\n  appDialogOnSelectLeftt: undefined,\n  toastText: undefined,\n  toastIcon: 'check-circle',\n  isEditingProfile: false,\n};\n\nconst PagesWithoutTabBar = ['Chat', 'EditorProject', 'Auction'];\n\nconst PagesWithBackEnabled = [\n  'Devices',\n  'Databases',\n  'Drive',\n  'Folder',\n  'Chat',\n  'EncoderProject',\n  'EditorProject',\n  'Auction',\n];\n\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    setCurrentPage(\n      state,\n      {\n        payload: {currentPage, params, parentName},\n      }: PayloadAction<{\n        currentPage: StackRouteName;\n        params: UnifiedStackParam;\n        parentName: RootStackRouteNames;\n      }>,\n    ) {\n      console.info({currentPage, parentName});\n      state.currentPage = currentPage;\n      state.params = params;\n      state.parentName = parentName;\n\n      if (PagesWithoutTabBar.includes(currentPage)) {\n        state.isTabBarHidden = true;\n      } else {\n        state.isTabBarHidden = false;\n      }\n\n      if (PagesWithBackEnabled.includes(currentPage)) {\n        state.isBackEnabled = true;\n      } else {\n        state.isBackEnabled = false;\n      }\n\n      let folderType = FolderType.media;\n\n      if (currentPage === 'FilesTab') folderType = FolderType.media;\n      if (currentPage === 'ContactsTab')\n        folderType = FolderType.contact;\n      if (currentPage === 'ContactsTab')\n        folderType = FolderType.contact;\n      if (currentPage === 'Contacts') folderType = FolderType.contact;\n      if (currentPage === 'Chat') folderType = FolderType.contact;\n      if (currentPage === 'SettingsTab')\n        folderType = FolderType.settings;\n      if (currentPage === 'EncoderTab')\n        folderType = FolderType.encoder;\n      if (currentPage === 'EncoderProject')\n        folderType = FolderType.encoder;\n      if (currentPage === 'EditorTab') folderType = FolderType.editor;\n      if (currentPage === 'EditorProject')\n        folderType = FolderType.editor;\n      if (currentPage === 'Devices') folderType = FolderType.settings;\n      if (currentPage === 'Databases')\n        folderType = FolderType.settings;\n      if (currentPage === 'Drive') folderType = FolderType.settings;\n      if (currentPage === 'Settings')\n        folderType = FolderType.settings;\n\n      if (currentPage === 'Folder') {\n        if (parentName === 'EditorTab')\n          folderType = FolderType.editor;\n        if (parentName === 'EncoderTab')\n          folderType = FolderType.encoder;\n        if (parentName === 'ContactsTab')\n          folderType = FolderType.contact;\n        if (parentName === 'SettingsTab')\n          folderType = FolderType.settings;\n        if (parentName === 'FilesTab') folderType = FolderType.media;\n      }\n\n      state.folderType = folderType;\n    },\n    setFolderMenuItemId(\n      state,\n      {\n        payload: {itemId},\n      }: PayloadAction<{itemId: string | undefined}>,\n    ) {\n      state.folderItemMenuOpen = itemId;\n    },\n    setAppDialogParams(\n      state,\n      {\n        payload: {\n          appDialogVisible,\n          appDialogBody,\n          appDialogIcon,\n          appDialogControls,\n          appDialogOnSelectLeftt,\n          appDialogOnSelectRight,\n          appDialogTitle,\n        },\n      }: PayloadAction<AppDialog>,\n    ) {\n      state.appDialogVisible = appDialogVisible;\n      state.appDialogBody = appDialogBody;\n      state.appDialogIcon = appDialogIcon;\n      state.appDialogControls = appDialogControls;\n      state.appDialogOnSelectLeftt = appDialogOnSelectLeftt;\n      state.appDialogOnSelectRight = appDialogOnSelectRight;\n      state.appDialogTitle = appDialogTitle;\n    },\n    setToastText(state, {payload}: {payload: string | undefined}) {\n      state.toastText = payload;\n    },\n    setToastIcon(state, {payload}: {payload: string | undefined}) {\n      state.toastIcon = payload;\n    },\n    setKeyboardHeight(\n      state,\n      {\n        payload: {keyboardHeight},\n      }: PayloadAction<{keyboardHeight: number}>,\n    ) {\n      state.keyboardHeight = keyboardHeight;\n      if (keyboardHeight === 0) {\n        state.isKeyboardOpen = false;\n      } else {\n        state.isKeyboardOpen = true;\n      }\n    },\n    setEditingMode(\n      state,\n      {payload}: PayloadAction<UIState['editingMode']>,\n    ) {\n      state.editingMode = payload;\n      if (payload === undefined || payload === 'media')\n        state.isEditing = false;\n      else state.isEditing = true;\n    },\n    setIsReady(state, {payload}: PayloadAction<boolean>) {\n      state.isReady = payload;\n    },\n    setIsSigned(state, {payload}: PayloadAction<boolean>) {\n      state.isSignedIn = payload;\n    },\n    setIsEditingProfile(state, {payload}: PayloadAction<boolean>) {\n      state.isEditingProfile = payload;\n    },\n  },\n});\nexport const {\n  setCurrentPage,\n  setKeyboardHeight,\n  setIsReady,\n  setIsSigned,\n  setEditingMode,\n  setFolderMenuItemId,\n  setAppDialogParams,\n  setToastText,\n  setToastIcon,\n  setIsEditingProfile,\n} = uiSlice.actions;\nexport default uiSlice.reducer;\n","import {createSlice} from '@reduxjs/toolkit';\nimport type {PayloadAction} from '@reduxjs/toolkit';\nimport type {RootState} from '../store';\nimport {Media} from '../../types';\nimport {AxiosProgressEvent} from 'axios';\n\nexport interface UploadState {\n  file?: FileReader;\n  media?: Media;\n  modalVisible: boolean;\n  uploadToCloud: boolean;\n  shareToWT: boolean;\n  encryption: boolean;\n  persist: boolean;\n  fileUploadProgress: AxiosProgressEvent | undefined;\n  isUploadInProgress: boolean;\n  totalChunks: number;\n}\n\nexport interface UploadAction {\n  file: FileReader;\n  media: Media;\n}\n\nexport interface UploadContinueAction extends UploadAction {\n  uploadId: string;\n}\n\nexport interface UploadStopAction {\n  uploadId: string;\n}\n\nconst initialState: UploadState = {\n  modalVisible: false,\n  uploadToCloud: false,\n  persist: true,\n  shareToWT: false,\n  encryption: false,\n  fileUploadProgress: undefined,\n  isUploadInProgress: false,\n  totalChunks: 0,\n};\n\nexport const uploadSlice = createSlice({\n  name: 'upload',\n  initialState,\n  reducers: {\n    startOnboarding: (state, action: PayloadAction<UploadAction>) => {\n      console.info('start onboarding', action);\n      state.file = action.payload.file;\n      state.media = action.payload.media;\n      state.modalVisible = true;\n    },\n    continue: (\n      state,\n      action: PayloadAction<UploadContinueAction>,\n    ) => {},\n    cancel: state => {\n      state.modalVisible = false;\n    },\n    setMediaModalVisible: (state, action: PayloadAction<boolean>) => {\n      state.modalVisible = action.payload;\n      if (!action.payload) {\n        state.file = undefined;\n      }\n    },\n    setFileUploadProgress: (\n      state,\n      action: PayloadAction<AxiosProgressEvent>,\n    ) => {\n      state.fileUploadProgress = action.payload;\n    },\n    setUploadInProgress: (state, action: PayloadAction<boolean>) => {\n      state.isUploadInProgress = action.payload;\n    },\n    setShareToWt: (state, action: PayloadAction<boolean>) => {\n      state.shareToWT = action.payload;\n    },\n    setUploadToCloud: (state, action: PayloadAction<boolean>) => {\n      state.uploadToCloud = action.payload;\n    },\n    setEncrypt: (state, action: PayloadAction<boolean>) => {\n      state.encryption = action.payload;\n    },\n    setMetaForCloud: (state, action: PayloadAction<string>) => {\n      state.media!.webpage_url = action.payload;\n      state.media!.hasCloud = true;\n      state.media!.extractor = 'cloud';\n      state.media!.url = action.payload;\n    },\n  },\n});\n\nexport const {\n  startOnboarding,\n  cancel,\n  setMediaModalVisible,\n  setFileUploadProgress,\n  setUploadInProgress,\n  setUploadToCloud,\n  setEncrypt,\n  setShareToWt,\n  setMetaForCloud,\n} = uploadSlice.actions;\n\nexport const selectCurrentMediaId = (state: RootState) =>\n  state.media.currentMediaId;\n\nexport const selectIsLoadingMedia = (state: RootState) =>\n  state.media.isLoadingMedia;\n\nexport const selectIsPlayingMedia = (state: RootState) =>\n  state.media.isMediaPlaying;\n\nexport default uploadSlice.reducer;\n","import {configureStore} from '@reduxjs/toolkit';\nimport mediaReducer from './slices/media';\nimport uploadReducer from './slices/upload';\nimport editorReducer from './slices/editor';\nimport chatReducer from './slices/chat';\nimport fsReducer from './slices/fs';\nimport encoderReducer from './slices/encoder';\nimport uiReducer from './slices/ui';\nimport auction from './slices/auction';\nexport const store = configureStore({\n  reducer: {\n    media: mediaReducer,\n    upload: uploadReducer,\n    encoder: encoderReducer,\n    chat: chatReducer,\n    fs: fsReducer,\n    editor: editorReducer,\n    ui: uiReducer,\n    auction,\n  },\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import {IMessage} from 'react-native-gifted-chat';\n\nexport interface Contact {\n  id: string;\n  isContact: boolean;\n  name: string;\n  photo: string;\n  date: number;\n  description: string;\n  email?: string;\n  originalId: string;\n  folderId: string;\n  online?: boolean;\n  lastSeen?: number;\n  thumbnail?: string;\n  unread?: number;\n  partyId?: string;\n  mnemonic: string;\n}\n\nexport interface ContactRes {\n  docs: Contact[];\n}\n\nexport interface ChatRoom {\n  userIds: string[];\n  _id: string;\n  created: number;\n  admins: string[];\n  userId: string[];\n}\n\nexport interface ChatRoomRes {\n  docs: ChatRoom[];\n}\n\nexport enum ChatMessageType {\n  media = 'media',\n  call = 'call',\n  text = 'text',\n  party_request = 'party_request',\n  party_confirmation = 'party_confirmation',\n  party_start = 'party_start',\n  party_join = 'party_join',\n  party_stop = 'party_stop',\n  party_quit = 'party_quit',\n  party_media = 'party_media',\n  party_stop_media = 'party_media_stop',\n  party_media_pause = 'party_media_pause',\n  party_media_unpause = 'party_media_unpause',\n  party_media_sync = 'party_media_sync',\n}\n\nexport interface ChatMessage extends IMessage {\n  id: string;\n  created: number;\n  roomId: string;\n  userId: string;\n  readByUserIds: string[];\n  jwt: string;\n  messageStatus: ChatMessageStatus;\n  text: string;\n  pushed?: boolean;\n  encryptedContent?: string;\n  messageType?: ChatMessageType;\n  partyId?: string;\n  createdAt: number;\n  userName: string;\n  message: {\n    type: 'media' | 'call' | 'text';\n    data: string;\n  };\n  orderId: number;\n}\n\nexport enum ChatMessageStatus {\n  created = 'created',\n  sent = 'sent',\n  delivered = 'delivered',\n  read = 'read',\n}\n\nexport interface ChatMessageRes {\n  docs: ChatMessage[];\n}\n","export interface Folder {\n  id: string;\n  isFolder: boolean;\n  userId: string;\n  folderType: FolderType;\n  title: string;\n  isOpen?: boolean;\n  date: number;\n  isEditing?: boolean;\n  isInfoOpen?: boolean;\n  sortId?: number;\n  thumbnail?: string;\n  files?: string[];\n  folderId?: string;\n  orderId: number;\n  mnemonic?: string;\n  isShared?: boolean;\n}\n\nexport enum FolderType {\n  contact = 'contact',\n  media = 'media',\n  settings = 'settings',\n  encoder = 'encoder',\n  editor = 'editor',\n  database = 'database',\n  auction = 'auction',\n}\n\nexport interface FolderRes {\n  docs: Folder[];\n}\n","import {Contact} from './Contact';\nimport {Folder} from './Folder';\n\nexport interface ExtractorResponse {\n  id: string;\n  url?: string;\n  extractor: string;\n  _has_drm?: boolean;\n  _filename?: string;\n  _type?: string;\n  _version?: string;\n}\n\nexport interface MediaStateType {\n  currentVideo: Media | null;\n  currentVideoId: string | null;\n  isLoading: boolean;\n  isPlaying: boolean;\n  openItemId: string | null;\n  enqMedia: (media: Media) => Promise<any>;\n  setOpenItem: (i: Media) => void;\n  webViewUrl?: string | null;\n  host?: string;\n  fileParam?: string;\n  webViewRef?: any;\n  magnetURI?: string | null;\n  onUpdateMagnet?: () => Promise<any>;\n}\n\nexport interface Media extends ExtractorResponse {\n  _id?: string;\n  _rev?: string;\n  _deleted?: boolean;\n  date: number;\n  isMediaNew: boolean;\n  folderId: string;\n  originalId: string;\n  webpage_url?: string;\n  title: string;\n  isPlaying?: boolean;\n  isDownloaded?: boolean;\n  isDownloading?: boolean;\n  isOpen?: boolean;\n  isInfoOpen?: boolean;\n  thumbnail?: string;\n  currentPosition?: number;\n  local?: string;\n  torrentFileName?: string;\n  files?: IFile[];\n  magnetURI?: string;\n  infoHash?: string;\n  description?: string;\n  filename: string;\n  fileType: string;\n  userId: string;\n  size?: number;\n  type?: string;\n  hasCloud?: boolean;\n  isEncoderProject?: boolean;\n  width: number;\n  height: number;\n  orderId: number;\n  duration?: number;\n  isCopy?: string;\n  mnemonic: string;\n  isAuctionMedia?: boolean;\n  torrentFile?: ArrayBuffer;\n}\n\nexport enum FFMpegPreset {\n  ultrafast = 'ultrafast',\n  superfast = 'superfast',\n  veryfast = 'veryfast',\n  faster = 'faster',\n  fast = 'fast',\n  medium = 'medium',\n}\n\nexport enum FFMpegOutputType {\n  mp4 = 'mp4',\n  gif = 'gif',\n}\n\nexport interface EncoderProject extends Media {\n  encoding: {\n    outputFilePath?: string;\n    compressionLevel: number;\n    width: number;\n    height: number;\n    crf: number;\n    preset: FFMpegPreset;\n    output: FFMpegOutputType;\n    code: String[];\n    lastUpdated: number;\n    start?: number;\n    end?: number;\n    soundVolume?: number;\n  };\n}\n\nexport interface EditorComment extends EncoderProject, Contact {\n  description: string;\n}\n\nexport interface EditorProject extends Folder {\n  isEditorProject?: boolean;\n  editor: {\n    length: number;\n    width: number;\n    height: number;\n    lastUpdated: number;\n    start?: number;\n    end?: number;\n    outputFilePath?: string;\n    compressionLevel: number;\n    framerate?: number;\n    aspectRatio?: string;\n    preset: FFMpegPreset;\n    output: FFMpegOutputType;\n    code?: string[];\n  };\n}\n\nexport interface EditorLayer extends Folder {\n  isEditorLayer?: boolean;\n  editor: {\n    muted?: boolean;\n    videoDisabled?: boolean;\n    isCommentLayer?: boolean;\n  };\n  media?: EncoderProject[];\n}\n\nexport interface MediaRes {\n  docs: Media[];\n}\n\nexport interface IFile {\n  url: string;\n  name: string;\n  type: string;\n}\n","export * from './Contact';\nexport * from './Media';\nexport * from './UserInfo';\nexport * from './Folder';\nexport * from './Auction';\n\nimport {Contact} from './Contact';\nimport {Media} from './Media';\nimport {UserInfo} from './UserInfo';\nimport {Folder} from './Folder';\nimport {Platform} from 'react-native';\nimport {useMedia} from '../hooks/useMedia';\nimport {useContacts} from '../hooks/useContacts';\nimport {useFolders} from '../hooks/useFolders';\nimport {useFolder} from '../hooks/useFolder';\n\nexport enum FTSIndex {\n  title = 'titleFTSIndex',\n  name = 'nameFTSIndex',\n  text = 'textFTSIndex',\n}\n\nexport interface DocsGeneric {\n  docs: (Folder | Media | Contact | UserInfo)[];\n  rows: {\n    _id: string;\n    doc: Folder | Media | Contact | UserInfo;\n  }[];\n}\n\nexport interface Device {\n  id: string;\n  manufacturer: string;\n  createdAt: number;\n  isDevice: boolean;\n  model: string;\n  ip?: string;\n  userAgent: string;\n  os: string;\n  platform: typeof Platform.OS;\n}\n\nexport type DataHook = ReturnType<\n  | typeof useFolders\n  | typeof useMedia\n  | typeof useContacts\n  | typeof useFolder\n>;\n\nexport type DataHookFolders = ReturnType<\n  typeof useFolders | typeof useMedia | typeof useContacts\n>;\n\nexport type DocsGenericArray = (\n  | Folder\n  | Media\n  | Contact\n  | UserInfo\n)[];\n","import {\n  DrawerNavigationState,\n  EventArg,\n  TabNavigationState,\n} from '@react-navigation/native';\n\nexport type SettingsStackParams = {\n  Settings: undefined;\n  Databases: undefined;\n  Devices: undefined;\n  Drive: undefined;\n};\n\nexport type FileStackParams = {\n  Files: undefined;\n  Folder: FolderParams;\n  Auction: AuctionParams;\n};\n\nexport interface AuctionParams {\n  auctionId: string;\n  mnemonic: string;\n  title: string;\n}\n\nexport type EncoderStackParams = {\n  EncoderProjects: undefined;\n  Folder: FolderParams;\n  EncoderProject: ProjectParams;\n};\n\nexport type EditorStackParams = {\n  EditorProjects: undefined;\n  Folder: FolderParams;\n  EditorProject: ProjectParams;\n};\n\nexport type ChatStackParams = {\n  Contacts: undefined;\n  Folder: FolderParams;\n  Chat: ChatParams;\n};\nexport interface ProjectParams {\n  projectId: string;\n  mnemonic?: string;\n  parentFolderId: string;\n  folderId: string;\n  encoder?: string;\n}\n\nexport interface FolderParams {\n  folderId: string;\n  mnemonic?: string;\n  parentFolderId?: string;\n  userId?: string;\n  title: string;\n}\n\nexport interface ChatParams {\n  parentFolderId: string;\n  name: string;\n  mnemonic: string;\n  chatId: string;\n  page?: number;\n}\n\nexport interface RootStackParams {\n  Starp: {\n    screen: RootStackRouteNames;\n    params: {\n      screen: keyof UnifiedStackParams;\n      params: UnifiedStackParam;\n    };\n  };\n}\n\nexport type ProjectsStackedParams = EditorStackParams &\n  EncoderStackParams;\n\nexport type NavigationStackParams = EditorStackParams &\n  EncoderStackParams &\n  FileStackParams &\n  ChatStackParams &\n  SettingsStackParams;\n\nexport type UnifiedStackParams = NavigationStackParams &\n  RootStackParams;\n\nexport type ExtendedNavState = EventArg<\n  'state',\n  undefined,\n  {\n    state:\n      | DrawerNavigationState<NavigationStackParams>\n      | TabNavigationState<NavigationStackParams>;\n  }\n>;\n\nexport type UnifiedStackParam =\n  NavigationStackParams[keyof NavigationStackParams];\n\nexport type RootStackRouteNames =\n  | 'FilesTab'\n  | 'ContactsTab'\n  | 'EditorTab'\n  | 'EncoderTab'\n  | 'SettingsTab';\n\nexport const RootStackName = 'Starp';\n\nexport type StackRouteName =\n  | keyof UnifiedStackParams\n  | RootStackRouteNames;\n\nexport const RootScreens: {\n  [key in RootStackRouteNames]: keyof UnifiedStackParams;\n} = {\n  ContactsTab: 'Contacts',\n  EditorTab: 'EditorProjects',\n  FilesTab: 'Files',\n  EncoderTab: 'EncoderProjects',\n  SettingsTab: 'Settings',\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"StarpyApp:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkStarpyApp\"] = self[\"webpackChunkStarpyApp\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [122,588,68], () => (__webpack_require__(130512)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_Ionicons","_interopRequireDefault","_MaterialCommunityIcons","_Ionicons2","_App","iconFontStyles","iconFont","style","document","createElement","type","styleSheet","cssText","appendChild","createTextNode","head","initUserData","then","createRoot","getElementById","render","App","_react","_LogBox","_Platform","_app","LogBox","ignoreAllLogs","theme","Object","assign","MD3DarkTheme","fonts","configureFonts","config","default","fontFamily","fontWeight","letterSpacing","lineHeight","fontSize","isV3","_exports","_useUserData","useUserData","userDataState","userDataDispatch","_reactRedux","Provider","store","_reactQuery","QueryClientProvider","client","queryClient","_ctx","UserCtx","value","UserData","UserDataState","UserDataDispatch","_reactNativeSafeAreaContext","SafeAreaProvider","_reactNativePaper","PaperProvider","Fragment","require","db","_getRequireWildcardCache","e","WeakMap","r","t","SQLite","__esModule","has","get","n","__proto__","a","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_ref","_asyncToGenerator2","openDatabaseAsync","execAsync","_ref2","writeBlob","_writeBlob","id","blob","runAsync","_x","_x2","apply","arguments","readBlobs","_readBlobs","data","getAllAsync","deletequery","map","join","_x3","_reactNativeUuid","sendChatMessage","chatId","text","mnemonic","message","getUserData","uuid","v4","userId","folderId","messageStatus","userName","name","createdAt","Date","valueOf","ndata","nEvolu","createDBConn","writeItem","_x4","genMnemonic","limit","offset","_e","_e2","_data$rows","folder","getById","query","createQuery","selectFrom","selectAll","where","orderBy","loadQuery","rows","item","err","console","error","_x5","_x6","_x7","_x8","_ref3","party","info","user","contact","authorId","authorName","isContact","system","_x9","faker","animal","bird","split","toLowerCase","color","human","fish","insect","hacker","noun","QueryClient","defaultOptions","queries","refetchOnWindowFocus","refetchOnMount","refetchOnReconnect","Database","database","ItemTable","dbConns","window","dbMnemoCons","defaultDBName","dbname","index","ops","syncUrl","createEvolu","socket","Promise","res","indexAllFoldersForDB","subscribeSyncState","getSyncState","_tag","isFirstSync","refetchQueries","folderPromises","nitem","isDeleted","isAuction","filter","all","getFolderContent","_ref4","apiKey","_localStorage","localStorage","getItem","_yield$findBy","findBy","userData","_slicedToArray2","devices","_ref5","evolu","getFoldersByType","_ref6","_ref7","_ref8","_window","parentFolderId","URL","location","toString","searchParams","isFolder","isEditorLayer","isEditorProject","isMediaNew","isEncoderProject","extractor","createOrUpdate","title","isDevice","userDoc","folderType","orderId","mediaId","auctionId","lastUpdated","_ref9","_ref10","key","_x10","_x11","_ref11","_e3","_e4","_item$row","_i","_i2","_i3","row","undefined","max","keys","_ref12","dbConnId","_x14","fmx","m","length","flat","_x12","_x13","_ref13","_databases","databases","FolderType","exists","find","ndb","isDatabase","date","added","_x15","_x16","_x17","initDatabaseRecord","getOwner","SomeJson","S","Struct","foo","String","bar","Boolean","ItemId","table","String1000","isCompleted","SqliteBoolean","ExpoFileSystem","ffmpeg","FFmpeg","util","fetchFile","toBlobURL","cachedMedia","cancelEncoding","terminate","createFFmpeg","cb","_resolve","_reject","_require","imported","on","log","params","load","coreURL","ffMpegWasmBaseUrl","wasmURL","encodeMedia","media","isPrerender","isCopy","nmedia","fileId","filename","encoding","cachedId","outFileId","output","getFileOpfs","dirCore","navigator","storage","getDirectory","appDirectory","dir","getDirectoryHandle","cache","getFileHandle","file","getFile","createObjectURL","opfsFile","dlFIle","downloadFileById","progress","time","execCmd","genExecCmd","execEncode","files","encoded","mediaOut","cmd","_yield$writeFileOpfs","fs","writeFile","exec","readFile","writeFileOpfs","genRenderCmd","projectData","layers","logs","_projectData$editor","editor","medias","_projectData$editor2","_medias$map","_medias$map2","_encoding$compression","_encoding$framerate","threads","hardwareConcurrency","extraCode","code","trim","replace","layer","_layer$media","_e$encoding","_e$encoding2","hasAudio","reduce","_layer$editor","muted","hasVideo","_layer$editor2","videoDisabled","audioOutput","audioMap","videoOutput","videoMap","aspectRatio","scale","width","height","filterTrim","_e$encoding3","_e$encoding4","_e$layer","_e$layer2","trimV","start","parseInt","end","duration","trimA","videosLength","_i$layer","audiosLength","_i$layer2","filterConcat","_a$layer","_a$layer2","push","concat","_toConsumableArray2","compressionLevel","preset","framerate","_encoding$compression2","prerenderOptionalCode","genExecTime","seconds","comma","endMins","endSeconds","getActiveProjectLayer","currentPosition","activeMedia","layerCount","_activeMedia","_layer","_layer2","_media$encoding","_media$encoding2","activeLayer","getNextActiveProjectMedia","startPosition","_media$encoding3","_media$encoding4","nextPosition","next","getTotalTime","_layer$media2","agv","_media$encoding5","_media$encoding6","_layer$editor3","_getActiveProjectLaye","offsetPosition","parseFloat","totalTime","encode","url","streamFileChunks","_streamFileChunks","_wrapAsyncGenerator2","path","bytesOffset","chunkSize","byteEnd","currentOffset","buf","Buffer","from","_awaitAsyncGenerator2","FileSystem","readFileChunk","ExpoDocumentPicker","streamFile","iterator","streamGen","stream","ReadableStream","pull","_pull","controller","_yield$iterator$next","done","close","enqueue","clone","dirPath","checkFolder","readDirectoryAsync","makeDirectoryAsync","create","fileHandle","writable","createWritable","write","isDownloaded","getFileReaderOpfs","objectItem","removeEntry","recursive","body","download","href","click","chunksCount","savePromises","savesCompleted","saveFileToData","fileUri","saveCount","resolve","rej","createBlobDB","blobs","bbs","buffers","_appendBuffer","Uint8Array","nfile","getBlobForArrayBuffer","buffer","fr","FileReader","onload","result","appendFile","readAsDataURL","_x18","buffer1","buffer2","tmp","byteLength","pickSingle","_pickSingle","fileInput","addEventListener","_fileInput$files","_fileInput$files2","size","originalId","_x19","_defaults","forEach","prototype","_exportNames","enumerable","_db","_media","_chat","_fs","ExpoDevice","domain","isEditingFolder","colors","searchItems","currentFolderIds","_ExpoDevice$designNam","doInitialMigration","userAgent","designName","os","osName","browserName","brand","deviceId","device","manufacturer","ndevice","model","platform","link","_media$files","_media$files2","getWT","magnetURI","infoHash","_wt","_encoder","recursiveShare","shareFileToWT","innerContent","enqMedia","cast","playMediaLink","_requestAccounts","_sendMatic","maticId","switchNet","_switchNet","chainId","ethereum","request","method","provider","ethers","EtherscanProvider","AlchemyProvider","to","valueNum","payload","_yield$provider$getFe","txParams","parseEther","AbiCoder","JSON","stringify","gasLimit","gasPrice","getFeeData","txHash","_decryptAesKey","_decryptPayload","_encryptAesKey","_encryptPayload","_generateAesKey","_generateNewKeyPair","algo","modulusLength","publicExponent","hash","keyEncAlgo","payloadKeyEncAlgo","payloadEncAlgo","seed","keyPair","crypto","subtle","generateKey","publicKey","exportKey","privateKey","encodeBuffer","_encodeBuffer","array","Blob","reader","event","_dataUrl$split","_dataUrl$split2","base64","kp","base64ToArrayBuffer","binaryString","atob","bytes","charCodeAt","k","importKey","TextEncoder","decrypted","decrypt","decode","TextDecoder","parse","ivb","iv","pubKey","encrypt","getRandomValues","encrypted","encryptedPayload","isOpera","opr","addons","opera","indexOf","InstallTrigger","test","HTMLElement","safari","pushNotification","isIE","documentMode","StyleMedia","chrome","isChrome","CSS","units","x","l","toFixed","mediaClient","mediaWorker","rtcConfig","iceServers","urls","username","credential","sdpSemantics","bundlePolicy","iceCandidatePoolSize","iceTransportPolicy","announce","createMediaClient","WebTorrent","tracker","resolveWorker","reg","worker","active","waiting","installing","resolvd2","checkState","state","loadWorker","target","prs","serviceWorker","register","progressCB","wt","mediaClientFiles","mediaData","getVideoWT","torrent","fetch","arrayBuffer","File","streamUrls","mobileStreamingForFileIsRunning","processWT","_wt$files","_file","_file2","_file$name","_file$name2","_file$name3","_file$name4","endsWith","isVideo","Error","reject","_file3","getStreamURL","catch","torrentFileName","torrentBuffer","torrentFile","values","add","streamUrl","isSharing","magnet","_ref14","_x20","onProgress","_ref15","shareFile","_x21","_x22","_worklet_2113387270167_init_data","anonymous","_ref16","search","_x23","__closure","__workletHash","__initData","_Text","_nav","_reactNativeGestureHandler","GestureHandlerRootView","_native","NavigationContainer","linking","fallback","_auctionTransaction$r","useRoute","userQuery","useQuery","auctionQuery","auction","isLoading","isFetched","isOwner","isWinner","winnerId","sellerReleasedDownload","encryptedKey","winnerPaid","winnerPaymentTransactionId","isClosed","isDownloading","useAppSelector","downloadProgress","downloadText","_useAuctionActions","useAuctionActions","createBid","closeAuction","currentBid","payForAuction","downloadAuctionMedia","releaseDownload","auctionTransaction","confirmationText","receipt","status","useRouteAuction","_View","ActivityIndicator","List","Section","Item","description","minPrice","minStep","Button","icon","onPress","mode","bottom","right","position","top","disabled","Chip","_chatview","dispatch","useAppDispatch","bid","bidAmount","bidWallet","React","TextInput","label","keyboardType","onChangeText","setBidAmount","getWallets","useMutation","accounts","requestAccounts","setBidWallet","setAuctionWallet","setPayWallet","mutateAsync","wallet","payWallet","winnerPrice","Text","_metamaskaccountsbutton","MetamaskAccountsButton","newAuctionName","price","newAuctionPrice","newAuctionWallet","namePlaceholder","walletPlaceholder","pricePlaceholder","placeholder","setAuctioName","setAuctionPrice","_useWindowDimensions","_contentitem","isEmbed","onError","contactQuery","useWindowDimensions","parentFolderHook","useFolder","useRouteContact","isMobile","flexDirection","backgroundColor","_foldernavigator","FolderNavigator","renderContent","dataHook","styles","_TouchableOpacity","chatViewParams","_useMessages","useMessages","messages","sendMessage","nextPage","isLoadingEarlier","current","useContext","useTheme","composerRef","useRef","surface","_reactNativeGiftedChat","GiftedChat","scrollToBottom","renderLoading","_id","onSend","avatar","photo","renderBubble","props","Bubble","_extends2","textStyle","left","textAccentColor","wrapperStyle","alignSelf","maxWidth","timeTextStyle","renderAvatar","_props$currentMessage","GiftedAvatar","currentMessage","avatarStyle","borderWidth","borderColor","listViewProps","scrollEventThrottle","onEndReached","loadEarlier","onLoadEarlier","renderLoadEarlier","renderChatEmpty","transform","scaleY","p","Icon","titleStyle","ProgressBar","indeterminate","visible","renderInputToolbar","inputProps","InputToolbar","containerStyle","primaryStyle","renderComposer","Composer","ref","textInputStyle","padding","multiline","textInputAutoFocus","textInputProps","blurOnSubmit","onSubmitEditing","_props$text","setTimeout","nativeEvent","focus","renderSend","showUserAvatar","_folderlibrary","memo","useContacts","_contactlibrary","showPublicParty","container","flex","paddingTop","marginTop","paddingLeft","tinyLogo","scroll","display","_useWindowDimensions2","_encoderproject","_editorform","_editorvideo","projectId","routeParams","enabled","video2","mediaRes","layersQuery","margin","className","Banner","marginHorizontal","paddingHorizontal","overflow","contentStyle","alignItems","borderLeftWidth","borderRightWidth","borderLeftColor","borderRightColor","_editorplaycontrols","EditorPlayControls","Divider","ScrollView","marginRight","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","projectQuery","encoder","_Animated","caretPosition","translateX","Animated","Value","onGestureEvent","translationX","listener","useNativeDriver","cursor","PanGestureHandler","onHandlerStateChange","oldState","State","ACTIVE","newOffset","fullOffset","setOffset","setValue","setCaretPosition","View","opacity","justifyContent","interpolate","inputRange","outputRange","extrapolate","_item$encoding","_item$encoding2","onDragEnd","onDragStart","layerIndex","parentDataHook","nav","useNavigation","route","pixelsPerSecond","useQueryClient","maxDuration","currentDuration","writeItemMutation","combIndex","deleteItem","onRemoveFolder","_item$encoding3","_item$encoding4","newvalue","_value","zIndex","borderRadius","rotate","setParams","_item$title","_item$title2","TouchableOpacity","onPressIn","onPressOut","pointerEvents","IconButton","Avatar","marginLeft","_SafeAreaView","_Clipboard","_reactNativeSyntaxHighlighter","_reactNativeCodeEditor","scrollPosition","isPlaying","isRendering","renderOutputURL","renderProgress","ffmpegLogs","ffmpegError","_useState","useState","_useState2","showCode","setShowCode","codeEditorRef","inputWidth","codeWidth","_useState3","_useState4","outputMenuVisible","setOutputMenuVisible","_useState5","_useState6","presetMenuVisible","setPresetMenuVisible","outputTypes","FFMpegOutputType","codeString","closeMenu","projectWriteMutation","onSuccess","refetch","processKey","useCallback","ev","_video2$current5","_video2$current6","_video2$current7","_video2$current","_video2$current2","paused","pause","setScrollPosition","_video2$current3","_video2$current4","play","useEffect","onkeyup","selectValue","valueType","np","shouldRerender","includes","isNaN","_video2$current8","setActiveLayer","activeLayerId","setIsRendering","encodeProject","renderParams","setRenderProgress","logLine","addNewLogLine","setRenderUrl","loading","dense","textAlign","_mediaRes$editor","_mediaRes$editor2","_mediaRes$editor3","_mediaRes$editor4","_mediaRes$editor5","Menu","onDismiss","anchor","_mediaRes$editor6","FFMpegPreset","_codeEditorRef$curren","_mediaRes$editor7","inputLineHeight","highlighterLineHeight","language","syntaxStyle","CodeEditorSyntaxStyles","xonokai","initialValue","onChange","_mediaRes$editor8","autoFocus","showLineNumbers","Clipboard","setString","highlighter","customStyle","userSelect","itemId","showComments","isCommentLayer","onClickAddContent","_dataHook$folder2","pickerResult","DocumentPicker","presentationStyle","uri","fId","nd","fileType","startOnboarding","folderContent","_reactNativeDraglist","horizontal","renderItem","_editorcontentitem","keyExtractor","onReordered","toggleLayerProp","propName","_defineProperty2","folderData","muteLayer","hideLayer","Controls","iconSize","parentHook","folderContentQuery","_dataHook$folder","setIsPlaying","_VirtualizedList","_editorcaret","scrollParams","getByIdCallback","onClickAddLayer","horizontalScroll","contentContainerWidth","controlsContainerWidth","_editorlayer","EditorLayerHeaderComponent","onScroll","contentOffset","_horizontalScroll$cur","_horizontalScroll$cur2","_horizontalScroll$cur3","totalWidth","clientWidth","totalScroll","scrollWidth","setScrollParams","scrollTo","EditorLayerBodyComponent","getContentItem","getItemCount","getContentCount","showEditor","isRefreshing","setRefreshing","menuOpen","setMenuOpen","forgetEverything","folders","f","onClickSetScale","nscale","setPixelsPerSecond","onClickCopy","onClickCut","currentData","onClickRefresh","onClickShowComments","setShowComments","onClickAddComment","_layers$","comment","partyId","isParty","createNewParty","Appbar","Action","leadingIcon","_StyleSheet","StyleSheet","video","chip","_encodedMediaQuery$da2","_encodedMediaQuery$da3","_encodedMediaQuery$da6","_encodedMediaQuery$da7","encoderProgress","videoCaretPosition","videoScrollPosition","canScroll","focused","useIsFocused","encodedMediaQuery","getProjectMedia","setEncoderProgress","keepPreviousData","_encodedMediaQuery$da","queryPosition","onTimeUpdate","currentTime","_encodedMediaQuery$da4","_encodedMediaQuery$da5","newtime","newoffset","layerSwitched","nscrollPosition","ncaretPosition","diff","isFetching","controls","src","onPlaying","onPause","onEnded","_mediaRes$encoding","_mediaRes$encoding2","localMediaQuery","encodedFileSize","_head$headers$get","headers","retry","mediaLoading","mediaSrc","video1","niceBytes","_e$nativeEvent$target","Math","abs","_video1$current","_video1$current2","_video1$current3","_video1$current4","_ImageBackground","source","resizeMode","project","afterWrite","ni","clearTimeout","queryKey","resetQueries","exact","_projectData$encoding","_projectData$encoding2","_projectData$encoding3","_projectData$encoding4","soundVolume","_projectData$encoding5","_projectData$encoding6","_projectData$encoding7","_projectData$encoding8","_projectData$encoding9","_projectData$encoding10","_folderitem","folderLibraryProps","dim","drawerOffset","navigation","currentFolderId","currentFolderEditorName","setFolderEditorName","folderNameInputRef","onFolderActionPress","loadingContent","loadingFolders","abortEditFolder","initialNumToRender","isOpen","isInfoOpen","iconColor","isLoadingContent","onFolderPress","navigate","onShareFolder","renderFolder","getItemLayout","_parentFolderHook$fol","foldersHook","useFolders","isLoadingFolder","scrollEnabled","pagingEnabled","onScrollToTop","_data","isFocused","isLoadingFolderContent","addMedia","mstyles","paddingBottom","ListEmptyComponent","contactItemProps","children","Accordion","expanded","_mediaitem","_contactitem","_projectitem","enableMove","ContentItemProps","showMenu","setFolderMenuItemId","hideMenu","onMediaPress","onRemoveMediaPress","onDownloadMediaPress","onCopyLinkPress","onEditMediaPress","isLoadingMedia","onRemoveFile","currentContentId","currentMediaId","onExportFile","onSellPress","itemLoading","isSecondLevel","folderIcon","folderAccesory","isDefaultFolder","defaultFolders","touchableStyle","isMenuOpen","ui","folderItemMenuOpen","useMemo","remove","edit","_folderNameInputRef$c","leftItem","ellipsizeMode","titleColor","numberOfLines","flexWrap","setToastText","column","customTitle","additionalPadding","image","useAuction","thisItemIsLoading","onCellPress","onRemove","onSell","downloadingProgress","sharing","isDownloadedQuery","getFileStats","onep","staleTime","Infinity","onDownloadToggle","iconName","thumbnail","extractorIcon","animating","descriptionColor","gap","setSharing","resizeMethod","imageStyle","projectType","projectIcon","_medialibrary","mediaPlayer","currentMedia","isImage","updateMediaTime","mediaQuery","loaded","actionType","MediaActionType","bannerHeight","objectFit","togglePause","onResize","onLoadedData","isMediaPaused","el","kind","srcLang","flexBasis","useMedia","_appnav","_drawer2","DrawerNav","createDrawerNavigator","Tab","createMaterialBottomTabNavigator","RootStack","createNativeStackNavigator","FileStack","createFileStack","ChatStackScreen","createChatStack","SettingsStack","createSettings","EncoderStack","createEncoder","EditorStack","createEditor","TabNav","isNavHidden","isTabBarHidden","useKeyboardDispatcher","screenStateListener","navState","_navState$data","_navState$data$state","_currentTab$state","_currentTab$state2","currentTab","routes","currentNavPage","parentName","currentPage","setCurrentPage","SafeAreaInsetsContext","Consumer","insets","collapsedDrawerWidth","Navigator","screenOptions","drawerStyle","drawerPosition","drawerType","detachInactiveScreens","defaultStatus","screenListeners","drawerContent","Screen","component","options","headerShown","drawerIcon","barStyle","tabBarLabel","tabBarIcon","header","RootStackName","orientation","freezeOnBlur","_userData$data","enableAudio","Audio","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","InterruptionModeIOS","DuckOthers","playsInSilentModeIOS","staysActiveInBackground","interruptionModeAndroid","InterruptionModeAndroid","shouldDuckAndroid","searchValue","setSearch","editingMode","userState","isLocked","setLocked","newFolderType","encoderProjectTypes","extractLink","exData","extractMedia","showFullSearchBar","addFolderPlaceholder","chatPlacehoder","Header","_navinput","NavInput","_actions","Actions","Searchbar","searchContactsPlaceholderText","defaulPlaceHolderText","inputStyle","_bannercontainer","BannerContainer","appDialogOnSelectLeftt","appDialogOnSelectRight","appDialogVisible","Body","appDialogBody","appDialogTitle","appDialogIcon","setAppDialogParams","appDialogControls","Portal","Dialog","maxHeight","Title","Content","_pickerFileMeta$size","hideMedialModal","routeName","uploadState","upload","mediaModalVisible","modalVisible","pickerFile","pickerFileMeta","uploadToCloud","shareToWt","shareToWT","fileUploadProgress","encryption","isUploadInProgress","uuidFilename","videoMeta","setVideoMeta","uploadFileMutation","attempts","writeItemToLocalStoreMutation","meta","writingItem","peerShared","confirmFile","_folder","_folder2","_folder3","_folder4","comment_layer","setUploadInProgress","setMediaModalVisible","fileUrl","cdndomain","webpage_url","hasCloud","Card","subtitle","animatedValue","Modal","onLoadedMetadata","videoWidth","videoHeight","_expoAv","Video","onLoad","onReadyForDisplay","naturalSize","durationMillis","superfast","mp4","toastText","toastIcon","Snackbar","isEditing","addFileEnabled","addFolderEnabled","settings","showScaleControls","onClickFile","setEditingMode","Tooltip","_editortoolbar","folderParams","screen","RootScreens","useMediaPlayer","_fileupload","cancel","_mediabanner","_encoderbanner","_editorbanner","_choosedialog","ChooseDialog","_toastdialog","ToastDialog","textValue","setText","back","isBackEnabled","getHeaderTitle","placeholderText","onClickExtra","nFolder","showTextField","_backbutton","BackButton","textAlignVertical","maxLength","DrawerCollapsedItemsData","focusedIcon","unfocusedIcon","preference","paddingVertical","v3Preference","badge","collapsedSection","annotation","marginVertical","drawerItemIndex","_drawer","DrawerContentScrollView","alwaysBounceVertical","Drawer","CollapsedItem","DatabaseItemComponent","_getOwner","showMnemonic","totalLength","currentMnemonic","isCurrent","loginMutation","restoreOwner","toDateString","dbReq","getDatabases","dbs","setShowMnemonic","dbName","setDbName","dbMnemonic","setDbMnemonic","createDBMutation","showCreate","userLoading","RegExp","_Pressable","userDataQuery","isLoadingUserData","isEditingProfile","setUserName","userDescription","setUserDescription","onEditProfile","setIsEditingProfile","writeProfileMutation","nuser","onSaveProfile","editIcon","createContext","migrationKey","publicPartyPref","textColor","mediaItemTextColor","mediaBackgroundColor","mediaBorderColor","navTextColor","navInactiveColor","folderColor","folderTextColor","deleteBackgroundColor","deleteTextColor","navBorderColor","contactItemBackgroundColor","contactItemTitleColor","contactItemOnlineColor","currentUserColor","remoteUserColor","baseFolder","createUser","cats","fullName","cat","year","birthdate","getFullYear","handle","idHash","version","prevVersion","createNewUser","newUser","toISOString","MEDIA","closeDialog","useCloseDialog","_useAppSelector","newAuctionBetStep","startAuctionMutation","isAuctionMedia","newAuction","setAuctionBetStep","auctionItems","_auctionItems$","_appDialogOnSelectRight","SellDialogBody","currentBidItem","_bids$sort","bids","isBid","sort","b","amount","trxId","trx","getTransaction","block","getBlock","getTransactionReceipt","refetchInterval","trxData","createBidMutation","closeAuctionMutation","nextBidValue","pay","auctionKeyId","generateNewKeyPair","auctionKey","isKeyPair","transactionId","sendMatic","releaseMutation","pubKeyData","mediaOriginal","aesKey","generateAesKey","encryptAesKey","_yield$encryptPayload","encryptPayload","decryptAesKey","decryptPayload","didDownload","downloadFileByMedia","setDownloadProgress","exportFile","BidDialogBody","_appDialogOnSelectRight2","setWinnerPrice","_appDialogOnSelectRight3","PayDialogBody","_appDialogOnSelectRight4","getContactsFolders","getContactsFolderContent","getFolderContentProxy","getByIdProxy","writeItemProxy","_folderContentQuery$d","_folderContentQuery$d2","_folder$files","getFolderContentMain","getByIdMain","writeItemMain","content","deleteFolderMutation","_route$params","removeObject","folderFiles","userDispatch","editableFolder","updateFolderTitleMutation","UserDataActionType","setEditingFolder","editFolder","didEnd","folderPref","folderUrl","encodeURIComponent","isLoadingFolderContentError","FoldersActionType","routeFolderId","foldersQuery","unshift","selectFolder","setActiveFolder","Keyboard","addListener","setKeyboardHeight","keyboardHeight","endCoordinates","removeAllListeners","getFoldersByTypeProxy","useFoldersState","mediaState","downloads","stop","deleteMediaMutation","deleteFileMutation","exportFileMutation","setDownloadingProgress","_messagesQuery$data","chat","loadingPagination","pageIndex","page","messagesQuery","_yield$Promise$all","getPublicMessages","loadingMessages","sendMessageMutation","nPage","setPaginationState","CommonActions","sendingMessage","messagesError","mutate","createContactMutation","nauction","_onSuccess","ncontact","share","Share","userDataReducer","action","setUser","setFolderType","currentFolderType","_useReducer","useReducer","_useReducer2","_contacts","_folderpage","ChatStack","createStackNavigator","ChatComponent","FolderComponent","ContactsComponent","_editorproject","FolderLibraryComponent","EditorProjectScreen","EncoderProjectScreen","_home","HomeComponent","AuctionPage","_settings","_devices","RenderSettings","Devices","Databases","prefixes","screens","Starp","FilesTab","Folder","Auction","Files","SettingsTab","Drive","Settings","ContactsTab","Chat","Contacts","EncoderTab","EncoderProjects","EncoderProject","EditorTab","EditorProjects","EditorProject","useDispatch","useSelector","AuctionSlice","createSlice","initialState","newAuctionEndDate","payAuctionId","reducers","setAuctioEndDate","_AuctionSlice$actions","actions","reducer","chatSlice","editorSlice","jobs","jobsProgress","prevActiveLayer","renderTime","createBackgroundRenderJob","setJobProgress","setTotalTime","newscroll","setShowEditor","_editorSlice$actions","encoderSlice","FileSystemSlice","isDeleting","setDeleteItem","deleteItemId","_ref2$payload","_ref3$payload","_FileSystemSlice$acti","mediaSlice","_action","isMediaPlaying","_mediaSlice$actions","isKeyboardOpen","isReady","isSignedIn","PagesWithoutTabBar","PagesWithBackEnabled","uiSlice","_ref$payload","setToastIcon","setIsReady","setIsSigned","_uiSlice$actions","persist","totalChunks","uploadSlice","continue","setFileUploadProgress","setShareToWt","setUploadToCloud","setEncrypt","setMetaForCloud","_uploadSlice$actions","_upload","_editor","_ui","_auction","configureStore","mediaReducer","uploadReducer","encoderReducer","chatReducer","fsReducer","editorReducer","uiReducer","ChatMessageType","ChatMessageStatus","_Contact","_Media","_UserInfo","_Folder","_Auction","FTSIndex","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","fulfilled","j","every","splice","getter","d","definition","o","chunkId","promises","miniCssF","g","globalThis","this","Function","obj","prop","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","s","getAttribute","charset","timeout","nc","setAttribute","onScriptComplete","prev","onerror","doneFns","parentNode","removeChild","bind","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","baseURI","self","installedChunks","installedChunkData","promise","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}