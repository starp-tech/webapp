{"version":3,"file":"960.js","mappings":"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","sources":["webpack://StarpyApp/./node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs"],"sourcesContent":["/*\n ** LICENSE for the sqlite3 WebAssembly/JavaScript APIs.\n **\n ** This bundle (typically released as sqlite3.js or sqlite3.mjs)\n ** is an amalgamation of JavaScript source code from two projects:\n **\n ** 1) https://emscripten.org: the Emscripten \"glue code\" is covered by\n **    the terms of the MIT license and University of Illinois/NCSA\n **    Open Source License, as described at:\n **\n **    https://emscripten.org/docs/introducing_emscripten/emscripten_license.html\n **\n ** 2) https://sqlite.org: all code and documentation labeled as being\n **    from this source are released under the same terms as the sqlite3\n **    C library:\n **\n ** 2022-10-16\n **\n ** The author disclaims copyright to this source code.  In place of a\n ** legal notice, here is a blessing:\n **\n ** *   May you do good and not evil.\n ** *   May you find forgiveness for yourself and forgive others.\n ** *   May you share freely, never taking more than you give.\n */\n/*\n ** This code was built from sqlite3 version...\n **\n ** SQLITE_VERSION \"3.46.0\"\n ** SQLITE_VERSION_NUMBER 3046000\n ** SQLITE_SOURCE_ID \"2024-05-23 13:25:27 96c92aba00c8375bc32fafcdf12429c58bd8aabfcadab6683e35bbb9cdebf19e\"\n **\n ** Using the Emscripten SDK version 3.1.30.\n */\n\nvar sqlite3InitModule = (() => {\n  var _scriptDir = import.meta.url;\n\n  return function (config) {\n    var sqlite3InitModule = config || {};\n\n    var Module =\n      typeof sqlite3InitModule != 'undefined' ? sqlite3InitModule : {};\n\n    var readyPromiseResolve, readyPromiseReject;\n    Module['ready'] = new Promise(function (resolve, reject) {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n\n    const sqlite3InitModuleState =\n      globalThis.sqlite3InitModuleState ||\n      Object.assign(Object.create(null), {\n        debugModule: () => {},\n      });\n    delete globalThis.sqlite3InitModuleState;\n    sqlite3InitModuleState.debugModule(\n      'globalThis.location =',\n      globalThis.location,\n    );\n\n    const xNameOfInstantiateWasm = false\n      ? 'instantiateWasm'\n      : 'emscripten-bug-17951';\n    Module[xNameOfInstantiateWasm] = function callee(imports, onSuccess) {\n      imports.env.foo = function () {};\n      const uri = Module.locateFile(\n        callee.uri,\n        'undefined' === typeof scriptDirectory ? '' : scriptDirectory,\n      );\n      sqlite3InitModuleState.debugModule('instantiateWasm() uri =', uri);\n      const wfetch = () => fetch(uri, { credentials: 'same-origin' });\n      const loadWasm = WebAssembly.instantiateStreaming\n        ? async () => {\n            return WebAssembly.instantiateStreaming(wfetch(), imports).then(\n              (arg) => onSuccess(arg.instance, arg.module),\n            );\n          }\n        : async () => {\n            return wfetch()\n              .then((response) => response.arrayBuffer())\n              .then((bytes) => WebAssembly.instantiate(bytes, imports))\n              .then((arg) => onSuccess(arg.instance, arg.module));\n          };\n      loadWasm();\n      return {};\n    };\n\n    Module[xNameOfInstantiateWasm].uri = 'sqlite3.wasm';\n\n    var moduleOverrides = Object.assign({}, Module);\n\n    var arguments_ = [];\n    var thisProgram = './this.program';\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n\n    var ENVIRONMENT_IS_WEB = typeof window == 'object';\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n\n    var ENVIRONMENT_IS_NODE =\n      typeof process == 'object' &&\n      typeof process.versions == 'object' &&\n      typeof process.versions.node == 'string';\n    var ENVIRONMENT_IS_SHELL =\n      !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n    var scriptDirectory = '';\n    function locateFile(path) {\n      if (Module['locateFile']) {\n        return Module['locateFile'](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n\n    var read_, readAsync, readBinary, setWindowTitle;\n\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != 'undefined' && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n\n      if (scriptDirectory.indexOf('blob:') !== 0) {\n        scriptDirectory = scriptDirectory.substr(\n          0,\n          scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1,\n        );\n      } else {\n        scriptDirectory = '';\n      }\n\n      {\n        read_ = (url) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = (url) => {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            xhr.responseType = 'arraybuffer';\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n\n        readAsync = (url, onload, onerror) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, true);\n          xhr.responseType = 'arraybuffer';\n          xhr.onload = () => {\n            if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n\n      setWindowTitle = (title) => (document.title = title);\n    } else {\n    }\n\n    var out = Module['print'] || console.log.bind(console);\n    var err = Module['printErr'] || console.warn.bind(console);\n\n    Object.assign(Module, moduleOverrides);\n\n    moduleOverrides = null;\n\n    if (Module['arguments']) arguments_ = Module['arguments'];\n\n    if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\n    if (Module['quit']) quit_ = Module['quit'];\n\n    var STACK_ALIGN = 16;\n    var POINTER_SIZE = 4;\n\n    function getNativeTypeSize(type) {\n      switch (type) {\n        case 'i1':\n        case 'i8':\n        case 'u8':\n          return 1;\n        case 'i16':\n        case 'u16':\n          return 2;\n        case 'i32':\n        case 'u32':\n          return 4;\n        case 'i64':\n        case 'u64':\n          return 8;\n        case 'float':\n          return 4;\n        case 'double':\n          return 8;\n        default: {\n          if (type[type.length - 1] === '*') {\n            return POINTER_SIZE;\n          }\n          if (type[0] === 'i') {\n            const bits = Number(type.substr(1));\n            assert(\n              bits % 8 === 0,\n              'getNativeTypeSize invalid bits ' + bits + ', type ' + type,\n            );\n            return bits / 8;\n          }\n          return 0;\n        }\n      }\n    }\n\n    var wasmBinary;\n    if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\n    var noExitRuntime = Module['noExitRuntime'] || true;\n\n    if (typeof WebAssembly != 'object') {\n      abort('no native wasm support detected');\n    }\n\n    var wasmMemory;\n\n    var ABORT = false;\n\n    var EXITSTATUS;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n\n    var UTF8Decoder =\n      typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n\n    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xe0) == 0xc0) {\n          str += String.fromCharCode(((u0 & 31) << 6) | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xf0) == 0xe0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 =\n            ((u0 & 7) << 18) |\n            (u1 << 12) |\n            (u2 << 6) |\n            (heapOrArray[idx++] & 63);\n        }\n\n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(\n            0xd800 | (ch >> 10),\n            0xdc00 | (ch & 0x3ff),\n          );\n        }\n      }\n      return str;\n    }\n\n    function UTF8ToString(ptr, maxBytesToRead) {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    }\n\n    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      if (!(maxBytesToWrite > 0)) return 0;\n\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 0xd800 && u <= 0xdfff) {\n          var u1 = str.charCodeAt(++i);\n          u = (0x10000 + ((u & 0x3ff) << 10)) | (u1 & 0x3ff);\n        }\n        if (u <= 0x7f) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7ff) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xc0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xffff) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xe0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xf0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n\n    function lengthBytesUTF8(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 0x7f) {\n          len++;\n        } else if (c <= 0x7ff) {\n          len += 2;\n        } else if (c >= 0xd800 && c <= 0xdfff) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    }\n\n    var HEAP,\n      HEAP8,\n      HEAPU8,\n      HEAP16,\n      HEAPU16,\n      HEAP32,\n      HEAPU32,\n      HEAPF32,\n      HEAP64,\n      HEAPU64,\n      HEAPF64;\n\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module['HEAP8'] = HEAP8 = new Int8Array(b);\n      Module['HEAP16'] = HEAP16 = new Int16Array(b);\n      Module['HEAP32'] = HEAP32 = new Int32Array(b);\n      Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n      Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n      Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n      Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n      Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n      Module['HEAP64'] = HEAP64 = new BigInt64Array(b);\n      Module['HEAPU64'] = HEAPU64 = new BigUint64Array(b);\n    }\n\n    var STACK_SIZE = 524288;\n\n    var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;\n\n    if (Module['wasmMemory']) {\n      wasmMemory = Module['wasmMemory'];\n    } else {\n      wasmMemory = new WebAssembly.Memory({\n        initial: INITIAL_MEMORY / 65536,\n\n        maximum: 2147483648 / 65536,\n      });\n    }\n\n    updateMemoryViews();\n\n    INITIAL_MEMORY = wasmMemory.buffer.byteLength;\n\n    var wasmTable;\n\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATEXIT__ = [];\n    var __ATPOSTRUN__ = [];\n\n    var runtimeInitialized = false;\n\n    function keepRuntimeAlive() {\n      return noExitRuntime;\n    }\n\n    function preRun() {\n      if (Module['preRun']) {\n        if (typeof Module['preRun'] == 'function')\n          Module['preRun'] = [Module['preRun']];\n        while (Module['preRun'].length) {\n          addOnPreRun(Module['preRun'].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n\n      if (!Module['noFSInit'] && !FS.init.initialized) FS.init();\n      FS.ignorePermissions = false;\n\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function postRun() {\n      if (Module['postRun']) {\n        if (typeof Module['postRun'] == 'function')\n          Module['postRun'] = [Module['postRun']];\n        while (Module['postRun'].length) {\n          addOnPostRun(Module['postRun'].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n\n    function addOnExit(cb) {}\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      if (Module['monitorRunDependencies']) {\n        Module['monitorRunDependencies'](runDependencies);\n      }\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      if (Module['monitorRunDependencies']) {\n        Module['monitorRunDependencies'](runDependencies);\n      }\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    function abort(what) {\n      if (Module['onAbort']) {\n        Module['onAbort'](what);\n      }\n\n      what = 'Aborted(' + what + ')';\n\n      err(what);\n\n      ABORT = true;\n      EXITSTATUS = 1;\n\n      what += '. Build with -sASSERTIONS for more info.';\n\n      var e = new WebAssembly.RuntimeError(what);\n\n      readyPromiseReject(e);\n\n      throw e;\n    }\n\n    var dataURIPrefix = 'data:application/octet-stream;base64,';\n\n    function isDataURI(filename) {\n      return filename.startsWith(dataURIPrefix);\n    }\n\n    function isFileURI(filename) {\n      return filename.startsWith('file://');\n    }\n\n    var wasmBinaryFile;\n    if (Module['locateFile']) {\n      wasmBinaryFile = 'sqlite3.wasm';\n      if (!isDataURI(wasmBinaryFile)) {\n        wasmBinaryFile = locateFile(wasmBinaryFile);\n      }\n    } else {\n      wasmBinaryFile = new URL('sqlite3.wasm', import.meta.url).href;\n    }\n\n    function getBinary(file) {\n      try {\n        if (file == wasmBinaryFile && wasmBinary) {\n          return new Uint8Array(wasmBinary);\n        }\n        if (readBinary) {\n          return readBinary(file);\n        }\n        throw 'both async and sync fetching of the wasm failed';\n      } catch (err) {\n        abort(err);\n      }\n    }\n\n    function getBinaryPromise() {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch == 'function') {\n          return fetch(wasmBinaryFile, { credentials: 'same-origin' })\n            .then(function (response) {\n              if (!response['ok']) {\n                throw (\n                  \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\"\n                );\n              }\n              return response['arrayBuffer']();\n            })\n            .catch(function () {\n              return getBinary(wasmBinaryFile);\n            });\n        }\n      }\n\n      return Promise.resolve().then(function () {\n        return getBinary(wasmBinaryFile);\n      });\n    }\n\n    function createWasm() {\n      var info = {\n        env: asmLibraryArg,\n        wasi_snapshot_preview1: asmLibraryArg,\n      };\n\n      function receiveInstance(instance, module) {\n        var exports = instance.exports;\n\n        Module['asm'] = exports;\n\n        wasmTable = Module['asm']['__indirect_function_table'];\n\n        addOnInit(Module['asm']['__wasm_call_ctors']);\n\n        removeRunDependency('wasm-instantiate');\n      }\n\n      addRunDependency('wasm-instantiate');\n\n      function receiveInstantiationResult(result) {\n        receiveInstance(result['instance']);\n      }\n\n      function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise()\n          .then(function (binary) {\n            return WebAssembly.instantiate(binary, info);\n          })\n          .then(function (instance) {\n            return instance;\n          })\n          .then(receiver, function (reason) {\n            err('failed to asynchronously prepare wasm: ' + reason);\n\n            abort(reason);\n          });\n      }\n\n      function instantiateAsync() {\n        if (\n          !wasmBinary &&\n          typeof WebAssembly.instantiateStreaming == 'function' &&\n          !isDataURI(wasmBinaryFile) &&\n          typeof fetch == 'function'\n        ) {\n          return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(\n            function (response) {\n              var result = WebAssembly.instantiateStreaming(response, info);\n\n              return result.then(receiveInstantiationResult, function (reason) {\n                err('wasm streaming compile failed: ' + reason);\n                err('falling back to ArrayBuffer instantiation');\n                return instantiateArrayBuffer(receiveInstantiationResult);\n              });\n            },\n          );\n        } else {\n          return instantiateArrayBuffer(receiveInstantiationResult);\n        }\n      }\n\n      if (Module['instantiateWasm']) {\n        try {\n          var exports = Module['instantiateWasm'](info, receiveInstance);\n          return exports;\n        } catch (e) {\n          err('Module.instantiateWasm callback failed with error: ' + e);\n\n          readyPromiseReject(e);\n        }\n      }\n\n      instantiateAsync().catch(readyPromiseReject);\n      return {};\n    }\n\n    var tempDouble;\n    var tempI64;\n\n    var ASM_CONSTS = {};\n\n    function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = 'Program terminated with exit(' + status + ')';\n      this.status = status;\n    }\n\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        callbacks.shift()(Module);\n      }\n    }\n\n    function getValue(ptr, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          return HEAP8[ptr >> 0];\n        case 'i8':\n          return HEAP8[ptr >> 0];\n        case 'i16':\n          return HEAP16[ptr >> 1];\n        case 'i32':\n          return HEAP32[ptr >> 2];\n        case 'i64':\n          return HEAP64[ptr >> 3];\n        case 'float':\n          return HEAPF32[ptr >> 2];\n        case 'double':\n          return HEAPF64[ptr >> 3];\n        case '*':\n          return HEAPU32[ptr >> 2];\n        default:\n          abort('invalid type for getValue: ' + type);\n      }\n      return null;\n    }\n\n    function setValue(ptr, value, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          HEAP8[ptr >> 0] = value;\n          break;\n        case 'i8':\n          HEAP8[ptr >> 0] = value;\n          break;\n        case 'i16':\n          HEAP16[ptr >> 1] = value;\n          break;\n        case 'i32':\n          HEAP32[ptr >> 2] = value;\n          break;\n        case 'i64':\n          (tempI64 = [\n            value >>> 0,\n            ((tempDouble = value),\n            +Math.abs(tempDouble) >= 1.0\n              ? tempDouble > 0.0\n                ? (Math.min(\n                    +Math.floor(tempDouble / 4294967296.0),\n                    4294967295.0,\n                  ) |\n                    0) >>>\n                  0\n                : ~~+Math.ceil(\n                    (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                  ) >>> 0\n              : 0),\n          ]),\n            (HEAP32[ptr >> 2] = tempI64[0]),\n            (HEAP32[(ptr + 4) >> 2] = tempI64[1]);\n          break;\n        case 'float':\n          HEAPF32[ptr >> 2] = value;\n          break;\n        case 'double':\n          HEAPF64[ptr >> 3] = value;\n          break;\n        case '*':\n          HEAPU32[ptr >> 2] = value;\n          break;\n        default:\n          abort('invalid type for setValue: ' + type);\n      }\n    }\n\n    var PATH = {\n      isAbs: (path) => path.charAt(0) === '/',\n      splitPath: (filename) => {\n        var splitPathRe =\n          /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n      normalize: (path) => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.substr(-1) === '/';\n\n        path = PATH.normalizeArray(\n          path.split('/').filter((p) => !!p),\n          !isAbsolute,\n        ).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n      dirname: (path) => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return '.';\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: (path) => {\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, '');\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: function () {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join('/'));\n      },\n      join2: (l, r) => {\n        return PATH.normalize(l + '/' + r);\n      },\n    };\n\n    function getRandomDevice() {\n      if (\n        typeof crypto == 'object' &&\n        typeof crypto['getRandomValues'] == 'function'\n      ) {\n        var randomBuffer = new Uint8Array(1);\n        return () => {\n          crypto.getRandomValues(randomBuffer);\n          return randomBuffer[0];\n        };\n      } else return () => abort('randomDevice');\n    }\n\n    var PATH_FS = {\n      resolve: function () {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? arguments[i] : FS.cwd();\n\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return '';\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n\n        resolvedPath = PATH.normalizeArray(\n          resolvedPath.split('/').filter((p) => !!p),\n          !resolvedAbsolute,\n        ).join('/');\n        return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n    };\n\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(\n        stringy,\n        u8array,\n        0,\n        u8array.length,\n      );\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var TTY = {\n      ttys: [],\n      init: function () {},\n      shutdown: function () {},\n      register: function (dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open: function (stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close: function (stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync: function (stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n      },\n      default_tty_ops: {\n        get_char: function (tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (\n              typeof window != 'undefined' &&\n              typeof window.prompt == 'function'\n            ) {\n              result = window.prompt('Input: ');\n              if (result !== null) {\n                result += '\\n';\n              }\n            } else if (typeof readline == 'function') {\n              result = readline();\n              if (result !== null) {\n                result += '\\n';\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        },\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n      default_tty1_ops: {\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n    };\n\n    function zeroMemory(address, size) {\n      HEAPU8.fill(0, address, address + size);\n      return address;\n    }\n\n    function alignMemory(size, alignment) {\n      return Math.ceil(size / alignment) * alignment;\n    }\n    function mmapAlloc(size) {\n      size = alignMemory(size, 65536);\n      var ptr = _emscripten_builtin_memalign(65536, size);\n      if (!ptr) return 0;\n      return zeroMemory(ptr, size);\n    }\n    var MEMFS = {\n      ops_table: null,\n      mount: function (mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511, 0);\n      },\n      createNode: function (parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink,\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n              },\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync,\n              },\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink,\n              },\n              stream: {},\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n              },\n              stream: FS.chrdev_stream_ops,\n            },\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray: function (node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray)\n          return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage: function (node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(\n          newCapacity,\n          (prevCapacity *\n            (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>>\n            0,\n        );\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0)\n          node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage: function (node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(\n              oldContents.subarray(0, Math.min(newSize, node.usedBytes)),\n            );\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr: function (node) {\n          var attr = {};\n\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr: function (node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup: function (parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod: function (parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename: function (old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n        unlink: function (parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir: function (parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir: function (node) {\n          var entries = ['.', '..'];\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink: function (parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink: function (node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n      },\n      stream_ops: {\n        read: function (stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write: function (stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(\n                buffer.subarray(offset, offset + length),\n                position,\n              );\n              return length;\n            }\n          }\n\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(\n              buffer.subarray(offset, offset + length),\n              position,\n            );\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek: function (stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate: function (stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(\n            stream.node.usedBytes,\n            offset + length,\n          );\n        },\n        mmap: function (stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(\n                  contents,\n                  position,\n                  position + length,\n                );\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return { ptr: ptr, allocated: allocated };\n        },\n        msync: function (stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n\n          return 0;\n        },\n      },\n    };\n\n    function asyncLoad(url, onload, onerror, noRunDep) {\n      var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\n      readAsync(\n        url,\n        (arrayBuffer) => {\n          assert(\n            arrayBuffer,\n            'Loading data file \"' + url + '\" failed (no arrayBuffer).',\n          );\n          onload(new Uint8Array(arrayBuffer));\n          if (dep) removeRunDependency(dep);\n        },\n        (event) => {\n          if (onerror) {\n            onerror();\n          } else {\n            throw 'Loading data file \"' + url + '\" failed.';\n          }\n        },\n      );\n      if (dep) addRunDependency(dep);\n    }\n\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: '/',\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: null,\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      lookupPath: (path, opts = {}) => {\n        path = PATH_FS.resolve(path);\n\n        if (!path) return { path: '', node: null };\n\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0,\n        };\n        opts = Object.assign(defaults, opts);\n\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n\n        var parts = path.split('/').filter((p) => !!p);\n\n        var current = FS.root;\n        var current_path = '/';\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1,\n              });\n              current = lookup.node;\n\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n\n        return { path: current_path, node: current };\n      },\n      getPath: (node) => {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== '/'\n              ? mount + '/' + path\n              : mount + path;\n          }\n          path = path ? node.name + '/' + path : node.name;\n          node = node.parent;\n        }\n      },\n      hashName: (parentid, name) => {\n        var hash = 0;\n\n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode: (node) => {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode: (node) => {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode: (parent, name) => {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n\n        return FS.lookup(parent, name);\n      },\n      createNode: (parent, name, mode, rdev) => {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n\n        FS.hashAddNode(node);\n\n        return node;\n      },\n      destroyNode: (node) => {\n        FS.hashRemoveNode(node);\n      },\n      isRoot: (node) => {\n        return node === node.parent;\n      },\n      isMountpoint: (node) => {\n        return !!node.mounted;\n      },\n      isFile: (mode) => {\n        return (mode & 61440) === 32768;\n      },\n      isDir: (mode) => {\n        return (mode & 61440) === 16384;\n      },\n      isLink: (mode) => {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev: (mode) => {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev: (mode) => {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO: (mode) => {\n        return (mode & 61440) === 4096;\n      },\n      isSocket: (mode) => {\n        return (mode & 49152) === 49152;\n      },\n      flagModes: { r: 0, 'r+': 2, w: 577, 'w+': 578, a: 1089, 'a+': 1090 },\n      modeStringToFlags: (str) => {\n        var flags = FS.flagModes[str];\n        if (typeof flags == 'undefined') {\n          throw new Error('Unknown file open mode: ' + str);\n        }\n        return flags;\n      },\n      flagsToPermissionString: (flag) => {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if (flag & 512) {\n          perms += 'w';\n        }\n        return perms;\n      },\n      nodePermissions: (node, perms) => {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup: (dir) => {\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate: (dir, name) => {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, 'wx');\n      },\n      mayDelete: (dir, name, isdir) => {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen: (node, flags) => {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStream: (fd) => FS.streams[fd],\n      createStream: (stream, fd_start, fd_end) => {\n        if (!FS.FSStream) {\n          FS.FSStream = function () {\n            this.shared = {};\n          };\n          FS.FSStream.prototype = {};\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              get: function () {\n                return this.node;\n              },\n\n              set: function (val) {\n                this.node = val;\n              },\n            },\n            isRead: {\n              get: function () {\n                return (this.flags & 2097155) !== 1;\n              },\n            },\n            isWrite: {\n              get: function () {\n                return (this.flags & 2097155) !== 0;\n              },\n            },\n            isAppend: {\n              get: function () {\n                return this.flags & 1024;\n              },\n            },\n            flags: {\n              get: function () {\n                return this.shared.flags;\n              },\n\n              set: function (val) {\n                this.shared.flags = val;\n              },\n            },\n            position: {\n              get: function () {\n                return this.shared.position;\n              },\n\n              set: function (val) {\n                this.shared.position = val;\n              },\n            },\n          });\n        }\n\n        stream = Object.assign(new FS.FSStream(), stream);\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream: (fd) => {\n        FS.streams[fd] = null;\n      },\n      chrdev_stream_ops: {\n        open: (stream) => {\n          var device = FS.getDevice(stream.node.rdev);\n\n          stream.stream_ops = device.stream_ops;\n\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },\n        llseek: () => {\n          throw new FS.ErrnoError(70);\n        },\n      },\n      major: (dev) => dev >> 8,\n      minor: (dev) => dev & 0xff,\n      makedev: (ma, mi) => (ma << 8) | mi,\n      registerDevice: (dev, ops) => {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n      getDevice: (dev) => FS.devices[dev],\n      getMounts: (mount) => {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n\n          mounts.push(m);\n\n          check.push.apply(check, m.mounts);\n        }\n\n        return mounts;\n      },\n      syncfs: (populate, callback) => {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          err(\n            'warning: ' +\n              FS.syncFSRequests +\n              ' FS.syncfs operations in flight at once, probably just doing extra work',\n          );\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount: (type, opts, mountpoint) => {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n          mountpoint = lookup.path;\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: [],\n        };\n\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },\n      unmount: (mountpoint) => {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n\n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n\n        node.mounted = null;\n\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup: (parent, name) => {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod: (path, mode, dev) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create: (path, mode) => {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir: (path, mode) => {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree: (path, mode) => {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev: (path, mode, dev) => {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink: (oldpath, newpath) => {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename: (old_path, new_path) => {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n\n        var lookup, old_dir, new_dir;\n\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n\n        var old_node = FS.lookupNode(old_dir, old_name);\n\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n\n        if (old_node === new_node) {\n          return;\n        }\n\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        errCode = new_node\n          ? FS.mayDelete(new_dir, new_name, isdir)\n          : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (\n          FS.isMountpoint(old_node) ||\n          (new_node && FS.isMountpoint(new_node))\n        ) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        FS.hashRemoveNode(old_node);\n\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir: (path) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir: (path) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink: (path) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink: (path) => {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(\n          FS.getPath(link.parent),\n          link.node_ops.readlink(link),\n        );\n      },\n      stat: (path, dontFollow) => {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat: (path) => {\n        return FS.stat(path, true);\n      },\n      chmod: (path, mode, dontFollow) => {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now(),\n        });\n      },\n      lchmod: (path, mode) => {\n        FS.chmod(path, mode, true);\n      },\n      fchmod: (fd, mode) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chmod(stream.node, mode);\n      },\n      chown: (path, uid, gid, dontFollow) => {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now(),\n        });\n      },\n      lchown: (path, uid, gid) => {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown: (fd, uid, gid) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate: (path, len) => {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now(),\n        });\n      },\n      ftruncate: (fd, len) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime: (path, atime, mtime) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime),\n        });\n      },\n      open: (path, flags, mode) => {\n        if (path === '') {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode == 'undefined' ? 438 : mode;\n        if (flags & 64) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072),\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n\n        flags &= ~(128 | 512 | 131072);\n\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),\n          flags: flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n\n          ungotten: [],\n          error: false,\n        });\n\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close: (stream) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed: (stream) => {\n        return stream.fd === null;\n      },\n      llseek: (stream, offset, whence) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read: (stream, buffer, offset, length, position) => {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n        );\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write: (stream, buffer, offset, length, position, canOwn) => {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n          canOwn,\n        );\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate: (stream, offset, length) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap: (stream, length, position, prot, flags) => {\n        if (\n          (prot & 2) !== 0 &&\n          (flags & 2) === 0 &&\n          (stream.flags & 2097155) !== 2\n        ) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync: (stream, buffer, offset, length, mmapFlags) => {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(\n          stream,\n          buffer,\n          offset,\n          length,\n          mmapFlags,\n        );\n      },\n      munmap: (stream) => 0,\n      ioctl: (stream, cmd, arg) => {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile: (path, opts = {}) => {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile: (path, data, opts = {}) => {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir: (path) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories: () => {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n      createDefaultDevices: () => {\n        FS.mkdir('/dev');\n\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n\n        var random_device = getRandomDevice();\n        FS.createDevice('/dev', 'random', random_device);\n        FS.createDevice('/dev', 'urandom', random_device);\n\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n      createSpecialDirectories: () => {\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount(\n          {\n            mount: () => {\n              var node = FS.createNode(proc_self, 'fd', 16384 | 511, 73);\n              node.node_ops = {\n                lookup: (parent, name) => {\n                  var fd = +name;\n                  var stream = FS.getStream(fd);\n                  if (!stream) throw new FS.ErrnoError(8);\n                  var ret = {\n                    parent: null,\n                    mount: { mountpoint: 'fake' },\n                    node_ops: { readlink: () => stream.path },\n                  };\n                  ret.parent = ret;\n                  return ret;\n                },\n              };\n              return node;\n            },\n          },\n          {},\n          '/proc/self/fd',\n        );\n      },\n      createStandardStreams: () => {\n        if (Module['stdin']) {\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (Module['stdout']) {\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (Module['stderr']) {\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n      ensureErrnoError: () => {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.node = node;\n          this.setErrno = function (errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = 'FS error';\n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n      },\n      staticInit: () => {\n        FS.ensureErrnoError();\n\n        FS.nameTable = new Array(4096);\n\n        FS.mount(MEMFS, {}, '/');\n\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n\n        FS.filesystems = {\n          MEMFS: MEMFS,\n        };\n      },\n      init: (input, output, error) => {\n        FS.init.initialized = true;\n\n        FS.ensureErrnoError();\n\n        Module['stdin'] = input || Module['stdin'];\n        Module['stdout'] = output || Module['stdout'];\n        Module['stderr'] = error || Module['stderr'];\n\n        FS.createStandardStreams();\n      },\n      quit: () => {\n        FS.init.initialized = false;\n\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      getMode: (canRead, canWrite) => {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n      },\n      findObject: (path, dontResolveLastLink) => {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath: (path, dontResolveLastLink) => {\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null,\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath: (parent, path, canRead, canWrite) => {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile: (parent, name, properties, canRead, canWrite) => {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i)\n              arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n        return node;\n      },\n      createDevice: (parent, name, input, output) => {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n\n        FS.registerDevice(dev, {\n          open: (stream) => {\n            stream.seekable = false;\n          },\n          close: (stream) => {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read: (stream, buffer, offset, length, pos) => {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write: (stream, buffer, offset, length, pos) => {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          },\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile: (obj) => {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n          return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\n            'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.',\n          );\n        } else if (read_) {\n          try {\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\n        }\n      },\n      createLazyFile: (parent, name, url, canRead, canWrite) => {\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = [];\n        }\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length - 1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize) | 0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter =\n          function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n        LazyUint8Array.prototype.cacheLength =\n          function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('HEAD', url, false);\n            xhr.send(null);\n            if (\n              !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n            )\n              throw new Error(\n                \"Couldn't load \" + url + '. Status: ' + xhr.status,\n              );\n            var datalength = Number(xhr.getResponseHeader('Content-length'));\n            var header;\n            var hasByteServing =\n              (header = xhr.getResponseHeader('Accept-Ranges')) &&\n              header === 'bytes';\n            var usesGzip =\n              (header = xhr.getResponseHeader('Content-Encoding')) &&\n              header === 'gzip';\n\n            var chunkSize = 1024 * 1024;\n\n            if (!hasByteServing) chunkSize = datalength;\n\n            var doXHR = (from, to) => {\n              if (from > to)\n                throw new Error(\n                  'invalid range (' +\n                    from +\n                    ', ' +\n                    to +\n                    ') or no bytes requested!',\n                );\n              if (to > datalength - 1)\n                throw new Error(\n                  'only ' + datalength + ' bytes available! programmer error!',\n                );\n\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              if (datalength !== chunkSize)\n                xhr.setRequestHeader('Range', 'bytes=' + from + '-' + to);\n\n              xhr.responseType = 'arraybuffer';\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\n              }\n\n              xhr.send(null);\n              if (\n                !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n              )\n                throw new Error(\n                  \"Couldn't load \" + url + '. Status: ' + xhr.status,\n                );\n              if (xhr.response !== undefined) {\n                return new Uint8Array(xhr.response || []);\n              }\n              return intArrayFromString(xhr.responseText || '', true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined')\n                throw new Error('doXHR failed!');\n              return lazyArray.chunks[chunkNum];\n            });\n\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\n                'LazyFiles on gzip forces download of the whole file when length is accessed',\n              );\n            }\n\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER)\n            throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              },\n            },\n            chunkSize: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              },\n            },\n          });\n\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            },\n          },\n        });\n\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr: ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n      createPreloadedFile: (\n        parent,\n        name,\n        url,\n        canRead,\n        canWrite,\n        onload,\n        onerror,\n        dontCreateFile,\n        canOwn,\n        preFinish,\n      ) => {\n        var fullname = name\n          ? PATH_FS.resolve(PATH.join2(parent, name))\n          : parent;\n        var dep = getUniqueRunDependency('cp ' + fullname);\n        function processData(byteArray) {\n          function finish(byteArray) {\n            if (preFinish) preFinish();\n            if (!dontCreateFile) {\n              FS.createDataFile(\n                parent,\n                name,\n                byteArray,\n                canRead,\n                canWrite,\n                canOwn,\n              );\n            }\n            if (onload) onload();\n            removeRunDependency(dep);\n          }\n          if (\n            Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\n              if (onerror) onerror();\n              removeRunDependency(dep);\n            })\n          ) {\n            return;\n          }\n          finish(byteArray);\n        }\n        addRunDependency(dep);\n        if (typeof url == 'string') {\n          asyncLoad(url, (byteArray) => processData(byteArray), onerror);\n        } else {\n          processData(url);\n        }\n      },\n      indexedDB: () => {\n        return (\n          window.indexedDB ||\n          window.mozIndexedDB ||\n          window.webkitIndexedDB ||\n          window.msIndexedDB\n        );\n      },\n      DB_NAME: () => {\n        return 'EM_FS_' + window.location.pathname;\n      },\n      DB_VERSION: 20,\n      DB_STORE_NAME: 'FILE_DATA',\n      saveFilesToDB: (paths, onload, onerror) => {\n        onload = onload || (() => {});\n        onerror = onerror || (() => {});\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = () => {\n          out('creating db');\n          var db = openRequest.result;\n          db.createObjectStore(FS.DB_STORE_NAME);\n        };\n        openRequest.onsuccess = () => {\n          var db = openRequest.result;\n          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();\n            else onerror();\n          }\n          paths.forEach((path) => {\n            var putRequest = files.put(\n              FS.analyzePath(path).object.contents,\n              path,\n            );\n            putRequest.onsuccess = () => {\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            putRequest.onerror = () => {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n      loadFilesFromDB: (paths, onload, onerror) => {\n        onload = onload || (() => {});\n        onerror = onerror || (() => {});\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = onerror;\n        openRequest.onsuccess = () => {\n          var db = openRequest.result;\n          try {\n            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');\n          } catch (e) {\n            onerror(e);\n            return;\n          }\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();\n            else onerror();\n          }\n          paths.forEach((path) => {\n            var getRequest = files.get(path);\n            getRequest.onsuccess = () => {\n              if (FS.analyzePath(path).exists) {\n                FS.unlink(path);\n              }\n              FS.createDataFile(\n                PATH.dirname(path),\n                PATH.basename(path),\n                getRequest.result,\n                true,\n                true,\n                true,\n              );\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            getRequest.onerror = () => {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n    };\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt: function (dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat: function (func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (\n            e &&\n            e.node &&\n            PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))\n          ) {\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[(buf + 8) >> 2] = stat.ino;\n        HEAP32[(buf + 12) >> 2] = stat.mode;\n        HEAPU32[(buf + 16) >> 2] = stat.nlink;\n        HEAP32[(buf + 20) >> 2] = stat.uid;\n        HEAP32[(buf + 24) >> 2] = stat.gid;\n        HEAP32[(buf + 28) >> 2] = stat.rdev;\n        (tempI64 = [\n          stat.size >>> 0,\n          ((tempDouble = stat.size),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 40) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 44) >> 2] = tempI64[1]);\n        HEAP32[(buf + 48) >> 2] = 4096;\n        HEAP32[(buf + 52) >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        (tempI64 = [\n          Math.floor(atime / 1000) >>> 0,\n          ((tempDouble = Math.floor(atime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 56) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 60) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 64) >> 2] = (atime % 1000) * 1000;\n        (tempI64 = [\n          Math.floor(mtime / 1000) >>> 0,\n          ((tempDouble = Math.floor(mtime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 72) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 76) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 80) >> 2] = (mtime % 1000) * 1000;\n        (tempI64 = [\n          Math.floor(ctime / 1000) >>> 0,\n          ((tempDouble = Math.floor(ctime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 88) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 92) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 96) >> 2] = (ctime % 1000) * 1000;\n        (tempI64 = [\n          stat.ino >>> 0,\n          ((tempDouble = stat.ino),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 104) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 108) >> 2] = tempI64[1]);\n        return 0;\n      },\n      doMsync: function (addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      varargs: undefined,\n      get: function () {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];\n        return ret;\n      },\n      getStr: function (ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n      getStreamFromFD: function (fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) throw new FS.ErrnoError(8);\n        return stream;\n      },\n    };\n    function ___syscall_chmod(path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.chmod(path, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_faccessat(dirfd, path, amode, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (amode & ~7) {\n          return -28;\n        }\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node) {\n          return -44;\n        }\n        var perms = '';\n        if (amode & 4) perms += 'r';\n        if (amode & 2) perms += 'w';\n        if (amode & 1) perms += 'x';\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchmod(fd, mode) {\n      try {\n        FS.fchmod(fd, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchown32(fd, owner, group) {\n      try {\n        FS.fchown(fd, owner, group);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function setErrNo(value) {\n      HEAP32[___errno_location() >> 2] = value;\n      return value;\n    }\n\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (cmd) {\n          case 0: {\n            var arg = SYSCALLS.get();\n            if (arg < 0) {\n              return -28;\n            }\n            var newStream;\n            newStream = FS.createStream(stream, arg);\n            return newStream.fd;\n          }\n          case 1:\n          case 2:\n            return 0;\n          case 3:\n            return stream.flags;\n          case 4: {\n            var arg = SYSCALLS.get();\n            stream.flags |= arg;\n            return 0;\n          }\n          case 5: {\n            var arg = SYSCALLS.get();\n            var offset = 0;\n\n            HEAP16[(arg + offset) >> 1] = 2;\n            return 0;\n          }\n          case 6:\n          case 7:\n            return 0;\n          case 16:\n          case 8:\n            return -28;\n          case 9:\n            setErrNo(28);\n            return -1;\n          default: {\n            return -28;\n          }\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fstat64(fd, buf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return SYSCALLS.doStat(FS.stat, stream.path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    var MAX_INT53 = 9007199254740992;\n\n    var MIN_INT53 = -9007199254740992;\n    function bigintToI53Checked(num) {\n      return num < MIN_INT53 || num > MAX_INT53 ? NaN : Number(num);\n    }\n\n    function ___syscall_ftruncate64(fd, length) {\n      try {\n        length = bigintToI53Checked(length);\n        if (isNaN(length)) return -61;\n        FS.ftruncate(fd, length);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_getcwd(buf, size) {\n      try {\n        if (size === 0) return -28;\n        var cwd = FS.cwd();\n        var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\n        if (size < cwdLengthInBytes) return -68;\n        stringToUTF8(cwd, buf, size);\n        return cwdLengthInBytes;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_ioctl(fd, op, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (op) {\n          case 21509:\n          case 21505: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21510:\n          case 21511:\n          case 21512:\n          case 21506:\n          case 21507:\n          case 21508: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21519: {\n            if (!stream.tty) return -59;\n            var argp = SYSCALLS.get();\n            HEAP32[argp >> 2] = 0;\n            return 0;\n          }\n          case 21520: {\n            if (!stream.tty) return -59;\n            return -28;\n          }\n          case 21531: {\n            var argp = SYSCALLS.get();\n            return FS.ioctl(stream, op, argp);\n          }\n          case 21523: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21524: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          default:\n            return -28;\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_lstat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.lstat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_mkdirat(dirfd, path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === '/')\n          path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_newfstatat(dirfd, path, buf, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        var nofollow = flags & 256;\n        var allowEmpty = flags & 4096;\n        flags = flags & ~6400;\n        path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n        return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        var mode = varargs ? SYSCALLS.get() : 0;\n        return FS.open(path, flags, mode).fd;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n\n        HEAP8[buf + len] = endChar;\n        return len;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_rmdir(path) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.rmdir(path);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_stat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_unlinkat(dirfd, path, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (flags === 0) {\n          FS.unlink(path);\n        } else if (flags === 512) {\n          FS.rmdir(path);\n        } else {\n          abort('Invalid flags passed to unlinkat');\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function readI53FromI64(ptr) {\n      return HEAPU32[ptr >> 2] + HEAP32[(ptr + 4) >> 2] * 4294967296;\n    }\n\n    function ___syscall_utimensat(dirfd, path, times, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path, true);\n        if (!times) {\n          var atime = Date.now();\n          var mtime = atime;\n        } else {\n          var seconds = readI53FromI64(times);\n          var nanoseconds = HEAP32[(times + 8) >> 2];\n          atime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          times += 16;\n          seconds = readI53FromI64(times);\n          nanoseconds = HEAP32[(times + 8) >> 2];\n          mtime = seconds * 1000 + nanoseconds / (1000 * 1000);\n        }\n        FS.utime(path, atime, mtime);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    var nowIsMonotonic = true;\n    function __emscripten_get_now_is_monotonic() {\n      return nowIsMonotonic;\n    }\n\n    function __isLeapYear(year) {\n      return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    }\n\n    var __MONTH_DAYS_LEAP_CUMULATIVE = [\n      0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335,\n    ];\n\n    var __MONTH_DAYS_REGULAR_CUMULATIVE = [\n      0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,\n    ];\n    function __yday_from_date(date) {\n      var isLeapYear = __isLeapYear(date.getFullYear());\n      var monthDaysCumulative = isLeapYear\n        ? __MONTH_DAYS_LEAP_CUMULATIVE\n        : __MONTH_DAYS_REGULAR_CUMULATIVE;\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n\n      return yday;\n    }\n    function __localtime_js(time, tmPtr) {\n      var date = new Date(readI53FromI64(time) * 1000);\n      HEAP32[tmPtr >> 2] = date.getSeconds();\n      HEAP32[(tmPtr + 4) >> 2] = date.getMinutes();\n      HEAP32[(tmPtr + 8) >> 2] = date.getHours();\n      HEAP32[(tmPtr + 12) >> 2] = date.getDate();\n      HEAP32[(tmPtr + 16) >> 2] = date.getMonth();\n      HEAP32[(tmPtr + 20) >> 2] = date.getFullYear() - 1900;\n      HEAP32[(tmPtr + 24) >> 2] = date.getDay();\n\n      var yday = __yday_from_date(date) | 0;\n      HEAP32[(tmPtr + 28) >> 2] = yday;\n      HEAP32[(tmPtr + 36) >> 2] = -(date.getTimezoneOffset() * 60);\n\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst =\n        (summerOffset != winterOffset &&\n          date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n      HEAP32[(tmPtr + 32) >> 2] = dst;\n    }\n\n    function __mmap_js(len, prot, flags, fd, off, allocated, addr) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var res = FS.mmap(stream, len, off, prot, flags);\n        var ptr = res.ptr;\n        HEAP32[allocated >> 2] = res.allocated;\n        HEAPU32[addr >> 2] = ptr;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function __munmap_js(addr, len, prot, flags, fd, offset) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (prot & 2) {\n          SYSCALLS.doMsync(addr, stream, len, flags, offset);\n        }\n        FS.munmap(stream);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function allocateUTF8(str) {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = _malloc(size);\n      if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n      return ret;\n    }\n    function __tzset_js(timezone, daylight, tzname) {\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n\n      HEAPU32[timezone >> 2] = stdTimezoneOffset * 60;\n\n      HEAP32[daylight >> 2] = Number(winterOffset != summerOffset);\n\n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : 'GMT';\n      }\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = allocateUTF8(winterName);\n      var summerNamePtr = allocateUTF8(summerName);\n      if (summerOffset < winterOffset) {\n        HEAPU32[tzname >> 2] = winterNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = summerNamePtr;\n      } else {\n        HEAPU32[tzname >> 2] = summerNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = winterNamePtr;\n      }\n    }\n\n    function _emscripten_date_now() {\n      return Date.now();\n    }\n\n    var _emscripten_get_now;\n    _emscripten_get_now = () => performance.now();\n    function getHeapMax() {\n      return 2147483648;\n    }\n\n    function emscripten_realloc_buffer(size) {\n      var b = wasmMemory.buffer;\n      try {\n        wasmMemory.grow((size - b.byteLength + 65535) >>> 16);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    }\n    function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n\n      let alignUp = (x, multiple) =>\n        x + ((multiple - (x % multiple)) % multiple);\n\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n\n        overGrownHeapSize = Math.min(\n          overGrownHeapSize,\n          requestedSize + 100663296,\n        );\n\n        var newSize = Math.min(\n          maxHeapSize,\n          alignUp(Math.max(requestedSize, overGrownHeapSize), 65536),\n        );\n\n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    var ENV = {};\n\n    function getExecutableName() {\n      return thisProgram || './this.program';\n    }\n    function getEnvStrings() {\n      if (!getEnvStrings.strings) {\n        var lang =\n          (\n            (typeof navigator == 'object' &&\n              navigator.languages &&\n              navigator.languages[0]) ||\n            'C'\n          ).replace('-', '_') + '.UTF-8';\n        var env = {\n          USER: 'web_user',\n          LOGNAME: 'web_user',\n          PATH: '/',\n          PWD: '/',\n          HOME: '/home/web_user',\n          LANG: lang,\n          _: getExecutableName(),\n        };\n\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(x + '=' + env[x]);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    }\n\n    function writeAsciiToMemory(str, buffer, dontAddNull) {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n\n      if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n    }\n\n    function _environ_get(__environ, environ_buf) {\n      var bufSize = 0;\n      getEnvStrings().forEach(function (string, i) {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(__environ + i * 4) >> 2] = ptr;\n        writeAsciiToMemory(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    }\n\n    function _environ_sizes_get(penviron_count, penviron_buf_size) {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach(function (string) {\n        bufSize += string.length + 1;\n      });\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    }\n\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_fdstat_get(fd, pbuf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n\n        var type = stream.tty\n          ? 2\n          : FS.isDir(stream.mode)\n            ? 3\n            : FS.isLink(stream.mode)\n              ? 7\n              : 4;\n        HEAP8[pbuf >> 0] = type;\n\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function doReadv(stream, iov, iovcnt, offset) {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    }\n\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_seek(fd, offset, whence, newOffset) {\n      try {\n        offset = bigintToI53Checked(offset);\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        (tempI64 = [\n          stream.position >>> 0,\n          ((tempDouble = stream.position),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[newOffset >> 2] = tempI64[0]),\n          (HEAP32[(newOffset + 4) >> 2] = tempI64[1]);\n        if (stream.getdents && offset === 0 && whence === 0)\n          stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_sync(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (stream.stream_ops && stream.stream_ops.fsync) {\n          return stream.stream_ops.fsync(stream);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function doWritev(stream, iov, iovcnt, offset) {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    }\n\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    var FSNode = function (parent, name, mode, rdev) {\n      if (!parent) {\n        parent = this;\n      }\n      this.parent = parent;\n      this.mount = parent.mount;\n      this.mounted = null;\n      this.id = FS.nextInode++;\n      this.name = name;\n      this.mode = mode;\n      this.node_ops = {};\n      this.stream_ops = {};\n      this.rdev = rdev;\n    };\n    var readMode = 292 | 73;\n    var writeMode = 146;\n    Object.defineProperties(FSNode.prototype, {\n      read: {\n        get: function () {\n          return (this.mode & readMode) === readMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= readMode) : (this.mode &= ~readMode);\n        },\n      },\n      write: {\n        get: function () {\n          return (this.mode & writeMode) === writeMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= writeMode) : (this.mode &= ~writeMode);\n        },\n      },\n      isFolder: {\n        get: function () {\n          return FS.isDir(this.mode);\n        },\n      },\n      isDevice: {\n        get: function () {\n          return FS.isChrdev(this.mode);\n        },\n      },\n    });\n    FS.FSNode = FSNode;\n    FS.staticInit();\n    var ASSERTIONS = false;\n\n    var asmLibraryArg = {\n      __syscall_chmod: ___syscall_chmod,\n      __syscall_faccessat: ___syscall_faccessat,\n      __syscall_fchmod: ___syscall_fchmod,\n      __syscall_fchown32: ___syscall_fchown32,\n      __syscall_fcntl64: ___syscall_fcntl64,\n      __syscall_fstat64: ___syscall_fstat64,\n      __syscall_ftruncate64: ___syscall_ftruncate64,\n      __syscall_getcwd: ___syscall_getcwd,\n      __syscall_ioctl: ___syscall_ioctl,\n      __syscall_lstat64: ___syscall_lstat64,\n      __syscall_mkdirat: ___syscall_mkdirat,\n      __syscall_newfstatat: ___syscall_newfstatat,\n      __syscall_openat: ___syscall_openat,\n      __syscall_readlinkat: ___syscall_readlinkat,\n      __syscall_rmdir: ___syscall_rmdir,\n      __syscall_stat64: ___syscall_stat64,\n      __syscall_unlinkat: ___syscall_unlinkat,\n      __syscall_utimensat: ___syscall_utimensat,\n      _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n      _localtime_js: __localtime_js,\n      _mmap_js: __mmap_js,\n      _munmap_js: __munmap_js,\n      _tzset_js: __tzset_js,\n      emscripten_date_now: _emscripten_date_now,\n      emscripten_get_now: _emscripten_get_now,\n      emscripten_resize_heap: _emscripten_resize_heap,\n      environ_get: _environ_get,\n      environ_sizes_get: _environ_sizes_get,\n      fd_close: _fd_close,\n      fd_fdstat_get: _fd_fdstat_get,\n      fd_read: _fd_read,\n      fd_seek: _fd_seek,\n      fd_sync: _fd_sync,\n      fd_write: _fd_write,\n      memory: wasmMemory,\n    };\n    var asm = createWasm();\n\n    var ___wasm_call_ctors = (Module['___wasm_call_ctors'] = function () {\n      return (___wasm_call_ctors = Module['___wasm_call_ctors'] =\n        Module['asm']['__wasm_call_ctors']).apply(null, arguments);\n    });\n\n    var _sqlite3_status64 = (Module['_sqlite3_status64'] = function () {\n      return (_sqlite3_status64 = Module['_sqlite3_status64'] =\n        Module['asm']['sqlite3_status64']).apply(null, arguments);\n    });\n\n    var _sqlite3_status = (Module['_sqlite3_status'] = function () {\n      return (_sqlite3_status = Module['_sqlite3_status'] =\n        Module['asm']['sqlite3_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_status = (Module['_sqlite3_db_status'] = function () {\n      return (_sqlite3_db_status = Module['_sqlite3_db_status'] =\n        Module['asm']['sqlite3_db_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_msize = (Module['_sqlite3_msize'] = function () {\n      return (_sqlite3_msize = Module['_sqlite3_msize'] =\n        Module['asm']['sqlite3_msize']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_find = (Module['_sqlite3_vfs_find'] = function () {\n      return (_sqlite3_vfs_find = Module['_sqlite3_vfs_find'] =\n        Module['asm']['sqlite3_vfs_find']).apply(null, arguments);\n    });\n\n    var _sqlite3_initialize = (Module['_sqlite3_initialize'] = function () {\n      return (_sqlite3_initialize = Module['_sqlite3_initialize'] =\n        Module['asm']['sqlite3_initialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_malloc = (Module['_sqlite3_malloc'] = function () {\n      return (_sqlite3_malloc = Module['_sqlite3_malloc'] =\n        Module['asm']['sqlite3_malloc']).apply(null, arguments);\n    });\n\n    var _sqlite3_free = (Module['_sqlite3_free'] = function () {\n      return (_sqlite3_free = Module['_sqlite3_free'] =\n        Module['asm']['sqlite3_free']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_register = (Module['_sqlite3_vfs_register'] = function () {\n      return (_sqlite3_vfs_register = Module['_sqlite3_vfs_register'] =\n        Module['asm']['sqlite3_vfs_register']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_unregister = (Module['_sqlite3_vfs_unregister'] =\n      function () {\n        return (_sqlite3_vfs_unregister = Module['_sqlite3_vfs_unregister'] =\n          Module['asm']['sqlite3_vfs_unregister']).apply(null, arguments);\n      });\n\n    var _sqlite3_malloc64 = (Module['_sqlite3_malloc64'] = function () {\n      return (_sqlite3_malloc64 = Module['_sqlite3_malloc64'] =\n        Module['asm']['sqlite3_malloc64']).apply(null, arguments);\n    });\n\n    var _sqlite3_realloc = (Module['_sqlite3_realloc'] = function () {\n      return (_sqlite3_realloc = Module['_sqlite3_realloc'] =\n        Module['asm']['sqlite3_realloc']).apply(null, arguments);\n    });\n\n    var _sqlite3_realloc64 = (Module['_sqlite3_realloc64'] = function () {\n      return (_sqlite3_realloc64 = Module['_sqlite3_realloc64'] =\n        Module['asm']['sqlite3_realloc64']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_text = (Module['_sqlite3_value_text'] = function () {\n      return (_sqlite3_value_text = Module['_sqlite3_value_text'] =\n        Module['asm']['sqlite3_value_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_randomness = (Module['_sqlite3_randomness'] = function () {\n      return (_sqlite3_randomness = Module['_sqlite3_randomness'] =\n        Module['asm']['sqlite3_randomness']).apply(null, arguments);\n    });\n\n    var _sqlite3_stricmp = (Module['_sqlite3_stricmp'] = function () {\n      return (_sqlite3_stricmp = Module['_sqlite3_stricmp'] =\n        Module['asm']['sqlite3_stricmp']).apply(null, arguments);\n    });\n\n    var _sqlite3_strnicmp = (Module['_sqlite3_strnicmp'] = function () {\n      return (_sqlite3_strnicmp = Module['_sqlite3_strnicmp'] =\n        Module['asm']['sqlite3_strnicmp']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_parameter = (Module['_sqlite3_uri_parameter'] =\n      function () {\n        return (_sqlite3_uri_parameter = Module['_sqlite3_uri_parameter'] =\n          Module['asm']['sqlite3_uri_parameter']).apply(null, arguments);\n      });\n\n    var ___errno_location = (Module['___errno_location'] = function () {\n      return (___errno_location = Module['___errno_location'] =\n        Module['asm']['__errno_location']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_boolean = (Module['_sqlite3_uri_boolean'] = function () {\n      return (_sqlite3_uri_boolean = Module['_sqlite3_uri_boolean'] =\n        Module['asm']['sqlite3_uri_boolean']).apply(null, arguments);\n    });\n\n    var _sqlite3_serialize = (Module['_sqlite3_serialize'] = function () {\n      return (_sqlite3_serialize = Module['_sqlite3_serialize'] =\n        Module['asm']['sqlite3_serialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_prepare_v2 = (Module['_sqlite3_prepare_v2'] = function () {\n      return (_sqlite3_prepare_v2 = Module['_sqlite3_prepare_v2'] =\n        Module['asm']['sqlite3_prepare_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_step = (Module['_sqlite3_step'] = function () {\n      return (_sqlite3_step = Module['_sqlite3_step'] =\n        Module['asm']['sqlite3_step']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_int64 = (Module['_sqlite3_column_int64'] = function () {\n      return (_sqlite3_column_int64 = Module['_sqlite3_column_int64'] =\n        Module['asm']['sqlite3_column_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_reset = (Module['_sqlite3_reset'] = function () {\n      return (_sqlite3_reset = Module['_sqlite3_reset'] =\n        Module['asm']['sqlite3_reset']).apply(null, arguments);\n    });\n\n    var _sqlite3_exec = (Module['_sqlite3_exec'] = function () {\n      return (_sqlite3_exec = Module['_sqlite3_exec'] =\n        Module['asm']['sqlite3_exec']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_int = (Module['_sqlite3_column_int'] = function () {\n      return (_sqlite3_column_int = Module['_sqlite3_column_int'] =\n        Module['asm']['sqlite3_column_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_finalize = (Module['_sqlite3_finalize'] = function () {\n      return (_sqlite3_finalize = Module['_sqlite3_finalize'] =\n        Module['asm']['sqlite3_finalize']).apply(null, arguments);\n    });\n\n    var _sqlite3_file_control = (Module['_sqlite3_file_control'] = function () {\n      return (_sqlite3_file_control = Module['_sqlite3_file_control'] =\n        Module['asm']['sqlite3_file_control']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_name = (Module['_sqlite3_column_name'] = function () {\n      return (_sqlite3_column_name = Module['_sqlite3_column_name'] =\n        Module['asm']['sqlite3_column_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_text = (Module['_sqlite3_column_text'] = function () {\n      return (_sqlite3_column_text = Module['_sqlite3_column_text'] =\n        Module['asm']['sqlite3_column_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_type = (Module['_sqlite3_column_type'] = function () {\n      return (_sqlite3_column_type = Module['_sqlite3_column_type'] =\n        Module['asm']['sqlite3_column_type']).apply(null, arguments);\n    });\n\n    var _sqlite3_errmsg = (Module['_sqlite3_errmsg'] = function () {\n      return (_sqlite3_errmsg = Module['_sqlite3_errmsg'] =\n        Module['asm']['sqlite3_errmsg']).apply(null, arguments);\n    });\n\n    var _sqlite3_deserialize = (Module['_sqlite3_deserialize'] = function () {\n      return (_sqlite3_deserialize = Module['_sqlite3_deserialize'] =\n        Module['asm']['sqlite3_deserialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_clear_bindings = (Module['_sqlite3_clear_bindings'] =\n      function () {\n        return (_sqlite3_clear_bindings = Module['_sqlite3_clear_bindings'] =\n          Module['asm']['sqlite3_clear_bindings']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_blob = (Module['_sqlite3_value_blob'] = function () {\n      return (_sqlite3_value_blob = Module['_sqlite3_value_blob'] =\n        Module['asm']['sqlite3_value_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_bytes = (Module['_sqlite3_value_bytes'] = function () {\n      return (_sqlite3_value_bytes = Module['_sqlite3_value_bytes'] =\n        Module['asm']['sqlite3_value_bytes']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_double = (Module['_sqlite3_value_double'] = function () {\n      return (_sqlite3_value_double = Module['_sqlite3_value_double'] =\n        Module['asm']['sqlite3_value_double']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_int = (Module['_sqlite3_value_int'] = function () {\n      return (_sqlite3_value_int = Module['_sqlite3_value_int'] =\n        Module['asm']['sqlite3_value_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_int64 = (Module['_sqlite3_value_int64'] = function () {\n      return (_sqlite3_value_int64 = Module['_sqlite3_value_int64'] =\n        Module['asm']['sqlite3_value_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_subtype = (Module['_sqlite3_value_subtype'] =\n      function () {\n        return (_sqlite3_value_subtype = Module['_sqlite3_value_subtype'] =\n          Module['asm']['sqlite3_value_subtype']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_pointer = (Module['_sqlite3_value_pointer'] =\n      function () {\n        return (_sqlite3_value_pointer = Module['_sqlite3_value_pointer'] =\n          Module['asm']['sqlite3_value_pointer']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_type = (Module['_sqlite3_value_type'] = function () {\n      return (_sqlite3_value_type = Module['_sqlite3_value_type'] =\n        Module['asm']['sqlite3_value_type']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_nochange = (Module['_sqlite3_value_nochange'] =\n      function () {\n        return (_sqlite3_value_nochange = Module['_sqlite3_value_nochange'] =\n          Module['asm']['sqlite3_value_nochange']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_frombind = (Module['_sqlite3_value_frombind'] =\n      function () {\n        return (_sqlite3_value_frombind = Module['_sqlite3_value_frombind'] =\n          Module['asm']['sqlite3_value_frombind']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_dup = (Module['_sqlite3_value_dup'] = function () {\n      return (_sqlite3_value_dup = Module['_sqlite3_value_dup'] =\n        Module['asm']['sqlite3_value_dup']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_free = (Module['_sqlite3_value_free'] = function () {\n      return (_sqlite3_value_free = Module['_sqlite3_value_free'] =\n        Module['asm']['sqlite3_value_free']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_blob = (Module['_sqlite3_result_blob'] = function () {\n      return (_sqlite3_result_blob = Module['_sqlite3_result_blob'] =\n        Module['asm']['sqlite3_result_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_error_toobig = (Module['_sqlite3_result_error_toobig'] =\n      function () {\n        return (_sqlite3_result_error_toobig = Module[\n          '_sqlite3_result_error_toobig'\n        ] =\n          Module['asm']['sqlite3_result_error_toobig']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error_nomem = (Module['_sqlite3_result_error_nomem'] =\n      function () {\n        return (_sqlite3_result_error_nomem = Module[\n          '_sqlite3_result_error_nomem'\n        ] =\n          Module['asm']['sqlite3_result_error_nomem']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_double = (Module['_sqlite3_result_double'] =\n      function () {\n        return (_sqlite3_result_double = Module['_sqlite3_result_double'] =\n          Module['asm']['sqlite3_result_double']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error = (Module['_sqlite3_result_error'] = function () {\n      return (_sqlite3_result_error = Module['_sqlite3_result_error'] =\n        Module['asm']['sqlite3_result_error']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_int = (Module['_sqlite3_result_int'] = function () {\n      return (_sqlite3_result_int = Module['_sqlite3_result_int'] =\n        Module['asm']['sqlite3_result_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_int64 = (Module['_sqlite3_result_int64'] = function () {\n      return (_sqlite3_result_int64 = Module['_sqlite3_result_int64'] =\n        Module['asm']['sqlite3_result_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_null = (Module['_sqlite3_result_null'] = function () {\n      return (_sqlite3_result_null = Module['_sqlite3_result_null'] =\n        Module['asm']['sqlite3_result_null']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_pointer = (Module['_sqlite3_result_pointer'] =\n      function () {\n        return (_sqlite3_result_pointer = Module['_sqlite3_result_pointer'] =\n          Module['asm']['sqlite3_result_pointer']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_subtype = (Module['_sqlite3_result_subtype'] =\n      function () {\n        return (_sqlite3_result_subtype = Module['_sqlite3_result_subtype'] =\n          Module['asm']['sqlite3_result_subtype']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_text = (Module['_sqlite3_result_text'] = function () {\n      return (_sqlite3_result_text = Module['_sqlite3_result_text'] =\n        Module['asm']['sqlite3_result_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_zeroblob = (Module['_sqlite3_result_zeroblob'] =\n      function () {\n        return (_sqlite3_result_zeroblob = Module['_sqlite3_result_zeroblob'] =\n          Module['asm']['sqlite3_result_zeroblob']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_zeroblob64 = (Module['_sqlite3_result_zeroblob64'] =\n      function () {\n        return (_sqlite3_result_zeroblob64 = Module[\n          '_sqlite3_result_zeroblob64'\n        ] =\n          Module['asm']['sqlite3_result_zeroblob64']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error_code = (Module['_sqlite3_result_error_code'] =\n      function () {\n        return (_sqlite3_result_error_code = Module[\n          '_sqlite3_result_error_code'\n        ] =\n          Module['asm']['sqlite3_result_error_code']).apply(null, arguments);\n      });\n\n    var _sqlite3_user_data = (Module['_sqlite3_user_data'] = function () {\n      return (_sqlite3_user_data = Module['_sqlite3_user_data'] =\n        Module['asm']['sqlite3_user_data']).apply(null, arguments);\n    });\n\n    var _sqlite3_context_db_handle = (Module['_sqlite3_context_db_handle'] =\n      function () {\n        return (_sqlite3_context_db_handle = Module[\n          '_sqlite3_context_db_handle'\n        ] =\n          Module['asm']['sqlite3_context_db_handle']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_nochange = (Module['_sqlite3_vtab_nochange'] =\n      function () {\n        return (_sqlite3_vtab_nochange = Module['_sqlite3_vtab_nochange'] =\n          Module['asm']['sqlite3_vtab_nochange']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in_first = (Module['_sqlite3_vtab_in_first'] =\n      function () {\n        return (_sqlite3_vtab_in_first = Module['_sqlite3_vtab_in_first'] =\n          Module['asm']['sqlite3_vtab_in_first']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in_next = (Module['_sqlite3_vtab_in_next'] = function () {\n      return (_sqlite3_vtab_in_next = Module['_sqlite3_vtab_in_next'] =\n        Module['asm']['sqlite3_vtab_in_next']).apply(null, arguments);\n    });\n\n    var _sqlite3_aggregate_context = (Module['_sqlite3_aggregate_context'] =\n      function () {\n        return (_sqlite3_aggregate_context = Module[\n          '_sqlite3_aggregate_context'\n        ] =\n          Module['asm']['sqlite3_aggregate_context']).apply(null, arguments);\n      });\n\n    var _sqlite3_get_auxdata = (Module['_sqlite3_get_auxdata'] = function () {\n      return (_sqlite3_get_auxdata = Module['_sqlite3_get_auxdata'] =\n        Module['asm']['sqlite3_get_auxdata']).apply(null, arguments);\n    });\n\n    var _sqlite3_set_auxdata = (Module['_sqlite3_set_auxdata'] = function () {\n      return (_sqlite3_set_auxdata = Module['_sqlite3_set_auxdata'] =\n        Module['asm']['sqlite3_set_auxdata']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_count = (Module['_sqlite3_column_count'] = function () {\n      return (_sqlite3_column_count = Module['_sqlite3_column_count'] =\n        Module['asm']['sqlite3_column_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_data_count = (Module['_sqlite3_data_count'] = function () {\n      return (_sqlite3_data_count = Module['_sqlite3_data_count'] =\n        Module['asm']['sqlite3_data_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_blob = (Module['_sqlite3_column_blob'] = function () {\n      return (_sqlite3_column_blob = Module['_sqlite3_column_blob'] =\n        Module['asm']['sqlite3_column_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_bytes = (Module['_sqlite3_column_bytes'] = function () {\n      return (_sqlite3_column_bytes = Module['_sqlite3_column_bytes'] =\n        Module['asm']['sqlite3_column_bytes']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_double = (Module['_sqlite3_column_double'] =\n      function () {\n        return (_sqlite3_column_double = Module['_sqlite3_column_double'] =\n          Module['asm']['sqlite3_column_double']).apply(null, arguments);\n      });\n\n    var _sqlite3_column_value = (Module['_sqlite3_column_value'] = function () {\n      return (_sqlite3_column_value = Module['_sqlite3_column_value'] =\n        Module['asm']['sqlite3_column_value']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_blob = (Module['_sqlite3_bind_blob'] = function () {\n      return (_sqlite3_bind_blob = Module['_sqlite3_bind_blob'] =\n        Module['asm']['sqlite3_bind_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_double = (Module['_sqlite3_bind_double'] = function () {\n      return (_sqlite3_bind_double = Module['_sqlite3_bind_double'] =\n        Module['asm']['sqlite3_bind_double']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_int = (Module['_sqlite3_bind_int'] = function () {\n      return (_sqlite3_bind_int = Module['_sqlite3_bind_int'] =\n        Module['asm']['sqlite3_bind_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_int64 = (Module['_sqlite3_bind_int64'] = function () {\n      return (_sqlite3_bind_int64 = Module['_sqlite3_bind_int64'] =\n        Module['asm']['sqlite3_bind_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_null = (Module['_sqlite3_bind_null'] = function () {\n      return (_sqlite3_bind_null = Module['_sqlite3_bind_null'] =\n        Module['asm']['sqlite3_bind_null']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_pointer = (Module['_sqlite3_bind_pointer'] = function () {\n      return (_sqlite3_bind_pointer = Module['_sqlite3_bind_pointer'] =\n        Module['asm']['sqlite3_bind_pointer']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_text = (Module['_sqlite3_bind_text'] = function () {\n      return (_sqlite3_bind_text = Module['_sqlite3_bind_text'] =\n        Module['asm']['sqlite3_bind_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_parameter_count = (Module[\n      '_sqlite3_bind_parameter_count'\n    ] = function () {\n      return (_sqlite3_bind_parameter_count = Module[\n        '_sqlite3_bind_parameter_count'\n      ] =\n        Module['asm']['sqlite3_bind_parameter_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_parameter_index = (Module[\n      '_sqlite3_bind_parameter_index'\n    ] = function () {\n      return (_sqlite3_bind_parameter_index = Module[\n        '_sqlite3_bind_parameter_index'\n      ] =\n        Module['asm']['sqlite3_bind_parameter_index']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_handle = (Module['_sqlite3_db_handle'] = function () {\n      return (_sqlite3_db_handle = Module['_sqlite3_db_handle'] =\n        Module['asm']['sqlite3_db_handle']).apply(null, arguments);\n    });\n\n    var _sqlite3_stmt_readonly = (Module['_sqlite3_stmt_readonly'] =\n      function () {\n        return (_sqlite3_stmt_readonly = Module['_sqlite3_stmt_readonly'] =\n          Module['asm']['sqlite3_stmt_readonly']).apply(null, arguments);\n      });\n\n    var _sqlite3_stmt_isexplain = (Module['_sqlite3_stmt_isexplain'] =\n      function () {\n        return (_sqlite3_stmt_isexplain = Module['_sqlite3_stmt_isexplain'] =\n          Module['asm']['sqlite3_stmt_isexplain']).apply(null, arguments);\n      });\n\n    var _sqlite3_stmt_status = (Module['_sqlite3_stmt_status'] = function () {\n      return (_sqlite3_stmt_status = Module['_sqlite3_stmt_status'] =\n        Module['asm']['sqlite3_stmt_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_sql = (Module['_sqlite3_sql'] = function () {\n      return (_sqlite3_sql = Module['_sqlite3_sql'] =\n        Module['asm']['sqlite3_sql']).apply(null, arguments);\n    });\n\n    var _sqlite3_expanded_sql = (Module['_sqlite3_expanded_sql'] = function () {\n      return (_sqlite3_expanded_sql = Module['_sqlite3_expanded_sql'] =\n        Module['asm']['sqlite3_expanded_sql']).apply(null, arguments);\n    });\n\n    var _sqlite3_preupdate_old = (Module['_sqlite3_preupdate_old'] =\n      function () {\n        return (_sqlite3_preupdate_old = Module['_sqlite3_preupdate_old'] =\n          Module['asm']['sqlite3_preupdate_old']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_count = (Module['_sqlite3_preupdate_count'] =\n      function () {\n        return (_sqlite3_preupdate_count = Module['_sqlite3_preupdate_count'] =\n          Module['asm']['sqlite3_preupdate_count']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_depth = (Module['_sqlite3_preupdate_depth'] =\n      function () {\n        return (_sqlite3_preupdate_depth = Module['_sqlite3_preupdate_depth'] =\n          Module['asm']['sqlite3_preupdate_depth']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_blobwrite = (Module['_sqlite3_preupdate_blobwrite'] =\n      function () {\n        return (_sqlite3_preupdate_blobwrite = Module[\n          '_sqlite3_preupdate_blobwrite'\n        ] =\n          Module['asm']['sqlite3_preupdate_blobwrite']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_new = (Module['_sqlite3_preupdate_new'] =\n      function () {\n        return (_sqlite3_preupdate_new = Module['_sqlite3_preupdate_new'] =\n          Module['asm']['sqlite3_preupdate_new']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_numeric_type = (Module['_sqlite3_value_numeric_type'] =\n      function () {\n        return (_sqlite3_value_numeric_type = Module[\n          '_sqlite3_value_numeric_type'\n        ] =\n          Module['asm']['sqlite3_value_numeric_type']).apply(null, arguments);\n      });\n\n    var _sqlite3_set_authorizer = (Module['_sqlite3_set_authorizer'] =\n      function () {\n        return (_sqlite3_set_authorizer = Module['_sqlite3_set_authorizer'] =\n          Module['asm']['sqlite3_set_authorizer']).apply(null, arguments);\n      });\n\n    var _sqlite3_strglob = (Module['_sqlite3_strglob'] = function () {\n      return (_sqlite3_strglob = Module['_sqlite3_strglob'] =\n        Module['asm']['sqlite3_strglob']).apply(null, arguments);\n    });\n\n    var _sqlite3_strlike = (Module['_sqlite3_strlike'] = function () {\n      return (_sqlite3_strlike = Module['_sqlite3_strlike'] =\n        Module['asm']['sqlite3_strlike']).apply(null, arguments);\n    });\n\n    var _sqlite3_auto_extension = (Module['_sqlite3_auto_extension'] =\n      function () {\n        return (_sqlite3_auto_extension = Module['_sqlite3_auto_extension'] =\n          Module['asm']['sqlite3_auto_extension']).apply(null, arguments);\n      });\n\n    var _sqlite3_cancel_auto_extension = (Module[\n      '_sqlite3_cancel_auto_extension'\n    ] = function () {\n      return (_sqlite3_cancel_auto_extension = Module[\n        '_sqlite3_cancel_auto_extension'\n      ] =\n        Module['asm']['sqlite3_cancel_auto_extension']).apply(null, arguments);\n    });\n\n    var _sqlite3_reset_auto_extension = (Module[\n      '_sqlite3_reset_auto_extension'\n    ] = function () {\n      return (_sqlite3_reset_auto_extension = Module[\n        '_sqlite3_reset_auto_extension'\n      ] =\n        Module['asm']['sqlite3_reset_auto_extension']).apply(null, arguments);\n    });\n\n    var _sqlite3_prepare_v3 = (Module['_sqlite3_prepare_v3'] = function () {\n      return (_sqlite3_prepare_v3 = Module['_sqlite3_prepare_v3'] =\n        Module['asm']['sqlite3_prepare_v3']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_module = (Module['_sqlite3_create_module'] =\n      function () {\n        return (_sqlite3_create_module = Module['_sqlite3_create_module'] =\n          Module['asm']['sqlite3_create_module']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_module_v2 = (Module['_sqlite3_create_module_v2'] =\n      function () {\n        return (_sqlite3_create_module_v2 = Module[\n          '_sqlite3_create_module_v2'\n        ] =\n          Module['asm']['sqlite3_create_module_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_drop_modules = (Module['_sqlite3_drop_modules'] = function () {\n      return (_sqlite3_drop_modules = Module['_sqlite3_drop_modules'] =\n        Module['asm']['sqlite3_drop_modules']).apply(null, arguments);\n    });\n\n    var _sqlite3_declare_vtab = (Module['_sqlite3_declare_vtab'] = function () {\n      return (_sqlite3_declare_vtab = Module['_sqlite3_declare_vtab'] =\n        Module['asm']['sqlite3_declare_vtab']).apply(null, arguments);\n    });\n\n    var _sqlite3_vtab_on_conflict = (Module['_sqlite3_vtab_on_conflict'] =\n      function () {\n        return (_sqlite3_vtab_on_conflict = Module[\n          '_sqlite3_vtab_on_conflict'\n        ] =\n          Module['asm']['sqlite3_vtab_on_conflict']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_collation = (Module['_sqlite3_vtab_collation'] =\n      function () {\n        return (_sqlite3_vtab_collation = Module['_sqlite3_vtab_collation'] =\n          Module['asm']['sqlite3_vtab_collation']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in = (Module['_sqlite3_vtab_in'] = function () {\n      return (_sqlite3_vtab_in = Module['_sqlite3_vtab_in'] =\n        Module['asm']['sqlite3_vtab_in']).apply(null, arguments);\n    });\n\n    var _sqlite3_vtab_rhs_value = (Module['_sqlite3_vtab_rhs_value'] =\n      function () {\n        return (_sqlite3_vtab_rhs_value = Module['_sqlite3_vtab_rhs_value'] =\n          Module['asm']['sqlite3_vtab_rhs_value']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_distinct = (Module['_sqlite3_vtab_distinct'] =\n      function () {\n        return (_sqlite3_vtab_distinct = Module['_sqlite3_vtab_distinct'] =\n          Module['asm']['sqlite3_vtab_distinct']).apply(null, arguments);\n      });\n\n    var _sqlite3_keyword_name = (Module['_sqlite3_keyword_name'] = function () {\n      return (_sqlite3_keyword_name = Module['_sqlite3_keyword_name'] =\n        Module['asm']['sqlite3_keyword_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_keyword_count = (Module['_sqlite3_keyword_count'] =\n      function () {\n        return (_sqlite3_keyword_count = Module['_sqlite3_keyword_count'] =\n          Module['asm']['sqlite3_keyword_count']).apply(null, arguments);\n      });\n\n    var _sqlite3_keyword_check = (Module['_sqlite3_keyword_check'] =\n      function () {\n        return (_sqlite3_keyword_check = Module['_sqlite3_keyword_check'] =\n          Module['asm']['sqlite3_keyword_check']).apply(null, arguments);\n      });\n\n    var _sqlite3_complete = (Module['_sqlite3_complete'] = function () {\n      return (_sqlite3_complete = Module['_sqlite3_complete'] =\n        Module['asm']['sqlite3_complete']).apply(null, arguments);\n    });\n\n    var _sqlite3_libversion = (Module['_sqlite3_libversion'] = function () {\n      return (_sqlite3_libversion = Module['_sqlite3_libversion'] =\n        Module['asm']['sqlite3_libversion']).apply(null, arguments);\n    });\n\n    var _sqlite3_libversion_number = (Module['_sqlite3_libversion_number'] =\n      function () {\n        return (_sqlite3_libversion_number = Module[\n          '_sqlite3_libversion_number'\n        ] =\n          Module['asm']['sqlite3_libversion_number']).apply(null, arguments);\n      });\n\n    var _sqlite3_shutdown = (Module['_sqlite3_shutdown'] = function () {\n      return (_sqlite3_shutdown = Module['_sqlite3_shutdown'] =\n        Module['asm']['sqlite3_shutdown']).apply(null, arguments);\n    });\n\n    var _sqlite3_last_insert_rowid = (Module['_sqlite3_last_insert_rowid'] =\n      function () {\n        return (_sqlite3_last_insert_rowid = Module[\n          '_sqlite3_last_insert_rowid'\n        ] =\n          Module['asm']['sqlite3_last_insert_rowid']).apply(null, arguments);\n      });\n\n    var _sqlite3_set_last_insert_rowid = (Module[\n      '_sqlite3_set_last_insert_rowid'\n    ] = function () {\n      return (_sqlite3_set_last_insert_rowid = Module[\n        '_sqlite3_set_last_insert_rowid'\n      ] =\n        Module['asm']['sqlite3_set_last_insert_rowid']).apply(null, arguments);\n    });\n\n    var _sqlite3_changes64 = (Module['_sqlite3_changes64'] = function () {\n      return (_sqlite3_changes64 = Module['_sqlite3_changes64'] =\n        Module['asm']['sqlite3_changes64']).apply(null, arguments);\n    });\n\n    var _sqlite3_changes = (Module['_sqlite3_changes'] = function () {\n      return (_sqlite3_changes = Module['_sqlite3_changes'] =\n        Module['asm']['sqlite3_changes']).apply(null, arguments);\n    });\n\n    var _sqlite3_total_changes64 = (Module['_sqlite3_total_changes64'] =\n      function () {\n        return (_sqlite3_total_changes64 = Module['_sqlite3_total_changes64'] =\n          Module['asm']['sqlite3_total_changes64']).apply(null, arguments);\n      });\n\n    var _sqlite3_total_changes = (Module['_sqlite3_total_changes'] =\n      function () {\n        return (_sqlite3_total_changes = Module['_sqlite3_total_changes'] =\n          Module['asm']['sqlite3_total_changes']).apply(null, arguments);\n      });\n\n    var _sqlite3_txn_state = (Module['_sqlite3_txn_state'] = function () {\n      return (_sqlite3_txn_state = Module['_sqlite3_txn_state'] =\n        Module['asm']['sqlite3_txn_state']).apply(null, arguments);\n    });\n\n    var _sqlite3_close_v2 = (Module['_sqlite3_close_v2'] = function () {\n      return (_sqlite3_close_v2 = Module['_sqlite3_close_v2'] =\n        Module['asm']['sqlite3_close_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_busy_handler = (Module['_sqlite3_busy_handler'] = function () {\n      return (_sqlite3_busy_handler = Module['_sqlite3_busy_handler'] =\n        Module['asm']['sqlite3_busy_handler']).apply(null, arguments);\n    });\n\n    var _sqlite3_progress_handler = (Module['_sqlite3_progress_handler'] =\n      function () {\n        return (_sqlite3_progress_handler = Module[\n          '_sqlite3_progress_handler'\n        ] =\n          Module['asm']['sqlite3_progress_handler']).apply(null, arguments);\n      });\n\n    var _sqlite3_busy_timeout = (Module['_sqlite3_busy_timeout'] = function () {\n      return (_sqlite3_busy_timeout = Module['_sqlite3_busy_timeout'] =\n        Module['asm']['sqlite3_busy_timeout']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_function = (Module['_sqlite3_create_function'] =\n      function () {\n        return (_sqlite3_create_function = Module['_sqlite3_create_function'] =\n          Module['asm']['sqlite3_create_function']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_function_v2 = (Module['_sqlite3_create_function_v2'] =\n      function () {\n        return (_sqlite3_create_function_v2 = Module[\n          '_sqlite3_create_function_v2'\n        ] =\n          Module['asm']['sqlite3_create_function_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_window_function = (Module[\n      '_sqlite3_create_window_function'\n    ] = function () {\n      return (_sqlite3_create_window_function = Module[\n        '_sqlite3_create_window_function'\n      ] =\n        Module['asm']['sqlite3_create_window_function']).apply(null, arguments);\n    });\n\n    var _sqlite3_overload_function = (Module['_sqlite3_overload_function'] =\n      function () {\n        return (_sqlite3_overload_function = Module[\n          '_sqlite3_overload_function'\n        ] =\n          Module['asm']['sqlite3_overload_function']).apply(null, arguments);\n      });\n\n    var _sqlite3_trace_v2 = (Module['_sqlite3_trace_v2'] = function () {\n      return (_sqlite3_trace_v2 = Module['_sqlite3_trace_v2'] =\n        Module['asm']['sqlite3_trace_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_commit_hook = (Module['_sqlite3_commit_hook'] = function () {\n      return (_sqlite3_commit_hook = Module['_sqlite3_commit_hook'] =\n        Module['asm']['sqlite3_commit_hook']).apply(null, arguments);\n    });\n\n    var _sqlite3_update_hook = (Module['_sqlite3_update_hook'] = function () {\n      return (_sqlite3_update_hook = Module['_sqlite3_update_hook'] =\n        Module['asm']['sqlite3_update_hook']).apply(null, arguments);\n    });\n\n    var _sqlite3_rollback_hook = (Module['_sqlite3_rollback_hook'] =\n      function () {\n        return (_sqlite3_rollback_hook = Module['_sqlite3_rollback_hook'] =\n          Module['asm']['sqlite3_rollback_hook']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_hook = (Module['_sqlite3_preupdate_hook'] =\n      function () {\n        return (_sqlite3_preupdate_hook = Module['_sqlite3_preupdate_hook'] =\n          Module['asm']['sqlite3_preupdate_hook']).apply(null, arguments);\n      });\n\n    var _sqlite3_error_offset = (Module['_sqlite3_error_offset'] = function () {\n      return (_sqlite3_error_offset = Module['_sqlite3_error_offset'] =\n        Module['asm']['sqlite3_error_offset']).apply(null, arguments);\n    });\n\n    var _sqlite3_errcode = (Module['_sqlite3_errcode'] = function () {\n      return (_sqlite3_errcode = Module['_sqlite3_errcode'] =\n        Module['asm']['sqlite3_errcode']).apply(null, arguments);\n    });\n\n    var _sqlite3_extended_errcode = (Module['_sqlite3_extended_errcode'] =\n      function () {\n        return (_sqlite3_extended_errcode = Module[\n          '_sqlite3_extended_errcode'\n        ] =\n          Module['asm']['sqlite3_extended_errcode']).apply(null, arguments);\n      });\n\n    var _sqlite3_errstr = (Module['_sqlite3_errstr'] = function () {\n      return (_sqlite3_errstr = Module['_sqlite3_errstr'] =\n        Module['asm']['sqlite3_errstr']).apply(null, arguments);\n    });\n\n    var _sqlite3_limit = (Module['_sqlite3_limit'] = function () {\n      return (_sqlite3_limit = Module['_sqlite3_limit'] =\n        Module['asm']['sqlite3_limit']).apply(null, arguments);\n    });\n\n    var _sqlite3_open = (Module['_sqlite3_open'] = function () {\n      return (_sqlite3_open = Module['_sqlite3_open'] =\n        Module['asm']['sqlite3_open']).apply(null, arguments);\n    });\n\n    var _sqlite3_open_v2 = (Module['_sqlite3_open_v2'] = function () {\n      return (_sqlite3_open_v2 = Module['_sqlite3_open_v2'] =\n        Module['asm']['sqlite3_open_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_collation = (Module['_sqlite3_create_collation'] =\n      function () {\n        return (_sqlite3_create_collation = Module[\n          '_sqlite3_create_collation'\n        ] =\n          Module['asm']['sqlite3_create_collation']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_collation_v2 = (Module['_sqlite3_create_collation_v2'] =\n      function () {\n        return (_sqlite3_create_collation_v2 = Module[\n          '_sqlite3_create_collation_v2'\n        ] =\n          Module['asm']['sqlite3_create_collation_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_collation_needed = (Module['_sqlite3_collation_needed'] =\n      function () {\n        return (_sqlite3_collation_needed = Module[\n          '_sqlite3_collation_needed'\n        ] =\n          Module['asm']['sqlite3_collation_needed']).apply(null, arguments);\n      });\n\n    var _sqlite3_get_autocommit = (Module['_sqlite3_get_autocommit'] =\n      function () {\n        return (_sqlite3_get_autocommit = Module['_sqlite3_get_autocommit'] =\n          Module['asm']['sqlite3_get_autocommit']).apply(null, arguments);\n      });\n\n    var _sqlite3_table_column_metadata = (Module[\n      '_sqlite3_table_column_metadata'\n    ] = function () {\n      return (_sqlite3_table_column_metadata = Module[\n        '_sqlite3_table_column_metadata'\n      ] =\n        Module['asm']['sqlite3_table_column_metadata']).apply(null, arguments);\n    });\n\n    var _sqlite3_extended_result_codes = (Module[\n      '_sqlite3_extended_result_codes'\n    ] = function () {\n      return (_sqlite3_extended_result_codes = Module[\n        '_sqlite3_extended_result_codes'\n      ] =\n        Module['asm']['sqlite3_extended_result_codes']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_key = (Module['_sqlite3_uri_key'] = function () {\n      return (_sqlite3_uri_key = Module['_sqlite3_uri_key'] =\n        Module['asm']['sqlite3_uri_key']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_int64 = (Module['_sqlite3_uri_int64'] = function () {\n      return (_sqlite3_uri_int64 = Module['_sqlite3_uri_int64'] =\n        Module['asm']['sqlite3_uri_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_name = (Module['_sqlite3_db_name'] = function () {\n      return (_sqlite3_db_name = Module['_sqlite3_db_name'] =\n        Module['asm']['sqlite3_db_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_filename = (Module['_sqlite3_db_filename'] = function () {\n      return (_sqlite3_db_filename = Module['_sqlite3_db_filename'] =\n        Module['asm']['sqlite3_db_filename']).apply(null, arguments);\n    });\n\n    var _sqlite3_compileoption_used = (Module['_sqlite3_compileoption_used'] =\n      function () {\n        return (_sqlite3_compileoption_used = Module[\n          '_sqlite3_compileoption_used'\n        ] =\n          Module['asm']['sqlite3_compileoption_used']).apply(null, arguments);\n      });\n\n    var _sqlite3_compileoption_get = (Module['_sqlite3_compileoption_get'] =\n      function () {\n        return (_sqlite3_compileoption_get = Module[\n          '_sqlite3_compileoption_get'\n        ] =\n          Module['asm']['sqlite3_compileoption_get']).apply(null, arguments);\n      });\n\n    var _sqlite3session_diff = (Module['_sqlite3session_diff'] = function () {\n      return (_sqlite3session_diff = Module['_sqlite3session_diff'] =\n        Module['asm']['sqlite3session_diff']).apply(null, arguments);\n    });\n\n    var _sqlite3session_attach = (Module['_sqlite3session_attach'] =\n      function () {\n        return (_sqlite3session_attach = Module['_sqlite3session_attach'] =\n          Module['asm']['sqlite3session_attach']).apply(null, arguments);\n      });\n\n    var _sqlite3session_create = (Module['_sqlite3session_create'] =\n      function () {\n        return (_sqlite3session_create = Module['_sqlite3session_create'] =\n          Module['asm']['sqlite3session_create']).apply(null, arguments);\n      });\n\n    var _sqlite3session_delete = (Module['_sqlite3session_delete'] =\n      function () {\n        return (_sqlite3session_delete = Module['_sqlite3session_delete'] =\n          Module['asm']['sqlite3session_delete']).apply(null, arguments);\n      });\n\n    var _sqlite3session_table_filter = (Module['_sqlite3session_table_filter'] =\n      function () {\n        return (_sqlite3session_table_filter = Module[\n          '_sqlite3session_table_filter'\n        ] =\n          Module['asm']['sqlite3session_table_filter']).apply(null, arguments);\n      });\n\n    var _sqlite3session_changeset = (Module['_sqlite3session_changeset'] =\n      function () {\n        return (_sqlite3session_changeset = Module[\n          '_sqlite3session_changeset'\n        ] =\n          Module['asm']['sqlite3session_changeset']).apply(null, arguments);\n      });\n\n    var _sqlite3session_changeset_strm = (Module[\n      '_sqlite3session_changeset_strm'\n    ] = function () {\n      return (_sqlite3session_changeset_strm = Module[\n        '_sqlite3session_changeset_strm'\n      ] =\n        Module['asm']['sqlite3session_changeset_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_patchset_strm = (Module[\n      '_sqlite3session_patchset_strm'\n    ] = function () {\n      return (_sqlite3session_patchset_strm = Module[\n        '_sqlite3session_patchset_strm'\n      ] =\n        Module['asm']['sqlite3session_patchset_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_patchset = (Module['_sqlite3session_patchset'] =\n      function () {\n        return (_sqlite3session_patchset = Module['_sqlite3session_patchset'] =\n          Module['asm']['sqlite3session_patchset']).apply(null, arguments);\n      });\n\n    var _sqlite3session_enable = (Module['_sqlite3session_enable'] =\n      function () {\n        return (_sqlite3session_enable = Module['_sqlite3session_enable'] =\n          Module['asm']['sqlite3session_enable']).apply(null, arguments);\n      });\n\n    var _sqlite3session_indirect = (Module['_sqlite3session_indirect'] =\n      function () {\n        return (_sqlite3session_indirect = Module['_sqlite3session_indirect'] =\n          Module['asm']['sqlite3session_indirect']).apply(null, arguments);\n      });\n\n    var _sqlite3session_isempty = (Module['_sqlite3session_isempty'] =\n      function () {\n        return (_sqlite3session_isempty = Module['_sqlite3session_isempty'] =\n          Module['asm']['sqlite3session_isempty']).apply(null, arguments);\n      });\n\n    var _sqlite3session_memory_used = (Module['_sqlite3session_memory_used'] =\n      function () {\n        return (_sqlite3session_memory_used = Module[\n          '_sqlite3session_memory_used'\n        ] =\n          Module['asm']['sqlite3session_memory_used']).apply(null, arguments);\n      });\n\n    var _sqlite3session_object_config = (Module[\n      '_sqlite3session_object_config'\n    ] = function () {\n      return (_sqlite3session_object_config = Module[\n        '_sqlite3session_object_config'\n      ] =\n        Module['asm']['sqlite3session_object_config']).apply(null, arguments);\n    });\n\n    var _sqlite3session_changeset_size = (Module[\n      '_sqlite3session_changeset_size'\n    ] = function () {\n      return (_sqlite3session_changeset_size = Module[\n        '_sqlite3session_changeset_size'\n      ] =\n        Module['asm']['sqlite3session_changeset_size']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_start = (Module['_sqlite3changeset_start'] =\n      function () {\n        return (_sqlite3changeset_start = Module['_sqlite3changeset_start'] =\n          Module['asm']['sqlite3changeset_start']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_v2 = (Module['_sqlite3changeset_start_v2'] =\n      function () {\n        return (_sqlite3changeset_start_v2 = Module[\n          '_sqlite3changeset_start_v2'\n        ] =\n          Module['asm']['sqlite3changeset_start_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_strm = (Module['_sqlite3changeset_start_strm'] =\n      function () {\n        return (_sqlite3changeset_start_strm = Module[\n          '_sqlite3changeset_start_strm'\n        ] =\n          Module['asm']['sqlite3changeset_start_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_v2_strm = (Module[\n      '_sqlite3changeset_start_v2_strm'\n    ] = function () {\n      return (_sqlite3changeset_start_v2_strm = Module[\n        '_sqlite3changeset_start_v2_strm'\n      ] =\n        Module['asm']['sqlite3changeset_start_v2_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_next = (Module['_sqlite3changeset_next'] =\n      function () {\n        return (_sqlite3changeset_next = Module['_sqlite3changeset_next'] =\n          Module['asm']['sqlite3changeset_next']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_op = (Module['_sqlite3changeset_op'] = function () {\n      return (_sqlite3changeset_op = Module['_sqlite3changeset_op'] =\n        Module['asm']['sqlite3changeset_op']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_pk = (Module['_sqlite3changeset_pk'] = function () {\n      return (_sqlite3changeset_pk = Module['_sqlite3changeset_pk'] =\n        Module['asm']['sqlite3changeset_pk']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_old = (Module['_sqlite3changeset_old'] = function () {\n      return (_sqlite3changeset_old = Module['_sqlite3changeset_old'] =\n        Module['asm']['sqlite3changeset_old']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_new = (Module['_sqlite3changeset_new'] = function () {\n      return (_sqlite3changeset_new = Module['_sqlite3changeset_new'] =\n        Module['asm']['sqlite3changeset_new']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_conflict = (Module['_sqlite3changeset_conflict'] =\n      function () {\n        return (_sqlite3changeset_conflict = Module[\n          '_sqlite3changeset_conflict'\n        ] =\n          Module['asm']['sqlite3changeset_conflict']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_fk_conflicts = (Module[\n      '_sqlite3changeset_fk_conflicts'\n    ] = function () {\n      return (_sqlite3changeset_fk_conflicts = Module[\n        '_sqlite3changeset_fk_conflicts'\n      ] =\n        Module['asm']['sqlite3changeset_fk_conflicts']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_finalize = (Module['_sqlite3changeset_finalize'] =\n      function () {\n        return (_sqlite3changeset_finalize = Module[\n          '_sqlite3changeset_finalize'\n        ] =\n          Module['asm']['sqlite3changeset_finalize']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_invert = (Module['_sqlite3changeset_invert'] =\n      function () {\n        return (_sqlite3changeset_invert = Module['_sqlite3changeset_invert'] =\n          Module['asm']['sqlite3changeset_invert']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_invert_strm = (Module[\n      '_sqlite3changeset_invert_strm'\n    ] = function () {\n      return (_sqlite3changeset_invert_strm = Module[\n        '_sqlite3changeset_invert_strm'\n      ] =\n        Module['asm']['sqlite3changeset_invert_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_apply_v2 = (Module['_sqlite3changeset_apply_v2'] =\n      function () {\n        return (_sqlite3changeset_apply_v2 = Module[\n          '_sqlite3changeset_apply_v2'\n        ] =\n          Module['asm']['sqlite3changeset_apply_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_apply = (Module['_sqlite3changeset_apply'] =\n      function () {\n        return (_sqlite3changeset_apply = Module['_sqlite3changeset_apply'] =\n          Module['asm']['sqlite3changeset_apply']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_apply_v2_strm = (Module[\n      '_sqlite3changeset_apply_v2_strm'\n    ] = function () {\n      return (_sqlite3changeset_apply_v2_strm = Module[\n        '_sqlite3changeset_apply_v2_strm'\n      ] =\n        Module['asm']['sqlite3changeset_apply_v2_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_apply_strm = (Module['_sqlite3changeset_apply_strm'] =\n      function () {\n        return (_sqlite3changeset_apply_strm = Module[\n          '_sqlite3changeset_apply_strm'\n        ] =\n          Module['asm']['sqlite3changeset_apply_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_new = (Module['_sqlite3changegroup_new'] =\n      function () {\n        return (_sqlite3changegroup_new = Module['_sqlite3changegroup_new'] =\n          Module['asm']['sqlite3changegroup_new']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_add = (Module['_sqlite3changegroup_add'] =\n      function () {\n        return (_sqlite3changegroup_add = Module['_sqlite3changegroup_add'] =\n          Module['asm']['sqlite3changegroup_add']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_output = (Module['_sqlite3changegroup_output'] =\n      function () {\n        return (_sqlite3changegroup_output = Module[\n          '_sqlite3changegroup_output'\n        ] =\n          Module['asm']['sqlite3changegroup_output']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_add_strm = (Module['_sqlite3changegroup_add_strm'] =\n      function () {\n        return (_sqlite3changegroup_add_strm = Module[\n          '_sqlite3changegroup_add_strm'\n        ] =\n          Module['asm']['sqlite3changegroup_add_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_output_strm = (Module[\n      '_sqlite3changegroup_output_strm'\n    ] = function () {\n      return (_sqlite3changegroup_output_strm = Module[\n        '_sqlite3changegroup_output_strm'\n      ] =\n        Module['asm']['sqlite3changegroup_output_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changegroup_delete = (Module['_sqlite3changegroup_delete'] =\n      function () {\n        return (_sqlite3changegroup_delete = Module[\n          '_sqlite3changegroup_delete'\n        ] =\n          Module['asm']['sqlite3changegroup_delete']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_concat = (Module['_sqlite3changeset_concat'] =\n      function () {\n        return (_sqlite3changeset_concat = Module['_sqlite3changeset_concat'] =\n          Module['asm']['sqlite3changeset_concat']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_concat_strm = (Module[\n      '_sqlite3changeset_concat_strm'\n    ] = function () {\n      return (_sqlite3changeset_concat_strm = Module[\n        '_sqlite3changeset_concat_strm'\n      ] =\n        Module['asm']['sqlite3changeset_concat_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_config = (Module['_sqlite3session_config'] =\n      function () {\n        return (_sqlite3session_config = Module['_sqlite3session_config'] =\n          Module['asm']['sqlite3session_config']).apply(null, arguments);\n      });\n\n    var _sqlite3_sourceid = (Module['_sqlite3_sourceid'] = function () {\n      return (_sqlite3_sourceid = Module['_sqlite3_sourceid'] =\n        Module['asm']['sqlite3_sourceid']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_pstack_ptr = (Module['_sqlite3__wasm_pstack_ptr'] =\n      function () {\n        return (_sqlite3__wasm_pstack_ptr = Module[\n          '_sqlite3__wasm_pstack_ptr'\n        ] =\n          Module['asm']['sqlite3__wasm_pstack_ptr']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_pstack_restore = (Module[\n      '_sqlite3__wasm_pstack_restore'\n    ] = function () {\n      return (_sqlite3__wasm_pstack_restore = Module[\n        '_sqlite3__wasm_pstack_restore'\n      ] =\n        Module['asm']['sqlite3__wasm_pstack_restore']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_pstack_alloc = (Module['_sqlite3__wasm_pstack_alloc'] =\n      function () {\n        return (_sqlite3__wasm_pstack_alloc = Module[\n          '_sqlite3__wasm_pstack_alloc'\n        ] =\n          Module['asm']['sqlite3__wasm_pstack_alloc']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_pstack_remaining = (Module[\n      '_sqlite3__wasm_pstack_remaining'\n    ] = function () {\n      return (_sqlite3__wasm_pstack_remaining = Module[\n        '_sqlite3__wasm_pstack_remaining'\n      ] =\n        Module['asm']['sqlite3__wasm_pstack_remaining']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_pstack_quota = (Module['_sqlite3__wasm_pstack_quota'] =\n      function () {\n        return (_sqlite3__wasm_pstack_quota = Module[\n          '_sqlite3__wasm_pstack_quota'\n        ] =\n          Module['asm']['sqlite3__wasm_pstack_quota']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_error = (Module['_sqlite3__wasm_db_error'] =\n      function () {\n        return (_sqlite3__wasm_db_error = Module['_sqlite3__wasm_db_error'] =\n          Module['asm']['sqlite3__wasm_db_error']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_struct = (Module['_sqlite3__wasm_test_struct'] =\n      function () {\n        return (_sqlite3__wasm_test_struct = Module[\n          '_sqlite3__wasm_test_struct'\n        ] =\n          Module['asm']['sqlite3__wasm_test_struct']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_enum_json = (Module['_sqlite3__wasm_enum_json'] =\n      function () {\n        return (_sqlite3__wasm_enum_json = Module['_sqlite3__wasm_enum_json'] =\n          Module['asm']['sqlite3__wasm_enum_json']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_vfs_unlink = (Module['_sqlite3__wasm_vfs_unlink'] =\n      function () {\n        return (_sqlite3__wasm_vfs_unlink = Module[\n          '_sqlite3__wasm_vfs_unlink'\n        ] =\n          Module['asm']['sqlite3__wasm_vfs_unlink']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_vfs = (Module['_sqlite3__wasm_db_vfs'] = function () {\n      return (_sqlite3__wasm_db_vfs = Module['_sqlite3__wasm_db_vfs'] =\n        Module['asm']['sqlite3__wasm_db_vfs']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_db_reset = (Module['_sqlite3__wasm_db_reset'] =\n      function () {\n        return (_sqlite3__wasm_db_reset = Module['_sqlite3__wasm_db_reset'] =\n          Module['asm']['sqlite3__wasm_db_reset']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_export_chunked = (Module[\n      '_sqlite3__wasm_db_export_chunked'\n    ] = function () {\n      return (_sqlite3__wasm_db_export_chunked = Module[\n        '_sqlite3__wasm_db_export_chunked'\n      ] =\n        Module['asm']['sqlite3__wasm_db_export_chunked']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_db_serialize = (Module['_sqlite3__wasm_db_serialize'] =\n      function () {\n        return (_sqlite3__wasm_db_serialize = Module[\n          '_sqlite3__wasm_db_serialize'\n        ] =\n          Module['asm']['sqlite3__wasm_db_serialize']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_vfs_create_file = (Module[\n      '_sqlite3__wasm_vfs_create_file'\n    ] = function () {\n      return (_sqlite3__wasm_vfs_create_file = Module[\n        '_sqlite3__wasm_vfs_create_file'\n      ] =\n        Module['asm']['sqlite3__wasm_vfs_create_file']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_posix_create_file = (Module[\n      '_sqlite3__wasm_posix_create_file'\n    ] = function () {\n      return (_sqlite3__wasm_posix_create_file = Module[\n        '_sqlite3__wasm_posix_create_file'\n      ] =\n        Module['asm']['sqlite3__wasm_posix_create_file']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_kvvfsMakeKeyOnPstack = (Module[\n      '_sqlite3__wasm_kvvfsMakeKeyOnPstack'\n    ] = function () {\n      return (_sqlite3__wasm_kvvfsMakeKeyOnPstack = Module[\n        '_sqlite3__wasm_kvvfsMakeKeyOnPstack'\n      ] =\n        Module['asm']['sqlite3__wasm_kvvfsMakeKeyOnPstack']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_kvvfs_methods = (Module['_sqlite3__wasm_kvvfs_methods'] =\n      function () {\n        return (_sqlite3__wasm_kvvfs_methods = Module[\n          '_sqlite3__wasm_kvvfs_methods'\n        ] =\n          Module['asm']['sqlite3__wasm_kvvfs_methods']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_vtab_config = (Module['_sqlite3__wasm_vtab_config'] =\n      function () {\n        return (_sqlite3__wasm_vtab_config = Module[\n          '_sqlite3__wasm_vtab_config'\n        ] =\n          Module['asm']['sqlite3__wasm_vtab_config']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_config_ip = (Module['_sqlite3__wasm_db_config_ip'] =\n      function () {\n        return (_sqlite3__wasm_db_config_ip = Module[\n          '_sqlite3__wasm_db_config_ip'\n        ] =\n          Module['asm']['sqlite3__wasm_db_config_ip']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_config_pii = (Module['_sqlite3__wasm_db_config_pii'] =\n      function () {\n        return (_sqlite3__wasm_db_config_pii = Module[\n          '_sqlite3__wasm_db_config_pii'\n        ] =\n          Module['asm']['sqlite3__wasm_db_config_pii']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_db_config_s = (Module['_sqlite3__wasm_db_config_s'] =\n      function () {\n        return (_sqlite3__wasm_db_config_s = Module[\n          '_sqlite3__wasm_db_config_s'\n        ] =\n          Module['asm']['sqlite3__wasm_db_config_s']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_config_i = (Module['_sqlite3__wasm_config_i'] =\n      function () {\n        return (_sqlite3__wasm_config_i = Module['_sqlite3__wasm_config_i'] =\n          Module['asm']['sqlite3__wasm_config_i']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_config_ii = (Module['_sqlite3__wasm_config_ii'] =\n      function () {\n        return (_sqlite3__wasm_config_ii = Module['_sqlite3__wasm_config_ii'] =\n          Module['asm']['sqlite3__wasm_config_ii']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_config_j = (Module['_sqlite3__wasm_config_j'] =\n      function () {\n        return (_sqlite3__wasm_config_j = Module['_sqlite3__wasm_config_j'] =\n          Module['asm']['sqlite3__wasm_config_j']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_qfmt_token = (Module['_sqlite3__wasm_qfmt_token'] =\n      function () {\n        return (_sqlite3__wasm_qfmt_token = Module[\n          '_sqlite3__wasm_qfmt_token'\n        ] =\n          Module['asm']['sqlite3__wasm_qfmt_token']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_init_wasmfs = (Module['_sqlite3__wasm_init_wasmfs'] =\n      function () {\n        return (_sqlite3__wasm_init_wasmfs = Module[\n          '_sqlite3__wasm_init_wasmfs'\n        ] =\n          Module['asm']['sqlite3__wasm_init_wasmfs']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_intptr = (Module['_sqlite3__wasm_test_intptr'] =\n      function () {\n        return (_sqlite3__wasm_test_intptr = Module[\n          '_sqlite3__wasm_test_intptr'\n        ] =\n          Module['asm']['sqlite3__wasm_test_intptr']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_voidptr = (Module['_sqlite3__wasm_test_voidptr'] =\n      function () {\n        return (_sqlite3__wasm_test_voidptr = Module[\n          '_sqlite3__wasm_test_voidptr'\n        ] =\n          Module['asm']['sqlite3__wasm_test_voidptr']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_int64_max = (Module[\n      '_sqlite3__wasm_test_int64_max'\n    ] = function () {\n      return (_sqlite3__wasm_test_int64_max = Module[\n        '_sqlite3__wasm_test_int64_max'\n      ] =\n        Module['asm']['sqlite3__wasm_test_int64_max']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_test_int64_min = (Module[\n      '_sqlite3__wasm_test_int64_min'\n    ] = function () {\n      return (_sqlite3__wasm_test_int64_min = Module[\n        '_sqlite3__wasm_test_int64_min'\n      ] =\n        Module['asm']['sqlite3__wasm_test_int64_min']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_test_int64_times2 = (Module[\n      '_sqlite3__wasm_test_int64_times2'\n    ] = function () {\n      return (_sqlite3__wasm_test_int64_times2 = Module[\n        '_sqlite3__wasm_test_int64_times2'\n      ] =\n        Module['asm']['sqlite3__wasm_test_int64_times2']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_test_int64_minmax = (Module[\n      '_sqlite3__wasm_test_int64_minmax'\n    ] = function () {\n      return (_sqlite3__wasm_test_int64_minmax = Module[\n        '_sqlite3__wasm_test_int64_minmax'\n      ] =\n        Module['asm']['sqlite3__wasm_test_int64_minmax']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_test_int64ptr = (Module['_sqlite3__wasm_test_int64ptr'] =\n      function () {\n        return (_sqlite3__wasm_test_int64ptr = Module[\n          '_sqlite3__wasm_test_int64ptr'\n        ] =\n          Module['asm']['sqlite3__wasm_test_int64ptr']).apply(null, arguments);\n      });\n\n    var _sqlite3__wasm_test_stack_overflow = (Module[\n      '_sqlite3__wasm_test_stack_overflow'\n    ] = function () {\n      return (_sqlite3__wasm_test_stack_overflow = Module[\n        '_sqlite3__wasm_test_stack_overflow'\n      ] =\n        Module['asm']['sqlite3__wasm_test_stack_overflow']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3__wasm_test_str_hello = (Module[\n      '_sqlite3__wasm_test_str_hello'\n    ] = function () {\n      return (_sqlite3__wasm_test_str_hello = Module[\n        '_sqlite3__wasm_test_str_hello'\n      ] =\n        Module['asm']['sqlite3__wasm_test_str_hello']).apply(null, arguments);\n    });\n\n    var _sqlite3__wasm_SQLTester_strglob = (Module[\n      '_sqlite3__wasm_SQLTester_strglob'\n    ] = function () {\n      return (_sqlite3__wasm_SQLTester_strglob = Module[\n        '_sqlite3__wasm_SQLTester_strglob'\n      ] =\n        Module['asm']['sqlite3__wasm_SQLTester_strglob']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _malloc = (Module['_malloc'] = function () {\n      return (_malloc = Module['_malloc'] = Module['asm']['malloc']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _free = (Module['_free'] = function () {\n      return (_free = Module['_free'] = Module['asm']['free']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _realloc = (Module['_realloc'] = function () {\n      return (_realloc = Module['_realloc'] = Module['asm']['realloc']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _emscripten_builtin_memalign = (Module['_emscripten_builtin_memalign'] =\n      function () {\n        return (_emscripten_builtin_memalign = Module[\n          '_emscripten_builtin_memalign'\n        ] =\n          Module['asm']['emscripten_builtin_memalign']).apply(null, arguments);\n      });\n\n    var stackSave = (Module['stackSave'] = function () {\n      return (stackSave = Module['stackSave'] =\n        Module['asm']['stackSave']).apply(null, arguments);\n    });\n\n    var stackRestore = (Module['stackRestore'] = function () {\n      return (stackRestore = Module['stackRestore'] =\n        Module['asm']['stackRestore']).apply(null, arguments);\n    });\n\n    var stackAlloc = (Module['stackAlloc'] = function () {\n      return (stackAlloc = Module['stackAlloc'] =\n        Module['asm']['stackAlloc']).apply(null, arguments);\n    });\n\n    Module['wasmMemory'] = wasmMemory;\n\n    var calledRun;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run(args) {\n      args = args || arguments_;\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      preRun();\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module['calledRun'] = true;\n\n        if (ABORT) return;\n\n        initRuntime();\n\n        readyPromiseResolve(Module);\n        if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n        postRun();\n      }\n\n      if (Module['setStatus']) {\n        Module['setStatus']('Running...');\n        setTimeout(function () {\n          setTimeout(function () {\n            Module['setStatus']('');\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    if (Module['preInit']) {\n      if (typeof Module['preInit'] == 'function')\n        Module['preInit'] = [Module['preInit']];\n      while (Module['preInit'].length > 0) {\n        Module['preInit'].pop()();\n      }\n    }\n\n    run();\n\n    if (!Module.postRun) Module.postRun = [];\n    Module.postRun.push(function (Module) {\n      'use strict';\n\n      'use strict';\n      globalThis.sqlite3ApiBootstrap = function sqlite3ApiBootstrap(\n        apiConfig = globalThis.sqlite3ApiConfig ||\n          sqlite3ApiBootstrap.defaultConfig,\n      ) {\n        if (sqlite3ApiBootstrap.sqlite3) {\n          (sqlite3ApiBootstrap.sqlite3.config || console).warn(\n            'sqlite3ApiBootstrap() called multiple times.',\n            'Config and external initializers are ignored on calls after the first.',\n          );\n          return sqlite3ApiBootstrap.sqlite3;\n        }\n        const config = Object.assign(\n          Object.create(null),\n          {\n            exports: undefined,\n            memory: undefined,\n            bigIntEnabled: (() => {\n              if ('undefined' !== typeof Module) {\n                if (!!Module.HEAPU64) return true;\n              }\n              return !!globalThis.BigInt64Array;\n            })(),\n            debug: console.debug.bind(console),\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n            log: console.log.bind(console),\n            wasmfsOpfsDir: '/opfs',\n\n            useStdAlloc: false,\n          },\n          apiConfig || {},\n        );\n\n        Object.assign(\n          config,\n          {\n            allocExportName: config.useStdAlloc ? 'malloc' : 'sqlite3_malloc',\n            deallocExportName: config.useStdAlloc ? 'free' : 'sqlite3_free',\n            reallocExportName: config.useStdAlloc\n              ? 'realloc'\n              : 'sqlite3_realloc',\n          },\n          config,\n        );\n\n        ['exports', 'memory', 'wasmfsOpfsDir'].forEach((k) => {\n          if ('function' === typeof config[k]) {\n            config[k] = config[k]();\n          }\n        });\n\n        delete globalThis.sqlite3ApiConfig;\n        delete sqlite3ApiBootstrap.defaultConfig;\n\n        const capi = Object.create(null);\n\n        const wasm = Object.create(null);\n\n        const __rcStr = (rc) => {\n          return (\n            (capi.sqlite3_js_rc_str && capi.sqlite3_js_rc_str(rc)) ||\n            'Unknown result code #' + rc\n          );\n        };\n\n        const __isInt = (n) => 'number' === typeof n && n === (n | 0);\n\n        class SQLite3Error extends Error {\n          constructor(...args) {\n            let rc;\n            if (args.length) {\n              if (__isInt(args[0])) {\n                rc = args[0];\n                if (1 === args.length) {\n                  super(__rcStr(args[0]));\n                } else {\n                  const rcStr = __rcStr(rc);\n                  if ('object' === typeof args[1]) {\n                    super(rcStr, args[1]);\n                  } else {\n                    args[0] = rcStr + ':';\n                    super(args.join(' '));\n                  }\n                }\n              } else {\n                if (2 === args.length && 'object' === typeof args[1]) {\n                  super(...args);\n                } else {\n                  super(args.join(' '));\n                }\n              }\n            }\n            this.resultCode = rc || capi.SQLITE_ERROR;\n            this.name = 'SQLite3Error';\n          }\n        }\n\n        SQLite3Error.toss = (...args) => {\n          throw new SQLite3Error(...args);\n        };\n        const toss3 = SQLite3Error.toss;\n\n        if (config.wasmfsOpfsDir && !/^\\/[^/]+$/.test(config.wasmfsOpfsDir)) {\n          toss3(\n            \"config.wasmfsOpfsDir must be falsy or in the form '/dir-name'.\",\n          );\n        }\n\n        const isInt32 = (n) => {\n          return (\n            'bigint' !== typeof n &&\n            !!(n === (n | 0) && n <= 2147483647 && n >= -2147483648)\n          );\n        };\n\n        const bigIntFits64 = function f(b) {\n          if (!f._max) {\n            f._max = BigInt('0x7fffffffffffffff');\n            f._min = ~f._max;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const bigIntFits32 = (b) => b >= -0x7fffffffn - 1n && b <= 0x7fffffffn;\n\n        const bigIntFitsDouble = function f(b) {\n          if (!f._min) {\n            f._min = Number.MIN_SAFE_INTEGER;\n            f._max = Number.MAX_SAFE_INTEGER;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const isTypedArray = (v) => {\n          return v && v.constructor && isInt32(v.constructor.BYTES_PER_ELEMENT)\n            ? v\n            : false;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n\n        const isSharedTypedArray = (aTypedArray) =>\n          aTypedArray.buffer instanceof __SAB;\n\n        const typedArrayPart = (aTypedArray, begin, end) => {\n          return isSharedTypedArray(aTypedArray)\n            ? aTypedArray.slice(begin, end)\n            : aTypedArray.subarray(begin, end);\n        };\n\n        const isBindableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const isSQLableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const affirmBindableTypedArray = (v) => {\n          return (\n            isBindableTypedArray(v) ||\n            toss3('Value is not of a supported TypedArray type.')\n          );\n        };\n\n        const utf8Decoder = new TextDecoder('utf-8');\n\n        const typedArrayToString = function (typedArray, begin, end) {\n          return utf8Decoder.decode(typedArrayPart(typedArray, begin, end));\n        };\n\n        const flexibleString = function (v) {\n          if (isSQLableTypedArray(v)) {\n            return typedArrayToString(\n              v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n            );\n          } else if (Array.isArray(v)) return v.join('');\n          else if (wasm.isPtr(v)) v = wasm.cstrToJs(v);\n          return v;\n        };\n\n        class WasmAllocError extends Error {\n          constructor(...args) {\n            if (2 === args.length && 'object' === typeof args[1]) {\n              super(...args);\n            } else if (args.length) {\n              super(args.join(' '));\n            } else {\n              super('Allocation failed.');\n            }\n            this.resultCode = capi.SQLITE_NOMEM;\n            this.name = 'WasmAllocError';\n          }\n        }\n\n        WasmAllocError.toss = (...args) => {\n          throw new WasmAllocError(...args);\n        };\n\n        Object.assign(capi, {\n          sqlite3_bind_blob: undefined,\n\n          sqlite3_bind_text: undefined,\n\n          sqlite3_create_function_v2: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) => {},\n\n          sqlite3_create_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) => {},\n\n          sqlite3_create_window_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) => {},\n\n          sqlite3_prepare_v3: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            prepFlags,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_prepare_v2: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_exec: (pDb, sql, callback, pVoid, pErrMsg) => {},\n\n          sqlite3_randomness: (n, outPtr) => {},\n        });\n\n        const util = {\n          affirmBindableTypedArray,\n          flexibleString,\n          bigIntFits32,\n          bigIntFits64,\n          bigIntFitsDouble,\n          isBindableTypedArray,\n          isInt32,\n          isSQLableTypedArray,\n          isTypedArray,\n          typedArrayToString,\n          isUIThread: () =>\n            globalThis.window === globalThis && !!globalThis.document,\n\n          isSharedTypedArray,\n          toss: function (...args) {\n            throw new Error(args.join(' '));\n          },\n          toss3,\n          typedArrayPart,\n\n          affirmDbHeader: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const header = 'SQLite format 3';\n            if (header.length > bytes.byteLength) {\n              toss3('Input does not contain an SQLite3 database header.');\n            }\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss3('Input does not contain an SQLite3 database header.');\n              }\n            }\n          },\n\n          affirmIsDb: function (bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 !== 0) {\n              toss3('Byte array size', n, 'is invalid for an SQLite3 db.');\n            }\n            util.affirmDbHeader(bytes);\n          },\n        };\n\n        Object.assign(wasm, {\n          ptrSizeof: config.wasmPtrSizeof || 4,\n\n          ptrIR: config.wasmPtrIR || 'i32',\n\n          bigIntEnabled: !!config.bigIntEnabled,\n\n          exports:\n            config.exports ||\n            toss3('Missing API config.exports (WASM module exports).'),\n\n          memory:\n            config.memory ||\n            config.exports['memory'] ||\n            toss3(\n              'API config object requires a WebAssembly.Memory object',\n              'in either config.exports.memory (exported)',\n              'or config.memory (imported).',\n            ),\n\n          alloc: undefined,\n\n          realloc: undefined,\n\n          dealloc: undefined,\n        });\n\n        wasm.allocFromTypedArray = function (srcTypedArray) {\n          if (srcTypedArray instanceof ArrayBuffer) {\n            srcTypedArray = new Uint8Array(srcTypedArray);\n          }\n          affirmBindableTypedArray(srcTypedArray);\n          const pRet = wasm.alloc(srcTypedArray.byteLength || 1);\n          wasm\n            .heapForSize(srcTypedArray.constructor)\n            .set(srcTypedArray.byteLength ? srcTypedArray : [0], pRet);\n          return pRet;\n        };\n\n        {\n          const keyAlloc = config.allocExportName,\n            keyDealloc = config.deallocExportName,\n            keyRealloc = config.reallocExportName;\n          for (const key of [keyAlloc, keyDealloc, keyRealloc]) {\n            const f = wasm.exports[key];\n            if (!(f instanceof Function))\n              toss3('Missing required exports[', key, '] function.');\n          }\n\n          wasm.alloc = function f(n) {\n            return (\n              f.impl(n) ||\n              WasmAllocError.toss('Failed to allocate', n, ' bytes.')\n            );\n          };\n          wasm.alloc.impl = wasm.exports[keyAlloc];\n          wasm.realloc = function f(m, n) {\n            const m2 = f.impl(m, n);\n            return n\n              ? m2 || WasmAllocError.toss('Failed to reallocate', n, ' bytes.')\n              : 0;\n          };\n          wasm.realloc.impl = wasm.exports[keyRealloc];\n          wasm.dealloc = wasm.exports[keyDealloc];\n        }\n\n        wasm.compileOptionUsed = function f(optName) {\n          if (!arguments.length) {\n            if (f._result) return f._result;\n            else if (!f._opt) {\n              f._rx = /^([^=]+)=(.+)/;\n              f._rxInt = /^-?\\d+$/;\n              f._opt = function (opt, rv) {\n                const m = f._rx.exec(opt);\n                rv[0] = m ? m[1] : opt;\n                rv[1] = m ? (f._rxInt.test(m[2]) ? +m[2] : m[2]) : true;\n              };\n            }\n            const rc = {},\n              ov = [0, 0];\n            let i = 0,\n              k;\n            while ((k = capi.sqlite3_compileoption_get(i++))) {\n              f._opt(k, ov);\n              rc[ov[0]] = ov[1];\n            }\n            return (f._result = rc);\n          } else if (Array.isArray(optName)) {\n            const rc = {};\n            optName.forEach((v) => {\n              rc[v] = capi.sqlite3_compileoption_used(v);\n            });\n            return rc;\n          } else if ('object' === typeof optName) {\n            Object.keys(optName).forEach((k) => {\n              optName[k] = capi.sqlite3_compileoption_used(k);\n            });\n            return optName;\n          }\n          return 'string' === typeof optName\n            ? !!capi.sqlite3_compileoption_used(optName)\n            : false;\n        };\n\n        wasm.pstack = Object.assign(Object.create(null), {\n          restore: wasm.exports.sqlite3__wasm_pstack_restore,\n\n          alloc: function (n) {\n            if ('string' === typeof n && !(n = wasm.sizeofIR(n))) {\n              WasmAllocError.toss(\n                'Invalid value for pstack.alloc(',\n                arguments[0],\n                ')',\n              );\n            }\n            return (\n              wasm.exports.sqlite3__wasm_pstack_alloc(n) ||\n              WasmAllocError.toss(\n                'Could not allocate',\n                n,\n                'bytes from the pstack.',\n              )\n            );\n          },\n\n          allocChunks: function (n, sz) {\n            if ('string' === typeof sz && !(sz = wasm.sizeofIR(sz))) {\n              WasmAllocError.toss(\n                'Invalid size value for allocChunks(',\n                arguments[1],\n                ')',\n              );\n            }\n            const mem = wasm.pstack.alloc(n * sz);\n            const rc = [];\n            let i = 0,\n              offset = 0;\n            for (; i < n; ++i, offset += sz) rc.push(mem + offset);\n            return rc;\n          },\n\n          allocPtr: (n = 1, safePtrSize = true) => {\n            return 1 === n\n              ? wasm.pstack.alloc(safePtrSize ? 8 : wasm.ptrSizeof)\n              : wasm.pstack.allocChunks(n, safePtrSize ? 8 : wasm.ptrSizeof);\n          },\n\n          call: function (f) {\n            const stackPos = wasm.pstack.pointer;\n            try {\n              return f(sqlite3);\n            } finally {\n              wasm.pstack.restore(stackPos);\n            }\n          },\n        });\n        Object.defineProperties(wasm.pstack, {\n          pointer: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_ptr,\n          },\n\n          quota: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_quota,\n          },\n\n          remaining: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3__wasm_pstack_remaining,\n          },\n        });\n\n        capi.sqlite3_randomness = (...args) => {\n          if (\n            1 === args.length &&\n            util.isTypedArray(args[0]) &&\n            1 === args[0].BYTES_PER_ELEMENT\n          ) {\n            const ta = args[0];\n            if (0 === ta.byteLength) {\n              wasm.exports.sqlite3_randomness(0, 0);\n              return ta;\n            }\n            const stack = wasm.pstack.pointer;\n            try {\n              let n = ta.byteLength,\n                offset = 0;\n              const r = wasm.exports.sqlite3_randomness;\n              const heap = wasm.heap8u();\n              const nAlloc = n < 512 ? n : 512;\n              const ptr = wasm.pstack.alloc(nAlloc);\n              do {\n                const j = n > nAlloc ? nAlloc : n;\n                r(j, ptr);\n                ta.set(typedArrayPart(heap, ptr, ptr + j), offset);\n                n -= j;\n                offset += j;\n              } while (n > 0);\n            } catch (e) {\n              console.error(\n                'Highly unexpected (and ignored!) ' +\n                  'exception in sqlite3_randomness():',\n                e,\n              );\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            return ta;\n          }\n          wasm.exports.sqlite3_randomness(...args);\n        };\n\n        let __wasmfsOpfsDir = undefined;\n\n        capi.sqlite3_wasmfs_opfs_dir = function () {\n          if (undefined !== __wasmfsOpfsDir) return __wasmfsOpfsDir;\n\n          const pdir = config.wasmfsOpfsDir;\n          if (\n            !pdir ||\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle\n          ) {\n            return (__wasmfsOpfsDir = '');\n          }\n          try {\n            if (\n              pdir &&\n              0 ===\n                wasm.xCallWrapped(\n                  'sqlite3__wasm_init_wasmfs',\n                  'i32',\n                  ['string'],\n                  pdir,\n                )\n            ) {\n              return (__wasmfsOpfsDir = pdir);\n            } else {\n              return (__wasmfsOpfsDir = '');\n            }\n          } catch (e) {\n            return (__wasmfsOpfsDir = '');\n          }\n        };\n\n        capi.sqlite3_wasmfs_filename_is_persistent = function (name) {\n          const p = capi.sqlite3_wasmfs_opfs_dir();\n          return p && name ? name.startsWith(p + '/') : false;\n        };\n\n        capi.sqlite3_js_db_uses_vfs = function (pDb, vfsName, dbName = 0) {\n          try {\n            const pK = capi.sqlite3_vfs_find(vfsName);\n            if (!pK) return false;\n            else if (!pDb) {\n              return pK === capi.sqlite3_vfs_find(0) ? pK : false;\n            } else {\n              return pK === capi.sqlite3_js_db_vfs(pDb, dbName) ? pK : false;\n            }\n          } catch (e) {\n            return false;\n          }\n        };\n\n        capi.sqlite3_js_vfs_list = function () {\n          const rc = [];\n          let pVfs = capi.sqlite3_vfs_find(0);\n          while (pVfs) {\n            const oVfs = new capi.sqlite3_vfs(pVfs);\n            rc.push(wasm.cstrToJs(oVfs.$zName));\n            pVfs = oVfs.$pNext;\n            oVfs.dispose();\n          }\n          return rc;\n        };\n\n        capi.sqlite3_js_db_export = function (pDb, schema = 0) {\n          pDb = wasm.xWrap.testConvertArg('sqlite3*', pDb);\n          if (!pDb) toss3('Invalid sqlite3* argument.');\n          if (!wasm.bigIntEnabled) toss3('BigInt64 support is not enabled.');\n          const scope = wasm.scopedAllocPush();\n          let pOut;\n          try {\n            const pSize = wasm.scopedAlloc(8 + wasm.ptrSizeof);\n            const ppOut = pSize + 8;\n\n            const zSchema = schema\n              ? wasm.isPtr(schema)\n                ? schema\n                : wasm.scopedAllocCString('' + schema)\n              : 0;\n            let rc = wasm.exports.sqlite3__wasm_db_serialize(\n              pDb,\n              zSchema,\n              ppOut,\n              pSize,\n              0,\n            );\n            if (rc) {\n              toss3(\n                'Database serialization failed with code',\n                sqlite3.capi.sqlite3_js_rc_str(rc),\n              );\n            }\n            pOut = wasm.peekPtr(ppOut);\n            const nOut = wasm.peek(pSize, 'i64');\n            rc = nOut\n              ? wasm.heap8u().slice(pOut, pOut + Number(nOut))\n              : new Uint8Array();\n            return rc;\n          } finally {\n            if (pOut) wasm.exports.sqlite3_free(pOut);\n            wasm.scopedAllocPop(scope);\n          }\n        };\n\n        capi.sqlite3_js_db_vfs = (dbPointer, dbName = 0) =>\n          util.sqlite3__wasm_db_vfs(dbPointer, dbName);\n\n        capi.sqlite3_js_aggregate_context = (pCtx, n) => {\n          return (\n            capi.sqlite3_aggregate_context(pCtx, n) ||\n            (n\n              ? WasmAllocError.toss(\n                  'Cannot allocate',\n                  n,\n                  'bytes for sqlite3_aggregate_context()',\n                )\n              : 0)\n          );\n        };\n\n        capi.sqlite3_js_posix_create_file = function (filename, data, dataLen) {\n          let pData;\n          if (data && wasm.isPtr(data)) {\n            pData = data;\n          } else if (\n            data instanceof ArrayBuffer ||\n            data instanceof Uint8Array\n          ) {\n            pData = wasm.allocFromTypedArray(data);\n            if (arguments.length < 3 || !util.isInt32(dataLen) || dataLen < 0) {\n              dataLen = data.byteLength;\n            }\n          } else {\n            SQLite3Error.toss(\n              'Invalid 2nd argument for sqlite3_js_posix_create_file().',\n            );\n          }\n          try {\n            if (!util.isInt32(dataLen) || dataLen < 0) {\n              SQLite3Error.toss(\n                'Invalid 3rd argument for sqlite3_js_posix_create_file().',\n              );\n            }\n            const rc = util.sqlite3__wasm_posix_create_file(\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_vfs_create_file = function (\n          vfs,\n          filename,\n          data,\n          dataLen,\n        ) {\n          config.warn(\n            'sqlite3_js_vfs_create_file() is deprecated and',\n            'should be avoided because it can lead to C-level crashes.',\n            'See its documentation for alternative options.',\n          );\n          let pData;\n          if (data) {\n            if (wasm.isPtr(data)) {\n              pData = data;\n            } else if (data instanceof ArrayBuffer) {\n              data = new Uint8Array(data);\n            }\n            if (data instanceof Uint8Array) {\n              pData = wasm.allocFromTypedArray(data);\n              if (\n                arguments.length < 4 ||\n                !util.isInt32(dataLen) ||\n                dataLen < 0\n              ) {\n                dataLen = data.byteLength;\n              }\n            } else {\n              SQLite3Error.toss(\n                'Invalid 3rd argument type for sqlite3_js_vfs_create_file().',\n              );\n            }\n          } else {\n            pData = 0;\n          }\n          if (!util.isInt32(dataLen) || dataLen < 0) {\n            wasm.dealloc(pData);\n            SQLite3Error.toss(\n              'Invalid 4th argument for sqlite3_js_vfs_create_file().',\n            );\n          }\n          try {\n            const rc = util.sqlite3__wasm_vfs_create_file(\n              vfs,\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        capi.sqlite3_js_sql_to_string = (sql) => {\n          if ('string' === typeof sql) {\n            return sql;\n          }\n          const x = flexibleString(v);\n          return x === v ? undefined : x;\n        };\n\n        if (util.isUIThread()) {\n          const __kvvfsInfo = function (which) {\n            const rc = Object.create(null);\n            rc.prefix = 'kvvfs-' + which;\n            rc.stores = [];\n            if ('session' === which || '' === which)\n              rc.stores.push(globalThis.sessionStorage);\n            if ('local' === which || '' === which)\n              rc.stores.push(globalThis.localStorage);\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_clear = function (which = '') {\n            let rc = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              const toRm = [];\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) toRm.push(k);\n              }\n              toRm.forEach((kk) => s.removeItem(kk));\n              rc += toRm.length;\n            });\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_size = function (which = '') {\n            let sz = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) {\n                  sz += k.length;\n                  sz += s.getItem(k).length;\n                }\n              }\n            });\n            return sz * 2;\n          };\n        }\n\n        capi.sqlite3_db_config = function (pDb, op, ...args) {\n          if (!this.s) {\n            this.s = wasm.xWrap('sqlite3__wasm_db_config_s', 'int', [\n              'sqlite3*',\n              'int',\n              'string:static',\n            ]);\n            this.pii = wasm.xWrap('sqlite3__wasm_db_config_pii', 'int', [\n              'sqlite3*',\n              'int',\n              '*',\n              'int',\n              'int',\n            ]);\n            this.ip = wasm.xWrap('sqlite3__wasm_db_config_ip', 'int', [\n              'sqlite3*',\n              'int',\n              'int',\n              '*',\n            ]);\n          }\n          switch (op) {\n            case capi.SQLITE_DBCONFIG_ENABLE_FKEY:\n            case capi.SQLITE_DBCONFIG_ENABLE_TRIGGER:\n            case capi.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER:\n            case capi.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION:\n            case capi.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE:\n            case capi.SQLITE_DBCONFIG_ENABLE_QPSG:\n            case capi.SQLITE_DBCONFIG_TRIGGER_EQP:\n            case capi.SQLITE_DBCONFIG_RESET_DATABASE:\n            case capi.SQLITE_DBCONFIG_DEFENSIVE:\n            case capi.SQLITE_DBCONFIG_WRITABLE_SCHEMA:\n            case capi.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE:\n            case capi.SQLITE_DBCONFIG_DQS_DML:\n            case capi.SQLITE_DBCONFIG_DQS_DDL:\n            case capi.SQLITE_DBCONFIG_ENABLE_VIEW:\n            case capi.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT:\n            case capi.SQLITE_DBCONFIG_TRUSTED_SCHEMA:\n            case capi.SQLITE_DBCONFIG_STMT_SCANSTATUS:\n            case capi.SQLITE_DBCONFIG_REVERSE_SCANORDER:\n              return this.ip(pDb, op, args[0], args[1] || 0);\n            case capi.SQLITE_DBCONFIG_LOOKASIDE:\n              return this.pii(pDb, op, args[0], args[1], args[2]);\n            case capi.SQLITE_DBCONFIG_MAINDBNAME:\n              return this.s(pDb, op, args[0]);\n            default:\n              return capi.SQLITE_MISUSE;\n          }\n        }.bind(Object.create(null));\n\n        capi.sqlite3_value_to_js = function (\n          pVal,\n          throwIfCannotConvert = true,\n        ) {\n          let arg;\n          const valType = capi.sqlite3_value_type(pVal);\n          switch (valType) {\n            case capi.SQLITE_INTEGER:\n              if (wasm.bigIntEnabled) {\n                arg = capi.sqlite3_value_int64(pVal);\n                if (util.bigIntFitsDouble(arg)) arg = Number(arg);\n              } else arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_FLOAT:\n              arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_TEXT:\n              arg = capi.sqlite3_value_text(pVal);\n              break;\n            case capi.SQLITE_BLOB: {\n              const n = capi.sqlite3_value_bytes(pVal);\n              const pBlob = capi.sqlite3_value_blob(pVal);\n              if (n && !pBlob)\n                sqlite3.WasmAllocError.toss(\n                  'Cannot allocate memory for blob argument of',\n                  n,\n                  'byte(s)',\n                );\n              arg = n ? wasm.heap8u().slice(pBlob, pBlob + Number(n)) : null;\n              break;\n            }\n            case capi.SQLITE_NULL:\n              arg = null;\n              break;\n            default:\n              if (throwIfCannotConvert) {\n                toss3(\n                  capi.SQLITE_MISMATCH,\n                  'Unhandled sqlite3_value_type():',\n                  valType,\n                );\n              }\n              arg = undefined;\n          }\n          return arg;\n        };\n\n        capi.sqlite3_values_to_js = function (\n          argc,\n          pArgv,\n          throwIfCannotConvert = true,\n        ) {\n          let i;\n          const tgt = [];\n          for (i = 0; i < argc; ++i) {\n            tgt.push(\n              capi.sqlite3_value_to_js(\n                wasm.peekPtr(pArgv + wasm.ptrSizeof * i),\n                throwIfCannotConvert,\n              ),\n            );\n          }\n          return tgt;\n        };\n\n        capi.sqlite3_result_error_js = function (pCtx, e) {\n          if (e instanceof WasmAllocError) {\n            capi.sqlite3_result_error_nomem(pCtx);\n          } else {\n            capi.sqlite3_result_error(pCtx, '' + e, -1);\n          }\n        };\n\n        capi.sqlite3_result_js = function (pCtx, val) {\n          if (val instanceof Error) {\n            capi.sqlite3_result_error_js(pCtx, val);\n            return;\n          }\n          try {\n            switch (typeof val) {\n              case 'undefined':\n                break;\n              case 'boolean':\n                capi.sqlite3_result_int(pCtx, val ? 1 : 0);\n                break;\n              case 'bigint':\n                if (util.bigIntFits32(val)) {\n                  capi.sqlite3_result_int(pCtx, Number(val));\n                } else if (util.bigIntFitsDouble(val)) {\n                  capi.sqlite3_result_double(pCtx, Number(val));\n                } else if (wasm.bigIntEnabled) {\n                  if (util.bigIntFits64(val))\n                    capi.sqlite3_result_int64(pCtx, val);\n                  else\n                    toss3(\n                      'BigInt value',\n                      val.toString(),\n                      'is too BigInt for int64.',\n                    );\n                } else {\n                  toss3('BigInt value', val.toString(), 'is too BigInt.');\n                }\n                break;\n              case 'number': {\n                let f;\n                if (util.isInt32(val)) {\n                  f = capi.sqlite3_result_int;\n                } else if (\n                  wasm.bigIntEnabled &&\n                  Number.isInteger(val) &&\n                  util.bigIntFits64(BigInt(val))\n                ) {\n                  f = capi.sqlite3_result_int64;\n                } else {\n                  f = capi.sqlite3_result_double;\n                }\n                f(pCtx, val);\n                break;\n              }\n              case 'string': {\n                const [p, n] = wasm.allocCString(val, true);\n                capi.sqlite3_result_text(pCtx, p, n, capi.SQLITE_WASM_DEALLOC);\n                break;\n              }\n              case 'object':\n                if (null === val) {\n                  capi.sqlite3_result_null(pCtx);\n                  break;\n                } else if (util.isBindableTypedArray(val)) {\n                  const pBlob = wasm.allocFromTypedArray(val);\n                  capi.sqlite3_result_blob(\n                    pCtx,\n                    pBlob,\n                    val.byteLength,\n                    capi.SQLITE_WASM_DEALLOC,\n                  );\n                  break;\n                }\n\n              default:\n                toss3(\n                  \"Don't not how to handle this UDF result value:\",\n                  typeof val,\n                  val,\n                );\n            }\n          } catch (e) {\n            capi.sqlite3_result_error_js(pCtx, e);\n          }\n        };\n\n        capi.sqlite3_column_js = function (\n          pStmt,\n          iCol,\n          throwIfCannotConvert = true,\n        ) {\n          const v = capi.sqlite3_column_value(pStmt, iCol);\n          return 0 === v\n            ? undefined\n            : capi.sqlite3_value_to_js(v, throwIfCannotConvert);\n        };\n\n        const __newOldValue = function (pObj, iCol, impl) {\n          impl = capi[impl];\n          if (!this.ptr) this.ptr = wasm.allocPtr();\n          else wasm.pokePtr(this.ptr, 0);\n          const rc = impl(pObj, iCol, this.ptr);\n          if (rc)\n            return SQLite3Error.toss(\n              rc,\n              arguments[2] + '() failed with code ' + rc,\n            );\n          const pv = wasm.peekPtr(this.ptr);\n          return pv ? capi.sqlite3_value_to_js(pv, true) : undefined;\n        }.bind(Object.create(null));\n\n        capi.sqlite3_preupdate_new_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_new');\n\n        capi.sqlite3_preupdate_old_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_old');\n\n        capi.sqlite3changeset_new_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_new');\n\n        capi.sqlite3changeset_old_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_old');\n\n        const sqlite3 = {\n          WasmAllocError: WasmAllocError,\n          SQLite3Error: SQLite3Error,\n          capi,\n          util,\n          wasm,\n          config,\n\n          version: Object.create(null),\n\n          client: undefined,\n\n          asyncPostInit: async function ff() {\n            if (ff.isReady instanceof Promise) return ff.isReady;\n            let lia = sqlite3ApiBootstrap.initializersAsync;\n            delete sqlite3ApiBootstrap.initializersAsync;\n            const postInit = async () => {\n              if (!sqlite3.__isUnderTest) {\n                delete sqlite3.util;\n\n                delete sqlite3.StructBinder;\n              }\n              return sqlite3;\n            };\n            const catcher = (e) => {\n              config.error('an async sqlite3 initializer failed:', e);\n              throw e;\n            };\n            if (!lia || !lia.length) {\n              return (ff.isReady = postInit().catch(catcher));\n            }\n            lia = lia.map((f) => {\n              return f instanceof Function ? async (x) => f(sqlite3) : f;\n            });\n            lia.push(postInit);\n            let p = Promise.resolve(sqlite3);\n            while (lia.length) p = p.then(lia.shift());\n            return (ff.isReady = p.catch(catcher));\n          },\n\n          scriptInfo: undefined,\n        };\n        try {\n          sqlite3ApiBootstrap.initializers.forEach((f) => {\n            f(sqlite3);\n          });\n        } catch (e) {\n          console.error('sqlite3 bootstrap initializer threw:', e);\n          throw e;\n        }\n        delete sqlite3ApiBootstrap.initializers;\n        sqlite3ApiBootstrap.sqlite3 = sqlite3;\n        return sqlite3;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers = [];\n\n      globalThis.sqlite3ApiBootstrap.initializersAsync = [];\n\n      globalThis.sqlite3ApiBootstrap.defaultConfig = Object.create(null);\n\n      globalThis.sqlite3ApiBootstrap.sqlite3 = undefined;\n\n      globalThis.WhWasmUtilInstaller = function (target) {\n        'use strict';\n        if (undefined === target.bigIntEnabled) {\n          target.bigIntEnabled = !!globalThis['BigInt64Array'];\n        }\n\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (!target.exports) {\n          Object.defineProperty(target, 'exports', {\n            enumerable: true,\n            configurable: true,\n            get: () => target.instance && target.instance.exports,\n          });\n        }\n\n        const ptrIR = target.pointerIR || 'i32';\n        const ptrSizeof = (target.ptrSizeof =\n          'i32' === ptrIR\n            ? 4\n            : 'i64' === ptrIR\n              ? 8\n              : toss('Unhandled ptrSizeof:', ptrIR));\n\n        const cache = Object.create(null);\n\n        cache.heapSize = 0;\n\n        cache.memory = null;\n\n        cache.freeFuncIndexes = [];\n\n        cache.scopedAlloc = [];\n\n        cache.utf8Decoder = new TextDecoder();\n        cache.utf8Encoder = new TextEncoder('utf-8');\n\n        target.sizeofIR = (n) => {\n          switch (n) {\n            case 'i8':\n              return 1;\n            case 'i16':\n              return 2;\n            case 'i32':\n            case 'f32':\n            case 'float':\n              return 4;\n            case 'i64':\n            case 'f64':\n            case 'double':\n              return 8;\n            case '*':\n              return ptrSizeof;\n            default:\n              return ('' + n).endsWith('*') ? ptrSizeof : undefined;\n          }\n        };\n\n        const heapWrappers = function () {\n          if (!cache.memory) {\n            cache.memory =\n              target.memory instanceof WebAssembly.Memory\n                ? target.memory\n                : target.exports.memory;\n          } else if (cache.heapSize === cache.memory.buffer.byteLength) {\n            return cache;\n          }\n\n          const b = cache.memory.buffer;\n          cache.HEAP8 = new Int8Array(b);\n          cache.HEAP8U = new Uint8Array(b);\n          cache.HEAP16 = new Int16Array(b);\n          cache.HEAP16U = new Uint16Array(b);\n          cache.HEAP32 = new Int32Array(b);\n          cache.HEAP32U = new Uint32Array(b);\n          if (target.bigIntEnabled) {\n            cache.HEAP64 = new BigInt64Array(b);\n            cache.HEAP64U = new BigUint64Array(b);\n          }\n          cache.HEAP32F = new Float32Array(b);\n          cache.HEAP64F = new Float64Array(b);\n          cache.heapSize = b.byteLength;\n          return cache;\n        };\n\n        target.heap8 = () => heapWrappers().HEAP8;\n\n        target.heap8u = () => heapWrappers().HEAP8U;\n\n        target.heap16 = () => heapWrappers().HEAP16;\n\n        target.heap16u = () => heapWrappers().HEAP16U;\n\n        target.heap32 = () => heapWrappers().HEAP32;\n\n        target.heap32u = () => heapWrappers().HEAP32U;\n\n        target.heapForSize = function (n, unsigned = true) {\n          let ctor;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          switch (n) {\n            case Int8Array:\n              return c.HEAP8;\n            case Uint8Array:\n              return c.HEAP8U;\n            case Int16Array:\n              return c.HEAP16;\n            case Uint16Array:\n              return c.HEAP16U;\n            case Int32Array:\n              return c.HEAP32;\n            case Uint32Array:\n              return c.HEAP32U;\n            case 8:\n              return unsigned ? c.HEAP8U : c.HEAP8;\n            case 16:\n              return unsigned ? c.HEAP16U : c.HEAP16;\n            case 32:\n              return unsigned ? c.HEAP32U : c.HEAP32;\n            case 64:\n              if (c.HEAP64) return unsigned ? c.HEAP64U : c.HEAP64;\n              break;\n            default:\n              if (target.bigIntEnabled) {\n                if (n === globalThis['BigUint64Array']) return c.HEAP64U;\n                else if (n === globalThis['BigInt64Array']) return c.HEAP64;\n                break;\n              }\n          }\n          toss(\n            'Invalid heapForSize() size: expecting 8, 16, 32,',\n            'or (if BigInt is enabled) 64.',\n          );\n        };\n\n        target.functionTable = function () {\n          return target.exports.__indirect_function_table;\n        };\n\n        target.functionEntry = function (fptr) {\n          const ft = target.functionTable();\n          return fptr < ft.length ? ft.get(fptr) : undefined;\n        };\n\n        target.jsFuncToWasm = function f(func, sig) {\n          if (!f._) {\n            f._ = {\n              sigTypes: Object.assign(Object.create(null), {\n                i: 'i32',\n                p: 'i32',\n                P: 'i32',\n                s: 'i32',\n                j: 'i64',\n                f: 'f32',\n                d: 'f64',\n              }),\n\n              typeCodes: Object.assign(Object.create(null), {\n                f64: 0x7c,\n                f32: 0x7d,\n                i64: 0x7e,\n                i32: 0x7f,\n              }),\n\n              uleb128Encode: function (tgt, method, n) {\n                if (n < 128) tgt[method](n);\n                else tgt[method](n % 128 | 128, n >> 7);\n              },\n\n              rxJSig: /^(\\w)\\((\\w*)\\)$/,\n\n              sigParams: function (sig) {\n                const m = f._.rxJSig.exec(sig);\n                return m ? m[2] : sig.substr(1);\n              },\n\n              letterType: (x) =>\n                f._.sigTypes[x] || toss('Invalid signature letter:', x),\n\n              pushSigType: (dest, letter) =>\n                dest.push(f._.typeCodes[f._.letterType(letter)]),\n            };\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          const sigParams = f._.sigParams(sig);\n          const wasmCode = [0x01, 0x60];\n          f._.uleb128Encode(wasmCode, 'push', sigParams.length);\n          for (const x of sigParams) f._.pushSigType(wasmCode, x);\n          if ('v' === sig[0]) wasmCode.push(0);\n          else {\n            wasmCode.push(1);\n            f._.pushSigType(wasmCode, sig[0]);\n          }\n          f._.uleb128Encode(wasmCode, 'unshift', wasmCode.length);\n          wasmCode.unshift(\n            0x00,\n            0x61,\n            0x73,\n            0x6d,\n            0x01,\n            0x00,\n            0x00,\n            0x00,\n            0x01,\n          );\n          wasmCode.push(\n            0x02,\n            0x07,\n\n            0x01,\n            0x01,\n            0x65,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n            0x07,\n            0x05,\n\n            0x01,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n          );\n          return new WebAssembly.Instance(\n            new WebAssembly.Module(new Uint8Array(wasmCode)),\n            {\n              e: { f: func },\n            },\n          ).exports['f'];\n        };\n\n        const __installFunction = function f(func, sig, scoped) {\n          if (scoped && !cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          if ('string' !== typeof sig || !(func instanceof Function)) {\n            toss(\n              'Invalid arguments: expecting (function,signature) ' +\n                'or (signature,function).',\n            );\n          }\n          const ft = target.functionTable();\n          const oldLen = ft.length;\n          let ptr;\n          while (cache.freeFuncIndexes.length) {\n            ptr = cache.freeFuncIndexes.pop();\n            if (ft.get(ptr)) {\n              ptr = null;\n              continue;\n            } else {\n              break;\n            }\n          }\n          if (!ptr) {\n            ptr = oldLen;\n            ft.grow(1);\n          }\n          try {\n            ft.set(ptr, func);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n            return ptr;\n          } catch (e) {\n            if (!(e instanceof TypeError)) {\n              if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n              throw e;\n            }\n          }\n\n          try {\n            const fptr = target.jsFuncToWasm(func, sig);\n            ft.set(ptr, fptr);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n          } catch (e) {\n            if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n            throw e;\n          }\n          return ptr;\n        };\n\n        target.installFunction = (func, sig) =>\n          __installFunction(func, sig, false);\n\n        target.scopedInstallFunction = (func, sig) =>\n          __installFunction(func, sig, true);\n\n        target.uninstallFunction = function (ptr) {\n          if (!ptr && 0 !== ptr) return undefined;\n          const fi = cache.freeFuncIndexes;\n          const ft = target.functionTable();\n          fi.push(ptr);\n          const rc = ft.get(ptr);\n          ft.set(ptr, null);\n          return rc;\n        };\n\n        target.peek = function f(ptr, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          const list = Array.isArray(ptr) ? [] : undefined;\n          let rc;\n          do {\n            if (list) ptr = arguments[0].shift();\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                rc = c.HEAP8[ptr >> 0];\n                break;\n              case 'i16':\n                rc = c.HEAP16[ptr >> 1];\n                break;\n              case 'i32':\n                rc = c.HEAP32[ptr >> 2];\n                break;\n              case 'float':\n              case 'f32':\n                rc = c.HEAP32F[ptr >> 2];\n                break;\n              case 'double':\n              case 'f64':\n                rc = Number(c.HEAP64F[ptr >> 3]);\n                break;\n              case 'i64':\n                if (target.bigIntEnabled) {\n                  rc = BigInt(c.HEAP64[ptr >> 3]);\n                  break;\n                }\n\n              default:\n                toss('Invalid type for peek():', type);\n            }\n            if (list) list.push(rc);\n          } while (list && arguments[0].length);\n          return list || rc;\n        };\n\n        target.poke = function (ptr, value, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          for (const p of Array.isArray(ptr) ? ptr : [ptr]) {\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                c.HEAP8[p >> 0] = value;\n                continue;\n              case 'i16':\n                c.HEAP16[p >> 1] = value;\n                continue;\n              case 'i32':\n                c.HEAP32[p >> 2] = value;\n                continue;\n              case 'float':\n              case 'f32':\n                c.HEAP32F[p >> 2] = value;\n                continue;\n              case 'double':\n              case 'f64':\n                c.HEAP64F[p >> 3] = value;\n                continue;\n              case 'i64':\n                if (c.HEAP64) {\n                  c.HEAP64[p >> 3] = BigInt(value);\n                  continue;\n                }\n\n              default:\n                toss('Invalid type for poke(): ' + type);\n            }\n          }\n          return this;\n        };\n\n        target.peekPtr = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, ptrIR);\n\n        target.pokePtr = (ptr, value = 0) => target.poke(ptr, value, ptrIR);\n\n        target.peek8 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i8');\n\n        target.poke8 = (ptr, value) => target.poke(ptr, value, 'i8');\n\n        target.peek16 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i16');\n\n        target.poke16 = (ptr, value) => target.poke(ptr, value, 'i16');\n\n        target.peek32 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i32');\n\n        target.poke32 = (ptr, value) => target.poke(ptr, value, 'i32');\n\n        target.peek64 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i64');\n\n        target.poke64 = (ptr, value) => target.poke(ptr, value, 'i64');\n\n        target.peek32f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f32');\n\n        target.poke32f = (ptr, value) => target.poke(ptr, value, 'f32');\n\n        target.peek64f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f64');\n\n        target.poke64f = (ptr, value) => target.poke(ptr, value, 'f64');\n\n        target.getMemValue = target.peek;\n\n        target.getPtrValue = target.peekPtr;\n\n        target.setMemValue = target.poke;\n\n        target.setPtrValue = target.pokePtr;\n\n        target.isPtr32 = (ptr) =>\n          'number' === typeof ptr && ptr === (ptr | 0) && ptr >= 0;\n\n        target.isPtr = target.isPtr32;\n\n        target.cstrlen = function (ptr) {\n          if (!ptr || !target.isPtr(ptr)) return null;\n          const h = heapWrappers().HEAP8U;\n          let pos = ptr;\n          for (; h[pos] !== 0; ++pos) {}\n          return pos - ptr;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return cache.utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        target.cstrToJs = function (ptr) {\n          const n = target.cstrlen(ptr);\n          return n\n            ? __utf8Decode(heapWrappers().HEAP8U, ptr, ptr + n)\n            : null === n\n              ? n\n              : '';\n        };\n\n        target.jstrlen = function (str) {\n          if ('string' !== typeof str) return null;\n          const n = str.length;\n          let len = 0;\n          for (let i = 0; i < n; ++i) {\n            let u = str.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) | (str.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) ++len;\n            else if (u <= 0x7ff) len += 2;\n            else if (u <= 0xffff) len += 3;\n            else len += 4;\n          }\n          return len;\n        };\n\n        target.jstrcpy = function (\n          jstr,\n          tgt,\n          offset = 0,\n          maxBytes = -1,\n          addNul = true,\n        ) {\n          if (\n            !tgt ||\n            (!(tgt instanceof Int8Array) && !(tgt instanceof Uint8Array))\n          ) {\n            toss('jstrcpy() target must be an Int8Array or Uint8Array.');\n          }\n          if (maxBytes < 0) maxBytes = tgt.length - offset;\n          if (!(maxBytes > 0) || !(offset >= 0)) return 0;\n          let i = 0,\n            max = jstr.length;\n          const begin = offset,\n            end = offset + maxBytes - (addNul ? 1 : 0);\n          for (; i < max && offset < end; ++i) {\n            let u = jstr.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) |\n                (jstr.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) {\n              if (offset >= end) break;\n              tgt[offset++] = u;\n            } else if (u <= 0x7ff) {\n              if (offset + 1 >= end) break;\n              tgt[offset++] = 0xc0 | (u >> 6);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else if (u <= 0xffff) {\n              if (offset + 2 >= end) break;\n              tgt[offset++] = 0xe0 | (u >> 12);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else {\n              if (offset + 3 >= end) break;\n              tgt[offset++] = 0xf0 | (u >> 18);\n              tgt[offset++] = 0x80 | ((u >> 12) & 0x3f);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            }\n          }\n          if (addNul) tgt[offset++] = 0;\n          return offset - begin;\n        };\n\n        target.cstrncpy = function (tgtPtr, srcPtr, n) {\n          if (!tgtPtr || !srcPtr)\n            toss('cstrncpy() does not accept NULL strings.');\n          if (n < 0) n = target.cstrlen(strPtr) + 1;\n          else if (!(n > 0)) return 0;\n          const heap = target.heap8u();\n          let i = 0,\n            ch;\n          for (; i < n && (ch = heap[srcPtr + i]); ++i) {\n            heap[tgtPtr + i] = ch;\n          }\n          if (i < n) heap[tgtPtr + i++] = 0;\n          return i;\n        };\n\n        target.jstrToUintArray = (str, addNul = false) => {\n          return cache.utf8Encoder.encode(addNul ? str + '\\0' : str);\n        };\n\n        const __affirmAlloc = (obj, funcName) => {\n          if (\n            !(obj.alloc instanceof Function) ||\n            !(obj.dealloc instanceof Function)\n          ) {\n            toss(\n              'Object is missing alloc() and/or dealloc() function(s)',\n              'required by',\n              funcName + '().',\n            );\n          }\n        };\n\n        const __allocCStr = function (\n          jstr,\n          returnWithLength,\n          allocator,\n          funcName,\n        ) {\n          __affirmAlloc(target, funcName);\n          if ('string' !== typeof jstr) return null;\n          if (0) {\n            const n = target.jstrlen(jstr),\n              ptr = allocator(n + 1);\n            target.jstrcpy(jstr, target.heap8u(), ptr, n + 1, true);\n            return returnWithLength ? [ptr, n] : ptr;\n          } else {\n            const u = cache.utf8Encoder.encode(jstr),\n              ptr = allocator(u.length + 1),\n              heap = heapWrappers().HEAP8U;\n            heap.set(u, ptr);\n            heap[ptr + u.length] = 0;\n            return returnWithLength ? [ptr, u.length] : ptr;\n          }\n        };\n\n        target.allocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(jstr, returnWithLength, target.alloc, 'allocCString()');\n\n        target.scopedAllocPush = function () {\n          __affirmAlloc(target, 'scopedAllocPush');\n          const a = [];\n          cache.scopedAlloc.push(a);\n          return a;\n        };\n\n        target.scopedAllocPop = function (state) {\n          __affirmAlloc(target, 'scopedAllocPop');\n          const n = arguments.length\n            ? cache.scopedAlloc.indexOf(state)\n            : cache.scopedAlloc.length - 1;\n          if (n < 0) toss('Invalid state object for scopedAllocPop().');\n          if (0 === arguments.length) state = cache.scopedAlloc[n];\n          cache.scopedAlloc.splice(n, 1);\n          for (let p; (p = state.pop()); ) {\n            if (target.functionEntry(p)) {\n              target.uninstallFunction(p);\n            } else target.dealloc(p);\n          }\n        };\n\n        target.scopedAlloc = function (n) {\n          if (!cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          const p = target.alloc(n);\n          cache.scopedAlloc[cache.scopedAlloc.length - 1].push(p);\n          return p;\n        };\n\n        Object.defineProperty(target.scopedAlloc, 'level', {\n          configurable: false,\n          enumerable: false,\n          get: () => cache.scopedAlloc.length,\n          set: () => toss(\"The 'active' property is read-only.\"),\n        });\n\n        target.scopedAllocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(\n            jstr,\n            returnWithLength,\n            target.scopedAlloc,\n            'scopedAllocCString()',\n          );\n\n        const __allocMainArgv = function (isScoped, list) {\n          const pList = target[isScoped ? 'scopedAlloc' : 'alloc'](\n            (list.length + 1) * target.ptrSizeof,\n          );\n          let i = 0;\n          list.forEach((e) => {\n            target.pokePtr(\n              pList + target.ptrSizeof * i++,\n              target[isScoped ? 'scopedAllocCString' : 'allocCString']('' + e),\n            );\n          });\n          target.pokePtr(pList + target.ptrSizeof * i, 0);\n          return pList;\n        };\n\n        target.scopedAllocMainArgv = (list) => __allocMainArgv(true, list);\n\n        target.allocMainArgv = (list) => __allocMainArgv(false, list);\n\n        target.cArgvToJs = (argc, pArgv) => {\n          const list = [];\n          for (let i = 0; i < argc; ++i) {\n            const arg = target.peekPtr(pArgv + target.ptrSizeof * i);\n            list.push(arg ? target.cstrToJs(arg) : null);\n          }\n          return list;\n        };\n\n        target.scopedAllocCall = function (func) {\n          target.scopedAllocPush();\n          try {\n            return func();\n          } finally {\n            target.scopedAllocPop();\n          }\n        };\n\n        const __allocPtr = function (howMany, safePtrSize, method) {\n          __affirmAlloc(target, method);\n          const pIr = safePtrSize ? 'i64' : ptrIR;\n          let m = target[method](howMany * (safePtrSize ? 8 : ptrSizeof));\n          target.poke(m, 0, pIr);\n          if (1 === howMany) {\n            return m;\n          }\n          const a = [m];\n          for (let i = 1; i < howMany; ++i) {\n            m += safePtrSize ? 8 : ptrSizeof;\n            a[i] = m;\n            target.poke(m, 0, pIr);\n          }\n          return a;\n        };\n\n        target.allocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'alloc');\n\n        target.scopedAllocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'scopedAlloc');\n\n        target.xGet = function (name) {\n          return (\n            target.exports[name] || toss('Cannot find exported symbol:', name)\n          );\n        };\n\n        const __argcMismatch = (f, n) =>\n          toss(f + '() requires', n, 'argument(s).');\n\n        target.xCall = function (fname, ...args) {\n          const f = fname instanceof Function ? fname : target.xGet(fname);\n          if (!(f instanceof Function))\n            toss('Exported symbol', fname, 'is not a function.');\n          if (f.length !== args.length)\n            __argcMismatch(f === fname ? f.name : fname, f.length);\n          return 2 === arguments.length && Array.isArray(arguments[1])\n            ? f.apply(null, arguments[1])\n            : f.apply(null, args);\n        };\n\n        cache.xWrap = Object.create(null);\n        cache.xWrap.convert = Object.create(null);\n\n        cache.xWrap.convert.arg = new Map();\n\n        cache.xWrap.convert.result = new Map();\n        const xArg = cache.xWrap.convert.arg,\n          xResult = cache.xWrap.convert.result;\n\n        if (target.bigIntEnabled) {\n          xArg.set('i64', (i) => BigInt(i));\n        }\n        const __xArgPtr =\n          'i32' === ptrIR ? (i) => i | 0 : (i) => BigInt(i) | BigInt(0);\n        xArg\n          .set('i32', __xArgPtr)\n          .set('i16', (i) => (i | 0) & 0xffff)\n          .set('i8', (i) => (i | 0) & 0xff)\n          .set('f32', (i) => Number(i).valueOf())\n          .set('float', xArg.get('f32'))\n          .set('f64', xArg.get('f32'))\n          .set('double', xArg.get('f64'))\n          .set('int', xArg.get('i32'))\n          .set('null', (i) => i)\n          .set(null, xArg.get('null'))\n          .set('**', __xArgPtr)\n          .set('*', __xArgPtr);\n        xResult\n          .set('*', __xArgPtr)\n          .set('pointer', __xArgPtr)\n          .set('number', (v) => Number(v))\n          .set('void', (v) => undefined)\n          .set('null', (v) => v)\n          .set(null, xResult.get('null'));\n\n        {\n          const copyToResult = [\n            'i8',\n            'i16',\n            'i32',\n            'int',\n            'f32',\n            'float',\n            'f64',\n            'double',\n          ];\n          if (target.bigIntEnabled) copyToResult.push('i64');\n          const adaptPtr = xArg.get(ptrIR);\n          for (const t of copyToResult) {\n            xArg.set(t + '*', adaptPtr);\n            xResult.set(t + '*', adaptPtr);\n            xResult.set(t, xArg.get(t) || toss('Missing arg converter:', t));\n          }\n        }\n\n        const __xArgString = function (v) {\n          if ('string' === typeof v) return target.scopedAllocCString(v);\n          return v ? __xArgPtr(v) : null;\n        };\n        xArg\n          .set('string', __xArgString)\n          .set('utf8', __xArgString)\n          .set('pointer', __xArgString);\n\n        xResult\n          .set('string', (i) => target.cstrToJs(i))\n          .set('utf8', xResult.get('string'))\n          .set('string:dealloc', (i) => {\n            try {\n              return i ? target.cstrToJs(i) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          })\n          .set('utf8:dealloc', xResult.get('string:dealloc'))\n          .set('json', (i) => JSON.parse(target.cstrToJs(i)))\n          .set('json:dealloc', (i) => {\n            try {\n              return i ? JSON.parse(target.cstrToJs(i)) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          });\n\n        const AbstractArgAdapter = class {\n          constructor(opt) {\n            this.name = opt.name || 'unnamed adapter';\n          }\n\n          convertArg(v, argv, argIndex) {\n            toss('AbstractArgAdapter must be subclassed.');\n          }\n        };\n\n        xArg.FuncPtrAdapter = class FuncPtrAdapter extends AbstractArgAdapter {\n          constructor(opt) {\n            super(opt);\n            if (xArg.FuncPtrAdapter.warnOnUse) {\n              console.warn(\n                'xArg.FuncPtrAdapter is an internal-only API',\n                'and is not intended to be invoked from',\n                'client-level code. Invoked with:',\n                opt,\n              );\n            }\n            this.name = opt.name || 'unnamed';\n            this.signature = opt.signature;\n            if (opt.contextKey instanceof Function) {\n              this.contextKey = opt.contextKey;\n              if (!opt.bindScope) opt.bindScope = 'context';\n            }\n            this.bindScope =\n              opt.bindScope ||\n              toss(\n                'FuncPtrAdapter options requires a bindScope (explicit or implied).',\n              );\n            if (FuncPtrAdapter.bindScopes.indexOf(opt.bindScope) < 0) {\n              toss(\n                'Invalid options.bindScope (' +\n                  opt.bindMod +\n                  ') for FuncPtrAdapter. ' +\n                  'Expecting one of: (' +\n                  FuncPtrAdapter.bindScopes.join(', ') +\n                  ')',\n              );\n            }\n            this.isTransient = 'transient' === this.bindScope;\n            this.isContext = 'context' === this.bindScope;\n            this.isPermanent = 'permanent' === this.bindScope;\n            this.singleton = 'singleton' === this.bindScope ? [] : undefined;\n\n            this.callProxy =\n              opt.callProxy instanceof Function ? opt.callProxy : undefined;\n          }\n\n          contextKey(argv, argIndex) {\n            return this;\n          }\n\n          contextMap(key) {\n            const cm = this.__cmap || (this.__cmap = new Map());\n            let rc = cm.get(key);\n            if (undefined === rc) cm.set(key, (rc = []));\n            return rc;\n          }\n\n          convertArg(v, argv, argIndex) {\n            let pair = this.singleton;\n            if (!pair && this.isContext) {\n              pair = this.contextMap(this.contextKey(argv, argIndex));\n            }\n            if (pair && pair[0] === v) return pair[1];\n            if (v instanceof Function) {\n              if (this.callProxy) v = this.callProxy(v);\n              const fp = __installFunction(v, this.signature, this.isTransient);\n              if (FuncPtrAdapter.debugFuncInstall) {\n                FuncPtrAdapter.debugOut(\n                  'FuncPtrAdapter installed',\n                  this,\n                  this.contextKey(argv, argIndex),\n                  '@' + fp,\n                  v,\n                );\n              }\n              if (pair) {\n                if (pair[1]) {\n                  if (FuncPtrAdapter.debugFuncInstall) {\n                    FuncPtrAdapter.debugOut(\n                      'FuncPtrAdapter uninstalling',\n                      this,\n                      this.contextKey(argv, argIndex),\n                      '@' + pair[1],\n                      v,\n                    );\n                  }\n                  try {\n                    cache.scopedAlloc[cache.scopedAlloc.length - 1].push(\n                      pair[1],\n                    );\n                  } catch (e) {}\n                }\n                pair[0] = v;\n                pair[1] = fp;\n              }\n              return fp;\n            } else if (target.isPtr(v) || null === v || undefined === v) {\n              if (pair && pair[1] && pair[1] !== v) {\n                if (FuncPtrAdapter.debugFuncInstall) {\n                  FuncPtrAdapter.debugOut(\n                    'FuncPtrAdapter uninstalling',\n                    this,\n                    this.contextKey(argv, argIndex),\n                    '@' + pair[1],\n                    v,\n                  );\n                }\n                try {\n                  cache.scopedAlloc[cache.scopedAlloc.length - 1].push(pair[1]);\n                } catch (e) {}\n                pair[0] = pair[1] = v | 0;\n              }\n              return v || 0;\n            } else {\n              throw new TypeError(\n                'Invalid FuncPtrAdapter argument type. ' +\n                  'Expecting a function pointer or a ' +\n                  (this.name ? this.name + ' ' : '') +\n                  'function matching signature ' +\n                  this.signature +\n                  '.',\n              );\n            }\n          }\n        };\n\n        xArg.FuncPtrAdapter.warnOnUse = false;\n\n        xArg.FuncPtrAdapter.debugFuncInstall = false;\n\n        xArg.FuncPtrAdapter.debugOut = console.debug.bind(console);\n\n        xArg.FuncPtrAdapter.bindScopes = [\n          'transient',\n          'context',\n          'singleton',\n          'permanent',\n        ];\n\n        const __xArgAdapterCheck = (t) =>\n          xArg.get(t) || toss('Argument adapter not found:', t);\n\n        const __xResultAdapterCheck = (t) =>\n          xResult.get(t) || toss('Result adapter not found:', t);\n\n        cache.xWrap.convertArg = (t, ...args) => __xArgAdapterCheck(t)(...args);\n\n        cache.xWrap.convertArgNoCheck = (t, ...args) => xArg.get(t)(...args);\n\n        cache.xWrap.convertResult = (t, v) =>\n          null === t ? v : t ? __xResultAdapterCheck(t)(v) : undefined;\n\n        cache.xWrap.convertResultNoCheck = (t, v) =>\n          null === t ? v : t ? xResult.get(t)(v) : undefined;\n\n        target.xWrap = function (fArg, resultType, ...argTypes) {\n          if (3 === arguments.length && Array.isArray(arguments[2])) {\n            argTypes = arguments[2];\n          }\n          if (target.isPtr(fArg)) {\n            fArg =\n              target.functionEntry(fArg) ||\n              toss('Function pointer not found in WASM function table.');\n          }\n          const fIsFunc = fArg instanceof Function;\n          const xf = fIsFunc ? fArg : target.xGet(fArg);\n          if (fIsFunc) fArg = xf.name || 'unnamed function';\n          if (argTypes.length !== xf.length) __argcMismatch(fArg, xf.length);\n          if (null === resultType && 0 === xf.length) {\n            return xf;\n          }\n          if (undefined !== resultType && null !== resultType)\n            __xResultAdapterCheck(resultType);\n          for (const t of argTypes) {\n            if (t instanceof AbstractArgAdapter)\n              xArg.set(t, (...args) => t.convertArg(...args));\n            else __xArgAdapterCheck(t);\n          }\n          const cxw = cache.xWrap;\n          if (0 === xf.length) {\n            return (...args) =>\n              args.length\n                ? __argcMismatch(fArg, xf.length)\n                : cxw.convertResult(resultType, xf.call(null));\n          }\n          return function (...args) {\n            if (args.length !== xf.length) __argcMismatch(fArg, xf.length);\n            const scope = target.scopedAllocPush();\n            try {\n              let i = 0;\n              for (; i < args.length; ++i)\n                args[i] = cxw.convertArgNoCheck(argTypes[i], args[i], args, i);\n              return cxw.convertResultNoCheck(resultType, xf.apply(null, args));\n            } finally {\n              target.scopedAllocPop(scope);\n            }\n          };\n        };\n\n        const __xAdapter = function (\n          func,\n          argc,\n          typeName,\n          adapter,\n          modeName,\n          xcvPart,\n        ) {\n          if ('string' === typeof typeName) {\n            if (1 === argc) return xcvPart.get(typeName);\n            else if (2 === argc) {\n              if (!adapter) {\n                delete xcvPart.get(typeName);\n                return func;\n              } else if (!(adapter instanceof Function)) {\n                toss(modeName, 'requires a function argument.');\n              }\n              xcvPart.set(typeName, adapter);\n              return func;\n            }\n          }\n          toss('Invalid arguments to', modeName);\n        };\n\n        target.xWrap.resultAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'resultAdapter()',\n            xResult,\n          );\n        };\n\n        target.xWrap.argAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'argAdapter()',\n            xArg,\n          );\n        };\n\n        target.xWrap.FuncPtrAdapter = xArg.FuncPtrAdapter;\n\n        target.xCallWrapped = function (fArg, resultType, argTypes, ...args) {\n          if (Array.isArray(arguments[3])) args = arguments[3];\n          return target\n            .xWrap(fArg, resultType, argTypes || [])\n            .apply(null, args || []);\n        };\n\n        target.xWrap.testConvertArg = cache.xWrap.convertArg;\n\n        target.xWrap.testConvertResult = cache.xWrap.convertResult;\n\n        return target;\n      };\n\n      globalThis.WhWasmUtilInstaller.yawl = function (config) {\n        const wfetch = () => fetch(config.uri, { credentials: 'same-origin' });\n        const wui = this;\n        const finalThen = function (arg) {\n          if (config.wasmUtilTarget) {\n            const toss = (...args) => {\n              throw new Error(args.join(' '));\n            };\n            const tgt = config.wasmUtilTarget;\n            tgt.module = arg.module;\n            tgt.instance = arg.instance;\n\n            if (!tgt.instance.exports.memory) {\n              tgt.memory =\n                (config.imports &&\n                  config.imports.env &&\n                  config.imports.env.memory) ||\n                toss(\"Missing 'memory' object!\");\n            }\n            if (!tgt.alloc && arg.instance.exports.malloc) {\n              const exports = arg.instance.exports;\n              tgt.alloc = function (n) {\n                return (\n                  exports.malloc(n) || toss('Allocation of', n, 'bytes failed.')\n                );\n              };\n              tgt.dealloc = function (m) {\n                exports.free(m);\n              };\n            }\n            wui(tgt);\n          }\n          if (config.onload) config.onload(arg, config);\n          return arg;\n        };\n        const loadWasm = WebAssembly.instantiateStreaming\n          ? function loadWasmStreaming() {\n              return WebAssembly.instantiateStreaming(\n                wfetch(),\n                config.imports || {},\n              ).then(finalThen);\n            }\n          : function loadWasmOldSchool() {\n              return wfetch()\n                .then((response) => response.arrayBuffer())\n                .then((bytes) =>\n                  WebAssembly.instantiate(bytes, config.imports || {}),\n                )\n                .then(finalThen);\n            };\n        return loadWasm;\n      }.bind(globalThis.WhWasmUtilInstaller);\n\n      ('use strict');\n      globalThis.Jaccwabyt = function StructBinderFactory(config) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (\n          !(config.heap instanceof WebAssembly.Memory) &&\n          !(config.heap instanceof Function)\n        ) {\n          toss(\n            'config.heap must be WebAssembly.Memory instance or a function.',\n          );\n        }\n        ['alloc', 'dealloc'].forEach(function (k) {\n          config[k] instanceof Function ||\n            toss(\"Config option '\" + k + \"' must be a function.\");\n        });\n        const SBF = StructBinderFactory;\n        const heap =\n            config.heap instanceof Function\n              ? config.heap\n              : () => new Uint8Array(config.heap.buffer),\n          alloc = config.alloc,\n          dealloc = config.dealloc,\n          log = config.log || console.log.bind(console),\n          memberPrefix = config.memberPrefix || '',\n          memberSuffix = config.memberSuffix || '',\n          bigIntEnabled =\n            undefined === config.bigIntEnabled\n              ? !!globalThis['BigInt64Array']\n              : !!config.bigIntEnabled,\n          BigInt = globalThis['BigInt'],\n          BigInt64Array = globalThis['BigInt64Array'],\n          ptrSizeof = config.ptrSizeof || 4,\n          ptrIR = config.ptrIR || 'i32';\n        if (!SBF.debugFlags) {\n          SBF.__makeDebugFlags = function (deriveFrom = null) {\n            if (deriveFrom && deriveFrom.__flags)\n              deriveFrom = deriveFrom.__flags;\n            const f = function f(flags) {\n              if (0 === arguments.length) {\n                return f.__flags;\n              }\n              if (flags < 0) {\n                delete f.__flags.getter;\n                delete f.__flags.setter;\n                delete f.__flags.alloc;\n                delete f.__flags.dealloc;\n              } else {\n                f.__flags.getter = 0 !== (0x01 & flags);\n                f.__flags.setter = 0 !== (0x02 & flags);\n                f.__flags.alloc = 0 !== (0x04 & flags);\n                f.__flags.dealloc = 0 !== (0x08 & flags);\n              }\n              return f._flags;\n            };\n            Object.defineProperty(f, '__flags', {\n              iterable: false,\n              writable: false,\n              value: Object.create(deriveFrom),\n            });\n            if (!deriveFrom) f(0);\n            return f;\n          };\n          SBF.debugFlags = SBF.__makeDebugFlags();\n        }\n\n        const isLittleEndian = (function () {\n          const buffer = new ArrayBuffer(2);\n          new DataView(buffer).setInt16(0, 256, true);\n\n          return new Int16Array(buffer)[0] === 256;\n        })();\n\n        const isFuncSig = (s) => '(' === s[1];\n\n        const isPtrSig = (s) => 'p' === s || 'P' === s;\n        const isAutoPtrSig = (s) => 'P' === s;\n        const sigLetter = (s) => (isFuncSig(s) ? 'p' : s[0]);\n\n        const sigIR = function (s) {\n          switch (sigLetter(s)) {\n            case 'c':\n            case 'C':\n              return 'i8';\n            case 'i':\n              return 'i32';\n            case 'p':\n            case 'P':\n            case 's':\n              return ptrIR;\n            case 'j':\n              return 'i64';\n            case 'f':\n              return 'float';\n            case 'd':\n              return 'double';\n          }\n          toss('Unhandled signature IR:', s);\n        };\n\n        const affirmBigIntArray = BigInt64Array\n          ? () => true\n          : () => toss('BigInt64Array is not available.');\n\n        const sigDVGetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'getInt32';\n                case 8:\n                  return affirmBigIntArray() && 'getBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'getInt32';\n            case 'c':\n              return 'getInt8';\n            case 'C':\n              return 'getUint8';\n            case 'j':\n              return affirmBigIntArray() && 'getBigInt64';\n            case 'f':\n              return 'getFloat32';\n            case 'd':\n              return 'getFloat64';\n          }\n          toss('Unhandled DataView getter for signature:', s);\n        };\n\n        const sigDVSetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'setInt32';\n                case 8:\n                  return affirmBigIntArray() && 'setBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'setInt32';\n            case 'c':\n              return 'setInt8';\n            case 'C':\n              return 'setUint8';\n            case 'j':\n              return affirmBigIntArray() && 'setBigInt64';\n            case 'f':\n              return 'setFloat32';\n            case 'd':\n              return 'setFloat64';\n          }\n          toss('Unhandled DataView setter for signature:', s);\n        };\n\n        const sigDVSetWrapper = function (s) {\n          switch (sigLetter(s)) {\n            case 'i':\n            case 'f':\n            case 'c':\n            case 'C':\n            case 'd':\n              return Number;\n            case 'j':\n              return affirmBigIntArray() && BigInt;\n            case 'p':\n            case 'P':\n            case 's':\n              switch (ptrSizeof) {\n                case 4:\n                  return Number;\n                case 8:\n                  return affirmBigIntArray() && BigInt;\n              }\n              break;\n          }\n          toss('Unhandled DataView set wrapper for signature:', s);\n        };\n\n        const sPropName = (s, k) => s + '::' + k;\n\n        const __propThrowOnSet = function (structName, propName) {\n          return () => toss(sPropName(structName, propName), 'is read-only.');\n        };\n\n        const __instancePointerMap = new WeakMap();\n\n        const xPtrPropName = '(pointer-is-external)';\n\n        const __freeStruct = function (ctor, obj, m) {\n          if (!m) m = __instancePointerMap.get(obj);\n          if (m) {\n            __instancePointerMap.delete(obj);\n            if (Array.isArray(obj.ondispose)) {\n              let x;\n              while ((x = obj.ondispose.shift())) {\n                try {\n                  if (x instanceof Function) x.call(obj);\n                  else if (x instanceof StructType) x.dispose();\n                  else if ('number' === typeof x) dealloc(x);\n                } catch (e) {\n                  console.warn(\n                    'ondispose() for',\n                    ctor.structName,\n                    '@',\n                    m,\n                    'threw. NOT propagating it.',\n                    e,\n                  );\n                }\n              }\n            } else if (obj.ondispose instanceof Function) {\n              try {\n                obj.ondispose();\n              } catch (e) {\n                console.warn(\n                  'ondispose() for',\n                  ctor.structName,\n                  '@',\n                  m,\n                  'threw. NOT propagating it.',\n                  e,\n                );\n              }\n            }\n            delete obj.ondispose;\n            if (ctor.debugFlags.__flags.dealloc) {\n              log(\n                'debug.dealloc:',\n                obj[xPtrPropName] ? 'EXTERNAL' : '',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (!obj[xPtrPropName]) dealloc(m);\n          }\n        };\n\n        const rop = (v) => {\n          return {\n            configurable: false,\n            writable: false,\n            iterable: false,\n            value: v,\n          };\n        };\n\n        const __allocStruct = function (ctor, obj, m) {\n          let fill = !m;\n          if (m) Object.defineProperty(obj, xPtrPropName, rop(m));\n          else {\n            m = alloc(ctor.structInfo.sizeof);\n            if (!m) toss('Allocation of', ctor.structName, 'structure failed.');\n          }\n          try {\n            if (ctor.debugFlags.__flags.alloc) {\n              log(\n                'debug.alloc:',\n                fill ? '' : 'EXTERNAL',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (fill) heap().fill(0, m, m + ctor.structInfo.sizeof);\n            __instancePointerMap.set(obj, m);\n          } catch (e) {\n            __freeStruct(ctor, obj, m);\n            throw e;\n          }\n        };\n\n        const __memoryDump = function () {\n          const p = this.pointer;\n          return p\n            ? new Uint8Array(heap().slice(p, p + this.structInfo.sizeof))\n            : null;\n        };\n\n        const __memberKey = (k) => memberPrefix + k + memberSuffix;\n        const __memberKeyProp = rop(__memberKey);\n\n        const __lookupMember = function (\n          structInfo,\n          memberName,\n          tossIfNotFound = true,\n        ) {\n          let m = structInfo.members[memberName];\n          if (!m && (memberPrefix || memberSuffix)) {\n            for (const v of Object.values(structInfo.members)) {\n              if (v.key === memberName) {\n                m = v;\n                break;\n              }\n            }\n            if (!m && tossIfNotFound) {\n              toss(\n                sPropName(structInfo.name, memberName),\n                'is not a mapped struct member.',\n              );\n            }\n          }\n          return m;\n        };\n\n        const __memberSignature = function f(\n          obj,\n          memberName,\n          emscriptenFormat = false,\n        ) {\n          if (!f._)\n            f._ = (x) =>\n              x.replace(/[^vipPsjrdcC]/g, '').replace(/[pPscC]/g, 'i');\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          return emscriptenFormat ? f._(m.signature) : m.signature;\n        };\n\n        const __ptrPropDescriptor = {\n          configurable: false,\n          enumerable: false,\n          get: function () {\n            return __instancePointerMap.get(this);\n          },\n          set: () => toss(\"Cannot assign the 'pointer' property of a struct.\"),\n        };\n\n        const __structMemberKeys = rop(function () {\n          const a = [];\n          for (const k of Object.keys(this.structInfo.members)) {\n            a.push(this.memberKey(k));\n          }\n          return a;\n        });\n\n        const __utf8Decoder = new TextDecoder('utf-8');\n        const __utf8Encoder = new TextEncoder();\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return __utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        const __memberIsString = function (\n          obj,\n          memberName,\n          tossIfNotFound = false,\n        ) {\n          const m = __lookupMember(obj.structInfo, memberName, tossIfNotFound);\n          return m && 1 === m.signature.length && 's' === m.signature[0]\n            ? m\n            : false;\n        };\n\n        const __affirmCStringSignature = function (member) {\n          if ('s' === member.signature) return;\n          toss(\n            'Invalid member type signature for C-string value:',\n            JSON.stringify(member),\n          );\n        };\n\n        const __memberToJsString = function f(obj, memberName) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n          const addr = obj[m.key];\n\n          if (!addr) return null;\n          let pos = addr;\n          const mem = heap();\n          for (; mem[pos] !== 0; ++pos) {}\n\n          return addr === pos ? '' : __utf8Decode(mem, addr, pos);\n        };\n\n        const __addOnDispose = function (obj, ...v) {\n          if (obj.ondispose) {\n            if (!Array.isArray(obj.ondispose)) {\n              obj.ondispose = [obj.ondispose];\n            }\n          } else {\n            obj.ondispose = [];\n          }\n          obj.ondispose.push(...v);\n        };\n\n        const __allocCString = function (str) {\n          const u = __utf8Encoder.encode(str);\n          const mem = alloc(u.length + 1);\n          if (!mem) toss('Allocation error while duplicating string:', str);\n          const h = heap();\n\n          h.set(u, mem);\n          h[mem + u.length] = 0;\n\n          return mem;\n        };\n\n        const __setMemberCString = function (obj, memberName, str) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n\n          const mem = __allocCString(str);\n          obj[m.key] = mem;\n          __addOnDispose(obj, mem);\n          return obj;\n        };\n\n        const StructType = function ctor(structName, structInfo) {\n          if (arguments[2] !== rop) {\n            toss(\n              'Do not call the StructType constructor',\n              'from client-level code.',\n            );\n          }\n          Object.defineProperties(this, {\n            structName: rop(structName),\n            structInfo: rop(structInfo),\n          });\n        };\n\n        StructType.prototype = Object.create(null, {\n          dispose: rop(function () {\n            __freeStruct(this.constructor, this);\n          }),\n          lookupMember: rop(function (memberName, tossIfNotFound = true) {\n            return __lookupMember(this.structInfo, memberName, tossIfNotFound);\n          }),\n          memberToJsString: rop(function (memberName) {\n            return __memberToJsString(this, memberName);\n          }),\n          memberIsString: rop(function (memberName, tossIfNotFound = true) {\n            return __memberIsString(this, memberName, tossIfNotFound);\n          }),\n          memberKey: __memberKeyProp,\n          memberKeys: __structMemberKeys,\n          memberSignature: rop(function (memberName, emscriptenFormat = false) {\n            return __memberSignature(this, memberName, emscriptenFormat);\n          }),\n          memoryDump: rop(__memoryDump),\n          pointer: __ptrPropDescriptor,\n          setMemberCString: rop(function (memberName, str) {\n            return __setMemberCString(this, memberName, str);\n          }),\n        });\n\n        Object.assign(StructType.prototype, {\n          addOnDispose: function (...v) {\n            __addOnDispose(this, ...v);\n            return this;\n          },\n        });\n\n        Object.defineProperties(StructType, {\n          allocCString: rop(__allocCString),\n          isA: rop((v) => v instanceof StructType),\n          hasExternalPointer: rop(\n            (v) => v instanceof StructType && !!v[xPtrPropName],\n          ),\n          memberKey: __memberKeyProp,\n        });\n\n        const isNumericValue = (v) =>\n          Number.isFinite(v) || v instanceof (BigInt || Number);\n\n        const makeMemberWrapper = function f(ctor, name, descr) {\n          if (!f._) {\n            f._ = { getters: {}, setters: {}, sw: {} };\n            const a = ['i', 'c', 'C', 'p', 'P', 's', 'f', 'd', 'v()'];\n            if (bigIntEnabled) a.push('j');\n            a.forEach(function (v) {\n              f._.getters[v] = sigDVGetter(v);\n              f._.setters[v] = sigDVSetter(v);\n              f._.sw[v] = sigDVSetWrapper(v);\n            });\n            const rxSig1 = /^[ipPsjfdcC]$/,\n              rxSig2 = /^[vipPsjfdcC]\\([ipPsjfdcC]*\\)$/;\n            f.sigCheck = function (obj, name, key, sig) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                toss(obj.structName, 'already has a property named', key + '.');\n              }\n              rxSig1.test(sig) ||\n                rxSig2.test(sig) ||\n                toss(\n                  'Malformed signature for',\n                  sPropName(obj.structName, name) + ':',\n                  sig,\n                );\n            };\n          }\n          const key = ctor.memberKey(name);\n          f.sigCheck(ctor.prototype, name, key, descr.signature);\n          descr.key = key;\n          descr.name = name;\n          const sigGlyph = sigLetter(descr.signature);\n          const xPropName = sPropName(ctor.prototype.structName, key);\n          const dbg = ctor.prototype.debugFlags.__flags;\n\n          const prop = Object.create(null);\n          prop.configurable = false;\n          prop.enumerable = false;\n          prop.get = function () {\n            if (dbg.getter) {\n              log(\n                'debug.getter:',\n                f._.getters[sigGlyph],\n                'for',\n                sigIR(sigGlyph),\n                xPropName,\n                '@',\n                this.pointer,\n                '+',\n                descr.offset,\n                'sz',\n                descr.sizeof,\n              );\n            }\n            let rc = new DataView(\n              heap().buffer,\n              this.pointer + descr.offset,\n              descr.sizeof,\n            )[f._.getters[sigGlyph]](0, isLittleEndian);\n            if (dbg.getter) log('debug.getter:', xPropName, 'result =', rc);\n            return rc;\n          };\n          if (descr.readOnly) {\n            prop.set = __propThrowOnSet(ctor.prototype.structName, key);\n          } else {\n            prop.set = function (v) {\n              if (dbg.setter) {\n                log(\n                  'debug.setter:',\n                  f._.setters[sigGlyph],\n                  'for',\n                  sigIR(sigGlyph),\n                  xPropName,\n                  '@',\n                  this.pointer,\n                  '+',\n                  descr.offset,\n                  'sz',\n                  descr.sizeof,\n                  v,\n                );\n              }\n              if (!this.pointer) {\n                toss('Cannot set struct property on disposed instance.');\n              }\n              if (null === v) v = 0;\n              else\n                while (!isNumericValue(v)) {\n                  if (\n                    isAutoPtrSig(descr.signature) &&\n                    v instanceof StructType\n                  ) {\n                    v = v.pointer || 0;\n                    if (dbg.setter)\n                      log('debug.setter:', xPropName, 'resolved to', v);\n                    break;\n                  }\n                  toss('Invalid value for pointer-type', xPropName + '.');\n                }\n              new DataView(\n                heap().buffer,\n                this.pointer + descr.offset,\n                descr.sizeof,\n              )[f._.setters[sigGlyph]](0, f._.sw[sigGlyph](v), isLittleEndian);\n            };\n          }\n          Object.defineProperty(ctor.prototype, key, prop);\n        };\n\n        const StructBinder = function StructBinder(structName, structInfo) {\n          if (1 === arguments.length) {\n            structInfo = structName;\n            structName = structInfo.name;\n          } else if (!structInfo.name) {\n            structInfo.name = structName;\n          }\n          if (!structName) toss('Struct name is required.');\n          let lastMember = false;\n          Object.keys(structInfo.members).forEach((k) => {\n            const m = structInfo.members[k];\n            if (!m.sizeof) toss(structName, 'member', k, 'is missing sizeof.');\n            else if (m.sizeof === 1) {\n              m.signature === 'c' ||\n                m.signature === 'C' ||\n                toss(\n                  'Unexpected sizeof==1 member',\n                  sPropName(structInfo.name, k),\n                  'with signature',\n                  m.signature,\n                );\n            } else {\n              if (0 !== m.sizeof % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'sizeof is not aligned. sizeof=' + m.sizeof,\n                );\n              }\n              if (0 !== m.offset % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'offset is not aligned. offset=' + m.offset,\n                );\n              }\n            }\n            if (!lastMember || lastMember.offset < m.offset) lastMember = m;\n          });\n          if (!lastMember) toss('No member property descriptions found.');\n          else if (structInfo.sizeof < lastMember.offset + lastMember.sizeof) {\n            toss(\n              'Invalid struct config:',\n              structName,\n              'max member offset (' + lastMember.offset + ') ',\n              'extends past end of struct (sizeof=' + structInfo.sizeof + ').',\n            );\n          }\n          const debugFlags = rop(SBF.__makeDebugFlags(StructBinder.debugFlags));\n\n          const StructCtor = function StructCtor(externalMemory) {\n            if (!(this instanceof StructCtor)) {\n              toss(\n                'The',\n                structName,\n                \"constructor may only be called via 'new'.\",\n              );\n            } else if (arguments.length) {\n              if (\n                externalMemory !== (externalMemory | 0) ||\n                externalMemory <= 0\n              ) {\n                toss('Invalid pointer value for', structName, 'constructor.');\n              }\n              __allocStruct(StructCtor, this, externalMemory);\n            } else {\n              __allocStruct(StructCtor, this);\n            }\n          };\n          Object.defineProperties(StructCtor, {\n            debugFlags: debugFlags,\n            isA: rop((v) => v instanceof StructCtor),\n            memberKey: __memberKeyProp,\n            memberKeys: __structMemberKeys,\n            methodInfoForKey: rop(function (mKey) {}),\n            structInfo: rop(structInfo),\n            structName: rop(structName),\n          });\n          StructCtor.prototype = new StructType(structName, structInfo, rop);\n          Object.defineProperties(StructCtor.prototype, {\n            debugFlags: debugFlags,\n            constructor: rop(StructCtor),\n          });\n          Object.keys(structInfo.members).forEach((name) =>\n            makeMemberWrapper(StructCtor, name, structInfo.members[name]),\n          );\n          return StructCtor;\n        };\n        StructBinder.StructType = StructType;\n        StructBinder.config = config;\n        StructBinder.allocCString = __allocCString;\n        if (!StructBinder.debugFlags) {\n          StructBinder.debugFlags = SBF.__makeDebugFlags(SBF.debugFlags);\n        }\n        return StructBinder;\n      };\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = sqlite3.SQLite3Error.toss;\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n        globalThis.WhWasmUtilInstaller(wasm);\n        delete globalThis.WhWasmUtilInstaller;\n\n        if (0) {\n          const dealloc = wasm.exports[sqlite3.config.deallocExportName];\n          const nFunc = wasm.functionTable().length;\n          let i;\n          for (i = 0; i < nFunc; ++i) {\n            const e = wasm.functionEntry(i);\n            if (dealloc === e) {\n              capi.SQLITE_WASM_DEALLOC = i;\n              break;\n            }\n          }\n          if (dealloc !== wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot find function pointer for SQLITE_WASM_DEALLOC.',\n            );\n          }\n        }\n\n        wasm.bindingSignatures = [\n          ['sqlite3_aggregate_context', 'void*', 'sqlite3_context*', 'int'],\n\n          ['sqlite3_bind_double', 'int', 'sqlite3_stmt*', 'int', 'f64'],\n          ['sqlite3_bind_int', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_bind_null', undefined, 'sqlite3_stmt*', 'int'],\n          ['sqlite3_bind_parameter_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_bind_parameter_index', 'int', 'sqlite3_stmt*', 'string'],\n          [\n            'sqlite3_bind_pointer',\n            'int',\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'string:static',\n            '*',\n          ],\n          [\n            'sqlite3_busy_handler',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pi)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_busy_timeout', 'int', 'sqlite3*', 'int'],\n\n          ['sqlite3_changes', 'int', 'sqlite3*'],\n          ['sqlite3_clear_bindings', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_collation_needed', 'int', 'sqlite3*', '*', '*'],\n          ['sqlite3_column_blob', '*', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_bytes', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_column_double', 'f64', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_int', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_name', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_text', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_type', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_value', 'sqlite3_value*', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_commit_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_commit_hook',\n                signature: 'i(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_compileoption_get', 'string', 'int'],\n          ['sqlite3_compileoption_used', 'int', 'string'],\n          ['sqlite3_complete', 'int', 'string:flexible'],\n          ['sqlite3_context_db_handle', 'sqlite3*', 'sqlite3_context*'],\n\n          ['sqlite3_data_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_db_filename', 'string', 'sqlite3*', 'string'],\n          ['sqlite3_db_handle', 'sqlite3*', 'sqlite3_stmt*'],\n          ['sqlite3_db_name', 'string', 'sqlite3*', 'int'],\n          ['sqlite3_db_status', 'int', 'sqlite3*', 'int', '*', '*', 'int'],\n          ['sqlite3_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_errmsg', 'string', 'sqlite3*'],\n          ['sqlite3_error_offset', 'int', 'sqlite3*'],\n          ['sqlite3_errstr', 'string', 'int'],\n          [\n            'sqlite3_exec',\n            'int',\n            [\n              'sqlite3*',\n              'string:flexible',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pipp)',\n                bindScope: 'transient',\n                callProxy: (callback) => {\n                  let aNames;\n                  return (pVoid, nCols, pColVals, pColNames) => {\n                    try {\n                      const aVals = wasm.cArgvToJs(nCols, pColVals);\n                      if (!aNames) aNames = wasm.cArgvToJs(nCols, pColNames);\n                      return callback(aVals, aNames) | 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n              '**',\n            ],\n          ],\n          ['sqlite3_expanded_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_extended_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_extended_result_codes', 'int', 'sqlite3*', 'int'],\n          ['sqlite3_file_control', 'int', 'sqlite3*', 'string', 'int', '*'],\n          ['sqlite3_finalize', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_free', undefined, '*'],\n          ['sqlite3_get_autocommit', 'int', 'sqlite3*'],\n          ['sqlite3_get_auxdata', '*', 'sqlite3_context*', 'int'],\n          ['sqlite3_initialize', undefined],\n\n          ['sqlite3_keyword_count', 'int'],\n          ['sqlite3_keyword_name', 'int', ['int', '**', '*']],\n          ['sqlite3_keyword_check', 'int', ['string', 'int']],\n          ['sqlite3_libversion', 'string'],\n          ['sqlite3_libversion_number', 'int'],\n          ['sqlite3_limit', 'int', ['sqlite3*', 'int', 'int']],\n          ['sqlite3_malloc', '*', 'int'],\n          ['sqlite3_open', 'int', 'string', '*'],\n          ['sqlite3_open_v2', 'int', 'string', '*', 'int', 'string'],\n\n          [\n            'sqlite3_progress_handler',\n            undefined,\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xProgressHandler',\n                signature: 'i(p)',\n                bindScope: 'context',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_realloc', '*', '*', 'int'],\n          ['sqlite3_reset', 'int', 'sqlite3_stmt*'],\n\n          [\n            'sqlite3_result_blob',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_double', undefined, 'sqlite3_context*', 'f64'],\n          [\n            'sqlite3_result_error',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n          ],\n          ['sqlite3_result_error_code', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_error_nomem', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_error_toobig', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_int', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_null', undefined, 'sqlite3_context*'],\n          [\n            'sqlite3_result_pointer',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'string:static',\n            '*',\n          ],\n          ['sqlite3_result_subtype', undefined, 'sqlite3_value*', 'int'],\n          [\n            'sqlite3_result_text',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_zeroblob', undefined, 'sqlite3_context*', 'int'],\n          [\n            'sqlite3_rollback_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_rollback_hook',\n                signature: 'v(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          [\n            'sqlite3_set_authorizer',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_set_authorizer::xAuth',\n                signature: 'i(pi' + 'ssss)',\n                contextKey: (argv, argIndex) => argv[0],\n                callProxy: (callback) => {\n                  return (pV, iCode, s0, s1, s2, s3) => {\n                    try {\n                      s0 = s0 && wasm.cstrToJs(s0);\n                      s1 = s1 && wasm.cstrToJs(s1);\n                      s2 = s2 && wasm.cstrToJs(s2);\n                      s3 = s3 && wasm.cstrToJs(s3);\n                      return callback(pV, iCode, s0, s1, s2, s3) || 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          [\n            'sqlite3_set_auxdata',\n            undefined,\n            [\n              'sqlite3_context*',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroyAuxData',\n                signature: 'v(*)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n            ],\n          ],\n          ['sqlite3_shutdown', undefined],\n          ['sqlite3_sourceid', 'string'],\n          ['sqlite3_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_status', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_step', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_isexplain', 'int', ['sqlite3_stmt*']],\n          ['sqlite3_stmt_readonly', 'int', ['sqlite3_stmt*']],\n          ['sqlite3_stmt_status', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_strglob', 'int', 'string', 'string'],\n          ['sqlite3_stricmp', 'int', 'string', 'string'],\n          ['sqlite3_strlike', 'int', 'string', 'string', 'int'],\n          ['sqlite3_strnicmp', 'int', 'string', 'string', 'int'],\n          [\n            'sqlite3_table_column_metadata',\n            'int',\n            'sqlite3*',\n            'string',\n            'string',\n            'string',\n            '**',\n            '**',\n            '*',\n            '*',\n            '*',\n          ],\n          ['sqlite3_total_changes', 'int', 'sqlite3*'],\n          [\n            'sqlite3_trace_v2',\n            'int',\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_trace_v2::callback',\n                signature: 'i(ippp)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_txn_state', 'int', ['sqlite3*', 'string']],\n\n          ['sqlite3_uri_boolean', 'int', 'sqlite3_filename', 'string', 'int'],\n          ['sqlite3_uri_key', 'string', 'sqlite3_filename', 'int'],\n          ['sqlite3_uri_parameter', 'string', 'sqlite3_filename', 'string'],\n          ['sqlite3_user_data', 'void*', 'sqlite3_context*'],\n          ['sqlite3_value_blob', '*', 'sqlite3_value*'],\n          ['sqlite3_value_bytes', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_double', 'f64', 'sqlite3_value*'],\n          ['sqlite3_value_dup', 'sqlite3_value*', 'sqlite3_value*'],\n          ['sqlite3_value_free', undefined, 'sqlite3_value*'],\n          ['sqlite3_value_frombind', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_int', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_nochange', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_numeric_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_pointer', '*', 'sqlite3_value*', 'string:static'],\n          ['sqlite3_value_subtype', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_text', 'string', 'sqlite3_value*'],\n          ['sqlite3_value_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_vfs_find', '*', 'string'],\n          ['sqlite3_vfs_register', 'int', 'sqlite3_vfs*', 'int'],\n          ['sqlite3_vfs_unregister', 'int', 'sqlite3_vfs*'],\n        ];\n\n        if (false && wasm.compileOptionUsed('SQLITE_ENABLE_NORMALIZE')) {\n          wasm.bindingSignatures.push([\n            'sqlite3_normalized_sql',\n            'string',\n            'sqlite3_stmt*',\n          ]);\n        }\n\n        wasm.bindingSignatures.int64 = [\n          ['sqlite3_bind_int64', 'int', ['sqlite3_stmt*', 'int', 'i64']],\n          ['sqlite3_changes64', 'i64', ['sqlite3*']],\n          ['sqlite3_column_int64', 'i64', ['sqlite3_stmt*', 'int']],\n          [\n            'sqlite3_create_module',\n            'int',\n            ['sqlite3*', 'string', 'sqlite3_module*', '*'],\n          ],\n          [\n            'sqlite3_create_module_v2',\n            'int',\n            ['sqlite3*', 'string', 'sqlite3_module*', '*', '*'],\n          ],\n          ['sqlite3_declare_vtab', 'int', ['sqlite3*', 'string:flexible']],\n          [\n            'sqlite3_deserialize',\n            'int',\n            'sqlite3*',\n            'string',\n            '*',\n            'i64',\n            'i64',\n            'int',\n          ],\n          ['sqlite3_drop_modules', 'int', ['sqlite3*', '**']],\n          ['sqlite3_last_insert_rowid', 'i64', ['sqlite3*']],\n          ['sqlite3_malloc64', '*', 'i64'],\n          ['sqlite3_msize', 'i64', '*'],\n          ['sqlite3_overload_function', 'int', ['sqlite3*', 'string', 'int']],\n          ['sqlite3_preupdate_blobwrite', 'int', 'sqlite3*'],\n          ['sqlite3_preupdate_count', 'int', 'sqlite3*'],\n          ['sqlite3_preupdate_depth', 'int', 'sqlite3*'],\n          [\n            'sqlite3_preupdate_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_preupdate_hook',\n                signature: 'v(ppippjj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, db, op, zDb, zTbl, iKey1, iKey2) => {\n                    callback(\n                      p,\n                      db,\n                      op,\n                      wasm.cstrToJs(zDb),\n                      wasm.cstrToJs(zTbl),\n                      iKey1,\n                      iKey2,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_preupdate_new', 'int', ['sqlite3*', 'int', '**']],\n          ['sqlite3_preupdate_old', 'int', ['sqlite3*', 'int', '**']],\n          ['sqlite3_realloc64', '*', '*', 'i64'],\n          ['sqlite3_result_int64', undefined, '*', 'i64'],\n          ['sqlite3_result_zeroblob64', 'int', '*', 'i64'],\n          ['sqlite3_serialize', '*', 'sqlite3*', 'string', '*', 'int'],\n          ['sqlite3_set_last_insert_rowid', undefined, ['sqlite3*', 'i64']],\n          ['sqlite3_status64', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_total_changes64', 'i64', ['sqlite3*']],\n          [\n            'sqlite3_update_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_update_hook',\n                signature: 'v(iippj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, op, z0, z1, rowid) => {\n                    callback(\n                      p,\n                      op,\n                      wasm.cstrToJs(z0),\n                      wasm.cstrToJs(z1),\n                      rowid,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_uri_int64', 'i64', ['sqlite3_filename', 'string', 'i64']],\n          ['sqlite3_value_int64', 'i64', 'sqlite3_value*'],\n          ['sqlite3_vtab_collation', 'string', 'sqlite3_index_info*', 'int'],\n          ['sqlite3_vtab_distinct', 'int', 'sqlite3_index_info*'],\n          ['sqlite3_vtab_in', 'int', 'sqlite3_index_info*', 'int', 'int'],\n          ['sqlite3_vtab_in_first', 'int', 'sqlite3_value*', '**'],\n          ['sqlite3_vtab_in_next', 'int', 'sqlite3_value*', '**'],\n\n          ['sqlite3_vtab_nochange', 'int', 'sqlite3_context*'],\n          ['sqlite3_vtab_on_conflict', 'int', 'sqlite3*'],\n          ['sqlite3_vtab_rhs_value', 'int', 'sqlite3_index_info*', 'int', '**'],\n        ];\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3changegroup_add) {\n          const __ipsProxy = {\n            signature: 'i(ps)',\n            callProxy: (callback) => {\n              return (p, s) => {\n                try {\n                  return callback(p, wasm.cstrToJs(s)) | 0;\n                } catch (e) {\n                  return e.resultCode || capi.SQLITE_ERROR;\n                }\n              };\n            },\n          };\n\n          wasm.bindingSignatures.int64.push(\n            ...[\n              [\n                'sqlite3changegroup_add',\n                'int',\n                ['sqlite3_changegroup*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3changegroup_add_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changegroup_delete',\n                undefined,\n                ['sqlite3_changegroup*'],\n              ],\n              ['sqlite3changegroup_new', 'int', ['**']],\n              [\n                'sqlite3changegroup_output',\n                'int',\n                ['sqlite3_changegroup*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changegroup_output_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_concat',\n                'int',\n                ['int', 'void*', 'int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_concat_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputA',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputB',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_conflict',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_finalize', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_fk_conflicts',\n                'int',\n                ['sqlite3_changeset_iter*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_invert',\n                'int',\n                ['int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_invert_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_new',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_next', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_old',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              [\n                'sqlite3changeset_op',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*', 'int*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_pk',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*'],\n              ],\n              ['sqlite3changeset_start', 'int', ['**', 'int', '*']],\n              [\n                'sqlite3changeset_start_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3changeset_start_v2', 'int', ['**', 'int', '*', 'int']],\n              [\n                'sqlite3changeset_start_v2_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  'int',\n                ],\n              ],\n              ['sqlite3session_attach', 'int', ['sqlite3_session*', 'string']],\n              [\n                'sqlite3session_changeset',\n                'int',\n                ['sqlite3_session*', 'int*', '**'],\n              ],\n              ['sqlite3session_changeset_size', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_changeset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3session_config', 'int', ['int', 'void*']],\n              ['sqlite3session_create', 'int', ['sqlite3*', 'string', '**']],\n\n              [\n                'sqlite3session_diff',\n                'int',\n                ['sqlite3_session*', 'string', 'string', '**'],\n              ],\n              ['sqlite3session_enable', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_indirect', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_isempty', 'int', ['sqlite3_session*']],\n              ['sqlite3session_memory_used', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_object_config',\n                'int',\n                ['sqlite3_session*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3session_patchset',\n                'int',\n                ['sqlite3_session*', '*', '**'],\n              ],\n              [\n                'sqlite3session_patchset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3session_table_filter',\n                undefined,\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    ...__ipsProxy,\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n                  '*',\n                ],\n              ],\n            ],\n          );\n        }\n\n        wasm.bindingSignatures.wasmInternal = [\n          ['sqlite3__wasm_db_reset', 'int', 'sqlite3*'],\n          ['sqlite3__wasm_db_vfs', 'sqlite3_vfs*', 'sqlite3*', 'string'],\n          [\n            'sqlite3__wasm_vfs_create_file',\n            'int',\n            'sqlite3_vfs*',\n            'string',\n            '*',\n            'int',\n          ],\n          ['sqlite3__wasm_posix_create_file', 'int', 'string', '*', 'int'],\n          ['sqlite3__wasm_vfs_unlink', 'int', 'sqlite3_vfs*', 'string'],\n          ['sqlite3__wasm_qfmt_token', 'string:dealloc', 'string', 'int'],\n        ];\n\n        sqlite3.StructBinder = globalThis.Jaccwabyt({\n          heap: 0 ? wasm.memory : wasm.heap8u,\n          alloc: wasm.alloc,\n          dealloc: wasm.dealloc,\n          bigIntEnabled: wasm.bigIntEnabled,\n          memberPrefix: '$',\n        });\n        delete globalThis.Jaccwabyt;\n\n        {\n          const __xString = wasm.xWrap.argAdapter('string');\n          wasm.xWrap.argAdapter('string:flexible', (v) =>\n            __xString(util.flexibleString(v)),\n          );\n\n          wasm.xWrap.argAdapter(\n            'string:static',\n            function (v) {\n              if (wasm.isPtr(v)) return v;\n              v = '' + v;\n              let rc = this[v];\n              return rc || (this[v] = wasm.allocCString(v));\n            }.bind(Object.create(null)),\n          );\n\n          const __xArgPtr = wasm.xWrap.argAdapter('*');\n          const nilType = function () {};\n          wasm.xWrap.argAdapter('sqlite3_filename', __xArgPtr)(\n            'sqlite3_context*',\n            __xArgPtr,\n          )('sqlite3_value*', __xArgPtr)('void*', __xArgPtr)(\n            'sqlite3_changegroup*',\n            __xArgPtr,\n          )('sqlite3_changeset_iter*', __xArgPtr)(\n            'sqlite3_session*',\n            __xArgPtr,\n          )('sqlite3_stmt*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.Stmt || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.DB || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_index_info*', (v) =>\n            __xArgPtr(\n              v instanceof (capi.sqlite3_index_info || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_module*', (v) =>\n            __xArgPtr(\n              v instanceof (capi.sqlite3_module || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_vfs*', (v) => {\n            if ('string' === typeof v) {\n              return (\n                capi.sqlite3_vfs_find(v) ||\n                sqlite3.SQLite3Error.toss(\n                  capi.SQLITE_NOTFOUND,\n                  'Unknown sqlite3_vfs name:',\n                  v,\n                )\n              );\n            }\n            return __xArgPtr(\n              v instanceof (capi.sqlite3_vfs || nilType) ? v.pointer : v,\n            );\n          });\n\n          const __xRcPtr = wasm.xWrap.resultAdapter('*');\n          wasm.xWrap.resultAdapter('sqlite3*', __xRcPtr)(\n            'sqlite3_context*',\n            __xRcPtr,\n          )('sqlite3_stmt*', __xRcPtr)('sqlite3_value*', __xRcPtr)(\n            'sqlite3_vfs*',\n            __xRcPtr,\n          )('void*', __xRcPtr);\n\n          if (0 === wasm.exports.sqlite3_step.length) {\n            wasm.xWrap.doArgcCheck = false;\n            sqlite3.config.warn(\n              'Disabling sqlite3.wasm.xWrap.doArgcCheck due to environmental quirks.',\n            );\n          }\n          for (const e of wasm.bindingSignatures) {\n            capi[e[0]] = wasm.xWrap.apply(null, e);\n          }\n          for (const e of wasm.bindingSignatures.wasmInternal) {\n            util[e[0]] = wasm.xWrap.apply(null, e);\n          }\n\n          const fI64Disabled = function (fname) {\n            return () =>\n              toss(\n                fname + '() is unavailable due to lack',\n                'of BigInt support in this build.',\n              );\n          };\n          for (const e of wasm.bindingSignatures.int64) {\n            capi[e[0]] = wasm.bigIntEnabled\n              ? wasm.xWrap.apply(null, e)\n              : fI64Disabled(e[0]);\n          }\n\n          delete wasm.bindingSignatures;\n\n          if (wasm.exports.sqlite3__wasm_db_error) {\n            const __db_err = wasm.xWrap(\n              'sqlite3__wasm_db_error',\n              'int',\n              'sqlite3*',\n              'int',\n              'string',\n            );\n\n            util.sqlite3__wasm_db_error = function (pDb, resultCode, message) {\n              if (resultCode instanceof sqlite3.WasmAllocError) {\n                resultCode = capi.SQLITE_NOMEM;\n                message = 0;\n              } else if (resultCode instanceof Error) {\n                message = message || '' + resultCode;\n                resultCode = resultCode.resultCode || capi.SQLITE_ERROR;\n              }\n              return pDb ? __db_err(pDb, resultCode, message) : resultCode;\n            };\n          } else {\n            util.sqlite3__wasm_db_error = function (pDb, errCode, msg) {\n              console.warn(\n                'sqlite3__wasm_db_error() is not exported.',\n                arguments,\n              );\n              return errCode;\n            };\n          }\n        }\n\n        {\n          const cJson = wasm.xCall('sqlite3__wasm_enum_json');\n          if (!cJson) {\n            toss(\n              \"Maintenance required: increase sqlite3__wasm_enum_json()'s\",\n              'static buffer size!',\n            );\n          }\n\n          wasm.ctype = JSON.parse(wasm.cstrToJs(cJson));\n\n          const defineGroups = [\n            'access',\n            'authorizer',\n            'blobFinalizers',\n            'changeset',\n            'config',\n            'dataTypes',\n            'dbConfig',\n            'dbStatus',\n            'encodings',\n            'fcntl',\n            'flock',\n            'ioCap',\n            'limits',\n            'openFlags',\n            'prepareFlags',\n            'resultCodes',\n            'sqlite3Status',\n            'stmtStatus',\n            'syncFlags',\n            'trace',\n            'txnState',\n            'udfFlags',\n            'version',\n          ];\n          if (wasm.bigIntEnabled) {\n            defineGroups.push('serialize', 'session', 'vtab');\n          }\n          for (const t of defineGroups) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              capi[e[0]] = e[1];\n            }\n          }\n          if (!wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot resolve exported function',\n              'entry SQLITE_WASM_DEALLOC (==' + capi.SQLITE_WASM_DEALLOC + ').',\n            );\n          }\n          const __rcMap = Object.create(null);\n          for (const t of ['resultCodes']) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              __rcMap[e[1]] = e[0];\n            }\n          }\n\n          capi.sqlite3_js_rc_str = (rc) => __rcMap[rc];\n\n          const notThese = Object.assign(Object.create(null), {\n            WasmTestStruct: true,\n\n            sqlite3_kvvfs_methods: !util.isUIThread(),\n\n            sqlite3_index_info: !wasm.bigIntEnabled,\n            sqlite3_index_constraint: !wasm.bigIntEnabled,\n            sqlite3_index_orderby: !wasm.bigIntEnabled,\n            sqlite3_index_constraint_usage: !wasm.bigIntEnabled,\n          });\n          for (const s of wasm.ctype.structs) {\n            if (!notThese[s.name]) {\n              capi[s.name] = sqlite3.StructBinder(s);\n            }\n          }\n          if (capi.sqlite3_index_info) {\n            for (const k of [\n              'sqlite3_index_constraint',\n              'sqlite3_index_orderby',\n              'sqlite3_index_constraint_usage',\n            ]) {\n              capi.sqlite3_index_info[k] = capi[k];\n              delete capi[k];\n            }\n            capi.sqlite3_vtab_config = wasm.xWrap(\n              'sqlite3__wasm_vtab_config',\n              'int',\n              ['sqlite3*', 'int', 'int'],\n            );\n          }\n        }\n\n        const __dbArgcMismatch = (pDb, f, n) => {\n          return util.sqlite3__wasm_db_error(\n            pDb,\n            capi.SQLITE_MISUSE,\n            f + '() requires ' + n + ' argument' + (1 === n ? '' : 's') + '.',\n          );\n        };\n\n        const __errEncoding = (pDb) => {\n          return util.sqlite3__wasm_db_error(\n            pDb,\n            capi.SQLITE_FORMAT,\n            'SQLITE_UTF8 is the only supported encoding.',\n          );\n        };\n\n        const __argPDb = (pDb) => wasm.xWrap.argAdapter('sqlite3*')(pDb);\n        const __argStr = (str) => (wasm.isPtr(str) ? wasm.cstrToJs(str) : str);\n        const __dbCleanupMap = function (pDb, mode) {\n          pDb = __argPDb(pDb);\n          let m = this.dbMap.get(pDb);\n          if (!mode) {\n            this.dbMap.delete(pDb);\n            return m;\n          } else if (!m && mode > 0) {\n            this.dbMap.set(pDb, (m = Object.create(null)));\n          }\n          return m;\n        }.bind(\n          Object.assign(Object.create(null), {\n            dbMap: new Map(),\n          }),\n        );\n\n        __dbCleanupMap.addCollation = function (pDb, name) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.collation) m.collation = new Set();\n          m.collation.add(__argStr(name).toLowerCase());\n        };\n\n        __dbCleanupMap._addUDF = function (pDb, name, arity, map) {\n          name = __argStr(name).toLowerCase();\n          let u = map.get(name);\n          if (!u) map.set(name, (u = new Set()));\n          u.add(arity < 0 ? -1 : arity);\n        };\n\n        __dbCleanupMap.addFunction = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.udf) m.udf = new Map();\n          this._addUDF(pDb, name, arity, m.udf);\n        };\n\n        __dbCleanupMap.addWindowFunc = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.wudf) m.wudf = new Map();\n          this._addUDF(pDb, name, arity, m.wudf);\n        };\n\n        __dbCleanupMap.cleanup = function (pDb) {\n          pDb = __argPDb(pDb);\n\n          const closeArgs = [pDb];\n          for (const name of [\n            'sqlite3_busy_handler',\n            'sqlite3_commit_hook',\n            'sqlite3_preupdate_hook',\n            'sqlite3_progress_handler',\n            'sqlite3_rollback_hook',\n            'sqlite3_set_authorizer',\n            'sqlite3_trace_v2',\n            'sqlite3_update_hook',\n          ]) {\n            const x = wasm.exports[name];\n            closeArgs.length = x.length;\n            try {\n              capi[name](...closeArgs);\n            } catch (e) {\n              console.warn(\n                'close-time call of',\n                name + '(',\n                closeArgs,\n                ') threw:',\n                e,\n              );\n            }\n          }\n          const m = __dbCleanupMap(pDb, 0);\n          if (!m) return;\n          if (m.collation) {\n            for (const name of m.collation) {\n              try {\n                capi.sqlite3_create_collation_v2(\n                  pDb,\n                  name,\n                  capi.SQLITE_UTF8,\n                  0,\n                  0,\n                  0,\n                );\n              } catch (e) {}\n            }\n            delete m.collation;\n          }\n          let i;\n          for (i = 0; i < 2; ++i) {\n            const fmap = i ? m.wudf : m.udf;\n            if (!fmap) continue;\n            const func = i\n              ? capi.sqlite3_create_window_function\n              : capi.sqlite3_create_function_v2;\n            for (const e of fmap) {\n              const name = e[0],\n                arities = e[1];\n              const fargs = [pDb, name, 0, capi.SQLITE_UTF8, 0, 0, 0, 0, 0];\n              if (i) fargs.push(0);\n              for (const arity of arities) {\n                try {\n                  fargs[2] = arity;\n                  func.apply(null, fargs);\n                } catch (e) {}\n              }\n              arities.clear();\n            }\n            fmap.clear();\n          }\n          delete m.udf;\n          delete m.wudf;\n        };\n\n        {\n          const __sqlite3CloseV2 = wasm.xWrap(\n            'sqlite3_close_v2',\n            'int',\n            'sqlite3*',\n          );\n          capi.sqlite3_close_v2 = function (pDb) {\n            if (1 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_close_v2', 1);\n            if (pDb) {\n              try {\n                __dbCleanupMap.cleanup(pDb);\n              } catch (e) {}\n            }\n            return __sqlite3CloseV2(pDb);\n          };\n        }\n\n        if (capi.sqlite3session_table_filter) {\n          const __sqlite3SessionDelete = wasm.xWrap(\n            'sqlite3session_delete',\n            undefined,\n            ['sqlite3_session*'],\n          );\n          capi.sqlite3session_delete = function (pSession) {\n            if (1 !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3session_delete', 1);\n            } else if (pSession) {\n              capi.sqlite3session_table_filter(pSession, 0, 0);\n            }\n            __sqlite3SessionDelete(pSession);\n          };\n        }\n\n        {\n          const contextKey = (argv, argIndex) => {\n            return (\n              'argv[' +\n              argIndex +\n              ']:' +\n              argv[0] +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n          const __sqlite3CreateCollationV2 = wasm.xWrap(\n            'sqlite3_create_collation_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xCompare',\n                signature: 'i(pipip)',\n                contextKey,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                signature: 'v(p)',\n                contextKey,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_collation_v2 = function (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n            xDestroy,\n          ) {\n            if (6 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_create_collation_v2', 6);\n            else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateCollationV2(\n                pDb,\n                zName,\n                eTextRep,\n                pArg,\n                xCompare,\n                xDestroy,\n              );\n              if (0 === rc && xCompare instanceof Function) {\n                __dbCleanupMap.addCollation(pDb, zName);\n              }\n              return rc;\n            } catch (e) {\n              return util.sqlite3__wasm_db_error(pDb, e);\n            }\n          };\n\n          capi.sqlite3_create_collation = (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n          ) => {\n            return 5 === arguments.length\n              ? capi.sqlite3_create_collation_v2(\n                  pDb,\n                  zName,\n                  eTextRep,\n                  pArg,\n                  xCompare,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_collation', 5);\n          };\n        }\n\n        {\n          const contextKey = function (argv, argIndex) {\n            return (\n              argv[0] +\n              ':' +\n              (argv[2] < 0 ? -1 : argv[2]) +\n              ':' +\n              argIndex +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n\n          const __cfProxy = Object.assign(Object.create(null), {\n            xInverseAndStep: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFinalAndValue: {\n              signature: 'v(p)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx) => {\n                  try {\n                    capi.sqlite3_result_js(pCtx, callback(pCtx));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFunc: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    capi.sqlite3_result_js(\n                      pCtx,\n                      callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv)),\n                    );\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xDestroy: {\n              signature: 'v(p)',\n              contextKey,\n\n              callProxy: (callback) => {\n                return (pVoid) => {\n                  try {\n                    callback(pVoid);\n                  } catch (e) {\n                    console.error('UDF xDestroy method threw:', e);\n                  }\n                };\n              },\n            },\n          });\n\n          const __sqlite3CreateFunction = wasm.xWrap(\n            'sqlite3_create_function_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFunc',\n                ...__cfProxy.xFunc,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          const __sqlite3CreateWindowFunction = wasm.xWrap(\n            'sqlite3_create_window_function',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xValue',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xInverse',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_function_v2 = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_function_v2',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xFunc instanceof Function ||\n                  xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addFunction(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_function_v2() setup threw:', e);\n              return util.sqlite3__wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_create_function_v2(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xFunc,\n                  xStep,\n                  xFinal,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_function', f.length);\n          };\n\n          capi.sqlite3_create_window_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_window_function',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateWindowFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xValue instanceof Function ||\n                  xInverse instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addWindowFunc(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_window_function() setup threw:', e);\n              return util.sqlite3__wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function_v2.udfSetResult =\n            capi.sqlite3_create_function.udfSetResult =\n            capi.sqlite3_create_window_function.udfSetResult =\n              capi.sqlite3_result_js;\n\n          capi.sqlite3_create_function_v2.udfConvertArgs =\n            capi.sqlite3_create_function.udfConvertArgs =\n            capi.sqlite3_create_window_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n\n          capi.sqlite3_create_function_v2.udfSetError =\n            capi.sqlite3_create_function.udfSetError =\n            capi.sqlite3_create_window_function.udfSetError =\n              capi.sqlite3_result_error_js;\n        }\n\n        {\n          const __flexiString = (v, n) => {\n            if ('string' === typeof v) {\n              n = -1;\n            } else if (util.isSQLableTypedArray(v)) {\n              n = v.byteLength;\n              v = util.typedArrayToString(\n                v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n              );\n            } else if (Array.isArray(v)) {\n              v = v.join('');\n              n = -1;\n            }\n            return [v, n];\n          };\n\n          const __prepare = {\n            basic: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n\n            full: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              '*',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n          };\n\n          capi.sqlite3_prepare_v3 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            prepFlags,\n            ppStmt,\n            pzTail,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3_prepare_v3', f.length);\n            }\n            const [xSql, xSqlLen] = __flexiString(sql, sqlLen);\n            switch (typeof xSql) {\n              case 'string':\n                return __prepare.basic(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  null,\n                );\n              case 'number':\n                return __prepare.full(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  pzTail,\n                );\n              default:\n                return util.sqlite3__wasm_db_error(\n                  pDb,\n                  capi.SQLITE_MISUSE,\n                  'Invalid SQL argument type for sqlite3_prepare_v2/v3().',\n                );\n            }\n          };\n\n          capi.sqlite3_prepare_v2 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            ppStmt,\n            pzTail,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_prepare_v3(pDb, sql, sqlLen, 0, ppStmt, pzTail)\n              : __dbArgcMismatch(pDb, 'sqlite3_prepare_v2', f.length);\n          };\n        }\n\n        {\n          const __bindText = wasm.xWrap('sqlite3_bind_text', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            'string',\n            'int',\n            '*',\n          ]);\n          const __bindBlob = wasm.xWrap('sqlite3_bind_blob', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'int',\n            '*',\n          ]);\n\n          capi.sqlite3_bind_text = function f(\n            pStmt,\n            iCol,\n            text,\n            nText,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_text',\n                f.length,\n              );\n            } else if (wasm.isPtr(text) || null === text) {\n              return __bindText(pStmt, iCol, text, nText, xDestroy);\n            } else if (text instanceof ArrayBuffer) {\n              text = new Uint8Array(text);\n            } else if (Array.isArray(pMem)) {\n              text = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isSQLableTypedArray(text)) {\n                p = wasm.allocFromTypedArray(text);\n                n = text.byteLength;\n              } else if ('string' === typeof text) {\n                [p, n] = wasm.allocCString(text);\n              } else {\n                return util.sqlite3__wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_text().',\n                );\n              }\n              return __bindText(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3__wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n\n          capi.sqlite3_bind_blob = function f(\n            pStmt,\n            iCol,\n            pMem,\n            nMem,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_blob',\n                f.length,\n              );\n            } else if (wasm.isPtr(pMem) || null === pMem) {\n              return __bindBlob(pStmt, iCol, pMem, nMem, xDestroy);\n            } else if (pMem instanceof ArrayBuffer) {\n              pMem = new Uint8Array(pMem);\n            } else if (Array.isArray(pMem)) {\n              pMem = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isBindableTypedArray(pMem)) {\n                p = wasm.allocFromTypedArray(pMem);\n                n = nMem >= 0 ? nMem : pMem.byteLength;\n              } else if ('string' === typeof pMem) {\n                [p, n] = wasm.allocCString(pMem);\n              } else {\n                return util.sqlite3__wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_blob().',\n                );\n              }\n              return __bindBlob(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3__wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n        }\n\n        {\n          capi.sqlite3_config = function (op, ...args) {\n            if (arguments.length < 2) return capi.SQLITE_MISUSE;\n            switch (op) {\n              case capi.SQLITE_CONFIG_COVERING_INDEX_SCAN:\n              case capi.SQLITE_CONFIG_MEMSTATUS:\n              case capi.SQLITE_CONFIG_SMALL_MALLOC:\n              case capi.SQLITE_CONFIG_SORTERREF_SIZE:\n              case capi.SQLITE_CONFIG_STMTJRNL_SPILL:\n              case capi.SQLITE_CONFIG_URI:\n                return wasm.exports.sqlite3__wasm_config_i(op, args[0]);\n              case capi.SQLITE_CONFIG_LOOKASIDE:\n                return wasm.exports.sqlite3__wasm_config_ii(\n                  op,\n                  args[0],\n                  args[1],\n                );\n              case capi.SQLITE_CONFIG_MEMDB_MAXSIZE:\n                return wasm.exports.sqlite3__wasm_config_j(op, args[0]);\n              case capi.SQLITE_CONFIG_GETMALLOC:\n              case capi.SQLITE_CONFIG_GETMUTEX:\n              case capi.SQLITE_CONFIG_GETPCACHE2:\n              case capi.SQLITE_CONFIG_GETPCACHE:\n              case capi.SQLITE_CONFIG_HEAP:\n              case capi.SQLITE_CONFIG_LOG:\n              case capi.SQLITE_CONFIG_MALLOC:\n              case capi.SQLITE_CONFIG_MMAP_SIZE:\n              case capi.SQLITE_CONFIG_MULTITHREAD:\n              case capi.SQLITE_CONFIG_MUTEX:\n              case capi.SQLITE_CONFIG_PAGECACHE:\n              case capi.SQLITE_CONFIG_PCACHE2:\n              case capi.SQLITE_CONFIG_PCACHE:\n              case capi.SQLITE_CONFIG_PCACHE_HDRSZ:\n              case capi.SQLITE_CONFIG_PMASZ:\n              case capi.SQLITE_CONFIG_SERIALIZED:\n              case capi.SQLITE_CONFIG_SINGLETHREAD:\n              case capi.SQLITE_CONFIG_SQLLOG:\n              case capi.SQLITE_CONFIG_WIN32_HEAPSIZE:\n              default:\n                return capi.SQLITE_NOTFOUND;\n            }\n          };\n        }\n\n        {\n          const __autoExtFptr = new Set();\n\n          capi.sqlite3_auto_extension = function (fPtr) {\n            if (fPtr instanceof Function) {\n              fPtr = wasm.installFunction('i(ppp)', fPtr);\n            } else if (1 !== arguments.length || !wasm.isPtr(fPtr)) {\n              return capi.SQLITE_MISUSE;\n            }\n            const rc = wasm.exports.sqlite3_auto_extension(fPtr);\n            if (fPtr !== arguments[0]) {\n              if (0 === rc) __autoExtFptr.add(fPtr);\n              else wasm.uninstallFunction(fPtr);\n            }\n            return rc;\n          };\n\n          capi.sqlite3_cancel_auto_extension = function (fPtr) {\n            if (!fPtr || 1 !== arguments.length || !wasm.isPtr(fPtr)) return 0;\n            return wasm.exports.sqlite3_cancel_auto_extension(fPtr);\n          };\n\n          capi.sqlite3_reset_auto_extension = function () {\n            wasm.exports.sqlite3_reset_auto_extension();\n            for (const fp of __autoExtFptr) wasm.uninstallFunction(fp);\n            __autoExtFptr.clear();\n          };\n        }\n\n        const pKvvfs = capi.sqlite3_vfs_find('kvvfs');\n        if (pKvvfs) {\n          if (util.isUIThread()) {\n            const kvvfsMethods = new capi.sqlite3_kvvfs_methods(\n              wasm.exports.sqlite3__wasm_kvvfs_methods(),\n            );\n            delete capi.sqlite3_kvvfs_methods;\n\n            const kvvfsMakeKey =\n                wasm.exports.sqlite3__wasm_kvvfsMakeKeyOnPstack,\n              pstack = wasm.pstack;\n\n            const kvvfsStorage = (zClass) =>\n              115 === wasm.peek(zClass) ? sessionStorage : localStorage;\n\n            const kvvfsImpls = {\n              xRead: (zClass, zKey, zBuf, nBuf) => {\n                const stack = pstack.pointer,\n                  astack = wasm.scopedAllocPush();\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return -3;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  const jV = kvvfsStorage(zClass).getItem(jKey);\n                  if (!jV) return -1;\n                  const nV = jV.length;\n                  if (nBuf <= 0) return nV;\n                  else if (1 === nBuf) {\n                    wasm.poke(zBuf, 0);\n                    return nV;\n                  }\n                  const zV = wasm.scopedAllocCString(jV);\n                  if (nBuf > nV + 1) nBuf = nV + 1;\n                  wasm.heap8u().copyWithin(zBuf, zV, zV + nBuf - 1);\n                  wasm.poke(zBuf + nBuf - 1, 0);\n                  return nBuf - 1;\n                } catch (e) {\n                  console.error('kvstorageRead()', e);\n                  return -2;\n                } finally {\n                  pstack.restore(stack);\n                  wasm.scopedAllocPop(astack);\n                }\n              },\n              xWrite: (zClass, zKey, zData) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  kvvfsStorage(zClass).setItem(jKey, wasm.cstrToJs(zData));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageWrite()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n              xDelete: (zClass, zKey) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  kvvfsStorage(zClass).removeItem(wasm.cstrToJs(zXKey));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageDelete()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n            };\n            for (const k of Object.keys(kvvfsImpls)) {\n              kvvfsMethods[kvvfsMethods.memberKey(k)] = wasm.installFunction(\n                kvvfsMethods.memberSignature(k),\n                kvvfsImpls[k],\n              );\n            }\n          } else {\n            capi.sqlite3_vfs_unregister(pKvvfs);\n          }\n        }\n\n        wasm.xWrap.FuncPtrAdapter.warnOnUse = true;\n\n        const StructBinder = sqlite3.StructBinder;\n        const installMethod = function callee(\n          tgt,\n          name,\n          func,\n          applyArgcCheck = callee.installMethodArgcCheck,\n        ) {\n          if (!(tgt instanceof StructBinder.StructType)) {\n            toss('Usage error: target object is-not-a StructType.');\n          } else if (!(func instanceof Function) && !wasm.isPtr(func)) {\n            toss('Usage errror: expecting a Function or WASM pointer to one.');\n          }\n          if (1 === arguments.length) {\n            return (n, f) => callee(tgt, n, f, applyArgcCheck);\n          }\n          if (!callee.argcProxy) {\n            callee.argcProxy = function (tgt, funcName, func, sig) {\n              return function (...args) {\n                if (func.length !== arguments.length) {\n                  toss(\n                    'Argument mismatch for',\n                    tgt.structInfo.name +\n                      '::' +\n                      funcName +\n                      ': Native signature is:',\n                    sig,\n                  );\n                }\n                return func.apply(this, args);\n              };\n            };\n\n            callee.removeFuncList = function () {\n              if (this.ondispose.__removeFuncList) {\n                this.ondispose.__removeFuncList.forEach((v, ndx) => {\n                  if ('number' === typeof v) {\n                    try {\n                      wasm.uninstallFunction(v);\n                    } catch (e) {}\n                  }\n                });\n                delete this.ondispose.__removeFuncList;\n              }\n            };\n          }\n          const sigN = tgt.memberSignature(name);\n          if (sigN.length < 2) {\n            toss(\n              'Member',\n              name,\n              'does not have a function pointer signature:',\n              sigN,\n            );\n          }\n          const memKey = tgt.memberKey(name);\n          const fProxy =\n            applyArgcCheck && !wasm.isPtr(func)\n              ? callee.argcProxy(tgt, memKey, func, sigN)\n              : func;\n          if (wasm.isPtr(fProxy)) {\n            if (fProxy && !wasm.functionEntry(fProxy)) {\n              toss('Pointer', fProxy, 'is not a WASM function table entry.');\n            }\n            tgt[memKey] = fProxy;\n          } else {\n            const pFunc = wasm.installFunction(\n              fProxy,\n              tgt.memberSignature(name, true),\n            );\n            tgt[memKey] = pFunc;\n            if (!tgt.ondispose || !tgt.ondispose.__removeFuncList) {\n              tgt.addOnDispose(\n                'ondispose.__removeFuncList handler',\n                callee.removeFuncList,\n              );\n              tgt.ondispose.__removeFuncList = [];\n            }\n            tgt.ondispose.__removeFuncList.push(memKey, pFunc);\n          }\n          return (n, f) => callee(tgt, n, f, applyArgcCheck);\n        };\n        installMethod.installMethodArgcCheck = false;\n\n        const installMethods = function (\n          structInstance,\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          const seen = new Map();\n          for (const k of Object.keys(methods)) {\n            const m = methods[k];\n            const prior = seen.get(m);\n            if (prior) {\n              const mkey = structInstance.memberKey(k);\n              structInstance[mkey] =\n                structInstance[structInstance.memberKey(prior)];\n            } else {\n              installMethod(structInstance, k, m, applyArgcCheck);\n              seen.set(m, k);\n            }\n          }\n          return structInstance;\n        };\n\n        StructBinder.StructType.prototype.installMethod = function callee(\n          name,\n          func,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return arguments.length < 3 && name && 'object' === typeof name\n            ? installMethods(this, ...arguments)\n            : installMethod(this, ...arguments);\n        };\n\n        StructBinder.StructType.prototype.installMethods = function (\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return installMethods(this, methods, applyArgcCheck);\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.version = {\n          libVersion: '3.46.0',\n          libVersionNumber: 3046000,\n          sourceId:\n            '2024-05-23 13:25:27 96c92aba00c8375bc32fafcdf12429c58bd8aabfcadab6683e35bbb9cdebf19e',\n          downloadVersion: 3460000,\n        };\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = (...args) => {\n          throw new sqlite3.SQLite3Error(...args);\n        };\n\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n\n        const __ptrMap = new WeakMap();\n\n        const __stmtMap = new WeakMap();\n\n        const getOwnOption = (opts, p, dflt) => {\n          const d = Object.getOwnPropertyDescriptor(opts, p);\n          return d ? d.value : dflt;\n        };\n\n        const checkSqlite3Rc = function (dbPtr, sqliteResultCode) {\n          if (sqliteResultCode) {\n            if (dbPtr instanceof DB) dbPtr = dbPtr.pointer;\n            toss3(\n              sqliteResultCode,\n              'sqlite3 result code',\n              sqliteResultCode + ':',\n              dbPtr\n                ? capi.sqlite3_errmsg(dbPtr)\n                : capi.sqlite3_errstr(sqliteResultCode),\n            );\n          }\n          return arguments[0];\n        };\n\n        const __dbTraceToConsole = wasm.installFunction(\n          'i(ippp)',\n          function (t, c, p, x) {\n            if (capi.SQLITE_TRACE_STMT === t) {\n              console.log(\n                'SQL TRACE #' + ++this.counter + ' via sqlite3@' + c + ':',\n                wasm.cstrToJs(x),\n              );\n            }\n          }.bind({ counter: 0 }),\n        );\n\n        const __vfsPostOpenSql = Object.create(null);\n\n        const dbCtorHelper = function ctor(...args) {\n          if (!ctor._name2vfs) {\n            ctor._name2vfs = Object.create(null);\n            const isWorkerThread =\n              'function' === typeof importScripts\n                ? (n) =>\n                    toss3(\n                      'The VFS for',\n                      n,\n                      'is only available in the main window thread.',\n                    )\n                : false;\n            ctor._name2vfs[':localStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'local'),\n            };\n            ctor._name2vfs[':sessionStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'session'),\n            };\n          }\n          const opt = ctor.normalizeArgs(...args);\n          let fn = opt.filename,\n            vfsName = opt.vfs,\n            flagsStr = opt.flags;\n          if (\n            ('string' !== typeof fn && 'number' !== typeof fn) ||\n            'string' !== typeof flagsStr ||\n            (vfsName &&\n              'string' !== typeof vfsName &&\n              'number' !== typeof vfsName)\n          ) {\n            sqlite3.config.error('Invalid DB ctor args', opt, arguments);\n            toss3('Invalid arguments for DB constructor.');\n          }\n          let fnJs = 'number' === typeof fn ? wasm.cstrToJs(fn) : fn;\n          const vfsCheck = ctor._name2vfs[fnJs];\n          if (vfsCheck) {\n            vfsName = vfsCheck.vfs;\n            fn = fnJs = vfsCheck.filename(fnJs);\n          }\n          let pDb,\n            oflags = 0;\n          if (flagsStr.indexOf('c') >= 0) {\n            oflags |= capi.SQLITE_OPEN_CREATE | capi.SQLITE_OPEN_READWRITE;\n          }\n          if (flagsStr.indexOf('w') >= 0) oflags |= capi.SQLITE_OPEN_READWRITE;\n          if (0 === oflags) oflags |= capi.SQLITE_OPEN_READONLY;\n          oflags |= capi.SQLITE_OPEN_EXRESCODE;\n          const stack = wasm.pstack.pointer;\n          try {\n            const pPtr = wasm.pstack.allocPtr();\n            let rc = capi.sqlite3_open_v2(fn, pPtr, oflags, vfsName || 0);\n            pDb = wasm.peekPtr(pPtr);\n            checkSqlite3Rc(pDb, rc);\n            capi.sqlite3_extended_result_codes(pDb, 1);\n            if (flagsStr.indexOf('t') >= 0) {\n              capi.sqlite3_trace_v2(\n                pDb,\n                capi.SQLITE_TRACE_STMT,\n                __dbTraceToConsole,\n                pDb,\n              );\n            }\n          } catch (e) {\n            if (pDb) capi.sqlite3_close_v2(pDb);\n            throw e;\n          } finally {\n            wasm.pstack.restore(stack);\n          }\n          this.filename = fnJs;\n          __ptrMap.set(this, pDb);\n          __stmtMap.set(this, Object.create(null));\n          try {\n            const pVfs =\n              capi.sqlite3_js_db_vfs(pDb) ||\n              toss3('Internal error: cannot get VFS for new db handle.');\n            const postInitSql = __vfsPostOpenSql[pVfs];\n            if (postInitSql) {\n              if (postInitSql instanceof Function) {\n                postInitSql(this, sqlite3);\n              } else {\n                checkSqlite3Rc(\n                  pDb,\n                  capi.sqlite3_exec(pDb, postInitSql, 0, 0, 0),\n                );\n              }\n            }\n          } catch (e) {\n            this.close();\n            throw e;\n          }\n        };\n\n        dbCtorHelper.setVfsPostOpenSql = function (pVfs, sql) {\n          __vfsPostOpenSql[pVfs] = sql;\n        };\n\n        dbCtorHelper.normalizeArgs = function (\n          filename = ':memory:',\n          flags = 'c',\n          vfs = null,\n        ) {\n          const arg = {};\n          if (\n            1 === arguments.length &&\n            arguments[0] &&\n            'object' === typeof arguments[0]\n          ) {\n            Object.assign(arg, arguments[0]);\n            if (undefined === arg.flags) arg.flags = 'c';\n            if (undefined === arg.vfs) arg.vfs = null;\n            if (undefined === arg.filename) arg.filename = ':memory:';\n          } else {\n            arg.filename = filename;\n            arg.flags = flags;\n            arg.vfs = vfs;\n          }\n          return arg;\n        };\n\n        const DB = function (...args) {\n          dbCtorHelper.apply(this, args);\n        };\n        DB.dbCtorHelper = dbCtorHelper;\n\n        const BindTypes = {\n          null: 1,\n          number: 2,\n          string: 3,\n          boolean: 4,\n          blob: 5,\n        };\n        BindTypes['undefined'] == BindTypes.null;\n        if (wasm.bigIntEnabled) {\n          BindTypes.bigint = BindTypes.number;\n        }\n\n        const Stmt = function () {\n          if (BindTypes !== arguments[2]) {\n            toss3(\n              capi.SQLITE_MISUSE,\n              'Do not call the Stmt constructor directly. Use DB.prepare().',\n            );\n          }\n          this.db = arguments[0];\n          __ptrMap.set(this, arguments[1]);\n          this.parameterCount = capi.sqlite3_bind_parameter_count(this.pointer);\n        };\n\n        const affirmDbOpen = function (db) {\n          if (!db.pointer) toss3('DB has been closed.');\n          return db;\n        };\n\n        const affirmColIndex = function (stmt, ndx) {\n          if (ndx !== (ndx | 0) || ndx < 0 || ndx >= stmt.columnCount) {\n            toss3('Column index', ndx, 'is out of range.');\n          }\n          return stmt;\n        };\n\n        const parseExecArgs = function (db, args) {\n          const out = Object.create(null);\n          out.opt = Object.create(null);\n          switch (args.length) {\n            case 1:\n              if (\n                'string' === typeof args[0] ||\n                util.isSQLableTypedArray(args[0])\n              ) {\n                out.sql = args[0];\n              } else if (Array.isArray(args[0])) {\n                out.sql = args[0];\n              } else if (args[0] && 'object' === typeof args[0]) {\n                out.opt = args[0];\n                out.sql = out.opt.sql;\n              }\n              break;\n            case 2:\n              out.sql = args[0];\n              out.opt = args[1];\n              break;\n            default:\n              toss3('Invalid argument count for exec().');\n          }\n          out.sql = util.flexibleString(out.sql);\n          if ('string' !== typeof out.sql) {\n            toss3('Missing SQL argument or unsupported SQL value type.');\n          }\n          const opt = out.opt;\n          switch (opt.returnValue) {\n            case 'resultRows':\n              if (!opt.resultRows) opt.resultRows = [];\n              out.returnVal = () => opt.resultRows;\n              break;\n            case 'saveSql':\n              if (!opt.saveSql) opt.saveSql = [];\n              out.returnVal = () => opt.saveSql;\n              break;\n            case undefined:\n            case 'this':\n              out.returnVal = () => db;\n              break;\n            default:\n              toss3('Invalid returnValue value:', opt.returnValue);\n          }\n          if (!opt.callback && !opt.returnValue && undefined !== opt.rowMode) {\n            if (!opt.resultRows) opt.resultRows = [];\n            out.returnVal = () => opt.resultRows;\n          }\n          if (opt.callback || opt.resultRows) {\n            switch (undefined === opt.rowMode ? 'array' : opt.rowMode) {\n              case 'object':\n                out.cbArg = (stmt, cache) => {\n                  if (!cache.columnNames)\n                    cache.columnNames = stmt.getColumnNames([]);\n\n                  const row = stmt.get([]);\n                  const rv = Object.create(null);\n                  for (const i in cache.columnNames)\n                    rv[cache.columnNames[i]] = row[i];\n                  return rv;\n                };\n                break;\n              case 'array':\n                out.cbArg = (stmt) => stmt.get([]);\n                break;\n              case 'stmt':\n                if (Array.isArray(opt.resultRows)) {\n                  toss3(\n                    'exec(): invalid rowMode for a resultRows array: must',\n                    \"be one of 'array', 'object',\",\n                    'a result column number, or column name reference.',\n                  );\n                }\n                out.cbArg = (stmt) => stmt;\n                break;\n              default:\n                if (util.isInt32(opt.rowMode)) {\n                  out.cbArg = (stmt) => stmt.get(opt.rowMode);\n                  break;\n                } else if (\n                  'string' === typeof opt.rowMode &&\n                  opt.rowMode.length > 1 &&\n                  '$' === opt.rowMode[0]\n                ) {\n                  const $colName = opt.rowMode.substr(1);\n                  out.cbArg = (stmt) => {\n                    const rc = stmt.get(Object.create(null))[$colName];\n                    return undefined === rc\n                      ? toss3(\n                          capi.SQLITE_NOTFOUND,\n                          'exec(): unknown result column:',\n                          $colName,\n                        )\n                      : rc;\n                  };\n                  break;\n                }\n                toss3('Invalid rowMode:', opt.rowMode);\n            }\n          }\n          return out;\n        };\n\n        const __selectFirstRow = (db, sql, bind, ...getArgs) => {\n          const stmt = db.prepare(sql);\n          try {\n            const rc = stmt.bind(bind).step()\n              ? stmt.get(...getArgs)\n              : undefined;\n            stmt.reset();\n            return rc;\n          } finally {\n            stmt.finalize();\n          }\n        };\n\n        const __selectAll = (db, sql, bind, rowMode) =>\n          db.exec({\n            sql,\n            bind,\n            rowMode,\n            returnValue: 'resultRows',\n          });\n\n        DB.checkRc = (db, resultCode) => checkSqlite3Rc(db, resultCode);\n\n        DB.prototype = {\n          isOpen: function () {\n            return !!this.pointer;\n          },\n\n          affirmOpen: function () {\n            return affirmDbOpen(this);\n          },\n\n          close: function () {\n            if (this.pointer) {\n              if (this.onclose && this.onclose.before instanceof Function) {\n                try {\n                  this.onclose.before(this);\n                } catch (e) {}\n              }\n              const pDb = this.pointer;\n              Object.keys(__stmtMap.get(this)).forEach((k, s) => {\n                if (s && s.pointer) {\n                  try {\n                    s.finalize();\n                  } catch (e) {}\n                }\n              });\n              __ptrMap.delete(this);\n              __stmtMap.delete(this);\n              capi.sqlite3_close_v2(pDb);\n              if (this.onclose && this.onclose.after instanceof Function) {\n                try {\n                  this.onclose.after(this);\n                } catch (e) {}\n              }\n              delete this.filename;\n            }\n          },\n\n          changes: function (total = false, sixtyFour = false) {\n            const p = affirmDbOpen(this).pointer;\n            if (total) {\n              return sixtyFour\n                ? capi.sqlite3_total_changes64(p)\n                : capi.sqlite3_total_changes(p);\n            } else {\n              return sixtyFour\n                ? capi.sqlite3_changes64(p)\n                : capi.sqlite3_changes(p);\n            }\n          },\n\n          dbFilename: function (dbName = 'main') {\n            return capi.sqlite3_db_filename(affirmDbOpen(this).pointer, dbName);\n          },\n\n          dbName: function (dbNumber = 0) {\n            return capi.sqlite3_db_name(affirmDbOpen(this).pointer, dbNumber);\n          },\n\n          dbVfsName: function (dbName = 0) {\n            let rc;\n            const pVfs = capi.sqlite3_js_db_vfs(\n              affirmDbOpen(this).pointer,\n              dbName,\n            );\n            if (pVfs) {\n              const v = new capi.sqlite3_vfs(pVfs);\n              try {\n                rc = wasm.cstrToJs(v.$zName);\n              } finally {\n                v.dispose();\n              }\n            }\n            return rc;\n          },\n\n          prepare: function (sql) {\n            affirmDbOpen(this);\n            const stack = wasm.pstack.pointer;\n            let ppStmt, pStmt;\n            try {\n              ppStmt = wasm.pstack.alloc(8);\n              DB.checkRc(\n                this,\n                capi.sqlite3_prepare_v2(this.pointer, sql, -1, ppStmt, null),\n              );\n              pStmt = wasm.peekPtr(ppStmt);\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            if (!pStmt) toss3('Cannot prepare empty SQL.');\n            const stmt = new Stmt(this, pStmt, BindTypes);\n            __stmtMap.get(this)[pStmt] = stmt;\n            return stmt;\n          },\n\n          exec: function () {\n            affirmDbOpen(this);\n            const arg = parseExecArgs(this, arguments);\n            if (!arg.sql) {\n              return toss3('exec() requires an SQL string.');\n            }\n            const opt = arg.opt;\n            const callback = opt.callback;\n            const resultRows = Array.isArray(opt.resultRows)\n              ? opt.resultRows\n              : undefined;\n            let stmt;\n            let bind = opt.bind;\n            let evalFirstResult = !!(\n              arg.cbArg ||\n              opt.columnNames ||\n              resultRows\n            );\n            const stack = wasm.scopedAllocPush();\n            const saveSql = Array.isArray(opt.saveSql)\n              ? opt.saveSql\n              : undefined;\n            try {\n              const isTA = util.isSQLableTypedArray(arg.sql);\n              let sqlByteLen = isTA\n                ? arg.sql.byteLength\n                : wasm.jstrlen(arg.sql);\n              const ppStmt = wasm.scopedAlloc(\n                2 * wasm.ptrSizeof + (sqlByteLen + 1),\n              );\n              const pzTail = ppStmt + wasm.ptrSizeof;\n              let pSql = pzTail + wasm.ptrSizeof;\n              const pSqlEnd = pSql + sqlByteLen;\n              if (isTA) wasm.heap8().set(arg.sql, pSql);\n              else wasm.jstrcpy(arg.sql, wasm.heap8(), pSql, sqlByteLen, false);\n              wasm.poke(pSql + sqlByteLen, 0);\n              while (pSql && wasm.peek(pSql, 'i8')) {\n                wasm.pokePtr([ppStmt, pzTail], 0);\n                DB.checkRc(\n                  this,\n                  capi.sqlite3_prepare_v3(\n                    this.pointer,\n                    pSql,\n                    sqlByteLen,\n                    0,\n                    ppStmt,\n                    pzTail,\n                  ),\n                );\n                const pStmt = wasm.peekPtr(ppStmt);\n                pSql = wasm.peekPtr(pzTail);\n                sqlByteLen = pSqlEnd - pSql;\n                if (!pStmt) continue;\n                if (saveSql) saveSql.push(capi.sqlite3_sql(pStmt).trim());\n                stmt = new Stmt(this, pStmt, BindTypes);\n                if (bind && stmt.parameterCount) {\n                  stmt.bind(bind);\n                  bind = null;\n                }\n                if (evalFirstResult && stmt.columnCount) {\n                  let gotColNames = Array.isArray(opt.columnNames) ? 0 : 1;\n                  evalFirstResult = false;\n                  if (arg.cbArg || resultRows) {\n                    const cbArgCache = Object.create(null);\n                    for (; stmt.step(); stmt._lockedByExec = false) {\n                      if (0 === gotColNames++) {\n                        stmt.getColumnNames(\n                          (cbArgCache.columnNames = opt.columnNames || []),\n                        );\n                      }\n                      stmt._lockedByExec = true;\n                      const row = arg.cbArg(stmt, cbArgCache);\n                      if (resultRows) resultRows.push(row);\n                      if (callback && false === callback.call(opt, row, stmt)) {\n                        break;\n                      }\n                    }\n                    stmt._lockedByExec = false;\n                  }\n                  if (0 === gotColNames) {\n                    stmt.getColumnNames(opt.columnNames);\n                  }\n                } else {\n                  stmt.step();\n                }\n                stmt.reset().finalize();\n                stmt = null;\n              }\n            } finally {\n              wasm.scopedAllocPop(stack);\n              if (stmt) {\n                delete stmt._lockedByExec;\n                stmt.finalize();\n              }\n            }\n            return arg.returnVal();\n          },\n\n          createFunction: function f(name, xFunc, opt) {\n            const isFunc = (f) => f instanceof Function;\n            switch (arguments.length) {\n              case 1:\n                opt = name;\n                name = opt.name;\n                xFunc = opt.xFunc || 0;\n                break;\n              case 2:\n                if (!isFunc(xFunc)) {\n                  opt = xFunc;\n                  xFunc = opt.xFunc || 0;\n                }\n                break;\n              case 3:\n                break;\n              default:\n                break;\n            }\n            if (!opt) opt = {};\n            if ('string' !== typeof name) {\n              toss3('Invalid arguments: missing function name.');\n            }\n            let xStep = opt.xStep || 0;\n            let xFinal = opt.xFinal || 0;\n            const xValue = opt.xValue || 0;\n            const xInverse = opt.xInverse || 0;\n            let isWindow = undefined;\n            if (isFunc(xFunc)) {\n              isWindow = false;\n              if (isFunc(xStep) || isFunc(xFinal)) {\n                toss3('Ambiguous arguments: scalar or aggregate?');\n              }\n              xStep = xFinal = null;\n            } else if (isFunc(xStep)) {\n              if (!isFunc(xFinal)) {\n                toss3('Missing xFinal() callback for aggregate or window UDF.');\n              }\n              xFunc = null;\n            } else if (isFunc(xFinal)) {\n              toss3('Missing xStep() callback for aggregate or window UDF.');\n            } else {\n              toss3('Missing function-type properties.');\n            }\n            if (false === isWindow) {\n              if (isFunc(xValue) || isFunc(xInverse)) {\n                toss3(\n                  'xValue and xInverse are not permitted for non-window UDFs.',\n                );\n              }\n            } else if (isFunc(xValue)) {\n              if (!isFunc(xInverse)) {\n                toss3('xInverse must be provided if xValue is.');\n              }\n              isWindow = true;\n            } else if (isFunc(xInverse)) {\n              toss3('xValue must be provided if xInverse is.');\n            }\n            const pApp = opt.pApp;\n            if (\n              undefined !== pApp &&\n              null !== pApp &&\n              ('number' !== typeof pApp || !util.isInt32(pApp))\n            ) {\n              toss3(\n                'Invalid value for pApp property. Must be a legal WASM pointer value.',\n              );\n            }\n            const xDestroy = opt.xDestroy || 0;\n            if (xDestroy && !isFunc(xDestroy)) {\n              toss3('xDestroy property must be a function.');\n            }\n            let fFlags = 0;\n            if (getOwnOption(opt, 'deterministic'))\n              fFlags |= capi.SQLITE_DETERMINISTIC;\n            if (getOwnOption(opt, 'directOnly'))\n              fFlags |= capi.SQLITE_DIRECTONLY;\n            if (getOwnOption(opt, 'innocuous')) fFlags |= capi.SQLITE_INNOCUOUS;\n            name = name.toLowerCase();\n            const xArity = xFunc || xStep;\n            const arity = getOwnOption(opt, 'arity');\n            const arityArg =\n              'number' === typeof arity\n                ? arity\n                : xArity.length\n                  ? xArity.length - 1\n                  : 0;\n            let rc;\n            if (isWindow) {\n              rc = capi.sqlite3_create_window_function(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n            } else {\n              rc = capi.sqlite3_create_function_v2(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n            }\n            DB.checkRc(this, rc);\n            return this;\n          },\n\n          selectValue: function (sql, bind, asType) {\n            return __selectFirstRow(this, sql, bind, 0, asType);\n          },\n\n          selectValues: function (sql, bind, asType) {\n            const stmt = this.prepare(sql),\n              rc = [];\n            try {\n              stmt.bind(bind);\n              while (stmt.step()) rc.push(stmt.get(0, asType));\n              stmt.reset();\n            } finally {\n              stmt.finalize();\n            }\n            return rc;\n          },\n\n          selectArray: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, []);\n          },\n\n          selectObject: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, {});\n          },\n\n          selectArrays: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'array');\n          },\n\n          selectObjects: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'object');\n          },\n\n          openStatementCount: function () {\n            return this.pointer ? Object.keys(__stmtMap.get(this)).length : 0;\n          },\n\n          transaction: function (callback) {\n            let opener = 'BEGIN';\n            if (arguments.length > 1) {\n              if (/[^a-zA-Z]/.test(arguments[0])) {\n                toss3(\n                  capi.SQLITE_MISUSE,\n                  'Invalid argument for BEGIN qualifier.',\n                );\n              }\n              opener += ' ' + arguments[0];\n              callback = arguments[1];\n            }\n            affirmDbOpen(this).exec(opener);\n            try {\n              const rc = callback(this);\n              this.exec('COMMIT');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK');\n              throw e;\n            }\n          },\n\n          savepoint: function (callback) {\n            affirmDbOpen(this).exec('SAVEPOINT oo1');\n            try {\n              const rc = callback(this);\n              this.exec('RELEASE oo1');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK to SAVEPOINT oo1; RELEASE SAVEPOINT oo1');\n              throw e;\n            }\n          },\n\n          checkRc: function (resultCode) {\n            return checkSqlite3Rc(this, resultCode);\n          },\n        };\n\n        const affirmStmtOpen = function (stmt) {\n          if (!stmt.pointer) toss3('Stmt has been closed.');\n          return stmt;\n        };\n\n        const isSupportedBindType = function (v) {\n          let t = BindTypes[null === v || undefined === v ? 'null' : typeof v];\n          switch (t) {\n            case BindTypes.boolean:\n            case BindTypes.null:\n            case BindTypes.number:\n            case BindTypes.string:\n              return t;\n            case BindTypes.bigint:\n              if (wasm.bigIntEnabled) return t;\n\n            default:\n              return util.isBindableTypedArray(v) ? BindTypes.blob : undefined;\n          }\n        };\n\n        const affirmSupportedBindType = function (v) {\n          return (\n            isSupportedBindType(v) ||\n            toss3('Unsupported bind() argument type:', typeof v)\n          );\n        };\n\n        const affirmParamIndex = function (stmt, key) {\n          const n =\n            'number' === typeof key\n              ? key\n              : capi.sqlite3_bind_parameter_index(stmt.pointer, key);\n          if (0 === n || !util.isInt32(n)) {\n            toss3('Invalid bind() parameter name: ' + key);\n          } else if (n < 1 || n > stmt.parameterCount)\n            toss3('Bind index', key, 'is out of range.');\n          return n;\n        };\n\n        const affirmNotLockedByExec = function (stmt, currentOpName) {\n          if (stmt._lockedByExec) {\n            toss3(\n              'Operation is illegal when statement is locked:',\n              currentOpName,\n            );\n          }\n          return stmt;\n        };\n\n        const bindOne = function f(stmt, ndx, bindType, val) {\n          affirmNotLockedByExec(affirmStmtOpen(stmt), 'bind()');\n          if (!f._) {\n            f._tooBigInt = (v) =>\n              toss3(\n                'BigInt value is too big to store without precision loss:',\n                v,\n              );\n            f._ = {\n              string: function (stmt, ndx, val, asBlob) {\n                const [pStr, n] = wasm.allocCString(val, true);\n                const f = asBlob\n                  ? capi.sqlite3_bind_blob\n                  : capi.sqlite3_bind_text;\n                return f(stmt.pointer, ndx, pStr, n, capi.SQLITE_WASM_DEALLOC);\n              },\n            };\n          }\n          affirmSupportedBindType(val);\n          ndx = affirmParamIndex(stmt, ndx);\n          let rc = 0;\n          switch (\n            null === val || undefined === val ? BindTypes.null : bindType\n          ) {\n            case BindTypes.null:\n              rc = capi.sqlite3_bind_null(stmt.pointer, ndx);\n              break;\n            case BindTypes.string:\n              rc = f._.string(stmt, ndx, val, false);\n              break;\n            case BindTypes.number: {\n              let m;\n              if (util.isInt32(val)) m = capi.sqlite3_bind_int;\n              else if ('bigint' === typeof val) {\n                if (!util.bigIntFits64(val)) {\n                  f._tooBigInt(val);\n                } else if (wasm.bigIntEnabled) {\n                  m = capi.sqlite3_bind_int64;\n                } else if (util.bigIntFitsDouble(val)) {\n                  val = Number(val);\n                  m = capi.sqlite3_bind_double;\n                } else {\n                  f._tooBigInt(val);\n                }\n              } else {\n                val = Number(val);\n                if (wasm.bigIntEnabled && Number.isInteger(val)) {\n                  m = capi.sqlite3_bind_int64;\n                } else {\n                  m = capi.sqlite3_bind_double;\n                }\n              }\n              rc = m(stmt.pointer, ndx, val);\n              break;\n            }\n            case BindTypes.boolean:\n              rc = capi.sqlite3_bind_int(stmt.pointer, ndx, val ? 1 : 0);\n              break;\n            case BindTypes.blob: {\n              if ('string' === typeof val) {\n                rc = f._.string(stmt, ndx, val, true);\n                break;\n              } else if (val instanceof ArrayBuffer) {\n                val = new Uint8Array(val);\n              } else if (!util.isBindableTypedArray(val)) {\n                toss3(\n                  'Binding a value as a blob requires',\n                  'that it be a string, Uint8Array, Int8Array, or ArrayBuffer.',\n                );\n              }\n              const pBlob = wasm.alloc(val.byteLength || 1);\n              wasm.heap8().set(val.byteLength ? val : [0], pBlob);\n              rc = capi.sqlite3_bind_blob(\n                stmt.pointer,\n                ndx,\n                pBlob,\n                val.byteLength,\n                capi.SQLITE_WASM_DEALLOC,\n              );\n              break;\n            }\n            default:\n              sqlite3.config.warn('Unsupported bind() argument type:', val);\n              toss3('Unsupported bind() argument type: ' + typeof val);\n          }\n          if (rc) DB.checkRc(stmt.db.pointer, rc);\n          stmt._mayGet = false;\n          return stmt;\n        };\n\n        Stmt.prototype = {\n          finalize: function () {\n            if (this.pointer) {\n              affirmNotLockedByExec(this, 'finalize()');\n              const rc = capi.sqlite3_finalize(this.pointer);\n              delete __stmtMap.get(this.db)[this.pointer];\n              __ptrMap.delete(this);\n              delete this._mayGet;\n              delete this.parameterCount;\n              delete this._lockedByExec;\n              delete this.db;\n              return rc;\n            }\n          },\n\n          clearBindings: function () {\n            affirmNotLockedByExec(affirmStmtOpen(this), 'clearBindings()');\n            capi.sqlite3_clear_bindings(this.pointer);\n            this._mayGet = false;\n            return this;\n          },\n\n          reset: function (alsoClearBinds) {\n            affirmNotLockedByExec(this, 'reset()');\n            if (alsoClearBinds) this.clearBindings();\n            const rc = capi.sqlite3_reset(affirmStmtOpen(this).pointer);\n            this._mayGet = false;\n            checkSqlite3Rc(this.db, rc);\n            return this;\n          },\n\n          bind: function () {\n            affirmStmtOpen(this);\n            let ndx, arg;\n            switch (arguments.length) {\n              case 1:\n                ndx = 1;\n                arg = arguments[0];\n                break;\n              case 2:\n                ndx = arguments[0];\n                arg = arguments[1];\n                break;\n              default:\n                toss3('Invalid bind() arguments.');\n            }\n            if (undefined === arg) {\n              return this;\n            } else if (!this.parameterCount) {\n              toss3('This statement has no bindable parameters.');\n            }\n            this._mayGet = false;\n            if (null === arg) {\n              return bindOne(this, ndx, BindTypes.null, arg);\n            } else if (Array.isArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an array, an index argument is not permitted.',\n                );\n              }\n              arg.forEach((v, i) =>\n                bindOne(this, i + 1, affirmSupportedBindType(v), v),\n              );\n              return this;\n            } else if (arg instanceof ArrayBuffer) {\n              arg = new Uint8Array(arg);\n            }\n            if ('object' === typeof arg && !util.isBindableTypedArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an object, an index argument is not permitted.',\n                );\n              }\n              Object.keys(arg).forEach((k) =>\n                bindOne(this, k, affirmSupportedBindType(arg[k]), arg[k]),\n              );\n              return this;\n            } else {\n              return bindOne(this, ndx, affirmSupportedBindType(arg), arg);\n            }\n            toss3('Should not reach this point.');\n          },\n\n          bindAsBlob: function (ndx, arg) {\n            affirmStmtOpen(this);\n            if (1 === arguments.length) {\n              arg = ndx;\n              ndx = 1;\n            }\n            const t = affirmSupportedBindType(arg);\n            if (\n              BindTypes.string !== t &&\n              BindTypes.blob !== t &&\n              BindTypes.null !== t\n            ) {\n              toss3('Invalid value type for bindAsBlob()');\n            }\n            return bindOne(this, ndx, BindTypes.blob, arg);\n          },\n\n          step: function () {\n            affirmNotLockedByExec(this, 'step()');\n            const rc = capi.sqlite3_step(affirmStmtOpen(this).pointer);\n            switch (rc) {\n              case capi.SQLITE_DONE:\n                return (this._mayGet = false);\n              case capi.SQLITE_ROW:\n                return (this._mayGet = true);\n              default:\n                this._mayGet = false;\n                sqlite3.config.warn(\n                  'sqlite3_step() rc=',\n                  rc,\n                  capi.sqlite3_js_rc_str(rc),\n                  'SQL =',\n                  capi.sqlite3_sql(this.pointer),\n                );\n                DB.checkRc(this.db.pointer, rc);\n            }\n          },\n\n          stepReset: function () {\n            this.step();\n            return this.reset();\n          },\n\n          stepFinalize: function () {\n            try {\n              const rc = this.step();\n              this.reset();\n              return rc;\n            } finally {\n              try {\n                this.finalize();\n              } catch (e) {}\n            }\n          },\n\n          get: function (ndx, asType) {\n            if (!affirmStmtOpen(this)._mayGet) {\n              toss3('Stmt.step() has not (recently) returned true.');\n            }\n            if (Array.isArray(ndx)) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[i] = this.get(i++);\n              }\n              return ndx;\n            } else if (ndx && 'object' === typeof ndx) {\n              let i = 0;\n              const n = this.columnCount;\n              while (i < n) {\n                ndx[capi.sqlite3_column_name(this.pointer, i)] = this.get(i++);\n              }\n              return ndx;\n            }\n            affirmColIndex(this, ndx);\n            switch (\n              undefined === asType\n                ? capi.sqlite3_column_type(this.pointer, ndx)\n                : asType\n            ) {\n              case capi.SQLITE_NULL:\n                return null;\n              case capi.SQLITE_INTEGER: {\n                if (wasm.bigIntEnabled) {\n                  const rc = capi.sqlite3_column_int64(this.pointer, ndx);\n                  if (\n                    rc >= Number.MIN_SAFE_INTEGER &&\n                    rc <= Number.MAX_SAFE_INTEGER\n                  ) {\n                    return Number(rc).valueOf();\n                  }\n                  return rc;\n                } else {\n                  const rc = capi.sqlite3_column_double(this.pointer, ndx);\n                  if (\n                    rc > Number.MAX_SAFE_INTEGER ||\n                    rc < Number.MIN_SAFE_INTEGER\n                  ) {\n                    toss3(\n                      'Integer is out of range for JS integer range: ' + rc,\n                    );\n                  }\n\n                  return util.isInt32(rc) ? rc | 0 : rc;\n                }\n              }\n              case capi.SQLITE_FLOAT:\n                return capi.sqlite3_column_double(this.pointer, ndx);\n              case capi.SQLITE_TEXT:\n                return capi.sqlite3_column_text(this.pointer, ndx);\n              case capi.SQLITE_BLOB: {\n                const n = capi.sqlite3_column_bytes(this.pointer, ndx),\n                  ptr = capi.sqlite3_column_blob(this.pointer, ndx),\n                  rc = new Uint8Array(n);\n\n                if (n) rc.set(wasm.heap8u().slice(ptr, ptr + n), 0);\n\n                if (n && this.db._blobXfer instanceof Array) {\n                  this.db._blobXfer.push(rc.buffer);\n                }\n                return rc;\n              }\n              default:\n                toss3(\n                  \"Don't know how to translate\",\n                  'type of result column #' + ndx + '.',\n                );\n            }\n            toss3('Not reached.');\n          },\n\n          getInt: function (ndx) {\n            return this.get(ndx, capi.SQLITE_INTEGER);\n          },\n\n          getFloat: function (ndx) {\n            return this.get(ndx, capi.SQLITE_FLOAT);\n          },\n\n          getString: function (ndx) {\n            return this.get(ndx, capi.SQLITE_TEXT);\n          },\n\n          getBlob: function (ndx) {\n            return this.get(ndx, capi.SQLITE_BLOB);\n          },\n\n          getJSON: function (ndx) {\n            const s = this.get(ndx, capi.SQLITE_STRING);\n            return null === s ? s : JSON.parse(s);\n          },\n\n          getColumnName: function (ndx) {\n            return capi.sqlite3_column_name(\n              affirmColIndex(affirmStmtOpen(this), ndx).pointer,\n              ndx,\n            );\n          },\n\n          getColumnNames: function (tgt = []) {\n            affirmColIndex(affirmStmtOpen(this), 0);\n            const n = this.columnCount;\n            for (let i = 0; i < n; ++i) {\n              tgt.push(capi.sqlite3_column_name(this.pointer, i));\n            }\n            return tgt;\n          },\n\n          getParamIndex: function (name) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_index(this.pointer, name)\n              : undefined;\n          },\n        };\n\n        {\n          const prop = {\n            enumerable: true,\n            get: function () {\n              return __ptrMap.get(this);\n            },\n            set: () => toss3('The pointer property is read-only.'),\n          };\n          Object.defineProperty(Stmt.prototype, 'pointer', prop);\n          Object.defineProperty(DB.prototype, 'pointer', prop);\n        }\n\n        Object.defineProperty(Stmt.prototype, 'columnCount', {\n          enumerable: false,\n          get: function () {\n            return capi.sqlite3_column_count(this.pointer);\n          },\n          set: () => toss3('The columnCount property is read-only.'),\n        });\n\n        sqlite3.oo1 = {\n          DB,\n          Stmt,\n        };\n\n        if (util.isUIThread()) {\n          sqlite3.oo1.JsStorageDb = function (storageName = 'session') {\n            const opt = dbCtorHelper.normalizeArgs(...arguments);\n            storageName = opt.filename;\n            if ('session' !== storageName && 'local' !== storageName) {\n              toss3(\"JsStorageDb db name must be one of 'session' or 'local'.\");\n            }\n            opt.vfs = 'kvvfs';\n            dbCtorHelper.call(this, opt);\n          };\n          const jdb = sqlite3.oo1.JsStorageDb;\n          jdb.prototype = Object.create(DB.prototype);\n\n          jdb.clearStorage = capi.sqlite3_js_kvvfs_clear;\n\n          jdb.prototype.clearStorage = function () {\n            return jdb.clearStorage(affirmDbOpen(this).filename);\n          };\n\n          jdb.storageSize = capi.sqlite3_js_kvvfs_size;\n\n          jdb.prototype.storageSize = function () {\n            return jdb.storageSize(affirmDbOpen(this).filename);\n          };\n        }\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const util = sqlite3.util;\n        sqlite3.initWorker1API = function () {\n          'use strict';\n          const toss = (...args) => {\n            throw new Error(args.join(' '));\n          };\n          if (!(globalThis.WorkerGlobalScope instanceof Function)) {\n            toss('initWorker1API() must be run from a Worker thread.');\n          }\n          const sqlite3 = this.sqlite3 || toss('Missing this.sqlite3 object.');\n          const DB = sqlite3.oo1.DB;\n\n          const getDbId = function (db) {\n            let id = wState.idMap.get(db);\n            if (id) return id;\n            id = 'db#' + ++wState.idSeq + '@' + db.pointer;\n\n            wState.idMap.set(db, id);\n            return id;\n          };\n\n          const wState = {\n            dbList: [],\n\n            idSeq: 0,\n\n            idMap: new WeakMap(),\n\n            xfer: [],\n            open: function (opt) {\n              const db = new DB(opt);\n              this.dbs[getDbId(db)] = db;\n              if (this.dbList.indexOf(db) < 0) this.dbList.push(db);\n              return db;\n            },\n            close: function (db, alsoUnlink) {\n              if (db) {\n                delete this.dbs[getDbId(db)];\n                const filename = db.filename;\n                const pVfs = util.sqlite3__wasm_db_vfs(db.pointer, 0);\n                db.close();\n                const ddNdx = this.dbList.indexOf(db);\n                if (ddNdx >= 0) this.dbList.splice(ddNdx, 1);\n                if (alsoUnlink && filename && pVfs) {\n                  util.sqlite3__wasm_vfs_unlink(pVfs, filename);\n                }\n              }\n            },\n\n            post: function (msg, xferList) {\n              if (xferList && xferList.length) {\n                globalThis.postMessage(msg, Array.from(xferList));\n                xferList.length = 0;\n              } else {\n                globalThis.postMessage(msg);\n              }\n            },\n\n            dbs: Object.create(null),\n\n            getDb: function (id, require = true) {\n              return (\n                this.dbs[id] ||\n                (require ? toss('Unknown (or closed) DB ID:', id) : undefined)\n              );\n            },\n          };\n\n          const affirmDbOpen = function (db = wState.dbList[0]) {\n            return db && db.pointer ? db : toss('DB is not opened.');\n          };\n\n          const getMsgDb = function (msgData, affirmExists = true) {\n            const db = wState.getDb(msgData.dbId, false) || wState.dbList[0];\n            return affirmExists ? affirmDbOpen(db) : db;\n          };\n\n          const getDefaultDbId = function () {\n            return wState.dbList[0] && getDbId(wState.dbList[0]);\n          };\n\n          const isSpecialDbFilename = (n) => {\n            return '' === n || ':' === n[0];\n          };\n\n          const wMsgHandler = {\n            open: function (ev) {\n              const oargs = Object.create(null),\n                args = ev.args || Object.create(null);\n              if (args.simulateError) {\n                toss('Throwing because of simulateError flag.');\n              }\n              const rc = Object.create(null);\n              oargs.vfs = args.vfs;\n              oargs.filename = args.filename || '';\n              const db = wState.open(oargs);\n              rc.filename = db.filename;\n              rc.persistent = !!sqlite3.capi.sqlite3_js_db_uses_vfs(\n                db.pointer,\n                'opfs',\n              );\n              rc.dbId = getDbId(db);\n              rc.vfs = db.dbVfsName();\n              return rc;\n            },\n\n            close: function (ev) {\n              const db = getMsgDb(ev, false);\n              const response = {\n                filename: db && db.filename,\n              };\n              if (db) {\n                const doUnlink =\n                  ev.args && 'object' === typeof ev.args\n                    ? !!ev.args.unlink\n                    : false;\n                wState.close(db, doUnlink);\n              }\n              return response;\n            },\n\n            exec: function (ev) {\n              const rc =\n                'string' === typeof ev.args\n                  ? { sql: ev.args }\n                  : ev.args || Object.create(null);\n              if ('stmt' === rc.rowMode) {\n                toss(\n                  \"Invalid rowMode for 'exec': stmt mode\",\n                  'does not work in the Worker API.',\n                );\n              } else if (!rc.sql) {\n                toss(\"'exec' requires input SQL.\");\n              }\n              const db = getMsgDb(ev);\n              if (rc.callback || Array.isArray(rc.resultRows)) {\n                db._blobXfer = wState.xfer;\n              }\n              const theCallback = rc.callback;\n              let rowNumber = 0;\n              const hadColNames = !!rc.columnNames;\n              if ('string' === typeof theCallback) {\n                if (!hadColNames) rc.columnNames = [];\n\n                rc.callback = function (row, stmt) {\n                  wState.post(\n                    {\n                      type: theCallback,\n                      columnNames: rc.columnNames,\n                      rowNumber: ++rowNumber,\n                      row: row,\n                    },\n                    wState.xfer,\n                  );\n                };\n              }\n              try {\n                const changeCount = !!rc.countChanges\n                  ? db.changes(true, 64 === rc.countChanges)\n                  : undefined;\n                db.exec(rc);\n                if (undefined !== changeCount) {\n                  rc.changeCount =\n                    db.changes(true, 64 === rc.countChanges) - changeCount;\n                }\n                if (rc.callback instanceof Function) {\n                  rc.callback = theCallback;\n\n                  wState.post({\n                    type: theCallback,\n                    columnNames: rc.columnNames,\n                    rowNumber: null,\n                    row: undefined,\n                  });\n                }\n              } finally {\n                delete db._blobXfer;\n                if (rc.callback) rc.callback = theCallback;\n              }\n              return rc;\n            },\n\n            'config-get': function () {\n              const rc = Object.create(null),\n                src = sqlite3.config;\n              ['bigIntEnabled'].forEach(function (k) {\n                if (Object.getOwnPropertyDescriptor(src, k)) rc[k] = src[k];\n              });\n              rc.version = sqlite3.version;\n              rc.vfsList = sqlite3.capi.sqlite3_js_vfs_list();\n              rc.opfsEnabled = !!sqlite3.opfs;\n              return rc;\n            },\n\n            export: function (ev) {\n              const db = getMsgDb(ev);\n              const response = {\n                byteArray: sqlite3.capi.sqlite3_js_db_export(db.pointer),\n                filename: db.filename,\n                mimetype: 'application/x-sqlite3',\n              };\n              wState.xfer.push(response.byteArray.buffer);\n              return response;\n            },\n\n            toss: function (ev) {\n              toss('Testing worker exception');\n            },\n\n            'opfs-tree': async function (ev) {\n              if (!sqlite3.opfs) toss('OPFS support is unavailable.');\n              const response = await sqlite3.opfs.treeList();\n              return response;\n            },\n          };\n\n          globalThis.onmessage = async function (ev) {\n            ev = ev.data;\n            let result,\n              dbId = ev.dbId,\n              evType = ev.type;\n            const arrivalTime = performance.now();\n            try {\n              if (\n                wMsgHandler.hasOwnProperty(evType) &&\n                wMsgHandler[evType] instanceof Function\n              ) {\n                result = await wMsgHandler[evType](ev);\n              } else {\n                toss('Unknown db worker message type:', ev.type);\n              }\n            } catch (err) {\n              evType = 'error';\n              result = {\n                operation: ev.type,\n                message: err.message,\n                errorClass: err.name,\n                input: ev,\n              };\n              if (err.stack) {\n                result.stack =\n                  'string' === typeof err.stack\n                    ? err.stack.split(/\\n\\s*/)\n                    : err.stack;\n              }\n              if (0)\n                sqlite3.config.warn(\n                  'Worker is propagating an exception to main thread.',\n                  'Reporting it _here_ for the stack trace:',\n                  err,\n                  result,\n                );\n            }\n            if (!dbId) {\n              dbId = result.dbId || getDefaultDbId();\n            }\n\n            wState.post(\n              {\n                type: evType,\n                dbId: dbId,\n                messageId: ev.messageId,\n                workerReceivedTime: arrivalTime,\n                workerRespondTime: performance.now(),\n                departureTime: ev.departureTime,\n\n                result: result,\n              },\n              wState.xfer,\n            );\n          };\n          globalThis.postMessage({\n            type: 'sqlite3-api',\n            result: 'worker1-ready',\n          });\n        }.bind({ sqlite3 });\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vfs = Object.create(null);\n        sqlite3.vfs = vfs;\n\n        capi.sqlite3_vfs.prototype.registerVfs = function (asDefault = false) {\n          if (!(this instanceof sqlite3.capi.sqlite3_vfs)) {\n            toss('Expecting a sqlite3_vfs-type argument.');\n          }\n          const rc = capi.sqlite3_vfs_register(this, asDefault ? 1 : 0);\n          if (rc) {\n            toss('sqlite3_vfs_register(', this, ') failed with rc', rc);\n          }\n          if (this.pointer !== capi.sqlite3_vfs_find(this.$zName)) {\n            toss(\n              'BUG: sqlite3_vfs_find(vfs.$zName) failed for just-installed VFS',\n              this,\n            );\n          }\n          return this;\n        };\n\n        vfs.installVfs = function (opt) {\n          let count = 0;\n          const propList = ['io', 'vfs'];\n          for (const key of propList) {\n            const o = opt[key];\n            if (o) {\n              ++count;\n              o.struct.installMethods(o.methods, !!o.applyArgcCheck);\n              if ('vfs' === key) {\n                if (!o.struct.$zName && 'string' === typeof o.name) {\n                  o.struct.addOnDispose(\n                    (o.struct.$zName = wasm.allocCString(o.name)),\n                  );\n                }\n                o.struct.registerVfs(!!o.asDefault);\n              }\n            }\n          }\n          if (!count)\n            toss(\n              'Misuse: installVfs() options object requires at least',\n              'one of:',\n              propList,\n            );\n          return this;\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vtab = Object.create(null);\n        sqlite3.vtab = vtab;\n\n        const sii = capi.sqlite3_index_info;\n\n        sii.prototype.nthConstraint = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraint +\n            sii.sqlite3_index_constraint.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint(ptr);\n        };\n\n        sii.prototype.nthConstraintUsage = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraintUsage +\n            sii.sqlite3_index_constraint_usage.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint_usage(ptr);\n        };\n\n        sii.prototype.nthOrderBy = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nOrderBy) return false;\n          const ptr =\n            this.$aOrderBy + sii.sqlite3_index_orderby.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_orderby(ptr);\n        };\n\n        const __xWrapFactory = function (methodName, StructType) {\n          return function (ptr, removeMapping = false) {\n            if (0 === arguments.length) ptr = new StructType();\n            if (ptr instanceof StructType) {\n              this.set(ptr.pointer, ptr);\n              return ptr;\n            } else if (!wasm.isPtr(ptr)) {\n              sqlite3.SQLite3Error.toss(\n                'Invalid argument to',\n                methodName + '()',\n              );\n            }\n            let rc = this.get(ptr);\n            if (removeMapping) this.delete(ptr);\n            return rc;\n          }.bind(new Map());\n        };\n\n        const StructPtrMapper = function (name, StructType) {\n          const __xWrap = __xWrapFactory(name, StructType);\n\n          return Object.assign(Object.create(null), {\n            StructType,\n\n            create: (ppOut) => {\n              const rc = __xWrap();\n              wasm.pokePtr(ppOut, rc.pointer);\n              return rc;\n            },\n\n            get: (pCObj) => __xWrap(pCObj),\n\n            unget: (pCObj) => __xWrap(pCObj, true),\n\n            dispose: (pCObj) => {\n              const o = __xWrap(pCObj, true);\n              if (o) o.dispose();\n            },\n          });\n        };\n\n        vtab.xVtab = StructPtrMapper('xVtab', capi.sqlite3_vtab);\n\n        vtab.xCursor = StructPtrMapper('xCursor', capi.sqlite3_vtab_cursor);\n\n        vtab.xIndexInfo = (pIdxInfo) => new capi.sqlite3_index_info(pIdxInfo);\n\n        vtab.xError = function f(methodName, err, defaultRc) {\n          if (f.errorReporter instanceof Function) {\n            try {\n              f.errorReporter(\n                'sqlite3_module::' + methodName + '(): ' + err.message,\n              );\n            } catch (e) {}\n          }\n          let rc;\n          if (err instanceof sqlite3.WasmAllocError) rc = capi.SQLITE_NOMEM;\n          else if (arguments.length > 2) rc = defaultRc;\n          else if (err instanceof sqlite3.SQLite3Error) rc = err.resultCode;\n          return rc || capi.SQLITE_ERROR;\n        };\n        vtab.xError.errorReporter = 1 ? console.error.bind(console) : false;\n\n        vtab.xRowid = (ppRowid64, value) => wasm.poke(ppRowid64, value, 'i64');\n\n        vtab.setupModule = function (opt) {\n          let createdMod = false;\n          const mod =\n            this instanceof capi.sqlite3_module\n              ? this\n              : opt.struct || (createdMod = new capi.sqlite3_module());\n          try {\n            const methods = opt.methods || toss(\"Missing 'methods' object.\");\n            for (const e of Object.entries({\n              xConnect: 'xCreate',\n              xDisconnect: 'xDestroy',\n            })) {\n              const k = e[0],\n                v = e[1];\n              if (true === methods[k]) methods[k] = methods[v];\n              else if (true === methods[v]) methods[v] = methods[k];\n            }\n            if (opt.catchExceptions) {\n              const fwrap = function (methodName, func) {\n                if (['xConnect', 'xCreate'].indexOf(methodName) >= 0) {\n                  return function (pDb, pAux, argc, argv, ppVtab, pzErr) {\n                    try {\n                      return func(...arguments) || 0;\n                    } catch (e) {\n                      if (!(e instanceof sqlite3.WasmAllocError)) {\n                        wasm.dealloc(wasm.peekPtr(pzErr));\n                        wasm.pokePtr(pzErr, wasm.allocCString(e.message));\n                      }\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                } else {\n                  return function (...args) {\n                    try {\n                      return func(...args) || 0;\n                    } catch (e) {\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                }\n              };\n              const mnames = [\n                'xCreate',\n                'xConnect',\n                'xBestIndex',\n                'xDisconnect',\n                'xDestroy',\n                'xOpen',\n                'xClose',\n                'xFilter',\n                'xNext',\n                'xEof',\n                'xColumn',\n                'xRowid',\n                'xUpdate',\n                'xBegin',\n                'xSync',\n                'xCommit',\n                'xRollback',\n                'xFindFunction',\n                'xRename',\n                'xSavepoint',\n                'xRelease',\n                'xRollbackTo',\n                'xShadowName',\n              ];\n              const remethods = Object.create(null);\n              for (const k of mnames) {\n                const m = methods[k];\n                if (!(m instanceof Function)) continue;\n                else if ('xConnect' === k && methods.xCreate === m) {\n                  remethods[k] = methods.xCreate;\n                } else if ('xCreate' === k && methods.xConnect === m) {\n                  remethods[k] = methods.xConnect;\n                } else {\n                  remethods[k] = fwrap(k, m);\n                }\n              }\n              mod.installMethods(remethods, false);\n            } else {\n              mod.installMethods(methods, !!opt.applyArgcCheck);\n            }\n            if (0 === mod.$iVersion) {\n              let v;\n              if ('number' === typeof opt.iVersion) v = opt.iVersion;\n              else if (mod.$xShadowName) v = 3;\n              else if (mod.$xSavePoint || mod.$xRelease || mod.$xRollbackTo)\n                v = 2;\n              else v = 1;\n              mod.$iVersion = v;\n            }\n          } catch (e) {\n            if (createdMod) createdMod.dispose();\n            throw e;\n          }\n          return mod;\n        };\n\n        capi.sqlite3_module.prototype.setupModule = function (opt) {\n          return vtab.setupModule.call(this, opt);\n        };\n      });\n\n      ('use strict');\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const installOpfsVfs = function callee(options) {\n          if (!globalThis.SharedArrayBuffer || !globalThis.Atomics) {\n            return Promise.reject(\n              new Error(\n                'Cannot install OPFS: Missing SharedArrayBuffer and/or Atomics. ' +\n                  'The server must emit the COOP/COEP response headers to enable those. ' +\n                  'See https://sqlite.org/wasm/doc/trunk/persistence.md#coop-coep',\n              ),\n            );\n          } else if ('undefined' === typeof WorkerGlobalScope) {\n            return Promise.reject(\n              new Error(\n                'The OPFS sqlite3_vfs cannot run in the main thread ' +\n                  'because it requires Atomics.wait().',\n              ),\n            );\n          } else if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return Promise.reject(new Error('Missing required OPFS APIs.'));\n          }\n          if (!options || 'object' !== typeof options) {\n            options = Object.create(null);\n          }\n          const urlParams = new URL(globalThis.location.href).searchParams;\n          if (urlParams.has('opfs-disable')) {\n            return Promise.resolve(sqlite3);\n          }\n          if (undefined === options.verbose) {\n            options.verbose = urlParams.has('opfs-verbose')\n              ? +urlParams.get('opfs-verbose') || 2\n              : 1;\n          }\n          if (undefined === options.sanityChecks) {\n            options.sanityChecks = urlParams.has('opfs-sanity-check');\n          }\n          if (undefined === options.proxyUri) {\n            options.proxyUri = callee.defaultProxyUri;\n          }\n\n          if ('function' === typeof options.proxyUri) {\n            options.proxyUri = options.proxyUri();\n          }\n          const thePromise = new Promise(function (\n            promiseResolve_,\n            promiseReject_,\n          ) {\n            const loggers = [\n              sqlite3.config.error,\n              sqlite3.config.warn,\n              sqlite3.config.log,\n            ];\n            const logImpl = (level, ...args) => {\n              if (options.verbose > level)\n                loggers[level]('OPFS syncer:', ...args);\n            };\n            const log = (...args) => logImpl(2, ...args);\n            const warn = (...args) => logImpl(1, ...args);\n            const error = (...args) => logImpl(0, ...args);\n            const toss = sqlite3.util.toss;\n            const capi = sqlite3.capi;\n            const util = sqlite3.util;\n            const wasm = sqlite3.wasm;\n            const sqlite3_vfs = capi.sqlite3_vfs;\n            const sqlite3_file = capi.sqlite3_file;\n            const sqlite3_io_methods = capi.sqlite3_io_methods;\n\n            const opfsUtil = Object.create(null);\n\n            const thisThreadHasOPFS = () => {\n              return (\n                globalThis.FileSystemHandle &&\n                globalThis.FileSystemDirectoryHandle &&\n                globalThis.FileSystemFileHandle &&\n                globalThis.FileSystemFileHandle.prototype\n                  .createSyncAccessHandle &&\n                navigator?.storage?.getDirectory\n              );\n            };\n\n            opfsUtil.metrics = {\n              dump: function () {\n                let k,\n                  n = 0,\n                  t = 0,\n                  w = 0;\n                for (k in state.opIds) {\n                  const m = metrics[k];\n                  n += m.count;\n                  t += m.time;\n                  w += m.wait;\n                  m.avgTime = m.count && m.time ? m.time / m.count : 0;\n                  m.avgWait = m.count && m.wait ? m.wait / m.count : 0;\n                }\n                sqlite3.config.log(\n                  globalThis.location.href,\n                  'metrics for',\n                  globalThis.location.href,\n                  ':',\n                  metrics,\n                  '\\nTotal of',\n                  n,\n                  'op(s) for',\n                  t,\n                  'ms (incl. ' + w + ' ms of waiting on the async side)',\n                );\n                sqlite3.config.log('Serialization metrics:', metrics.s11n);\n                W.postMessage({ type: 'opfs-async-metrics' });\n              },\n              reset: function () {\n                let k;\n                const r = (m) => (m.count = m.time = m.wait = 0);\n                for (k in state.opIds) {\n                  r((metrics[k] = Object.create(null)));\n                }\n                let s = (metrics.s11n = Object.create(null));\n                s = s.serialize = Object.create(null);\n                s.count = s.time = 0;\n                s = metrics.s11n.deserialize = Object.create(null);\n                s.count = s.time = 0;\n              },\n            };\n            const opfsIoMethods = new sqlite3_io_methods();\n            const opfsVfs = new sqlite3_vfs().addOnDispose(() =>\n              opfsIoMethods.dispose(),\n            );\n            let promiseWasRejected = undefined;\n            const promiseReject = (err) => {\n              promiseWasRejected = true;\n              opfsVfs.dispose();\n              return promiseReject_(err);\n            };\n            const promiseResolve = () => {\n              promiseWasRejected = false;\n              return promiseResolve_(sqlite3);\n            };\n            const W = new Worker(\n              new URL('sqlite3-opfs-async-proxy.js', import.meta.url),\n            );\n            setTimeout(() => {\n              if (undefined === promiseWasRejected) {\n                promiseReject(\n                  new Error(\n                    'Timeout while waiting for OPFS async proxy worker.',\n                  ),\n                );\n              }\n            }, 4000);\n            W._originalOnError = W.onerror;\n            W.onerror = function (err) {\n              error('Error initializing OPFS asyncer:', err);\n              promiseReject(\n                new Error(\n                  'Loading OPFS async Worker failed for unknown reasons.',\n                ),\n              );\n            };\n            const pDVfs = capi.sqlite3_vfs_find(null);\n            const dVfs = pDVfs ? new sqlite3_vfs(pDVfs) : null;\n            opfsIoMethods.$iVersion = 1;\n            opfsVfs.$iVersion = 2;\n            opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n            opfsVfs.$mxPathname = 1024;\n            opfsVfs.$zName = wasm.allocCString('opfs');\n\n            opfsVfs.$xDlOpen =\n              opfsVfs.$xDlError =\n              opfsVfs.$xDlSym =\n              opfsVfs.$xDlClose =\n                null;\n            opfsVfs.addOnDispose(\n              '$zName',\n              opfsVfs.$zName,\n              'cleanup default VFS wrapper',\n              () => (dVfs ? dVfs.dispose() : null),\n            );\n\n            const state = Object.create(null);\n            state.verbose = options.verbose;\n            state.littleEndian = (() => {\n              const buffer = new ArrayBuffer(2);\n              new DataView(buffer).setInt16(0, 256, true);\n\n              return new Int16Array(buffer)[0] === 256;\n            })();\n\n            state.asyncIdleWaitTime = 150;\n\n            state.asyncS11nExceptions = 1;\n\n            state.fileBufferSize = 1024 * 64;\n            state.sabS11nOffset = state.fileBufferSize;\n\n            state.sabS11nSize = opfsVfs.$mxPathname * 2;\n\n            state.sabIO = new SharedArrayBuffer(\n              state.fileBufferSize + state.sabS11nSize,\n            );\n            state.opIds = Object.create(null);\n            const metrics = Object.create(null);\n            {\n              let i = 0;\n\n              state.opIds.whichOp = i++;\n\n              state.opIds.rc = i++;\n\n              state.opIds.xAccess = i++;\n              state.opIds.xClose = i++;\n              state.opIds.xDelete = i++;\n              state.opIds.xDeleteNoWait = i++;\n              state.opIds.xFileSize = i++;\n              state.opIds.xLock = i++;\n              state.opIds.xOpen = i++;\n              state.opIds.xRead = i++;\n              state.opIds.xSleep = i++;\n              state.opIds.xSync = i++;\n              state.opIds.xTruncate = i++;\n              state.opIds.xUnlock = i++;\n              state.opIds.xWrite = i++;\n              state.opIds.mkdir = i++;\n              state.opIds['opfs-async-metrics'] = i++;\n              state.opIds['opfs-async-shutdown'] = i++;\n\n              state.opIds.retry = i++;\n              state.sabOP = new SharedArrayBuffer(i * 4);\n              opfsUtil.metrics.reset();\n            }\n\n            state.sq3Codes = Object.create(null);\n            [\n              'SQLITE_ACCESS_EXISTS',\n              'SQLITE_ACCESS_READWRITE',\n              'SQLITE_BUSY',\n              'SQLITE_ERROR',\n              'SQLITE_IOERR',\n              'SQLITE_IOERR_ACCESS',\n              'SQLITE_IOERR_CLOSE',\n              'SQLITE_IOERR_DELETE',\n              'SQLITE_IOERR_FSYNC',\n              'SQLITE_IOERR_LOCK',\n              'SQLITE_IOERR_READ',\n              'SQLITE_IOERR_SHORT_READ',\n              'SQLITE_IOERR_TRUNCATE',\n              'SQLITE_IOERR_UNLOCK',\n              'SQLITE_IOERR_WRITE',\n              'SQLITE_LOCK_EXCLUSIVE',\n              'SQLITE_LOCK_NONE',\n              'SQLITE_LOCK_PENDING',\n              'SQLITE_LOCK_RESERVED',\n              'SQLITE_LOCK_SHARED',\n              'SQLITE_LOCKED',\n              'SQLITE_MISUSE',\n              'SQLITE_NOTFOUND',\n              'SQLITE_OPEN_CREATE',\n              'SQLITE_OPEN_DELETEONCLOSE',\n              'SQLITE_OPEN_MAIN_DB',\n              'SQLITE_OPEN_READONLY',\n            ].forEach((k) => {\n              if (undefined === (state.sq3Codes[k] = capi[k])) {\n                toss('Maintenance required: not found:', k);\n              }\n            });\n            state.opfsFlags = Object.assign(Object.create(null), {\n              OPFS_UNLOCK_ASAP: 0x01,\n\n              OPFS_UNLINK_BEFORE_OPEN: 0x02,\n\n              defaultUnlockAsap: false,\n            });\n\n            const opRun = (op, ...args) => {\n              const opNdx = state.opIds[op] || toss('Invalid op ID:', op);\n              state.s11n.serialize(...args);\n              Atomics.store(state.sabOPView, state.opIds.rc, -1);\n              Atomics.store(state.sabOPView, state.opIds.whichOp, opNdx);\n              Atomics.notify(state.sabOPView, state.opIds.whichOp);\n              const t = performance.now();\n              Atomics.wait(state.sabOPView, state.opIds.rc, -1);\n              const rc = Atomics.load(state.sabOPView, state.opIds.rc);\n              metrics[op].wait += performance.now() - t;\n              if (rc && state.asyncS11nExceptions) {\n                const err = state.s11n.deserialize();\n                if (err) error(op + '() async error:', ...err);\n              }\n              return rc;\n            };\n\n            opfsUtil.debug = {\n              asyncShutdown: () => {\n                warn(\n                  'Shutting down OPFS async listener. The OPFS VFS will no longer work.',\n                );\n                opRun('opfs-async-shutdown');\n              },\n              asyncRestart: () => {\n                warn(\n                  'Attempting to restart OPFS VFS async listener. Might work, might not.',\n                );\n                W.postMessage({ type: 'opfs-async-restart' });\n              },\n            };\n\n            const initS11n = () => {\n              if (state.s11n) return state.s11n;\n              const textDecoder = new TextDecoder(),\n                textEncoder = new TextEncoder('utf-8'),\n                viewU8 = new Uint8Array(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                ),\n                viewDV = new DataView(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                );\n              state.s11n = Object.create(null);\n\n              const TypeIds = Object.create(null);\n              TypeIds.number = {\n                id: 1,\n                size: 8,\n                getter: 'getFloat64',\n                setter: 'setFloat64',\n              };\n              TypeIds.bigint = {\n                id: 2,\n                size: 8,\n                getter: 'getBigInt64',\n                setter: 'setBigInt64',\n              };\n              TypeIds.boolean = {\n                id: 3,\n                size: 4,\n                getter: 'getInt32',\n                setter: 'setInt32',\n              };\n              TypeIds.string = { id: 4 };\n\n              const getTypeId = (v) =>\n                TypeIds[typeof v] ||\n                toss(\n                  'Maintenance required: this value type cannot be serialized.',\n                  v,\n                );\n              const getTypeIdById = (tid) => {\n                switch (tid) {\n                  case TypeIds.number.id:\n                    return TypeIds.number;\n                  case TypeIds.bigint.id:\n                    return TypeIds.bigint;\n                  case TypeIds.boolean.id:\n                    return TypeIds.boolean;\n                  case TypeIds.string.id:\n                    return TypeIds.string;\n                  default:\n                    toss('Invalid type ID:', tid);\n                }\n              };\n\n              state.s11n.deserialize = function (clear = false) {\n                ++metrics.s11n.deserialize.count;\n                const t = performance.now();\n                const argc = viewU8[0];\n                const rc = argc ? [] : null;\n                if (argc) {\n                  const typeIds = [];\n                  let offset = 1,\n                    i,\n                    n,\n                    v;\n                  for (i = 0; i < argc; ++i, ++offset) {\n                    typeIds.push(getTypeIdById(viewU8[offset]));\n                  }\n                  for (i = 0; i < argc; ++i) {\n                    const t = typeIds[i];\n                    if (t.getter) {\n                      v = viewDV[t.getter](offset, state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      n = viewDV.getInt32(offset, state.littleEndian);\n                      offset += 4;\n                      v = textDecoder.decode(viewU8.slice(offset, offset + n));\n                      offset += n;\n                    }\n                    rc.push(v);\n                  }\n                }\n                if (clear) viewU8[0] = 0;\n\n                metrics.s11n.deserialize.time += performance.now() - t;\n                return rc;\n              };\n\n              state.s11n.serialize = function (...args) {\n                const t = performance.now();\n                ++metrics.s11n.serialize.count;\n                if (args.length) {\n                  const typeIds = [];\n                  let i = 0,\n                    offset = 1;\n                  viewU8[0] = args.length & 0xff;\n                  for (; i < args.length; ++i, ++offset) {\n                    typeIds.push(getTypeId(args[i]));\n                    viewU8[offset] = typeIds[i].id;\n                  }\n                  for (i = 0; i < args.length; ++i) {\n                    const t = typeIds[i];\n                    if (t.setter) {\n                      viewDV[t.setter](offset, args[i], state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      const s = textEncoder.encode(args[i]);\n                      viewDV.setInt32(offset, s.byteLength, state.littleEndian);\n                      offset += 4;\n                      viewU8.set(s, offset);\n                      offset += s.byteLength;\n                    }\n                  }\n                } else {\n                  viewU8[0] = 0;\n                }\n                metrics.s11n.serialize.time += performance.now() - t;\n              };\n              return state.s11n;\n            };\n\n            const randomFilename = function f(len = 16) {\n              if (!f._chars) {\n                f._chars =\n                  'abcdefghijklmnopqrstuvwxyz' +\n                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n                  '012346789';\n                f._n = f._chars.length;\n              }\n              const a = [];\n              let i = 0;\n              for (; i < len; ++i) {\n                const ndx = (Math.random() * (f._n * 64)) % f._n | 0;\n                a[i] = f._chars[ndx];\n              }\n              return a.join('');\n            };\n\n            const __openFiles = Object.create(null);\n\n            const opTimer = Object.create(null);\n            opTimer.op = undefined;\n            opTimer.start = undefined;\n            const mTimeStart = (op) => {\n              opTimer.start = performance.now();\n              opTimer.op = op;\n              ++metrics[op].count;\n            };\n            const mTimeEnd = () =>\n              (metrics[opTimer.op].time += performance.now() - opTimer.start);\n\n            const ioSyncWrappers = {\n              xCheckReservedLock: function (pFile, pOut) {\n                const f = __openFiles[pFile];\n                wasm.poke(pOut, f.lockType ? 1 : 0, 'i32');\n                return 0;\n              },\n              xClose: function (pFile) {\n                mTimeStart('xClose');\n                let rc = 0;\n                const f = __openFiles[pFile];\n                if (f) {\n                  delete __openFiles[pFile];\n                  rc = opRun('xClose', pFile);\n                  if (f.sq3File) f.sq3File.dispose();\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xDeviceCharacteristics: function (pFile) {\n                return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n              },\n              xFileControl: function (pFile, opId, pArg) {\n                return capi.SQLITE_NOTFOUND;\n              },\n              xFileSize: function (pFile, pSz64) {\n                mTimeStart('xFileSize');\n                let rc = opRun('xFileSize', pFile);\n                if (0 == rc) {\n                  try {\n                    const sz = state.s11n.deserialize()[0];\n                    wasm.poke(pSz64, sz, 'i64');\n                  } catch (e) {\n                    error('Unexpected error reading xFileSize() result:', e);\n                    rc = state.sq3Codes.SQLITE_IOERR;\n                  }\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xLock: function (pFile, lockType) {\n                mTimeStart('xLock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n\n                if (!f.lockType) {\n                  rc = opRun('xLock', pFile, lockType);\n                  if (0 === rc) f.lockType = lockType;\n                } else {\n                  f.lockType = lockType;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xRead: function (pFile, pDest, n, offset64) {\n                mTimeStart('xRead');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  rc = opRun('xRead', pFile, n, Number(offset64));\n                  if (0 === rc || capi.SQLITE_IOERR_SHORT_READ === rc) {\n                    wasm.heap8u().set(f.sabView.subarray(0, n), pDest);\n                  }\n                } catch (e) {\n                  error('xRead(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_READ;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xSync: function (pFile, flags) {\n                mTimeStart('xSync');\n                ++metrics.xSync.count;\n                const rc = opRun('xSync', pFile, flags);\n                mTimeEnd();\n                return rc;\n              },\n              xTruncate: function (pFile, sz64) {\n                mTimeStart('xTruncate');\n                const rc = opRun('xTruncate', pFile, Number(sz64));\n                mTimeEnd();\n                return rc;\n              },\n              xUnlock: function (pFile, lockType) {\n                mTimeStart('xUnlock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n                if (capi.SQLITE_LOCK_NONE === lockType && f.lockType) {\n                  rc = opRun('xUnlock', pFile, lockType);\n                }\n                if (0 === rc) f.lockType = lockType;\n                mTimeEnd();\n                return rc;\n              },\n              xWrite: function (pFile, pSrc, n, offset64) {\n                mTimeStart('xWrite');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  f.sabView.set(wasm.heap8u().subarray(pSrc, pSrc + n));\n                  rc = opRun('xWrite', pFile, n, Number(offset64));\n                } catch (e) {\n                  error('xWrite(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_WRITE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            const vfsSyncWrappers = {\n              xAccess: function (pVfs, zName, flags, pOut) {\n                mTimeStart('xAccess');\n                const rc = opRun('xAccess', wasm.cstrToJs(zName));\n                wasm.poke(pOut, rc ? 0 : 1, 'i32');\n                mTimeEnd();\n                return 0;\n              },\n              xCurrentTime: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 + new Date().getTime() / 86400000,\n                  'double',\n                );\n                return 0;\n              },\n              xCurrentTimeInt64: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 * 86400000 + new Date().getTime(),\n                  'i64',\n                );\n                return 0;\n              },\n              xDelete: function (pVfs, zName, doSyncDir) {\n                mTimeStart('xDelete');\n                const rc = opRun(\n                  'xDelete',\n                  wasm.cstrToJs(zName),\n                  doSyncDir,\n                  false,\n                );\n                mTimeEnd();\n                return rc;\n              },\n              xFullPathname: function (pVfs, zName, nOut, pOut) {\n                const i = wasm.cstrncpy(pOut, zName, nOut);\n                return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n              },\n              xGetLastError: function (pVfs, nOut, pOut) {\n                warn('OPFS xGetLastError() has nothing sensible to return.');\n                return 0;\n              },\n\n              xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n                mTimeStart('xOpen');\n                let opfsFlags = 0;\n                if (0 === zName) {\n                  zName = randomFilename();\n                } else if (wasm.isPtr(zName)) {\n                  if (capi.sqlite3_uri_boolean(zName, 'opfs-unlock-asap', 0)) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLOCK_ASAP;\n                  }\n                  if (\n                    capi.sqlite3_uri_boolean(zName, 'delete-before-open', 0)\n                  ) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLINK_BEFORE_OPEN;\n                  }\n                  zName = wasm.cstrToJs(zName);\n                }\n                const fh = Object.create(null);\n                fh.fid = pFile;\n                fh.filename = zName;\n                fh.sab = new SharedArrayBuffer(state.fileBufferSize);\n                fh.flags = flags;\n                const rc = opRun('xOpen', pFile, zName, flags, opfsFlags);\n                if (!rc) {\n                  if (fh.readOnly) {\n                    wasm.poke(pOutFlags, capi.SQLITE_OPEN_READONLY, 'i32');\n                  }\n                  __openFiles[pFile] = fh;\n                  fh.sabView = state.sabFileBufView;\n                  fh.sq3File = new sqlite3_file(pFile);\n                  fh.sq3File.$pMethods = opfsIoMethods.pointer;\n                  fh.lockType = capi.SQLITE_LOCK_NONE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            if (dVfs) {\n              opfsVfs.$xRandomness = dVfs.$xRandomness;\n              opfsVfs.$xSleep = dVfs.$xSleep;\n            }\n            if (!opfsVfs.$xRandomness) {\n              vfsSyncWrappers.xRandomness = function (pVfs, nOut, pOut) {\n                const heap = wasm.heap8u();\n                let i = 0;\n                for (; i < nOut; ++i)\n                  heap[pOut + i] = (Math.random() * 255000) & 0xff;\n                return i;\n              };\n            }\n            if (!opfsVfs.$xSleep) {\n              vfsSyncWrappers.xSleep = function (pVfs, ms) {\n                Atomics.wait(state.sabOPView, state.opIds.xSleep, 0, ms);\n                return 0;\n              };\n            }\n\n            opfsUtil.getResolvedPath = function (filename, splitIt) {\n              const p = new URL(filename, 'file://irrelevant').pathname;\n              return splitIt ? p.split('/').filter((v) => !!v) : p;\n            };\n\n            opfsUtil.getDirForFilename = async function f(\n              absFilename,\n              createDirs = false,\n            ) {\n              const path = opfsUtil.getResolvedPath(absFilename, true);\n              const filename = path.pop();\n              let dh = opfsUtil.rootDirectory;\n              for (const dirName of path) {\n                if (dirName) {\n                  dh = await dh.getDirectoryHandle(dirName, {\n                    create: !!createDirs,\n                  });\n                }\n              }\n              return [dh, filename];\n            };\n\n            opfsUtil.mkdir = async function (absDirName) {\n              try {\n                await opfsUtil.getDirForFilename(\n                  absDirName + '/filepart',\n                  true,\n                );\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.entryExists = async function (fsEntryName) {\n              try {\n                const [dh, fn] = await opfsUtil.getDirForFilename(fsEntryName);\n                await dh.getFileHandle(fn);\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.randomFilename = randomFilename;\n\n            opfsUtil.treeList = async function () {\n              const doDir = async function callee(dirHandle, tgt) {\n                tgt.name = dirHandle.name;\n                tgt.dirs = [];\n                tgt.files = [];\n                for await (const handle of dirHandle.values()) {\n                  if ('directory' === handle.kind) {\n                    const subDir = Object.create(null);\n                    tgt.dirs.push(subDir);\n                    await callee(handle, subDir);\n                  } else {\n                    tgt.files.push(handle.name);\n                  }\n                }\n              };\n              const root = Object.create(null);\n              await doDir(opfsUtil.rootDirectory, root);\n              return root;\n            };\n\n            opfsUtil.rmfr = async function () {\n              const dir = opfsUtil.rootDirectory,\n                opt = { recurse: true };\n              for await (const handle of dir.values()) {\n                dir.removeEntry(handle.name, opt);\n              }\n            };\n\n            opfsUtil.unlink = async function (\n              fsEntryName,\n              recursive = false,\n              throwOnError = false,\n            ) {\n              try {\n                const [hDir, filenamePart] = await opfsUtil.getDirForFilename(\n                  fsEntryName,\n                  false,\n                );\n                await hDir.removeEntry(filenamePart, { recursive });\n                return true;\n              } catch (e) {\n                if (throwOnError) {\n                  throw new Error(\n                    'unlink(',\n                    arguments[0],\n                    ') failed: ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                }\n                return false;\n              }\n            };\n\n            opfsUtil.traverse = async function (opt) {\n              const defaultOpt = {\n                recursive: true,\n                directory: opfsUtil.rootDirectory,\n              };\n              if ('function' === typeof opt) {\n                opt = { callback: opt };\n              }\n              opt = Object.assign(defaultOpt, opt || {});\n              const doDir = async function callee(dirHandle, depth) {\n                for await (const handle of dirHandle.values()) {\n                  if (false === opt.callback(handle, dirHandle, depth))\n                    return false;\n                  else if (opt.recursive && 'directory' === handle.kind) {\n                    if (false === (await callee(handle, depth + 1))) break;\n                  }\n                }\n              };\n              doDir(opt.directory, 0);\n            };\n\n            const importDbChunked = async function (filename, callback) {\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              const hFile = await hDir.getFileHandle(fnamePart, {\n                create: true,\n              });\n              let sah = await hFile.createSyncAccessHandle();\n              let nWrote = 0,\n                chunk,\n                checkedHeader = false,\n                err = false;\n              try {\n                sah.truncate(0);\n                while (undefined !== (chunk = await callback())) {\n                  if (chunk instanceof ArrayBuffer)\n                    chunk = new Uint8Array(chunk);\n                  if (0 === nWrote && chunk.byteLength >= 15) {\n                    util.affirmDbHeader(chunk);\n                    checkedHeader = true;\n                  }\n                  sah.write(chunk, { at: nWrote });\n                  nWrote += chunk.byteLength;\n                }\n                if (nWrote < 512 || 0 !== nWrote % 512) {\n                  toss(\n                    'Input size',\n                    nWrote,\n                    'is not correct for an SQLite database.',\n                  );\n                }\n                if (!checkedHeader) {\n                  const header = new Uint8Array(20);\n                  sah.read(header, { at: 0 });\n                  util.affirmDbHeader(header);\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                await sah.close();\n                sah = undefined;\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            opfsUtil.importDb = async function (filename, bytes) {\n              if (bytes instanceof Function) {\n                return importDbChunked(filename, bytes);\n              }\n              if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n              util.affirmIsDb(bytes);\n              const n = bytes.byteLength;\n              const [hDir, fnamePart] = await opfsUtil.getDirForFilename(\n                filename,\n                true,\n              );\n              let sah,\n                err,\n                nWrote = 0;\n              try {\n                const hFile = await hDir.getFileHandle(fnamePart, {\n                  create: true,\n                });\n                sah = await hFile.createSyncAccessHandle();\n                sah.truncate(0);\n                nWrote = sah.write(bytes, { at: 0 });\n                if (nWrote != n) {\n                  toss(\n                    'Expected to write ' +\n                      n +\n                      ' bytes but wrote ' +\n                      nWrote +\n                      '.',\n                  );\n                }\n                sah.write(new Uint8Array([1, 1]), { at: 18 });\n                return nWrote;\n              } catch (e) {\n                if (sah) {\n                  await sah.close();\n                  sah = undefined;\n                }\n                await hDir.removeEntry(fnamePart).catch(() => {});\n                throw e;\n              } finally {\n                if (sah) await sah.close();\n              }\n            };\n\n            if (sqlite3.oo1) {\n              const OpfsDb = function (...args) {\n                const opt = sqlite3.oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                opt.vfs = opfsVfs.$zName;\n                sqlite3.oo1.DB.dbCtorHelper.call(this, opt);\n              };\n              OpfsDb.prototype = Object.create(sqlite3.oo1.DB.prototype);\n              sqlite3.oo1.OpfsDb = OpfsDb;\n              OpfsDb.importDb = opfsUtil.importDb;\n              sqlite3.oo1.DB.dbCtorHelper.setVfsPostOpenSql(\n                opfsVfs.pointer,\n                function (oo1Db, sqlite3) {\n                  sqlite3.capi.sqlite3_busy_timeout(oo1Db, 10000);\n                  sqlite3.capi.sqlite3_exec(\n                    oo1Db,\n                    [\n                      'pragma journal_mode=DELETE;',\n\n                      'pragma cache_size=-16384;',\n                    ],\n                    0,\n                    0,\n                    0,\n                  );\n                },\n              );\n            }\n\n            const sanityCheck = function () {\n              const scope = wasm.scopedAllocPush();\n              const sq3File = new sqlite3_file();\n              try {\n                const fid = sq3File.pointer;\n                const openFlags =\n                  capi.SQLITE_OPEN_CREATE |\n                  capi.SQLITE_OPEN_READWRITE |\n                  capi.SQLITE_OPEN_MAIN_DB;\n                const pOut = wasm.scopedAlloc(8);\n                const dbFile = '/sanity/check/file' + randomFilename(8);\n                const zDbFile = wasm.scopedAllocCString(dbFile);\n                let rc;\n                state.s11n.serialize('This is ä string.');\n                rc = state.s11n.deserialize();\n                log('deserialize() says:', rc);\n                if ('This is ä string.' !== rc[0]) toss('String d13n error.');\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                log('xAccess(', dbFile, ') exists ?=', rc);\n                rc = vfsSyncWrappers.xOpen(\n                  opfsVfs.pointer,\n                  zDbFile,\n                  fid,\n                  openFlags,\n                  pOut,\n                );\n                log(\n                  'open rc =',\n                  rc,\n                  'state.sabOPView[xOpen] =',\n                  state.sabOPView[state.opIds.xOpen],\n                );\n                if (0 !== rc) {\n                  error('open failed with code', rc);\n                  return;\n                }\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (!rc) toss('xAccess() failed to detect file.');\n                rc = ioSyncWrappers.xSync(sq3File.pointer, 0);\n                if (rc) toss('sync failed w/ rc', rc);\n                rc = ioSyncWrappers.xTruncate(sq3File.pointer, 1024);\n                if (rc) toss('truncate failed w/ rc', rc);\n                wasm.poke(pOut, 0, 'i64');\n                rc = ioSyncWrappers.xFileSize(sq3File.pointer, pOut);\n                if (rc) toss('xFileSize failed w/ rc', rc);\n                log('xFileSize says:', wasm.peek(pOut, 'i64'));\n                rc = ioSyncWrappers.xWrite(sq3File.pointer, zDbFile, 10, 1);\n                if (rc) toss('xWrite() failed!');\n                const readBuf = wasm.scopedAlloc(16);\n                rc = ioSyncWrappers.xRead(sq3File.pointer, readBuf, 6, 2);\n                wasm.poke(readBuf + 6, 0);\n                let jRead = wasm.cstrToJs(readBuf);\n                log('xRead() got:', jRead);\n                if ('sanity' !== jRead) toss('Unexpected xRead() value.');\n                if (vfsSyncWrappers.xSleep) {\n                  log('xSleep()ing before close()ing...');\n                  vfsSyncWrappers.xSleep(opfsVfs.pointer, 2000);\n                  log('waking up from xSleep()');\n                }\n                rc = ioSyncWrappers.xClose(fid);\n                log('xClose rc =', rc, 'sabOPView =', state.sabOPView);\n                log('Deleting file:', dbFile);\n                vfsSyncWrappers.xDelete(opfsVfs.pointer, zDbFile, 0x1234);\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (rc)\n                  toss(\n                    'Expecting 0 from xAccess(',\n                    dbFile,\n                    ') after xDelete().',\n                  );\n                warn('End of OPFS sanity checks.');\n              } finally {\n                sq3File.dispose();\n                wasm.scopedAllocPop(scope);\n              }\n            };\n\n            W.onmessage = function ({ data }) {\n              switch (data.type) {\n                case 'opfs-unavailable':\n                  promiseReject(new Error(data.payload.join(' ')));\n                  break;\n                case 'opfs-async-loaded':\n                  W.postMessage({ type: 'opfs-async-init', args: state });\n                  break;\n                case 'opfs-async-inited': {\n                  if (true === promiseWasRejected) {\n                    break;\n                  }\n                  try {\n                    sqlite3.vfs.installVfs({\n                      io: { struct: opfsIoMethods, methods: ioSyncWrappers },\n                      vfs: { struct: opfsVfs, methods: vfsSyncWrappers },\n                    });\n                    state.sabOPView = new Int32Array(state.sabOP);\n                    state.sabFileBufView = new Uint8Array(\n                      state.sabIO,\n                      0,\n                      state.fileBufferSize,\n                    );\n                    state.sabS11nView = new Uint8Array(\n                      state.sabIO,\n                      state.sabS11nOffset,\n                      state.sabS11nSize,\n                    );\n                    initS11n();\n                    if (options.sanityChecks) {\n                      warn(\n                        'Running sanity checks because of opfs-sanity-check URL arg...',\n                      );\n                      sanityCheck();\n                    }\n                    if (thisThreadHasOPFS()) {\n                      navigator.storage\n                        .getDirectory()\n                        .then((d) => {\n                          W.onerror = W._originalOnError;\n                          delete W._originalOnError;\n                          sqlite3.opfs = opfsUtil;\n                          opfsUtil.rootDirectory = d;\n                          log('End of OPFS sqlite3_vfs setup.', opfsVfs);\n                          promiseResolve();\n                        })\n                        .catch(promiseReject);\n                    } else {\n                      promiseResolve();\n                    }\n                  } catch (e) {\n                    error(e);\n                    promiseReject(e);\n                  }\n                  break;\n                }\n                default: {\n                  const errMsg =\n                    'Unexpected message from the OPFS async worker: ' +\n                    JSON.stringify(data);\n                  error(errMsg);\n                  promiseReject(new Error(errMsg));\n                  break;\n                }\n              }\n            };\n          });\n          return thePromise;\n        };\n        installOpfsVfs.defaultProxyUri = 'sqlite3-opfs-async-proxy.js';\n        globalThis.sqlite3ApiBootstrap.initializersAsync.push(\n          async (sqlite3) => {\n            try {\n              let proxyJs = installOpfsVfs.defaultProxyUri;\n              if (sqlite3.scriptInfo.sqlite3Dir) {\n                installOpfsVfs.defaultProxyUri =\n                  sqlite3.scriptInfo.sqlite3Dir + proxyJs;\n              }\n              return installOpfsVfs().catch((e) => {\n                sqlite3.config.warn(\n                  'Ignoring inability to install OPFS sqlite3_vfs:',\n                  e.message,\n                );\n              });\n            } catch (e) {\n              sqlite3.config.error('installOpfsVfs() exception:', e);\n              return Promise.reject(e);\n            }\n          },\n        );\n      });\n\n      globalThis.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = sqlite3.util.toss;\n        const toss3 = sqlite3.util.toss3;\n        const initPromises = Object.create(null);\n        const capi = sqlite3.capi;\n        const util = sqlite3.util;\n        const wasm = sqlite3.wasm;\n\n        const SECTOR_SIZE = 4096;\n        const HEADER_MAX_PATH_SIZE = 512;\n        const HEADER_FLAGS_SIZE = 4;\n        const HEADER_DIGEST_SIZE = 8;\n        const HEADER_CORPUS_SIZE = HEADER_MAX_PATH_SIZE + HEADER_FLAGS_SIZE;\n        const HEADER_OFFSET_FLAGS = HEADER_MAX_PATH_SIZE;\n        const HEADER_OFFSET_DIGEST = HEADER_CORPUS_SIZE;\n        const HEADER_OFFSET_DATA = SECTOR_SIZE;\n\n        const PERSISTENT_FILE_TYPES =\n          capi.SQLITE_OPEN_MAIN_DB |\n          capi.SQLITE_OPEN_MAIN_JOURNAL |\n          capi.SQLITE_OPEN_SUPER_JOURNAL |\n          capi.SQLITE_OPEN_WAL;\n\n        const OPAQUE_DIR_NAME = '.opaque';\n\n        const getRandomName = () => Math.random().toString(36).slice(2);\n\n        const textDecoder = new TextDecoder();\n        const textEncoder = new TextEncoder();\n\n        const optionDefaults = Object.assign(Object.create(null), {\n          name: 'opfs-sahpool',\n          directory: undefined,\n          initialCapacity: 6,\n          clearOnInit: false,\n\n          verbosity: 2,\n        });\n\n        const loggers = [\n          sqlite3.config.error,\n          sqlite3.config.warn,\n          sqlite3.config.log,\n        ];\n        const log = sqlite3.config.log;\n        const warn = sqlite3.config.warn;\n        const error = sqlite3.config.error;\n\n        const __mapVfsToPool = new Map();\n        const getPoolForVfs = (pVfs) => __mapVfsToPool.get(pVfs);\n        const setPoolForVfs = (pVfs, pool) => {\n          if (pool) __mapVfsToPool.set(pVfs, pool);\n          else __mapVfsToPool.delete(pVfs);\n        };\n\n        const __mapSqlite3File = new Map();\n        const getPoolForPFile = (pFile) => __mapSqlite3File.get(pFile);\n        const setPoolForPFile = (pFile, pool) => {\n          if (pool) __mapSqlite3File.set(pFile, pool);\n          else __mapSqlite3File.delete(pFile);\n        };\n\n        const ioMethods = {\n          xCheckReservedLock: function (pFile, pOut) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xCheckReservedLock');\n            pool.storeErr();\n            wasm.poke32(pOut, 1);\n            return 0;\n          },\n          xClose: function (pFile) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            if (file) {\n              try {\n                pool.log(`xClose ${file.path}`);\n                pool.mapS3FileToOFile(pFile, false);\n                file.sah.flush();\n                if (file.flags & capi.SQLITE_OPEN_DELETEONCLOSE) {\n                  pool.deletePath(file.path);\n                }\n              } catch (e) {\n                return pool.storeErr(e, capi.SQLITE_IOERR);\n              }\n            }\n            return 0;\n          },\n          xDeviceCharacteristics: function (pFile) {\n            return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n          },\n          xFileControl: function (pFile, opId, pArg) {\n            return capi.SQLITE_NOTFOUND;\n          },\n          xFileSize: function (pFile, pSz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xFileSize`);\n            const file = pool.getOFileForS3File(pFile);\n            const size = file.sah.getSize() - HEADER_OFFSET_DATA;\n\n            wasm.poke64(pSz64, BigInt(size));\n            return 0;\n          },\n          xLock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xLock ${lockType}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xRead: function (pFile, pDest, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xRead ${file.path} ${n} @ ${offset64}`);\n            try {\n              const nRead = file.sah.read(\n                wasm.heap8u().subarray(pDest, pDest + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              if (nRead < n) {\n                wasm.heap8u().fill(0, pDest + nRead, pDest + n);\n                return capi.SQLITE_IOERR_SHORT_READ;\n              }\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xSectorSize: function (pFile) {\n            return SECTOR_SIZE;\n          },\n          xSync: function (pFile, flags) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xSync ${flags}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.flush();\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xTruncate: function (pFile, sz64) {\n            const pool = getPoolForPFile(pFile);\n            pool.log(`xTruncate ${sz64}`);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n\n            try {\n              file.sah.truncate(HEADER_OFFSET_DATA + Number(sz64));\n              return 0;\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n          xUnlock: function (pFile, lockType) {\n            const pool = getPoolForPFile(pFile);\n            pool.log('xUnlock');\n            const file = pool.getOFileForS3File(pFile);\n            file.lockType = lockType;\n            return 0;\n          },\n          xWrite: function (pFile, pSrc, n, offset64) {\n            const pool = getPoolForPFile(pFile);\n            pool.storeErr();\n            const file = pool.getOFileForS3File(pFile);\n            pool.log(`xWrite ${file.path} ${n} ${offset64}`);\n            try {\n              const nBytes = file.sah.write(\n                wasm.heap8u().subarray(pSrc, pSrc + n),\n                { at: HEADER_OFFSET_DATA + Number(offset64) },\n              );\n              return n === nBytes ? 0 : toss('Unknown write() failure.');\n            } catch (e) {\n              return pool.storeErr(e, capi.SQLITE_IOERR);\n            }\n          },\n        };\n\n        const opfsIoMethods = new capi.sqlite3_io_methods();\n        opfsIoMethods.$iVersion = 1;\n        sqlite3.vfs.installVfs({\n          io: { struct: opfsIoMethods, methods: ioMethods },\n        });\n\n        const vfsMethods = {\n          xAccess: function (pVfs, zName, flags, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            pool.storeErr();\n            try {\n              const name = pool.getPath(zName);\n              wasm.poke32(pOut, pool.hasFilename(name) ? 1 : 0);\n            } catch (e) {\n              wasm.poke32(pOut, 0);\n            }\n            return 0;\n          },\n          xCurrentTime: function (pVfs, pOut) {\n            wasm.poke(\n              pOut,\n              2440587.5 + new Date().getTime() / 86400000,\n              'double',\n            );\n            return 0;\n          },\n          xCurrentTimeInt64: function (pVfs, pOut) {\n            wasm.poke(pOut, 2440587.5 * 86400000 + new Date().getTime(), 'i64');\n            return 0;\n          },\n          xDelete: function (pVfs, zName, doSyncDir) {\n            const pool = getPoolForVfs(pVfs);\n            pool.log(`xDelete ${wasm.cstrToJs(zName)}`);\n            pool.storeErr();\n            try {\n              pool.deletePath(pool.getPath(zName));\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_IOERR_DELETE;\n            }\n          },\n          xFullPathname: function (pVfs, zName, nOut, pOut) {\n            const i = wasm.cstrncpy(pOut, zName, nOut);\n            return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n          },\n          xGetLastError: function (pVfs, nOut, pOut) {\n            const pool = getPoolForVfs(pVfs);\n            const e = pool.popErr();\n            pool.log(`xGetLastError ${nOut} e =`, e);\n            if (e) {\n              const scope = wasm.scopedAllocPush();\n              try {\n                const [cMsg, n] = wasm.scopedAllocCString(e.message, true);\n                wasm.cstrncpy(pOut, cMsg, nOut);\n                if (n > nOut) wasm.poke8(pOut + nOut - 1, 0);\n              } catch (e) {\n                return capi.SQLITE_NOMEM;\n              } finally {\n                wasm.scopedAllocPop(scope);\n              }\n            }\n            return e ? e.sqlite3Rc || capi.SQLITE_IOERR : 0;\n          },\n\n          xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n            const pool = getPoolForVfs(pVfs);\n            try {\n              pool.log(`xOpen ${wasm.cstrToJs(zName)} ${flags}`);\n\n              const path =\n                zName && wasm.peek8(zName)\n                  ? pool.getPath(zName)\n                  : getRandomName();\n              let sah = pool.getSAHForPath(path);\n              if (!sah && flags & capi.SQLITE_OPEN_CREATE) {\n                if (pool.getFileCount() < pool.getCapacity()) {\n                  sah = pool.nextAvailableSAH();\n                  pool.setAssociatedPath(sah, path, flags);\n                } else {\n                  toss('SAH pool is full. Cannot create file', path);\n                }\n              }\n              if (!sah) {\n                toss('file not found:', path);\n              }\n\n              const file = { path, flags, sah };\n              pool.mapS3FileToOFile(pFile, file);\n              file.lockType = capi.SQLITE_LOCK_NONE;\n              const sq3File = new capi.sqlite3_file(pFile);\n              sq3File.$pMethods = opfsIoMethods.pointer;\n              sq3File.dispose();\n              wasm.poke32(pOutFlags, flags);\n              return 0;\n            } catch (e) {\n              pool.storeErr(e);\n              return capi.SQLITE_CANTOPEN;\n            }\n          },\n        };\n\n        const createOpfsVfs = function (vfsName) {\n          if (sqlite3.capi.sqlite3_vfs_find(vfsName)) {\n            toss3('VFS name is already registered:', vfsName);\n          }\n          const opfsVfs = new capi.sqlite3_vfs();\n\n          const pDVfs = capi.sqlite3_vfs_find(null);\n          const dVfs = pDVfs ? new capi.sqlite3_vfs(pDVfs) : null;\n          opfsVfs.$iVersion = 2;\n          opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n          opfsVfs.$mxPathname = HEADER_MAX_PATH_SIZE;\n          opfsVfs.addOnDispose(\n            (opfsVfs.$zName = wasm.allocCString(vfsName)),\n            () => setPoolForVfs(opfsVfs.pointer, 0),\n          );\n\n          if (dVfs) {\n            opfsVfs.$xRandomness = dVfs.$xRandomness;\n            opfsVfs.$xSleep = dVfs.$xSleep;\n            dVfs.dispose();\n          }\n          if (!opfsVfs.$xRandomness && !vfsMethods.xRandomness) {\n            vfsMethods.xRandomness = function (pVfs, nOut, pOut) {\n              const heap = wasm.heap8u();\n              let i = 0;\n              for (; i < nOut; ++i)\n                heap[pOut + i] = (Math.random() * 255000) & 0xff;\n              return i;\n            };\n          }\n          if (!opfsVfs.$xSleep && !vfsMethods.xSleep) {\n            vfsMethods.xSleep = (pVfs, ms) => 0;\n          }\n          sqlite3.vfs.installVfs({\n            vfs: { struct: opfsVfs, methods: vfsMethods },\n          });\n          return opfsVfs;\n        };\n\n        class OpfsSAHPool {\n          vfsDir;\n\n          #dhVfsRoot;\n\n          #dhOpaque;\n\n          #dhVfsParent;\n\n          #mapSAHToName = new Map();\n\n          #mapFilenameToSAH = new Map();\n\n          #availableSAH = new Set();\n\n          #mapS3FileToOFile_ = new Map();\n\n          #apBody = new Uint8Array(HEADER_CORPUS_SIZE);\n\n          #dvBody;\n\n          #cVfs;\n\n          #verbosity;\n\n          constructor(options = Object.create(null)) {\n            this.#verbosity = options.verbosity ?? optionDefaults.verbosity;\n            this.vfsName = options.name || optionDefaults.name;\n            this.#cVfs = createOpfsVfs(this.vfsName);\n            setPoolForVfs(this.#cVfs.pointer, this);\n            this.vfsDir = options.directory || '.' + this.vfsName;\n            this.#dvBody = new DataView(\n              this.#apBody.buffer,\n              this.#apBody.byteOffset,\n            );\n            this.isReady = this.reset(\n              !!(options.clearOnInit ?? optionDefaults.clearOnInit),\n            ).then(() => {\n              if (this.$error) throw this.$error;\n              return this.getCapacity()\n                ? Promise.resolve(undefined)\n                : this.addCapacity(\n                    options.initialCapacity || optionDefaults.initialCapacity,\n                  );\n            });\n          }\n\n          #logImpl(level, ...args) {\n            if (this.#verbosity > level)\n              loggers[level](this.vfsName + ':', ...args);\n          }\n          log(...args) {\n            this.#logImpl(2, ...args);\n          }\n          warn(...args) {\n            this.#logImpl(1, ...args);\n          }\n          error(...args) {\n            this.#logImpl(0, ...args);\n          }\n\n          getVfs() {\n            return this.#cVfs;\n          }\n\n          getCapacity() {\n            return this.#mapSAHToName.size;\n          }\n\n          getFileCount() {\n            return this.#mapFilenameToSAH.size;\n          }\n\n          getFileNames() {\n            const rc = [];\n            const iter = this.#mapFilenameToSAH.keys();\n            for (const n of iter) rc.push(n);\n            return rc;\n          }\n\n          async addCapacity(n) {\n            for (let i = 0; i < n; ++i) {\n              const name = getRandomName();\n              const h = await this.#dhOpaque.getFileHandle(name, {\n                create: true,\n              });\n              const ah = await h.createSyncAccessHandle();\n              this.#mapSAHToName.set(ah, name);\n              this.setAssociatedPath(ah, '', 0);\n            }\n            return this.getCapacity();\n          }\n\n          async reduceCapacity(n) {\n            let nRm = 0;\n            for (const ah of Array.from(this.#availableSAH)) {\n              if (nRm === n || this.getFileCount() === this.getCapacity()) {\n                break;\n              }\n              const name = this.#mapSAHToName.get(ah);\n\n              ah.close();\n              await this.#dhOpaque.removeEntry(name);\n              this.#mapSAHToName.delete(ah);\n              this.#availableSAH.delete(ah);\n              ++nRm;\n            }\n            return nRm;\n          }\n\n          releaseAccessHandles() {\n            for (const ah of this.#mapSAHToName.keys()) ah.close();\n            this.#mapSAHToName.clear();\n            this.#mapFilenameToSAH.clear();\n            this.#availableSAH.clear();\n          }\n\n          async acquireAccessHandles(clearFiles) {\n            const files = [];\n            for await (const [name, h] of this.#dhOpaque) {\n              if ('file' === h.kind) {\n                files.push([name, h]);\n              }\n            }\n            return Promise.all(\n              files.map(async ([name, h]) => {\n                try {\n                  const ah = await h.createSyncAccessHandle();\n                  this.#mapSAHToName.set(ah, name);\n                  if (clearFiles) {\n                    ah.truncate(HEADER_OFFSET_DATA);\n                    this.setAssociatedPath(ah, '', 0);\n                  } else {\n                    const path = this.getAssociatedPath(ah);\n                    if (path) {\n                      this.#mapFilenameToSAH.set(path, ah);\n                    } else {\n                      this.#availableSAH.add(ah);\n                    }\n                  }\n                } catch (e) {\n                  this.storeErr(e);\n                  this.releaseAccessHandles();\n                  throw e;\n                }\n              }),\n            );\n          }\n\n          getAssociatedPath(sah) {\n            sah.read(this.#apBody, { at: 0 });\n\n            const flags = this.#dvBody.getUint32(HEADER_OFFSET_FLAGS);\n            if (\n              this.#apBody[0] &&\n              (flags & capi.SQLITE_OPEN_DELETEONCLOSE ||\n                (flags & PERSISTENT_FILE_TYPES) === 0)\n            ) {\n              warn(\n                `Removing file with unexpected flags ${flags.toString(16)}`,\n                this.#apBody,\n              );\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n\n            const fileDigest = new Uint32Array(HEADER_DIGEST_SIZE / 4);\n            sah.read(fileDigest, { at: HEADER_OFFSET_DIGEST });\n            const compDigest = this.computeDigest(this.#apBody);\n            if (fileDigest.every((v, i) => v === compDigest[i])) {\n              const pathBytes = this.#apBody.findIndex((v) => 0 === v);\n              if (0 === pathBytes) {\n                sah.truncate(HEADER_OFFSET_DATA);\n              }\n              return pathBytes\n                ? textDecoder.decode(this.#apBody.subarray(0, pathBytes))\n                : '';\n            } else {\n              warn('Disassociating file with bad digest.');\n              this.setAssociatedPath(sah, '', 0);\n              return '';\n            }\n          }\n\n          setAssociatedPath(sah, path, flags) {\n            const enc = textEncoder.encodeInto(path, this.#apBody);\n            if (HEADER_MAX_PATH_SIZE <= enc.written + 1) {\n              toss('Path too long:', path);\n            }\n            this.#apBody.fill(0, enc.written, HEADER_MAX_PATH_SIZE);\n            this.#dvBody.setUint32(HEADER_OFFSET_FLAGS, flags);\n\n            const digest = this.computeDigest(this.#apBody);\n            sah.write(this.#apBody, { at: 0 });\n            sah.write(digest, { at: HEADER_OFFSET_DIGEST });\n            sah.flush();\n\n            if (path) {\n              this.#mapFilenameToSAH.set(path, sah);\n              this.#availableSAH.delete(sah);\n            } else {\n              sah.truncate(HEADER_OFFSET_DATA);\n              this.#availableSAH.add(sah);\n            }\n          }\n\n          computeDigest(byteArray) {\n            let h1 = 0xdeadbeef;\n            let h2 = 0x41c6ce57;\n            for (const v of byteArray) {\n              h1 = 31 * h1 + v * 307;\n              h2 = 31 * h2 + v * 307;\n            }\n            return new Uint32Array([h1 >>> 0, h2 >>> 0]);\n          }\n\n          async reset(clearFiles) {\n            await this.isReady;\n            let h = await navigator.storage.getDirectory();\n            let prev, prevName;\n            for (const d of this.vfsDir.split('/')) {\n              if (d) {\n                prev = h;\n                h = await h.getDirectoryHandle(d, { create: true });\n              }\n            }\n            this.#dhVfsRoot = h;\n            this.#dhVfsParent = prev;\n            this.#dhOpaque = await this.#dhVfsRoot.getDirectoryHandle(\n              OPAQUE_DIR_NAME,\n              { create: true },\n            );\n            this.releaseAccessHandles();\n            return this.acquireAccessHandles(clearFiles);\n          }\n\n          getPath(arg) {\n            if (wasm.isPtr(arg)) arg = wasm.cstrToJs(arg);\n            return (\n              arg instanceof URL ? arg : new URL(arg, 'file://localhost/')\n            ).pathname;\n          }\n\n          deletePath(path) {\n            const sah = this.#mapFilenameToSAH.get(path);\n            if (sah) {\n              this.#mapFilenameToSAH.delete(path);\n              this.setAssociatedPath(sah, '', 0);\n            }\n            return !!sah;\n          }\n\n          storeErr(e, code) {\n            if (e) {\n              e.sqlite3Rc = code || capi.SQLITE_IOERR;\n              this.error(e);\n            }\n            this.$error = e;\n            return code;\n          }\n\n          popErr() {\n            const rc = this.$error;\n            this.$error = undefined;\n            return rc;\n          }\n\n          nextAvailableSAH() {\n            const [rc] = this.#availableSAH.keys();\n            return rc;\n          }\n\n          getOFileForS3File(pFile) {\n            return this.#mapS3FileToOFile_.get(pFile);\n          }\n\n          mapS3FileToOFile(pFile, file) {\n            if (file) {\n              this.#mapS3FileToOFile_.set(pFile, file);\n              setPoolForPFile(pFile, this);\n            } else {\n              this.#mapS3FileToOFile_.delete(pFile);\n              setPoolForPFile(pFile, false);\n            }\n          }\n\n          hasFilename(name) {\n            return this.#mapFilenameToSAH.has(name);\n          }\n\n          getSAHForPath(path) {\n            return this.#mapFilenameToSAH.get(path);\n          }\n\n          async removeVfs() {\n            if (!this.#cVfs.pointer || !this.#dhOpaque) return false;\n            capi.sqlite3_vfs_unregister(this.#cVfs.pointer);\n            this.#cVfs.dispose();\n            try {\n              this.releaseAccessHandles();\n              await this.#dhVfsRoot.removeEntry(OPAQUE_DIR_NAME, {\n                recursive: true,\n              });\n              this.#dhOpaque = undefined;\n              await this.#dhVfsParent.removeEntry(this.#dhVfsRoot.name, {\n                recursive: true,\n              });\n              this.#dhVfsRoot = this.#dhVfsParent = undefined;\n            } catch (e) {\n              sqlite3.config.error(this.vfsName, 'removeVfs() failed:', e);\n            }\n            return true;\n          }\n\n          exportFile(name) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) || toss('File not found:', name);\n            const n = sah.getSize() - HEADER_OFFSET_DATA;\n            const b = new Uint8Array(n > 0 ? n : 0);\n            if (n > 0) {\n              const nRead = sah.read(b, { at: HEADER_OFFSET_DATA });\n              if (nRead != n) {\n                toss(\n                  'Expected to read ' + n + ' bytes but read ' + nRead + '.',\n                );\n              }\n            }\n            return b;\n          }\n\n          async importDbChunked(name, callback) {\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            sah.truncate(0);\n            let nWrote = 0,\n              chunk,\n              checkedHeader = false,\n              err = false;\n            try {\n              while (undefined !== (chunk = await callback())) {\n                if (chunk instanceof ArrayBuffer) chunk = new Uint8Array(chunk);\n                if (0 === nWrote && chunk.byteLength >= 15) {\n                  util.affirmDbHeader(chunk);\n                  checkedHeader = true;\n                }\n                sah.write(chunk, { at: HEADER_OFFSET_DATA + nWrote });\n                nWrote += chunk.byteLength;\n              }\n              if (nWrote < 512 || 0 !== nWrote % 512) {\n                toss(\n                  'Input size',\n                  nWrote,\n                  'is not correct for an SQLite database.',\n                );\n              }\n              if (!checkedHeader) {\n                const header = new Uint8Array(20);\n                sah.read(header, { at: 0 });\n                util.affirmDbHeader(header);\n              }\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n            } catch (e) {\n              this.setAssociatedPath(sah, '', 0);\n              throw e;\n            }\n            this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            return nWrote;\n          }\n\n          importDb(name, bytes) {\n            if (bytes instanceof ArrayBuffer) bytes = new Uint8Array(bytes);\n            else if (bytes instanceof Function)\n              return this.importDbChunked(name, bytes);\n            const sah =\n              this.#mapFilenameToSAH.get(name) ||\n              this.nextAvailableSAH() ||\n              toss('No available handles to import to.');\n            const n = bytes.byteLength;\n            if (n < 512 || n % 512 != 0) {\n              toss('Byte array size is invalid for an SQLite db.');\n            }\n            const header = 'SQLite format 3';\n            for (let i = 0; i < header.length; ++i) {\n              if (header.charCodeAt(i) !== bytes[i]) {\n                toss('Input does not contain an SQLite database header.');\n              }\n            }\n            const nWrote = sah.write(bytes, { at: HEADER_OFFSET_DATA });\n            if (nWrote != n) {\n              this.setAssociatedPath(sah, '', 0);\n              toss(\n                'Expected to write ' + n + ' bytes but wrote ' + nWrote + '.',\n              );\n            } else {\n              sah.write(new Uint8Array([1, 1]), {\n                at: HEADER_OFFSET_DATA + 18,\n              });\n              this.setAssociatedPath(sah, name, capi.SQLITE_OPEN_MAIN_DB);\n            }\n            return nWrote;\n          }\n        }\n\n        class OpfsSAHPoolUtil {\n          #p;\n\n          constructor(sahPool) {\n            this.#p = sahPool;\n            this.vfsName = sahPool.vfsName;\n          }\n\n          async addCapacity(n) {\n            return this.#p.addCapacity(n);\n          }\n\n          async reduceCapacity(n) {\n            return this.#p.reduceCapacity(n);\n          }\n\n          getCapacity() {\n            return this.#p.getCapacity(this.#p);\n          }\n\n          getFileCount() {\n            return this.#p.getFileCount();\n          }\n          getFileNames() {\n            return this.#p.getFileNames();\n          }\n\n          async reserveMinimumCapacity(min) {\n            const c = this.#p.getCapacity();\n            return c < min ? this.#p.addCapacity(min - c) : c;\n          }\n\n          exportFile(name) {\n            return this.#p.exportFile(name);\n          }\n\n          importDb(name, bytes) {\n            return this.#p.importDb(name, bytes);\n          }\n\n          async wipeFiles() {\n            return this.#p.reset(true);\n          }\n\n          unlink(filename) {\n            return this.#p.deletePath(filename);\n          }\n\n          async removeVfs() {\n            return this.#p.removeVfs();\n          }\n        }\n\n        const apiVersionCheck = async () => {\n          const dh = await navigator.storage.getDirectory();\n          const fn = '.opfs-sahpool-sync-check-' + getRandomName();\n          const fh = await dh.getFileHandle(fn, { create: true });\n          const ah = await fh.createSyncAccessHandle();\n          const close = ah.close();\n          await close;\n          await dh.removeEntry(fn);\n          if (close?.then) {\n            toss(\n              'The local OPFS API is too old for opfs-sahpool:',\n              'it has an async FileSystemSyncAccessHandle.close() method.',\n            );\n          }\n          return true;\n        };\n\n        let instanceCounter = 0;\n\n        sqlite3.installOpfsSAHPoolVfs = async function (\n          options = Object.create(null),\n        ) {\n          const vfsName = options.name || optionDefaults.name;\n          if (0 && 2 === ++instanceCounter) {\n            throw new Error('Just testing rejection.');\n          }\n          if (initPromises[vfsName]) {\n            return initPromises[vfsName];\n          }\n          if (\n            !globalThis.FileSystemHandle ||\n            !globalThis.FileSystemDirectoryHandle ||\n            !globalThis.FileSystemFileHandle ||\n            !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator?.storage?.getDirectory\n          ) {\n            return (initPromises[vfsName] = Promise.reject(\n              new Error('Missing required OPFS APIs.'),\n            ));\n          }\n\n          return (initPromises[vfsName] = apiVersionCheck()\n            .then(async function () {\n              if (options.$testThrowInInit) {\n                throw options.$testThrowInInit;\n              }\n              const thePool = new OpfsSAHPool(options);\n              return thePool.isReady\n                .then(async () => {\n                  const poolUtil = new OpfsSAHPoolUtil(thePool);\n                  if (sqlite3.oo1) {\n                    const oo1 = sqlite3.oo1;\n                    const theVfs = thePool.getVfs();\n                    const OpfsSAHPoolDb = function (...args) {\n                      const opt = oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                      opt.vfs = theVfs.$zName;\n                      oo1.DB.dbCtorHelper.call(this, opt);\n                    };\n                    OpfsSAHPoolDb.prototype = Object.create(oo1.DB.prototype);\n\n                    poolUtil.OpfsSAHPoolDb = OpfsSAHPoolDb;\n                    oo1.DB.dbCtorHelper.setVfsPostOpenSql(\n                      theVfs.pointer,\n                      function (oo1Db, sqlite3) {\n                        sqlite3.capi.sqlite3_exec(\n                          oo1Db,\n                          [\n                            'pragma journal_mode=DELETE;',\n                            'pragma cache_size=-16384;',\n                          ],\n                          0,\n                          0,\n                          0,\n                        );\n                      },\n                    );\n                  }\n                  thePool.log('VFS initialized.');\n                  return poolUtil;\n                })\n                .catch(async (e) => {\n                  await thePool.removeVfs().catch(() => {});\n                  throw e;\n                });\n            })\n            .catch((err) => {\n              return (initPromises[vfsName] = Promise.reject(err));\n            }));\n        };\n      });\n\n      ('use strict');\n      if ('undefined' !== typeof Module) {\n        const SABC = Object.assign(\n          Object.create(null),\n          {\n            exports:\n              'undefined' === typeof wasmExports ? Module['asm'] : wasmExports,\n            memory: Module.wasmMemory,\n          },\n          globalThis.sqlite3ApiConfig || {},\n        );\n\n        globalThis.sqlite3ApiConfig = SABC;\n        let sqlite3;\n        try {\n          sqlite3 = globalThis.sqlite3ApiBootstrap();\n        } catch (e) {\n          console.error('sqlite3ApiBootstrap() error:', e);\n          throw e;\n        } finally {\n          delete globalThis.sqlite3ApiBootstrap;\n          delete globalThis.sqlite3ApiConfig;\n        }\n\n        Module.sqlite3 = sqlite3;\n      } else {\n        console.warn(\n          'This is not running in an Emscripten module context, so',\n          'globalThis.sqlite3ApiBootstrap() is _not_ being called due to lack',\n          'of config info for the WASM environment.',\n          'It must be called manually.',\n        );\n      }\n    });\n\n    return sqlite3InitModule.ready;\n  };\n})();\n\nconst toExportForESM = (function () {\n  const originalInit = sqlite3InitModule;\n  if (!originalInit) {\n    throw new Error(\n      'Expecting globalThis.sqlite3InitModule to be defined by the Emscripten build.',\n    );\n  }\n\n  const initModuleState = (globalThis.sqlite3InitModuleState = Object.assign(\n    Object.create(null),\n    {\n      moduleScript: globalThis?.document?.currentScript,\n      isWorker: 'undefined' !== typeof WorkerGlobalScope,\n      location: globalThis.location,\n      urlParams: globalThis?.location?.href\n        ? new URL(globalThis.location.href).searchParams\n        : new URLSearchParams(),\n    },\n  ));\n  initModuleState.debugModule = initModuleState.urlParams.has(\n    'sqlite3.debugModule',\n  )\n    ? (...args) => console.warn('sqlite3.debugModule:', ...args)\n    : () => {};\n\n  if (initModuleState.urlParams.has('sqlite3.dir')) {\n    initModuleState.sqlite3Dir =\n      initModuleState.urlParams.get('sqlite3.dir') + '/';\n  } else if (initModuleState.moduleScript) {\n    const li = initModuleState.moduleScript.src.split('/');\n    li.pop();\n    initModuleState.sqlite3Dir = li.join('/') + '/';\n  }\n\n  globalThis.sqlite3InitModule = function ff(...args) {\n    return originalInit(...args)\n      .then((EmscriptenModule) => {\n        const s = EmscriptenModule.sqlite3;\n        s.scriptInfo = initModuleState;\n\n        if (ff.__isUnderTest) s.__isUnderTest = true;\n        const f = s.asyncPostInit;\n        delete s.asyncPostInit;\n        return f();\n      })\n      .catch((e) => {\n        console.error('Exception loading sqlite3 module:', e);\n        throw e;\n      });\n  };\n  globalThis.sqlite3InitModule.ready = originalInit.ready;\n\n  if (globalThis.sqlite3InitModuleState.moduleScript) {\n    const sim = globalThis.sqlite3InitModuleState;\n    let src = sim.moduleScript.src.split('/');\n    src.pop();\n    sim.scriptDir = src.join('/') + '/';\n  }\n  initModuleState.debugModule('sqlite3InitModuleState =', initModuleState);\n  if (0) {\n    console.warn('Replaced sqlite3InitModule()');\n    console.warn('globalThis.location.href =', globalThis.location.href);\n    if ('undefined' !== typeof document) {\n      console.warn(\n        'document.currentScript.src =',\n        document?.currentScript?.src,\n      );\n    }\n  }\n  return globalThis.sqlite3InitModule;\n})();\nsqlite3InitModule = toExportForESM;\nexport default sqlite3InitModule;\n"],"names":["sqlite3InitModule","_scriptDir","config","readyPromiseResolve","readyPromiseReject","Module","Promise","resolve","reject","sqlite3InitModuleState","globalThis","Object","assign","create","debugModule","location","xNameOfInstantiateWasm","callee","imports","onSuccess","env","foo","uri","locateFile","scriptDirectory","wfetch","fetch","credentials","WebAssembly","instantiateStreaming","async","then","arg","instance","module","response","arrayBuffer","bytes","instantiate","read_","readAsync","readBinary","moduleOverrides","arguments_","thisProgram","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","versions","node","self","href","document","currentScript","src","indexOf","substr","replace","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","Uint8Array","onload","onerror","status","out","console","log","bind","err","warn","wasmBinary","wasmMemory","abort","ABORT","assert","condition","text","HEAP8","HEAPU8","HEAP16","HEAP32","HEAPU32","UTF8Decoder","TextDecoder","undefined","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","buffer","decode","subarray","str","u0","u1","u2","String","fromCharCode","ch","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","i","length","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","c","updateMemoryViews","b","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","INITIAL_MEMORY","Memory","initial","maximum","byteLength","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","e","RuntimeError","wasmBinaryFile","path","tempDouble","tempI64","dataURIPrefix","isDataURI","filename","startsWith","getBinary","file","callRuntimeCallbacks","callbacks","shift","URL","PATH","isAbs","charAt","splitPath","exec","slice","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","normalize","isAbsolute","trailingSlash","split","filter","p","join","dirname","result","root","dir","basename","lastSlash","paths","Array","prototype","call","arguments","join2","l","r","PATH_FS","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","push","concat","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","TTY","ttys","init","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","fsync","read","offset","pos","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","prompt","readline","val","default_tty1_ops","mmapAlloc","size","alignment","ceil","alignMemory","ptr","_emscripten_builtin_memalign","address","fill","zeroMemory","MEMFS","ops_table","mount","createNode","parent","name","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","set","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","key","hasOwnProperty","newname","oldpath","position","canOwn","whence","prot","flags","allocated","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","filesystems","syncFSRequests","lookupPath","opts","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","w","a","modeStringToFlags","Error","flagsToPermissionString","flag","perms","nodePermissions","includes","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","this","shared","defineProperties","object","get","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","pop","apply","syncfs","populate","completed","doCallback","done","errored","forEach","type","pseudo","mountRoot","unmount","keys","next","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","error","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","encoding","ret","buf","writeFile","data","actualNumBytes","ArrayBuffer","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","getRandomDevice","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","message","constructor","code","stack","staticInit","quit","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","writeChunks","fn","createPreloadedFile","dontCreateFile","preFinish","fullname","processData","byteArray","finish","Browser","handledByPreloadPlugin","noRunDep","dep","event","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","func","abs","floor","getTime","doMsync","addr","varargs","getStr","UTF8ToString","MAX_INT53","MIN_INT53","bigintToI53Checked","num","NaN","readI53FromI64","_emscripten_get_now","__MONTH_DAYS_LEAP_CUMULATIVE","__MONTH_DAYS_REGULAR_CUMULATIVE","allocateUTF8","_malloc","emscripten_realloc_buffer","grow","performance","ENV","getEnvStrings","strings","USER","LOGNAME","PWD","HOME","LANG","navigator","languages","_","x","readMode","writeMode","calledRun","asmLibraryArg","__syscall_chmod","__syscall_faccessat","amode","__syscall_fchmod","__syscall_fchown32","owner","group","__syscall_fcntl64","value","___errno_location","__syscall_fstat64","__syscall_ftruncate64","isNaN","__syscall_getcwd","cwdLengthInBytes","__syscall_ioctl","op","argp","__syscall_lstat64","__syscall_mkdirat","__syscall_newfstatat","nofollow","__syscall_openat","__syscall_readlinkat","bufsize","endChar","__syscall_rmdir","__syscall_stat64","__syscall_unlinkat","__syscall_utimensat","times","seconds","nanoseconds","_emscripten_get_now_is_monotonic","_localtime_js","time","tmPtr","date","getSeconds","getMinutes","getHours","getDate","getMonth","getFullYear","getDay","yday","year","__yday_from_date","getTimezoneOffset","summerOffset","winterOffset","dst","_mmap_js","off","res","_munmap_js","_tzset_js","timezone","daylight","tzname","currentYear","winter","summer","stdTimezoneOffset","extractZone","match","toTimeString","winterName","summerName","winterNamePtr","summerNamePtr","emscripten_date_now","emscripten_get_now","emscripten_resize_heap","requestedSize","multiple","oldSize","maxHeapSize","cutDown","overGrownHeapSize","environ_get","__environ","environ_buf","bufSize","string","writeAsciiToMemory","environ_sizes_get","penviron_count","penviron_buf_size","fd_close","fd_fdstat_get","pbuf","fd_read","iov","iovcnt","pnum","curr","doReadv","fd_seek","newOffset","fd_sync","fd_write","doWritev","memory","info","wasi_snapshot_preview1","receiveInstance","cb","exports","receiveInstantiationResult","instantiateArrayBuffer","receiver","catch","binary","reason","createWasm","run","args","doRun","postRun","preRun","setTimeout","runCaller","sqlite3ApiBootstrap","apiConfig","sqlite3ApiConfig","defaultConfig","sqlite3","bigIntEnabled","HEAPU64","debug","wasmfsOpfsDir","useStdAlloc","allocExportName","deallocExportName","reallocExportName","k","capi","wasm","__rcStr","rc","sqlite3_js_rc_str","SQLite3Error","n","super","rcStr","resultCode","SQLITE_ERROR","toss","toss3","test","isInt32","__SAB","SharedArrayBuffer","isSharedTypedArray","aTypedArray","typedArrayPart","begin","isBindableTypedArray","v","isSQLableTypedArray","affirmBindableTypedArray","utf8Decoder","typedArrayToString","typedArray","flexibleString","isArray","isPtr","cstrToJs","WasmAllocError","SQLITE_NOMEM","sqlite3_bind_blob","sqlite3_bind_text","sqlite3_create_function_v2","pDb","funcName","nArg","eTextRep","pApp","xFunc","xStep","xFinal","xDestroy","sqlite3_create_function","sqlite3_create_window_function","xValue","xInverse","sqlite3_prepare_v3","dbPtr","sql","sqlByteLen","prepFlags","stmtPtrPtr","strPtrPtr","sqlite3_prepare_v2","sqlite3_exec","pVoid","pErrMsg","sqlite3_randomness","util","bigIntFits32","bigIntFits64","f","_max","BigInt","_min","bigIntFitsDouble","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","isTypedArray","BYTES_PER_ELEMENT","isUIThread","affirmDbHeader","affirmIsDb","ptrSizeof","wasmPtrSizeof","ptrIR","wasmPtrIR","alloc","realloc","dealloc","allocFromTypedArray","srcTypedArray","pRet","heapForSize","keyAlloc","keyDealloc","keyRealloc","Function","impl","m2","__wasmfsOpfsDir","compileOptionUsed","optName","_result","_opt","_rx","_rxInt","opt","rv","ov","sqlite3_compileoption_get","sqlite3_compileoption_used","pstack","restore","sqlite3__wasm_pstack_restore","sizeofIR","sqlite3__wasm_pstack_alloc","allocChunks","sz","mem","allocPtr","safePtrSize","stackPos","pointer","configurable","iterable","writeable","sqlite3__wasm_pstack_ptr","quota","sqlite3__wasm_pstack_quota","remaining","sqlite3__wasm_pstack_remaining","ta","heap8u","nAlloc","j","sqlite3_wasmfs_opfs_dir","pdir","FileSystemHandle","FileSystemDirectoryHandle","FileSystemFileHandle","xCallWrapped","sqlite3_wasmfs_filename_is_persistent","sqlite3_js_db_uses_vfs","vfsName","dbName","pK","sqlite3_vfs_find","sqlite3_js_db_vfs","sqlite3_js_vfs_list","pVfs","oVfs","sqlite3_vfs","$zName","$pNext","dispose","sqlite3_js_db_export","schema","xWrap","testConvertArg","scope","scopedAllocPush","pOut","pSize","scopedAlloc","ppOut","zSchema","scopedAllocCString","sqlite3__wasm_db_serialize","peekPtr","nOut","peek","sqlite3_free","scopedAllocPop","dbPointer","sqlite3__wasm_db_vfs","sqlite3_js_aggregate_context","pCtx","sqlite3_aggregate_context","sqlite3_js_posix_create_file","dataLen","pData","sqlite3__wasm_posix_create_file","sqlite3_js_vfs_create_file","vfs","sqlite3__wasm_vfs_create_file","sqlite3_js_sql_to_string","__kvvfsInfo","which","prefix","stores","sessionStorage","localStorage","sqlite3_js_kvvfs_clear","kvinfo","s","toRm","kk","removeItem","sqlite3_js_kvvfs_size","getItem","sqlite3_db_config","pii","ip","SQLITE_DBCONFIG_ENABLE_FKEY","SQLITE_DBCONFIG_ENABLE_TRIGGER","SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION","SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","SQLITE_DBCONFIG_ENABLE_QPSG","SQLITE_DBCONFIG_TRIGGER_EQP","SQLITE_DBCONFIG_RESET_DATABASE","SQLITE_DBCONFIG_DEFENSIVE","SQLITE_DBCONFIG_WRITABLE_SCHEMA","SQLITE_DBCONFIG_LEGACY_ALTER_TABLE","SQLITE_DBCONFIG_DQS_DML","SQLITE_DBCONFIG_DQS_DDL","SQLITE_DBCONFIG_ENABLE_VIEW","SQLITE_DBCONFIG_LEGACY_FILE_FORMAT","SQLITE_DBCONFIG_TRUSTED_SCHEMA","SQLITE_DBCONFIG_STMT_SCANSTATUS","SQLITE_DBCONFIG_REVERSE_SCANORDER","SQLITE_DBCONFIG_LOOKASIDE","SQLITE_DBCONFIG_MAINDBNAME","SQLITE_MISUSE","sqlite3_value_to_js","pVal","throwIfCannotConvert","valType","sqlite3_value_type","SQLITE_INTEGER","sqlite3_value_int64","sqlite3_value_double","SQLITE_FLOAT","SQLITE_TEXT","sqlite3_value_text","SQLITE_BLOB","sqlite3_value_bytes","pBlob","sqlite3_value_blob","SQLITE_NULL","SQLITE_MISMATCH","sqlite3_values_to_js","argc","pArgv","tgt","sqlite3_result_error_js","sqlite3_result_error_nomem","sqlite3_result_error","sqlite3_result_js","sqlite3_result_int","sqlite3_result_double","sqlite3_result_int64","toString","isInteger","allocCString","sqlite3_result_text","SQLITE_WASM_DEALLOC","sqlite3_result_null","sqlite3_result_blob","sqlite3_column_js","pStmt","iCol","sqlite3_column_value","__newOldValue","pObj","pokePtr","pv","sqlite3_preupdate_new_js","sqlite3_preupdate_old_js","sqlite3changeset_new_js","pChangesetIter","sqlite3changeset_old_js","version","client","asyncPostInit","ff","isReady","lia","initializersAsync","postInit","__isUnderTest","StructBinder","catcher","map","scriptInfo","initializers","WhWasmUtilInstaller","target","defineProperty","enumerable","pointerIR","cache","heapSize","freeFuncIndexes","utf8Encoder","TextEncoder","endsWith","heapWrappers","HEAP8U","HEAP16U","HEAP32U","HEAP64","HEAP64U","HEAP32F","HEAP64F","heap8","heap16","heap16u","heap32","heap32u","unsigned","functionTable","__indirect_function_table","functionEntry","fptr","ft","jsFuncToWasm","sig","sigTypes","P","typeCodes","f64","f32","i64","i32","uleb128Encode","method","rxJSig","sigParams","letterType","pushSigType","dest","letter","wasmCode","Instance","__installFunction","scoped","oldLen","installFunction","scopedInstallFunction","uninstallFunction","fi","list","poke","peek8","poke8","peek16","poke16","peek32","poke32","peek64","poke64","peek32f","poke32f","peek64f","poke64f","getMemValue","getPtrValue","setMemValue","setPtrValue","isPtr32","cstrlen","h","jstrlen","jstrcpy","jstr","maxBytes","addNul","cstrncpy","tgtPtr","srcPtr","strPtr","jstrToUintArray","encode","__affirmAlloc","__allocCStr","returnWithLength","allocator","state","__allocMainArgv","isScoped","pList","scopedAllocMainArgv","allocMainArgv","cArgvToJs","scopedAllocCall","__allocPtr","howMany","pIr","scopedAllocPtr","xGet","__argcMismatch","xCall","fname","convert","Map","xArg","xResult","__xArgPtr","valueOf","copyToResult","adaptPtr","t","__xArgString","JSON","parse","AbstractArgAdapter","convertArg","argv","argIndex","FuncPtrAdapter","warnOnUse","signature","contextKey","bindScope","bindScopes","bindMod","isTransient","isContext","isPermanent","singleton","callProxy","contextMap","cm","__cmap","pair","fp","debugFuncInstall","debugOut","__xArgAdapterCheck","__xResultAdapterCheck","convertArgNoCheck","convertResult","convertResultNoCheck","fArg","resultType","argTypes","fIsFunc","xf","cxw","__xAdapter","typeName","adapter","modeName","xcvPart","resultAdapter","argAdapter","testConvertResult","yawl","wui","finalThen","wasmUtilTarget","malloc","free","Jaccwabyt","StructBinderFactory","SBF","memberPrefix","memberSuffix","debugFlags","__makeDebugFlags","deriveFrom","__flags","setter","_flags","writable","isLittleEndian","DataView","setInt16","sigLetter","isFuncSig","sigIR","affirmBigIntArray","sPropName","__instancePointerMap","WeakMap","xPtrPropName","__freeStruct","ctor","delete","ondispose","StructType","structName","structInfo","sizeof","rop","__allocStruct","__memberKeyProp","__lookupMember","memberName","tossIfNotFound","members","values","__memberSignature","emscriptenFormat","__ptrPropDescriptor","__structMemberKeys","memberKey","__utf8Decoder","__utf8Encoder","__affirmCStringSignature","member","stringify","__memberToJsString","__addOnDispose","__allocCString","lookupMember","memberToJsString","memberIsString","__memberIsString","memberKeys","memberSignature","memoryDump","setMemberCString","__setMemberCString","addOnDispose","isA","hasExternalPointer","isNumericValue","isFinite","makeMemberWrapper","descr","getters","setters","sw","sigDVGetter","sigDVSetter","sigDVSetWrapper","rxSig1","rxSig2","sigCheck","sigGlyph","xPropName","dbg","prop","propName","readOnly","lastMember","StructCtor","externalMemory","methodInfoForKey","mKey","bindingSignatures","aNames","nCols","pColVals","pColNames","aVals","pV","iCode","s0","s1","s2","s3","int64","zDb","zTbl","iKey1","iKey2","z0","z1","rowid","sqlite3changegroup_add","__ipsProxy","wasmInternal","__xString","nilType","oo1","Stmt","DB","sqlite3_index_info","sqlite3_module","SQLITE_NOTFOUND","__xRcPtr","sqlite3_step","doArgcCheck","fI64Disabled","sqlite3__wasm_db_error","__db_err","msg","cJson","ctype","defineGroups","__rcMap","notThese","WasmTestStruct","sqlite3_kvvfs_methods","sqlite3_index_constraint","sqlite3_index_orderby","sqlite3_index_constraint_usage","structs","sqlite3_vtab_config","__dbArgcMismatch","__errEncoding","SQLITE_FORMAT","__argPDb","__argStr","__dbCleanupMap","dbMap","addCollation","collation","Set","add","toLowerCase","_addUDF","arity","addFunction","udf","addWindowFunc","wudf","cleanup","closeArgs","sqlite3_create_collation_v2","SQLITE_UTF8","fmap","arities","fargs","clear","__sqlite3CloseV2","sqlite3_close_v2","sqlite3session_table_filter","__sqlite3SessionDelete","sqlite3session_delete","pSession","__sqlite3CreateCollationV2","zName","pArg","xCompare","sqlite3_create_collation","__cfProxy","xInverseAndStep","xFinalAndValue","__sqlite3CreateFunction","__sqlite3CreateWindowFunction","udfSetResult","udfConvertArgs","udfSetError","__flexiString","__prepare","basic","full","sqlLen","ppStmt","pzTail","xSql","xSqlLen","__bindText","__bindBlob","nText","sqlite3_db_handle","pMem","nMem","sqlite3_config","SQLITE_CONFIG_COVERING_INDEX_SCAN","SQLITE_CONFIG_MEMSTATUS","SQLITE_CONFIG_SMALL_MALLOC","SQLITE_CONFIG_SORTERREF_SIZE","SQLITE_CONFIG_STMTJRNL_SPILL","SQLITE_CONFIG_URI","sqlite3__wasm_config_i","SQLITE_CONFIG_LOOKASIDE","sqlite3__wasm_config_ii","SQLITE_CONFIG_MEMDB_MAXSIZE","sqlite3__wasm_config_j","SQLITE_CONFIG_GETMALLOC","SQLITE_CONFIG_GETMUTEX","SQLITE_CONFIG_GETPCACHE2","SQLITE_CONFIG_GETPCACHE","SQLITE_CONFIG_HEAP","SQLITE_CONFIG_LOG","SQLITE_CONFIG_MALLOC","SQLITE_CONFIG_MMAP_SIZE","SQLITE_CONFIG_MULTITHREAD","SQLITE_CONFIG_MUTEX","SQLITE_CONFIG_PAGECACHE","SQLITE_CONFIG_PCACHE2","SQLITE_CONFIG_PCACHE","SQLITE_CONFIG_PCACHE_HDRSZ","SQLITE_CONFIG_PMASZ","SQLITE_CONFIG_SERIALIZED","SQLITE_CONFIG_SINGLETHREAD","SQLITE_CONFIG_SQLLOG","SQLITE_CONFIG_WIN32_HEAPSIZE","__autoExtFptr","sqlite3_auto_extension","fPtr","sqlite3_cancel_auto_extension","sqlite3_reset_auto_extension","pKvvfs","kvvfsMethods","sqlite3__wasm_kvvfs_methods","kvvfsMakeKey","sqlite3__wasm_kvvfsMakeKeyOnPstack","kvvfsStorage","zClass","kvvfsImpls","xRead","zKey","zBuf","nBuf","astack","zXKey","jKey","jV","nV","zV","copyWithin","xWrite","zData","setItem","SQLITE_IOERR","xDelete","sqlite3_vfs_unregister","installMethod","applyArgcCheck","installMethodArgcCheck","argcProxy","removeFuncList","__removeFuncList","ndx","sigN","memKey","fProxy","pFunc","installMethods","structInstance","methods","seen","prior","mkey","libVersion","libVersionNumber","sourceId","downloadVersion","__ptrMap","__stmtMap","getOwnOption","dflt","getOwnPropertyDescriptor","checkSqlite3Rc","sqliteResultCode","sqlite3_errmsg","sqlite3_errstr","__dbTraceToConsole","SQLITE_TRACE_STMT","counter","__vfsPostOpenSql","dbCtorHelper","_name2vfs","isWorkerThread","normalizeArgs","flagsStr","fnJs","vfsCheck","oflags","SQLITE_OPEN_CREATE","SQLITE_OPEN_READWRITE","SQLITE_OPEN_READONLY","SQLITE_OPEN_EXRESCODE","pPtr","sqlite3_open_v2","sqlite3_extended_result_codes","sqlite3_trace_v2","postInitSql","setVfsPostOpenSql","BindTypes","null","number","boolean","blob","bigint","parameterCount","sqlite3_bind_parameter_count","affirmDbOpen","affirmColIndex","stmt","columnCount","__selectFirstRow","getArgs","prepare","step","reset","finalize","__selectAll","rowMode","returnValue","checkRc","isOpen","affirmOpen","onclose","before","after","changes","sixtyFour","sqlite3_total_changes64","sqlite3_total_changes","sqlite3_changes64","sqlite3_changes","dbFilename","sqlite3_db_filename","dbNumber","sqlite3_db_name","dbVfsName","resultRows","returnVal","saveSql","cbArg","columnNames","getColumnNames","row","$colName","parseExecArgs","evalFirstResult","isTA","pSql","pSqlEnd","sqlite3_sql","gotColNames","cbArgCache","_lockedByExec","createFunction","isFunc","isWindow","fFlags","SQLITE_DETERMINISTIC","SQLITE_DIRECTONLY","SQLITE_INNOCUOUS","xArity","arityArg","selectValue","asType","selectValues","selectArray","selectObject","selectArrays","selectObjects","openStatementCount","opener","savepoint","affirmStmtOpen","affirmSupportedBindType","isSupportedBindType","affirmNotLockedByExec","currentOpName","bindOne","bindType","_tooBigInt","asBlob","pStr","sqlite3_bind_parameter_index","affirmParamIndex","sqlite3_bind_null","sqlite3_bind_int","sqlite3_bind_int64","sqlite3_bind_double","_mayGet","sqlite3_finalize","clearBindings","sqlite3_clear_bindings","alsoClearBinds","sqlite3_reset","bindAsBlob","SQLITE_DONE","SQLITE_ROW","stepReset","stepFinalize","sqlite3_column_name","sqlite3_column_type","sqlite3_column_int64","sqlite3_column_double","sqlite3_column_text","sqlite3_column_bytes","sqlite3_column_blob","_blobXfer","getInt","getFloat","getString","getBlob","getJSON","SQLITE_STRING","getColumnName","getParamIndex","sqlite3_column_count","JsStorageDb","storageName","jdb","clearStorage","storageSize","initWorker1API","WorkerGlobalScope","getDbId","wState","idMap","idSeq","dbList","xfer","dbs","alsoUnlink","ddNdx","sqlite3__wasm_vfs_unlink","post","xferList","postMessage","getDb","require","getMsgDb","msgData","affirmExists","dbId","wMsgHandler","ev","oargs","simulateError","persistent","doUnlink","theCallback","rowNumber","hadColNames","changeCount","countChanges","vfsList","opfsEnabled","opfs","export","mimetype","treeList","onmessage","evType","arrivalTime","operation","errorClass","messageId","workerReceivedTime","workerRespondTime","departureTime","registerVfs","asDefault","sqlite3_vfs_register","installVfs","propList","o","struct","vtab","sii","nthConstraint","asPtr","$nConstraint","$aConstraint","nthConstraintUsage","$aConstraintUsage","nthOrderBy","$nOrderBy","$aOrderBy","StructPtrMapper","__xWrap","methodName","removeMapping","__xWrapFactory","pCObj","unget","xVtab","sqlite3_vtab","xCursor","sqlite3_vtab_cursor","xIndexInfo","pIdxInfo","xError","defaultRc","errorReporter","xRowid","ppRowid64","setupModule","createdMod","mod","xConnect","xDisconnect","catchExceptions","fwrap","pAux","ppVtab","pzErr","mnames","remethods","xCreate","$iVersion","iVersion","$xShadowName","$xSavePoint","$xRelease","$xRollbackTo","installOpfsVfs","options","Atomics","createSyncAccessHandle","storage","getDirectory","urlParams","searchParams","has","verbose","sanityChecks","proxyUri","defaultProxyUri","thePromise","promiseResolve_","promiseReject_","loggers","logImpl","level","sqlite3_file","sqlite3_io_methods","opfsUtil","metrics","dump","opIds","wait","avgTime","avgWait","s11n","W","serialize","deserialize","opfsIoMethods","opfsVfs","promiseWasRejected","promiseReject","promiseResolve","Worker","_originalOnError","pDVfs","dVfs","$szOsFile","$mxPathname","$xDlOpen","$xDlError","$xDlSym","$xDlClose","littleEndian","asyncIdleWaitTime","asyncS11nExceptions","fileBufferSize","sabS11nOffset","sabS11nSize","sabIO","whichOp","xAccess","xClose","xDeleteNoWait","xFileSize","xLock","xOpen","xSleep","xSync","xTruncate","xUnlock","retry","sabOP","sq3Codes","opfsFlags","OPFS_UNLOCK_ASAP","OPFS_UNLINK_BEFORE_OPEN","defaultUnlockAsap","opRun","opNdx","store","sabOPView","notify","load","asyncShutdown","asyncRestart","randomFilename","_chars","_n","random","__openFiles","opTimer","mTimeStart","mTimeEnd","ioSyncWrappers","xCheckReservedLock","pFile","lockType","sq3File","xDeviceCharacteristics","SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN","xFileControl","opId","pSz64","pDest","offset64","SQLITE_IOERR_SHORT_READ","sabView","SQLITE_IOERR_READ","sz64","SQLITE_LOCK_NONE","pSrc","SQLITE_IOERR_WRITE","vfsSyncWrappers","xCurrentTime","xCurrentTimeInt64","doSyncDir","xFullPathname","SQLITE_CANTOPEN","xGetLastError","pOutFlags","sqlite3_uri_boolean","fh","fid","sab","sabFileBufView","$pMethods","$xRandomness","$xSleep","xRandomness","ms","getResolvedPath","splitIt","getDirForFilename","absFilename","createDirs","dh","rootDirectory","dirName","getDirectoryHandle","absDirName","entryExists","fsEntryName","getFileHandle","dirHandle","handle","kind","subDir","doDir","rmfr","recurse","removeEntry","recursive","throwOnError","hDir","filenamePart","cause","traverse","defaultOpt","directory","depth","importDb","fnamePart","hFile","chunk","sah","nWrote","checkedHeader","at","importDbChunked","OpfsDb","oo1Db","sqlite3_busy_timeout","payload","io","sabS11nView","textDecoder","textEncoder","viewU8","viewDV","TypeIds","getTypeId","getTypeIdById","tid","typeIds","getInt32","setInt32","initS11n","openFlags","SQLITE_OPEN_MAIN_DB","dbFile","zDbFile","readBuf","jRead","sanityCheck","errMsg","proxyJs","sqlite3Dir","initPromises","HEADER_MAX_PATH_SIZE","HEADER_OFFSET_DATA","PERSISTENT_FILE_TYPES","SQLITE_OPEN_MAIN_JOURNAL","SQLITE_OPEN_SUPER_JOURNAL","SQLITE_OPEN_WAL","OPAQUE_DIR_NAME","getRandomName","optionDefaults","initialCapacity","clearOnInit","verbosity","__mapVfsToPool","getPoolForVfs","setPoolForVfs","pool","__mapSqlite3File","getPoolForPFile","setPoolForPFile","ioMethods","storeErr","getOFileForS3File","mapS3FileToOFile","flush","SQLITE_OPEN_DELETEONCLOSE","deletePath","getSize","nRead","xSectorSize","vfsMethods","hasFilename","SQLITE_IOERR_DELETE","popErr","cMsg","sqlite3Rc","getSAHForPath","getFileCount","getCapacity","nextAvailableSAH","setAssociatedPath","OpfsSAHPool","vfsDir","createOpfsVfs","$error","addCapacity","getVfs","getFileNames","iter","ah","reduceCapacity","nRm","releaseAccessHandles","acquireAccessHandles","clearFiles","all","getAssociatedPath","getUint32","fileDigest","HEADER_DIGEST_SIZE","compDigest","computeDigest","every","pathBytes","findIndex","enc","encodeInto","written","setUint32","digest","h1","h2","prev","removeVfs","exportFile","OpfsSAHPoolUtil","sahPool","reserveMinimumCapacity","wipeFiles","installOpfsSAHPoolVfs","apiVersionCheck","$testThrowInInit","thePool","poolUtil","theVfs","OpfsSAHPoolDb","SABC","wasmExports","ready","toExportForESM","originalInit","initModuleState","moduleScript","isWorker","URLSearchParams","li","EmscriptenModule","sim","scriptDir"],"sourceRoot":""}