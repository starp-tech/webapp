{"version":3,"file":"bundle.web.179.js","mappings":"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","sources":["webpack://StarpyApp/./index.web.js","webpack://StarpyApp/./src/App.web.tsx","webpack://StarpyApp/./src/api/chat.ts","webpack://StarpyApp/./src/api/db/index.ts","webpack://StarpyApp/./src/api/db/tables/item.ts","webpack://StarpyApp/./src/api/index.ts","webpack://StarpyApp/./src/api/media.ts","webpack://StarpyApp/./src/api/util.ts","webpack://StarpyApp/./src/components/app.web.tsx","webpack://StarpyApp/./src/components/appnav.tsx","webpack://StarpyApp/./src/components/chatstack.tsx","webpack://StarpyApp/./src/components/chatview.tsx","webpack://StarpyApp/./src/components/contactitem.tsx","webpack://StarpyApp/./src/components/contactlibrary.tsx","webpack://StarpyApp/./src/components/contentitem.tsx","webpack://StarpyApp/./src/components/devices.tsx","webpack://StarpyApp/./src/components/drawer.tsx","webpack://StarpyApp/./src/components/editor.tsx","webpack://StarpyApp/./src/components/editorbanner.tsx","webpack://StarpyApp/./src/components/editorcaret.tsx","webpack://StarpyApp/./src/components/editorcontentitem.tsx","webpack://StarpyApp/./src/components/editorform.tsx","webpack://StarpyApp/./src/components/editorproject.tsx","webpack://StarpyApp/./src/components/editortoolbar.tsx","webpack://StarpyApp/./src/components/editorvideo.tsx","webpack://StarpyApp/./src/components/encoder.tsx","webpack://StarpyApp/./src/components/encoderbanner.tsx","webpack://StarpyApp/./src/components/encoderproject.tsx","webpack://StarpyApp/./src/components/filestack.tsx","webpack://StarpyApp/./src/components/fileupload.tsx","webpack://StarpyApp/./src/components/folderitem.tsx","webpack://StarpyApp/./src/components/folderlibrary.tsx","webpack://StarpyApp/./src/components/folderpage.tsx","webpack://StarpyApp/./src/components/mediabanner.tsx","webpack://StarpyApp/./src/components/mediaitem.tsx","webpack://StarpyApp/./src/components/medialibrary.tsx","webpack://StarpyApp/./src/components/nav.web.tsx","webpack://StarpyApp/./src/components/projectitem.tsx","webpack://StarpyApp/./src/components/settings.tsx","webpack://StarpyApp/./src/ctx/ctx.ts","webpack://StarpyApp/./src/ctx/index.ts","webpack://StarpyApp/./src/db/defaults.ts","webpack://StarpyApp/./src/db/migration.ts","webpack://StarpyApp/./src/hooks/useContacts.ts","webpack://StarpyApp/./src/hooks/useFolder.ts","webpack://StarpyApp/./src/hooks/useFolders.ts","webpack://StarpyApp/./src/hooks/useKeyboardListener.ts","webpack://StarpyApp/./src/hooks/useMedia.ts","webpack://StarpyApp/./src/hooks/useMediaPlayer.ts","webpack://StarpyApp/./src/hooks/useMessages.ts","webpack://StarpyApp/./src/hooks/useRouteContact.ts","webpack://StarpyApp/./src/hooks/useUserData.ts","webpack://StarpyApp/./src/routes/chat.tsx","webpack://StarpyApp/./src/routes/contacts.tsx","webpack://StarpyApp/./src/routes/home.tsx","webpack://StarpyApp/./src/routes/settings.tsx","webpack://StarpyApp/./src/store/hooks.ts","webpack://StarpyApp/./src/store/slices/chat.ts","webpack://StarpyApp/./src/store/slices/editor.ts","webpack://StarpyApp/./src/store/slices/encoder.ts","webpack://StarpyApp/./src/store/slices/fs.ts","webpack://StarpyApp/./src/store/slices/media.ts","webpack://StarpyApp/./src/store/slices/ui.ts","webpack://StarpyApp/./src/store/slices/upload.ts","webpack://StarpyApp/./src/store/store.ts","webpack://StarpyApp/./src/types/Contact.ts","webpack://StarpyApp/./src/types/Folder.ts","webpack://StarpyApp/./src/types/Media.ts","webpack://StarpyApp/./src/types/index.ts","webpack://StarpyApp/webpack/bootstrap","webpack://StarpyApp/webpack/runtime/chunk loaded","webpack://StarpyApp/webpack/runtime/compat get default export","webpack://StarpyApp/webpack/runtime/define property getters","webpack://StarpyApp/webpack/runtime/get javascript chunk filename","webpack://StarpyApp/webpack/runtime/global","webpack://StarpyApp/webpack/runtime/hasOwnProperty shorthand","webpack://StarpyApp/webpack/runtime/make namespace object","webpack://StarpyApp/webpack/runtime/node module decorator","webpack://StarpyApp/webpack/runtime/publicPath","webpack://StarpyApp/webpack/runtime/jsonp chunk loading","webpack://StarpyApp/webpack/startup"],"sourcesContent":["import IoniconsFont from '@expo/vector-icons/Ionicons';\nimport MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\n\nimport 'react-native-gesture-handler';\nimport iconFont from '@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/Ionicons.ttf';\nimport { enableFreeze } from 'react-native-screens';\nimport \"setimmediate\"\nenableFreeze(true);\n\nconst iconFontStyles = `@font-face {\n  src: url(${iconFont});\n  font-family: Ionicons;\n}`;\n\nconst style = document.createElement('style');\nstyle.type = 'text/css';\n\nif (style.styleSheet) {\n  style.styleSheet.cssText = iconFontStyles;\n} else {\n  style.appendChild(document.createTextNode(iconFontStyles));\n}\n\n// Inject stylesheet\ndocument.head.appendChild(style);\nimport App from './src/App.web';\nimport { createElement } from 'react';\nimport { createRoot } from 'react-dom/client'\nimport { initUserData } from './src/api';\ninitUserData().then(()=>{\n  const root = createRoot(document.getElementById('root'))\n  root.render(createElement(App))\n})","import {\n  SafeAreaProvider,\n  initialWindowMetrics,\n} from 'react-native-safe-area-context';\n\nimport React, {useState, useEffect, createContext} from 'react';\n\nimport {\n  SafeAreaView,\n  LogBox,\n  Platform\n} from 'react-native';\n\n// import crashlytics from '@react-native-firebase/crashlytics';\n\nLogBox.ignoreAllLogs();//Hide all warning notifications on front-end\n\nimport AppComponent from './components/app.web'\n\nimport { \n  UserData, \n  MediaState \n} from './api'\n\nimport {\n  PeerCtx, \n  MediaCtx, \n  PartyCtx, \n  UserCtx, \n  LocalCtx,\n  UserDataDispatch,\n  UserDataState\n} from './ctx'\nimport { useUserData } from './hooks/useUserData';\nimport { configureFonts, MD3DarkTheme,PaperProvider } from 'react-native-paper';\n\n\nconst theme = {\n  ...MD3DarkTheme,\n  fonts: configureFonts({config: {\n    default: {\n      fontFamily: Platform.select({\n        web: 'Roboto, \"Helvetica Neue\", Helvetica, Arial, sans-serif',\n        ios: 'System',\n        macos: 'System',\n        default: 'System',\n      }),\n      fontWeight: \"400\",\n      letterSpacing: 0.5,\n      lineHeight: 22,\n      fontSize: 20,\n    }\n  }, isV3: true}),\n};\nimport { store } from './store/store'\nimport { Provider } from 'react-redux'\n\nimport { QueryClientProvider } from 'react-query'\n\nimport { queryClient } from './api'\nconst App = () => {\n\n  const {userDataState, userDataDispatch} = useUserData()\n  console.info('app')\n  return (\n\n    <Provider store={store}>\n    <QueryClientProvider client={queryClient}>\n      <UserCtx.Provider value={UserData}>\n        <PeerCtx.Provider value={{}}>\n          <PartyCtx.Provider value={{}}>\n            <LocalCtx.Provider value={{}}>\n              <MediaCtx.Provider value={MediaState}>\n                <UserDataState.Provider value={userDataState}>\n                  <UserDataDispatch.Provider value={userDataDispatch}>\n                    <SafeAreaProvider>\n                    <PaperProvider theme={theme}>\n                      <React.Fragment>\n                      {\n                        <style type=\"text/css\">{`\n                          @font-face {\n                            font-family: 'MaterialCommunityIcons';\n                            src: url(${require('@expo/vector-icons/build/vendor/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf')}) format('truetype');\n                          }\n                        `}</style>\n                      }\n                      <></>\n                      </React.Fragment>\n                      <AppComponent />\n                    </PaperProvider>\n                    </SafeAreaProvider>\n                  </UserDataDispatch.Provider>\n                </UserDataState.Provider>\n              </MediaCtx.Provider>\n            </LocalCtx.Provider>\n          </PartyCtx.Provider>\n        </PeerCtx.Provider>\n      </UserCtx.Provider>\n      </QueryClientProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { getUserData, getById, createDBConn, writeItem } from \".\";\n\nimport { UserInfo, Contact, ChatMessage } from \"../types\";\n\nimport uuid from 'react-native-uuid';\n\nimport {faker} from '@faker-js/faker';\n\nexport const sendChatMessage = async (\n    chatId:string,\n    text:string,\n    mnemonic:string,\n    message = {},\n) => {\n    const u:UserInfo = await getUserData()\n    const id = uuid.v4()\n    const data = {\n        id,\n        text,\n        userId: u.id,\n        chatId,\n        folderId:chatId,\n        messageStatus: 'sent',\n        userName: u.name,\n        createdAt: new Date().valueOf(),\n    };\n    const ndata = {...data, ...message};\n    const nEvolu = await createDBConn(chatId, mnemonic)\n    await writeItem(ndata, nEvolu)\n    return ndata;\n};\n  \nexport const getPublicMessages = async (\n    chatId:string, \n    mnemonic:string,\n    limit:number = 15,\n    offset:number = 0\n) => {\n    try {\n      const folder:Contact = await getById(chatId)\n      let e;\n      if(folder && folder.mnemonic) {\n        e = await createDBConn(chatId, folder.mnemonic, true);\n        // console.info('dbconn', e)\n      }\n      const query = e?.createQuery((db)=>\n        db\n        .selectFrom(\"item\")\n        .selectAll()\n        .where(\"chatId\",\"=\",chatId)\n        .orderBy(\"createdAt\", \"desc\")\n        .limit(limit)\n        .offset(offset)\n      )\n      const data = await e?.loadQuery(query)\n      // console.info(\"getFolderContent\", folderId, data)\n      return data.rows.map(i=>i.item as ChatMessage)\n    } catch(err) {\n        console.error('getPublicMessages error', err)\n    }\n    return []\n}\n\nexport const createNewParty = async (party:Contact) => {\n    console.info('createNewParty', party)\n    const user = await getUserData()\n    const chatId = party.id\n    const contact = {\n        ...party,\n        id:chatId,\n        authorId:user.id,\n        authorName: user.name,\n        isContact:true,\n        mnemonic: genMnemonic()\n    }\n    const item = await writeItem(contact)\n    await sendChatMessage(\n        chatId, \n        user.name+\" has created chat \"+party.name, \n        contact.mnemonic,\n        {system:true}\n    )\n    return contact\n} \n  \nexport const genMnemonic = () => {\n    return [\n        faker.animal.bird().split(\" \").join(\"\").toLowerCase(),\n        faker.animal.bird().split(\" \").join(\"\").toLowerCase(),\n        faker.color.human().split(\" \").join(\"\").toLowerCase(),\n        faker.color.human().split(\" \").join(\"\").toLowerCase(),\n        faker.color.human().split(\" \").join(\"\").toLowerCase(),\n        faker.animal.fish().split(\" \").join(\"\").toLowerCase(),\n        faker.animal.fish().split(\" \").join(\"\").toLowerCase(),\n        faker.animal.fish().split(\" \").join(\"\").toLowerCase(),\n        faker.animal.insect().split(\" \").join(\"\").toLowerCase(),\n        faker.hacker.noun().split(\" \").join(\"\").toLowerCase(),\n        faker.hacker.noun().split(\" \").join(\"\").toLowerCase(),\n        faker.hacker.noun().split(\" \").join(\"\").toLowerCase(),\n    ].join(\" \")\n}","export interface WindowExtend extends Window {\n  evolu: Evolu<Database>\n  Video: any;\n} \n\ndeclare global {\n  var evolu: Evolu<Database>;\n  var Video: any;\n  var window: WindowExtend\n}\n\nimport * as S from \"@effect/schema/Schema\";\n\nimport {\n  createEvolu,\n  database\n} from \"@evolu/react-native\"\n// import { sql } from 'kysely'\n\nimport { ItemTable } from \"./tables/item\";\nimport { domain, shareFolder } from \"..\";\nimport { Contact, Folder, FolderType, Media, UserInfo } from \"../../types\";\n\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { EvoluConfig } from \"@evolu/common\";\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus:false,\n      refetchOnMount:false,\n      refetchOnReconnect:false\n    },\n  },\n})\n\nconst Database = database({\n  item: ItemTable,\n});\n\nexport type Database = S.Schema.To<typeof Database>;\n \nconst dbConns:{[key:string]:Evolu<Database>} = {}\n\nwindow.dbConns = dbConns\nconst dbMnemoCons:{[key:string]:Evolu<Database>} = {}\nexport const createDBConn = (dbname = \"starpy2\", mnemonic?:string, index?:boolean) : Evolu<Database> | Promise<Evolu<Database>>  => {\n  if(dbConns[dbname])\n    return dbConns[dbname]\n  if(mnemonic && dbMnemoCons[mnemonic])\n    return dbMnemoCons[mnemonic]\n  const ops:Partial<EvoluConfig<Database>> = {name:dbname}\n  if(mnemonic)\n    ops.mnemonic = mnemonic\n  const db = createEvolu(Database, ops)\n  \n  dbConns[dbname] = db\n  if(mnemonic) \n    dbMnemoCons[mnemonic] = db\n  if(index === true) {\n    return new Promise(res=>{\n\n      indexAllFoldersForDB(db).then(()=>res(db))\n\n      db.subscribeSyncState(async ()=>{\n        const state = db.getSyncState()\n        if(state._tag === \"SyncStateIsSynced\") {\n          console.info(\"state\",  state, dbname)\n          indexAllFoldersForDB(db)\n          // if(!isFirstSync[dbname]) {\n          //   isFirstSync[dbname] = true\n          // } else {\n            queryClient.refetchQueries([\"folderData_\"+dbname])\n            queryClient.refetchQueries([\"folderContent_\"+dbname])\n            queryClient.refetchQueries([\"project_\"+dbname])\n            queryClient.refetchQueries([\"projectLayers\", dbname])\n            queryClient.refetchQueries([\"encodedMedia\", dbname])\n            queryClient.refetchQueries([\"folderContent_\"+dbname+\"_comments\"])\n          // }\n        }\n      })\n    })\n  }\n  return db\n}\nconst isFirstSync:{[key:string]:boolean} = {}\nexport const indexAllFoldersForDB = async (e:Evolu<Database>) => {\n  try {\n\n    const query = e?.createQuery((db)=>\n      db\n      .selectFrom(\"item\")\n      .selectAll()\n      .where(\"mnemonic\", \"is not\", null)\n      .where(\"isDeleted\", \"is\", null)\n    )\n    const folders = await e?.loadQuery(query)\n    console.info('folders', folders.rows)\n    folders.rows.map(async (item)=>{\n      if(!isFirstSync[item.id]) {\n        isFirstSync[item.id] = true\n        dbConns[item.id] = e\n      } else {\n        console.info('indexing db for folder', item.id)\n        await queryClient.refetchQueries([\"folderData_\"+item.id])\n        await queryClient.refetchQueries([\"folderContent_\"+item.id])\n        await queryClient.refetchQueries([\"project_\"+item.id])\n        await queryClient.refetchQueries([\"projectLayers\", item.id])\n        await queryClient.refetchQueries([\"encodedMedia\", item.id])\n        await queryClient.refetchQueries([\"folderContent_\"+item.id+\"_comments\"])\n      }\n    })\n\n  } catch(err) {\n    console.error(err)\n  }\n}\n\nconst evolu = createDBConn()\n\nexport { evolu }\n\nexport const getUserData = async (apiKey?:string) : Promise<UserInfo> => {\n  if(!apiKey) apiKey = localStorage.getItem(\"authToken\")\n  // const url = domain+\"api/v1/backend/?authToken=\"+apiKey || \"\"\n  // const authData =  (await (await fetch(url, {\n  //     credentials:\"include\",\n  //     method:\"GET\",\n  //   })\n  // ).json())\n  const authData = {}\n  const [userData] = await findBy(\"userDoc\", true)\n  const devices = await findBy(\"isDevice\", true)\n  // console.info('get user data', userData)\n  return {...userData, ...authData, photo: authData?.picture, devices };\n} \n\nexport const getFolderContent = async (folderId:string) => {\n  const folder:Folder = await getById(folderId)\n  let e = evolu \n  if(folder && folder.mnemonic) {\n    e = await createDBConn(folderId, folder.mnemonic, true);\n    // console.info('dbconn', e)\n  }\n  const query = e?.createQuery((db)=>\n    db\n    .selectFrom(\"item\")\n    .selectAll()\n    .where(\"folderId\",\"=\",folderId)\n    .where(\"isDeleted\", \"is\", null)\n    .orderBy('orderId', 'asc') \n    .orderBy(\"lastUpdated\", \"desc\")\n  )\n  const data = await e?.loadQuery(query)\n  // console.info(\"getFolderContent\", folderId, data)\n  return data.rows.map(i=>i.item as Folder | Media | Contact)\n}\n\nexport const getPublicFolderContent = async (folderId: string) => {\n  // console.info('getPublicFolderContent')\n  return getFolderContent(folderId)\n};\n\n\nexport const getFoldersByType = async (type:FolderType) => {\n  const query = evolu?.createQuery((db)=>\n    db\n    .selectFrom(\"item\")\n    .selectAll()\n    .where(\"folderType\",\"=\",type)\n    .where(\"folderId\", \"is\", null)\n    .where(\"isDeleted\", \"is\", null)\n  )\n  const data = await evolu?.loadQuery(query)\n  // console.info('folders', data.rows)\n  return data.rows.map(i=>(i.item as Folder))\n}\n\nexport const writeItem = async (data:any, e?:Evolu<Database>) => {\n  const parentFolderId = new URL(window.location.toString()).searchParams.get(\"parentFolderId\")\n  let createdNewDbConn = false\n  if(data.folderId || parentFolderId) {\n    const folder:Folder = await getById(data.folderId || parentFolderId)\n    if(folder && folder.mnemonic) {\n      e = createDBConn(data.folderId, folder.mnemonic)\n      if(data.isFolder || data.isEditorLayer || data.isEditorProject) {\n        data.mnemonic = folder.mnemonic\n        dbConns[data.id] = e\n        createdNewDbConn = true\n      }\n      if(data.isMediaNew || data.isEncoderProject) {\n        data.extractor = \"wt\"\n      }\n    }\n  }\n  console.info('writeItem data', data)\n  const item = await (e || evolu).createOrUpdate(\"item\", {\n    id: data.id,\n    title: data.title,\n    name: data.name, \n    item: data,\n    isFolder: data.isFolder,\n    isContact: data.isContact,\n    isMediaNew: data.isMediaNew,\n    isDevice: data.isDevice,\n    userDoc: data.userDoc,\n    folderId: data.folderId,\n    folderType: data.folderType,\n    chatId:data.chatId,\n    createdAt:data.createdAt,\n    isDeleted:data.isDeleted,\n    isEditorProject:data.isDeleted,\n    isEditorLayer:data.isDeleted,\n    orderId:data.orderId || 1,\n    mnemonic: data.mnemonic,\n    lastUpdated:new Date().valueOf()\n  })\n  if(data.mnemonic && data.isFolder && !e) {\n    console.info('create a new index for a new folder')\n    e = await createDBConn(data.folderId, data.mnemonic, true)\n  }\n  return item;\n}\n\nexport const findByOriginalId = async (id:string) => findBy(\"originalId\", id)\n\nexport const findBy = async (key:string, value:string | boolean | number) => {\n  const query = evolu?.createQuery((db)=>db.selectFrom(\"item\").selectAll().where(key,\"=\",value))\n  const data = await evolu?.loadQuery(query)\n  console.info('findBy', data)\n  return data.rows.map(i=>i.item)\n}\n\nexport const getById = async (id:string, folderId?:string) : Promise<Media | Folder | Contact> => {\n  let e = evolu\n  if(folderId) {\n    e = dbConns[folderId]\n    if(!e && id !== folderId) {\n      const folder:Folder = await getById(folderId)\n      if(folder?.mnemonic) {\n        e = await createDBConn(folder.id, folder.mnemonic)\n      }\n      else {\n        e = evolu\n      }\n    }\n      \n  } \n  const query = e?.createQuery((db)=>db.selectFrom(\"item\").selectAll().where(\"id\",\"=\",id))\n  const item = await e?.loadQuery(query)\n  const i = item?.row?.item\n  if(i?.isFolder || i?.isEditorLayer || i?.isEditorProject) {\n    if(!dbConns[i.id] && i.mnemonic) {\n      dbConns[i] = e\n    }\n  }\n  if(!i && id !== \"\" && id !== undefined && id !== null) {\n    if(dbConns[id] && id !== folderId)\n      return await getById(id, id)\n    // const parentFolderId = new URL(window.location.toString()).searchParams.get(\"parentFolderId\")\n    // if(!folderId && parentFolderId) {\n    //   folderId = parentFolderId\n    //   return await getById(id, folderId)\n    // }\n  }\n  // console.info('getById', id, folderId, i)\n  // console.info(i)\n  return i\n} \n","import * as S from \"@effect/schema/Schema\";\n\nimport {\n    NonEmptyString1000,\n    SqliteBoolean,\n    id,\n    table,\n    JsonObjectOrArray,\n    String1000,\n    \n  } from \"@evolu/common\";\n\nconst SomeJson = S.Struct({ foo: S.String, bar: S.Boolean });\n\ntype SomeJson = S.Schema.To<typeof SomeJson>;\n\nconst ItemId = id(\"Item\");\n\ntype ItemId = S.Schema.To<typeof ItemId>;\n\n \nexport const ItemTable = table({\n  id: ItemId,\n  name: String1000,\n  title: String1000,\n  isCompleted: SqliteBoolean,\n  item:SomeJson,\n  isMediaNew:SqliteBoolean,\n  isContact:SqliteBoolean,\n  folderId: String1000,\n  isDevice: SqliteBoolean,\n  isFolder: SqliteBoolean,\n  folderType: String1000,\n  userDoc: SqliteBoolean,\n  chatId:String1000,\n  orderId:String1000,\n  lastUpdated:String1000,\n  isEditorProject:SqliteBoolean,\n  isEditorLayer:SqliteBoolean,\n  mnemonic:String1000\n});\n\nexport type ItemTable = S.Schema.To<typeof ItemTable>;\n ","export * from '../db/defaults'\nexport * from './db'\nexport * from './media'\nexport * from './chat'\nimport { enqMedia, getWT, startUpMediaSharing } from './media';\nimport { writeItem, getUserData, getById } from './db'\ndeclare global {\n  var publicSocketCallback: any;\n  var playPartyById: any;\n  var newMediaCallback: any;\n  var setupPartyView: any;\n  var playMediaLink: any;\n  var playMesh:any;\n  var mediaClient: any;\n  var windowClosedCallback: any;\n  var localStorage: any; \n  var showOpenFilePicker: any;\n}\nimport {getBrowserName} from './util'\nexport { evolu, createDBConn } from './db'\n\nimport { getBaseOs, getIpAddress, getManufacturer, getModel, getUniqueId, getUserAgent } from 'react-native-device-info';\n\nimport {\n  colors,\n  domain,\n  userDocKey\n} from '../db/defaults'\n\nimport { \n  Contact, \n  Media, \n  UserInfo, \n  MediaStateType,\n  CurrentUserData,\n  IFile,\n  Folder,\n  FolderType,\n  Device\n} from '../types';\nimport { Platform } from 'react-native';\nimport { getFileOpfs } from './media';\nimport { Evolu } from '@evolu/common';\nimport { Database, createDBConn } from './db';\nimport { doInitialMigration } from '../db/migration';\n\nconst apiURL = `${domain}api/v1/`\n\nexport let UserData:CurrentUserData = {\n  user: {\n    id:\"test\",\n    name:\"test\"\n  },\n  searchEnabled: false,\n  searchFolder: {\n    id: 'search',\n    title: 'Search Data',\n  },\n  colors,\n  searchItems: [],\n  currentFolderIds: {},\n};\n// publicSocketCallback = null;\n//add types to this function\nexport const setPubCallback = (cb:any, chatId:string) => {\n  // console.info('setPubCallback')\n  // publicSocketCallback = cb;\n  playPartyById(chatId, true)\n}\n\n\nexport let MediaState:MediaStateType = {\n  currentVideo:null,\n  currentVideoId:null,\n  isLoading:false,\n  isPlaying:false,\n  openItemId:null,\n  enqMedia,\n  setOpenItem: (i:Media) =>\n    MediaState.openItemId = i.id === MediaState.openItemId ? null : i.id\n}\n\n\nexport const writePublicData = async (data:any) => {\n  const url = domain+\"api/v1/backend/writePublicData\"\n  const params = {\n    url, \n    method:\"POST\", \n    credentials: \"include\",\n    body:JSON.stringify(data),\n    headers: {\n      \"Content-Type\":\"application/json\"\n    }\n  }\n  console.info('write fetch params', params)\n  const response = await (await fetch(url, params)).json()\n  return response\n}\n\nexport const initUserData = async () => {\n  try {\n    UserData.user = await doInitialMigration(writeItem, getUserData)\n    const userAgent = (await getUserAgent()).replace(/[^\\w\\s]/gi, '');\n    const os = await getBaseOs()\n    const browserName = getBrowserName() || \"web\"\n    console.info('browserName', browserName)\n    const deviceId = userAgent + os + browserName\n    // console.info('deviceId', deviceId)\n    const device:Device = await getById(deviceId)\n    // console.info('device', device) \n    if(!device || !device.manufacturer) {\n      const ndevice:Device = {\n        id: deviceId,\n        manufacturer:browserName,\n        isDevice:true,\n        userAgent,\n        createdAt: new Date().valueOf(),\n        model: browserName,\n        os,\n        platform: Platform.OS,\n      }\n      console.info(ndevice)\n      await writeItem(ndevice)\n    }\n    console.info('initUserData', UserData)\n    await startUpMediaSharing()\n  } catch(err) {\n    console.error('initUserData Error', err)\n  }\n}\n\n\nexport const stopVideo = () => {\n  hideVideoPlayer()\n}\n\nexport const publicPartyPref = () => {\n\n} \nexport const deleteById = (id:string) => {\n\n} \nexport const setOpenItem = () => {\n\n}\nexport const removeFile = () => {\n\n}\nexport const downloadFile = () => {\n\n}\n\nexport const getUnreadMessages = () => {\n\n}\nexport const extractMedia = async (link:string) => {\n  const media = await getWT(link)\n  console.info(\"onMedia\", media)\n  return {\n    url:media.magnetURI,\n    title:media.name,\n    originalId:media.infoHash,\n    id:media.infoHash,\n    filename:media.files[0].name,\n    extractor:\"wt\",\n    isFolder: media.files && media.files?.length > -1 ? true : undefined,\n    files: media.files && media.files?.length > -1 ? media.files: undefined\n  }\n}\n\nexport const DocumentPicker = {\n  pickSingle: async ()=>new Promise(async (resolve)=>{\n    const pickerOpts = {\n      multiple: false,\n    };\n    const fileInput = document.getElementById(\"fileInput\")\n    fileInput.click()\n    fileInput.addEventListener(\"change\", async () => {\n      if (fileInput.files.length > 0) {\n        // console.log(\"File selected: \", elem.files[0]);\n        const file =  fileInput.files[0]\n        // window.file = file\n        // console.info('file', file)\n        const nfile = {\n            file,\n            type: file.type,\n            title: file.name,\n            name: file.name,\n            extractor: \"local\",\n            size: file.size,\n            originalId: file.name+file.size\n        }\n        return resolve(nfile)\n      }\n    });\n    // const files = await window.showOpenFilePicker(pickerOpts);\n    // console.info(\"files\", files)\n    // window.files = files\n  })\n}\n\nexport const setWindowClosedCallback = (cb:any) => {\n  // windowClosedCallback = cb;\n} \n\nexport const getPublicPartyList = async () => {\n\n  const partyListUrl = `${apiURL}party-list`\n\n  return (await (await fetch(partyListUrl)).json()).rows.map((i:any)=>i.value)\n}\n","import { FFmpeg } from '@ffmpeg/ffmpeg';\nimport { fetchFile, toBlobURL } from '@ffmpeg/util';\nimport { EditorLayer, EditorProject, EncoderProject, Folder, Media } from '../types';\nimport { getById, getFolderContent, writeItem,  evolu} from '.';\nimport { FFFSType, WorkerFSMountData } from '@ffmpeg/ffmpeg/dist/esm/types';\nimport { EditorState } from '../store/slices/editor';\nimport { isNull } from 'effect/Predicate';\nimport { SqliteBoolean, cast } from '@evolu/common';\nconsole.info('ffmpeg', FFmpeg)\n\nexport {FFmpeg, fetchFile, toBlobURL}\n\nconst appDirectory = \"starp\"\nconst rtcConfig = {\n\t\"iceServers\": [\n    {\n      \"urls\": [\n        \"stun:turn.starpy.me\",\n        \"turn:turn.starpy.me\"\n      ],\n      \"username\": \"username1\",\n      \"credential\": \"password1\"\n    }\n  ],\n  \"sdpSemantics\": \"unified-plan\",\n  \"bundlePolicy\": \"max-bundle\",\n  \"iceCandidatePoolsize\": 1\n}\nconst baseURL = 'https://unpkg.com/@ffmpeg/core@0.12.6/dist/umd'\n\n\nexport const recursiveShare = async (media)=>{\n  if(media.isDownloaded) {\n    try {\n      shareFileToWT(media.id, media.folderId)\n      return media;\n    } catch(err) {\n      // console.error(\"shareFileToWT\", err)\n    }\n  }\n  if(media.isFolder || media.isEditorProject || media.isEditorLayer) {\n    const innerContent:(Media | Folder)[] = await getFolderContent(media.id)\n    return await Promise.all(innerContent.map(recursiveShare))\n  }\n  return undefined\n}\n\nexport const shareFolder = async (folder:Folder) => {\n  const content:(Media | Folder)[] = await getFolderContent(folder.id) \n  for (let n = 0; n < content.length; n++) {\n    // const contentItem = \n    await recursiveShare(content[n])\n    // const shared = (await Promise.all(content.map(recursiveShare))).flat().filter((i)=>i)\n    \n  }\n}\nexport const startUpMediaSharing = async () => {\n  try {\n      // await new Promise(res=>setTimeout(()=>res(), 20000))\n      const query = evolu.createQuery((db)=>\n          db\n          .selectFrom(\"item\")\n          .selectAll()\n          .where(\"isFolder\", \"=\", cast(true))\n          .where(\"mnemonic\", \"is not\", null)\n          .orderBy(\"createdAt\", \"desc\")\n      )\n  \n      const sharedFolders:Folder[] = (await evolu.loadQuery(query)).rows.map((i)=>i.item)\n      // console.info(\"sharedFolders\", sharedFolders)\n      for (let i = 0; i < sharedFolders.length; i++) {\n        const folder = sharedFolders[i];\n        await shareFolder(folder)\n        // return shared; \n      }\n      // const sharedFiles = (await Promise.all(sharedFolders.map(async (folder)=>{\n      //   const content:(Media | Folder)[] = await getFolderContent(folder.id) \n      //   const shared = (await Promise.all(content.map(recursiveShare))).flat().filter((i)=>i)\n      //   return shared;\n      // }))).flat()\n      // console.info(\"sharedFiles\", sharedFiles)\n  } catch(err) {\n      console.error('startUpMediaSharing error', err)\n  }\n}\n\nexport const downloadFileById = async (mediaId:string, folderId?:string, progressCB?:(progress:number)=>void) => {\n  const media:Media = await getById(mediaId, folderId)\n  if(media?.extractor === \"wt\") {\n    const wt = await getVideoWT(media)\n    if(wt) {\n      if(mediaClientFiles[mediaId]) {\n        const wt = mediaClientFiles[mediaId]\n        wt.on('download', function (bytes) {\n          // console.log('just downloaded: ' + bytes)\n          // console.log('total downloaded: ' + wt.downloaded)\n          // console.log('download speed: ' + wt.downloadSpeed)\n          // console.log('progress: ' + wt.progress)\n          if(progressCB)\n            progressCB(wt.progress)\n        })\n      }\n      const blob = await (await fetch(wt)).arrayBuffer()\n      const file = new File([blob], media.filename)\n      file.name = media.filename\n      return await writeFileOpfs(media, file)\n    }\n  }\n}\n\n\n\nexport const writeFileOpfs = async (media:Media, file:FileReader) => {\n    const dirCore = await window.navigator.storage.getDirectory(appDirectory)\n    const dir = await dirCore.getDirectoryHandle(media.folderId, {create:true})\n    const fileId = `${media.id}_${file.name}`\n    const fileHandle = await dir.getFileHandle(fileId, {\n        create: true\n    });\n    const writable = await fileHandle.createWritable();\n    \n    await writable.write(file);\n    await writable.close();\n    if(!media.isDownloaded) {\n      media.isDownloaded = true;\n      await writeItem(media)\n    }\n    return fileHandle\n}\n\nexport const getFileOpfs = async (media:Media) : Promise<string> => {\n    const file = await getFileReaderOpfs(media)\n    const url = URL.createObjectURL(file)\n    return url\n}\n\nexport const getFileReaderOpfs = async (media:Media) : Promise<FileReader> => {\n    const dirCore = await window.navigator.storage.getDirectory(appDirectory)\n    const dir = await dirCore.getDirectoryHandle(media.folderId, {create:true})\n    const fileId = `${media.id}_${media.filename}`\n    const fileHandle = await dir.getFileHandle(fileId);\n    const file = await fileHandle?.getFile()\n    return file\n}\n\nlet mediaClient, mediaWorker;\n\nconst announce = [\"wss://media.starpy.me\"]\nconst createMediaClient = async () => {\n\tmediaClient = new WebTorrent({\n\t\ttracker:{\n\t\t\trtcConfig,\n      announce\n\t\t},\n    announce\n\t})\n    mediaClient.on('error', function (err) {\n        console.error('playMediaLink err: ' + err.message)\n        // reject(err)\n    })\n    await new Promise(resolve=>{\n        navigator.serviceWorker.register(\"/sw.min.js\")\n        .then(reg => {\n            const worker = reg.active || reg.waiting || reg.installing\n            const checkState = (worker) => {\n                mediaWorker = worker\n                const res = worker.state === 'activated' \n                if(res) {\n                  console.info('after load worker')\n                  mediaClient.loadWorker(worker, resolve)\n                }\n                return res\n            }\n            if (!checkState(worker)) {\n                mediaWorker\n                .addEventListener(\n                    'statechange', \n                    ({ target }) => checkState(target)\n                )\n            }\n        })  \n    })\n}\nconst isVideo = (file:any) => file?.name?.endsWith(\".mp4\") \n|| file?.name?.endsWith(\".webm\") \n|| file?.name?.endsWith(\".mkv\") \n|| file?.name?.endsWith(\".mov\")\nconst mediaClientFiles = {}\nconst processWT = async (wt, filename?:string) => {\n  let file = filename ?\n    wt.files.find(i=>i.name || i.filename === filename)\n    : \n    wt.files.find(file=>isVideo(file))\n  if(!file && wt.files?.length)\n    file = wt.files[0]\n\n    \n  const streamUrl =  await new Promise((resolve, reject)=>{\n    const process = (err:Error, url:string) => {\n      if(err)\n        return reject(err)\n      resolve(url)\n    }\n    // isVideo(file) ? \n    file?.getStreamURL(process) \n    // : file.getBlobUrl(process)\n  })\n  console.info('after stream url', streamUrl)\n  return streamUrl\n\n}\nexport const getVideoWT = async (media:Media, filename?:string) : Promise<string> => {\n    console.info('get video wt', media, mediaClient)\n    if(!mediaClient) {\n        await createMediaClient()\n    }\n    return await new Promise(async (resolve, reject)=>{\n        if(mediaClientFiles[media.id]) {\n          resolve(await processWT(mediaClientFiles[media.id], filename))\n          return;\n        }\n\n        mediaClient.add(media.url, async (wt) => {\n            try {\n                mediaClientFiles[media.id] = wt\n                console.info(\"after mediaclient add\", wt)\n                const streamUrl = await processWT(wt, filename)\n                resolve(streamUrl)\n            } catch(err) {\n                console.error(\"playMediaLink err\", err)\n                reject(err)\n            }\n            \n        })\n    })\n}\nexport const getWT = async (magnet:string) : Promise<any> => {\n    if(!mediaClient) {\n        await createMediaClient()\n    }\n    return await new Promise(async (resolve, reject)=>{\n        mediaClient.add(magnet, async (wt) => resolve(wt))\n    })\n}\n\nexport const shareFileToWT = async (mediaId:string, folderId?:string) : Promise<Media> => {\n  console.info('share file wt', media, file, mediaClient)\n  if(!mediaClient) {\n      await createMediaClient()\n  }\n  const media:Media = await getById(mediaId, folderId)\n  const file = await getFileReaderOpfs(media)\n  console.info('share wt', media, file)\n  return await new Promise((resolve, reject)=>{\n    mediaClient.seed(file,{announce}, async (wt) => {\n      try {\n          console.info(\"after wt create\", wt)\n          if(media.extractor === \"wt\" && media.url)\n            return resolve(media)\n          media.url = wt.magnetURI\n          media.extractor = \"wt\"\n          media.isDownloaded = true\n\n          await writeItem(media)\n          resolve(media)\n      } catch(err) {\n          console.error(\"playMediaLink err\", err)\n          reject(err)\n      }\n      \n    })\n  })\n}\n\nexport const getMediaAndEnq = async (mediaId:string, filename: string) => {\n    const media:Media = await getById(mediaId) as any\n    console.info('playing media', media)\n    if(media.extractor === \"local\") {\n        media.url = (await getFileOpfs(media))\n    }\n    return enqMedia(media, filename)\n  }\n  \nexport const enqMedia = async (media:Media, filename: string) => {\n    setupPartyView(null, media)\n    return playMediaLink(media.url, media.currentPosition, filename)\n}\nlet ffmpeg:FFmpeg;\n\nexport const cancelEncoding = () => {\n    try {\n        ffmpeg.terminate()\n    } catch(err) {\n        // console.error('terminate ffmpeg error', err)\n    }\n}\n\nconst cachedMedia = {}\n\nexport const encodeMedia = async (media:EncoderProject, cb:(progress:number)=>void, isPrerender?:boolean) => {\n    const id = media.isCopy || media?.id\n    const nmedia = {...media,id}\n    const fileId = `${id}_${media?.filename}`\n    const {encoding} = media\n    const cachedId = encoding?.lastUpdated || 0\n    console.info('cachedId', cachedId)\n    const outPostfix = `.output.${cachedId}.${(encoding?.output || \"mp4\")}`\n    const outFileId = fileId+outPostfix\n    try {\n        if(cachedMedia[id])\n            return cachedMedia[id]\n        if(cachedId === 0) {\n            // const opfsFile =\n            cachedMedia[id] =  await getFileOpfs(nmedia)\n            return cachedMedia[id]\n        }\n        const dirCore = await window.navigator.storage.getDirectory(appDirectory)\n        const dir = await dirCore.getDirectoryHandle(nmedia.folderId)\n        const cache = await dir.getFileHandle(`${id}_${outFileId}`); \n        const file = await cache?.getFile()\n        if(file) {\n            cachedMedia[id] = URL.createObjectURL(file)\n            return cachedMedia[id]\n        }\n    } catch(err) {\n        console.error(\"get cache error\", err)\n    }\n    cancelEncoding()\n    ffmpeg = new FFmpeg()\n    // ffmpeg.mount(\"NODEFS\", {} as WorkerFSMountData, \"/\")\n    window.ffmpeg = ffmpeg\n    ffmpeg.on('log', ({ message }) => {\n        // messageRef.current.innerHTML = message;\n        // console.log(\"ffmpeg\", message);\n    });\n    ffmpeg.on('progress', (params) => {\n        // console.info('ffmpeg progress', params)\n        if(cb)\n            cb(params.progress)\n    })\n    await ffmpeg.load({\n        coreURL: await toBlobURL(`${baseURL}/ffmpeg-core.js`, 'text/javascript'),\n        wasmURL: await toBlobURL(`${baseURL}/ffmpeg-core.wasm`, 'application/wasm'),\n    });\n    try {\n        let opfsFile;\n        try {\n          opfsFile = await getFileOpfs(nmedia)\n        } catch(err) {\n          console.info('file not found locally downloading', err)\n          const dlFIle = await downloadFileById(nmedia.id, nmedia.folderId, cb)\n          console.info('dlFIle', dlFIle)\n          opfsFile = URL.createObjectURL(await dlFIle.getFile())\n          if(cachedId === 0) {\n            return encodeMedia(media, cb, isPrerender)\n          }\n        }\n        console.info('before write', opfsFile)\n        const fs = await fetchFile(opfsFile)\n        await ffmpeg.writeFile(fileId, fs)\n        const execCmd = genExecCmd(nmedia, isPrerender)\n        console.info('after write', execCmd)\n        await ffmpeg.exec(execCmd);\n        console.info('after exec')\n        const data = await ffmpeg.readFile(outFileId);\n        console.info('after processing', data)\n        data.name = outFileId\n        const file = await (await writeFileOpfs(nmedia, data)).getFile()\n        cachedMedia[nmedia.id] = URL.createObjectURL(file);\n        return cachedMedia[nmedia.id]\n    } catch(err) {\n        console.error(\"ffmpeg error \", err)\n    }\n}\n\nexport const encodeProject = async (\n  projectData:EditorProject, \n  layers: EditorLayer[], \n  isPrerender?:boolean,\n  cb?:(progress:number)=>void,\n  logs?:(line:string)=>void) => {\n  try {\n  const cmd = genRenderCmd(projectData, layers, isPrerender)\n  const id = projectData.id\n  const files = cmd.files.filter(i=>i!==\"-i\")\n  console.info('encodeProject', projectData, layers, isPrerender, cmd)\n  const cachedId = projectData.editor?.lastUpdated || 0\n  // try {\n  //     if(cachedMedia[id])\n  //         return cachedMedia[id]\n  //     if(cachedId === 0) {\n  //         // const opfsFile =\n  //         cachedMedia[id] =  await getFileOpfs(nmedia)\n  //         return cachedMedia[id]\n  //     }\n  //     const dirCore = await window.navigator.storage.getDirectory(appDirectory)\n  //     const dir = await dirCore.getDirectoryHandle(projectData.folderId)\n  //     const cache = await dir.getFileHandle(`${id}_${cmd.outFileId}`); \n  //     const file = await cache?.getFile()\n  //     if(file) {\n  //         cachedMedia[id] = URL.createObjectURL(file)\n  //         return cachedMedia[id]\n  //     }\n  // } catch(err) {\n  //     console.error(\"get cache error\", err)\n  // }\n  const encoded = await Promise.all(cmd.medias.map(media=>encodeMedia(media!, (progress)=>{\n    console.info('encoding media', media.id, progress)\n    // if(cb)\n    //   cb(progress)\n  }, isPrerender)))\n  console.info('encoded', encoded, files, cmd.execCmd)\n  cancelEncoding()\n  ffmpeg = new FFmpeg()\n  window.ffmpeg = ffmpeg\n  ffmpeg.on('log', ({ message }) => {\n      // messageRef.current.innerHTML = message;\n      console.log(\"ffmpeg\", message);\n      if(logs)\n        logs(message)\n  })\n  ffmpeg.on('progress', (params) => {\n      console.info('ffmpeg progress', params)\n      if(cb)\n          cb(params)\n  })\n  await ffmpeg.load({\n      coreURL: await toBlobURL(`${baseURL}/ffmpeg-core.js`, 'text/javascript'),\n      wasmURL: await toBlobURL(`${baseURL}/ffmpeg-core.wasm`, 'application/wasm'),\n  });\n  try {\n    const outFileId = cmd.outFileId\n    await Promise.all(encoded.map(async (opfsFile, index)=>{\n      const fileId = files[index]\n      const fs = await fetchFile(opfsFile)\n      await ffmpeg.writeFile(fileId, fs)\n    }))\n    console.info('after loading files into ffmpeg')\n    const exec = await ffmpeg.exec(cmd.execCmd);\n    console.info('after exec', exec, outFileId)\n    const data = await ffmpeg.readFile(outFileId);\n    console.info('after processing', data)\n    data.name = outFileId\n    const file = await (await writeFileOpfs(projectData, data)).getFile()\n    cachedMedia[projectData.id] = URL.createObjectURL(file);\n    console.info(\"cachedMedia for project\", cachedMedia[projectData.id])\n    return cachedMedia[projectData.id]\n  } catch(err) {\n    console.error('encodeProject error',err)\n  }\n  } catch(err) {\n    console.error('encodeproject error', err)\n  }\n}\n\nexport const genRenderCmd = (projectData:EditorProject, layers: EditorLayer[], isPrerender?:boolean) => {\n  if(projectData?.id === undefined || layers?.length < 1)\n  return {execCmd:[], medias:[], files:[]}\n  const fileId = `${projectData.id}_${projectData.title}`\n  const {editor:encoding} = projectData\n  const outPostfix = `.output.${encoding?.lastUpdated || 0}.${(encoding?.output || \"mp4\")}`\n  const outFileId = fileId+outPostfix\n  const threads = window.navigator.hardwareConcurrency.toString()\n  const extraCode:string[] = encoding?.code && encoding.code[0] != \"\" \n    ? \n    encoding.code.filter(i=>i!==\"\").map(i=>i.trim().replace( /[\\r\\n]+/gm, \"\").trim()) \n    : \n    []\n  const medias = layers?.map(layer=>layer?.media?.map(m=>({...m, layer}))).flat().filter(i=>i).filter(i=>!i.isContact)\n  const files = medias?.map(e=>[\"-i\", \n  `${e?.id}_${e?.filename}.output.${e?.encoding?.lastUpdated || 0}.${(e?.encoding?.output || \"mp4\")}`\n]).flat() || []\n  const hasAudio = layers?.reduce((a,layer)=>{\n    if(a === true)\n      return a;\n\n    return !layer.editor?.muted;\n    \n  }, false)\n  const hasVideo = layers?.reduce((a,layer)=>{\n    if(a === true)\n      return a;\n\n    return !layer.editor?.videoDisabled;\n    \n  }, false)\n  const audioOutput = hasAudio ? \"[a_concat]\" : \"\"\n  const audioMap = hasAudio ? [\"-map\",audioOutput] : []\n  const videoOutput = hasVideo ? \"[v_concat]\" : \"\"\n  const videoMap = hasVideo ? [\"-map\",videoOutput] : []\n  const aspectRatio = projectData?.editor?.aspectRatio || \"16/9\"\n  const scale = `scale=${encoding?.width || 1280}:${encoding?.height || 720},setdar=${aspectRatio}`\n  const filterTrim = medias?.map((e, index)=>{\n    const trimV = `[${index}:v]trim=start=${\n      e?.encoding.start || 0\n    }:end=${\n      parseInt(e?.encoding?.end || e?.duration)\n    },setpts=PTS-STARTPTS`+\",\"+scale+`[v${index}]`\n\n    const trimA = `[${index}:a]atrim=start=${\n      e?.encoding.start || 0\n    }:end=${\n      parseInt(e?.encoding?.end || e?.duration)\n    },asetpts=PTS-STARTPTS[a${index}]`\n    //`,volume=${e?.encoding?.soundVolume/100 || 1},amix[a${index}]`\n    let trim = trimV+\", \\n\"+trimA\n    if(e?.layer?.editor?.muted)\n      trim = trimV\n    if(e?.layer?.editor?.videoDisabled)\n      trim = trimA\n    return trim\n  }) || []\n  // console.info('medias', medias)\n  const videosLength = medias?.filter(i=>i?.layer?.editor?.videoDisabled !== true).length || 1\n  const audiosLength = medias?.filter(i=>i?.layer?.editor?.muted !== true).length || 1\n  const videoConcat = (medias?.map((a, i)=>{\n    if(a.layer?.editor?.videoDisabled !== true) \n      return `[v${i}]` \n    return undefined\n  })?.filter(i=>i).join(\"\") || \"\")\n    +`concat=n=${videosLength}:v=1:a=0${videoOutput}`\n  const audioConcat = (medias?.map((a, i)=>{\n    if(a.layer?.editor?.muted !== true) \n      return `[a${i}]` \n    return undefined\n  })?.filter(i=>i)?.join(\"\") || \"\")\n    +`concat=n=${audiosLength}:v=0:a=1${audioOutput}`\n// [a3]volume=enable='between(t,0,49)'${audioOutput}`\n  const filterConcat = videoConcat+\";\\n\"+audioConcat\n  filterTrim.push(filterConcat)\n  const execCmd:string[] = [\n    ...files,\n    '-crf', encoding?.compressionLevel?.toString() || '20', \n    '-threads', threads, \n    '-filter_complex', \n    `${filterTrim.join(\";\\n\")}`,\n    '-preset', encoding?.preset || 'veryfast',\n    '-movflags', '+faststart',\n    ...(extraCode),\n    ...videoMap,\n    ...audioMap,\n    '-r',\n    encoding?.framerate?.toString() || \"30\",\n    outFileId\n  ]\n  return {execCmd, medias, files, outFileId}\n}\n\nexport const genExecCmd = (projectData:EncoderProject, isPrerender?:boolean) => {\n    if(projectData?.id === undefined)\n        return []\n    const fileId = `${projectData.id}_${projectData.filename}`\n    const {encoding} = projectData\n    const outPostfix = `.output.${encoding?.lastUpdated || 0}.${(encoding?.output || \"mp4\")}`\n    const outFileId = fileId+outPostfix\n    const threads = window.navigator.hardwareConcurrency.toString()\n    const extraCode:string[] = encoding?.code && encoding.code[0] != \"\" \n        ? \n        encoding.code.filter(i=>i!==\"\").map(i=>i.trim().replace( /[\\r\\n]+/gm, \"\").trim()) \n        : \n        []\n    const prerenderOptionalCode = !isPrerender ? \n    [\n        '-ss',genExecTime(encoding?.start || 0),\n        '-to',genExecTime(encoding?.end || projectData?.duration),\n    ] : []\n    const execCmd = [\n        '-i', fileId, \n        '-crf', encoding?.compressionLevel?.toString() || '20', \n        '-threads', threads, \n        '-filter_complex', `scale=${encoding?.width || 1280}x${encoding?.height || 720}`,\n        '-preset', encoding?.preset || 'veryfast',\n        '-movflags', '+faststart',\n        ...prerenderOptionalCode,\n        ...(extraCode),\n        outFileId\n    ]\n    return execCmd\n}\n\nexport const genExecTime = (seconds:number, comma?:boolean) => {\n\n    const end = parseInt(seconds, 10) \n    let endMins = parseInt(end / 60, 10)\n    let endSeconds = parseInt(end - endMins*60, 10)\n    if(endMins.toString().length === 1)\n        endMins = \"0\"+endMins\n    if(endSeconds.toString().length === 1)\n        endSeconds = \"0\"+endSeconds\n    const separator = comma ? \",\" : \":\"\n    const extraSymbol = comma ? \"\" : \"00:\"\n    return `${extraSymbol}${endMins}${separator}${endSeconds}`\n}\n\nexport const getActiveProjectLayer = (layers:EditorLayer[], currentPosition:number) => {\n\n    let activeMedia:EncoderProject | undefined;\n    let layerCount = 0\n    let offset = 0;\n    let layer:EditorLayer | undefined;\n\n    while(activeMedia?.id === undefined) {\n        layer = layers[layerCount]\n        \n        if(layerCount > layers.length+1) {\n            console.error('layers', layers, layerCount)\n            throw \"no_layer_found\"\n        }\n\n        if(layer?.id === undefined) {\n            layerCount++;\n            continue\n        }\n        if(layer?.editor?.videoDisabled === true) {\n            layerCount++;\n            continue\n        }\n\n        const layerMedia = layer.media\n        activeMedia = layerMedia!.reduce((a, media:EncoderProject)=>{\n            if(a.id)\n                return a;\n    \n            a += ((media?.encoding?.end || media?.duration) - (media?.encoding?.start || 0))\n            if(a >= currentPosition)\n                return media;\n    \n            offset = a;\n            return a\n        }, 0)\n        layerCount++;\n    }\n    return {offset, layer, activeLayer:layerCount, activeMedia}\n}\n\nexport const getNextActiveProjectMedia = (layers: EditorLayer[], startPosition:number, media:EncoderProject) => {\n    const currentDuration = (media?.encoding?.end || media?.duration) - (media?.encoding?.start || 0)\n    const nextPosition = startPosition + currentDuration + 1\n    const next = getActiveProjectLayer(layers, nextPosition)\n    console.info('nextPosition', nextPosition, next)\n    return next\n}\n\nexport const getTotalTime = (layers: EditorLayer[]) : number => {\n    const time = layers.reduce(\n        (a,layer)=>{\n            const t = layer.media?.reduce((agv, media)=>{\n                agv += ((media?.encoding?.end || media?.duration) - (media?.encoding?.start || 0))\n                return agv;\n            }, 0)\n            if(!t)\n                return a;\n            if(a > t)\n                return a\n            if(t > a)\n                return t\n        }\n    , 0)\n    return time;\n}\n\nexport const getProjectMedia = async (\n    layers: EditorLayer[],\n    currentPosition:number,\n    cb:(progress:number)=>void\n) => {\n    const {offset, layer, activeLayer, activeMedia} = getActiveProjectLayer(layers, currentPosition)\n    const offsetPosition = (currentPosition - offset) + parseFloat(activeMedia?.encoding.start || 0)\n    const totalTime = getTotalTime(layers)\n    console.info('getProjectMedia offset', offsetPosition, currentPosition, offset, activeMedia.encoding.start, activeMedia?.id)\n    const encode = async () => {\n        const e = encodeMedia(activeMedia, cb, true)\n        return new Promise((res)=>{\n            e.then(async (r)=>{\n                res(r)\n                try {\n                    const next = getNextActiveProjectMedia(layers, offset, activeMedia)\n                    if(next) {\n                        await encodeMedia(next.activeMedia, ()=>{}, true)\n                    }\n                } catch(err) {\n                    console.error('prepare next video error', err)\n                }\n            })\n        })\n    }\n    const url = activeMedia?.id !== undefined ? await encode() : null\n    return {\n        url, \n        currentPosition:offsetPosition, \n        muted:layer?.editor?.muted,\n        activeMedia,\n        totalTime,\n        offset,\n        activeLayer\n    }\n}\n","\nexport const getBrowserName = () => {\n    // Opera 8.0+\n  const isOpera = (!!window.opr && !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n  if(isOpera)\n    return 'opera'\n  // Firefox 1.0+\n  const isFirefox = typeof window.InstallTrigger !== 'undefined';\n  \n  if(isFirefox)\n    return \"firefox\"\n  \n  // Safari 3.0+ \"[object HTMLElementConstructor]\" \n  const isSafari = /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof window.safari !== 'undefined' && window['safari'].pushNotification));\n  \n  if(isSafari)\n    return \"apple-safari\"\n  \n  // Internet Explorer 6-11\n  const isIE = /*@cc_on!@*/false || !!window.document.documentMode;\n  \n  if(isIE)\n    return \"microsoft-internet-explorer\"\n  // Edge 20+\n  const isEdge = !isIE && !!window.StyleMedia;\n  \n  if(isEdge)\n    return \"microsoft-edge\"\n  \n  // Chrome 1 - 79\n  const isChrome = window.chrome\n  \n  if(isChrome)\n    return 'google-chrome'\n  \n  // Edge (based on chromium) detection\n  const isEdgeChromium = window.isChrome && (window.navigator.userAgent.indexOf(\"Edg\") != -1);\n  \n  if(isEdgeChromium)\n    return \"microsoft-edge\"\n  \n  // Blink engine detection\n  const isBlink = (window.isChrome || isOpera) && !!window.CSS;\n  \n  if(isBlink)\n    return 'blink'\n  \n  }\n\nconst units = ['bytes', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\nexport const niceBytes = (x:string) => {\n\n  let l = 0, n = parseInt(x, 10) || 0;\n\n  while(n >= 1024 && ++l){\n      n = n/1024;\n  }\n  \n  return(n.toFixed(n < 10 && l > 0 ? 1 : 0) + ' ' + units[l]);\n}","import React, {\n\tuseState, \n\tuseEffect, \n\tuseContext,\n\tuseRef,\n\tcreateContext\n} from 'react';\n\nimport {\n\tText\n} from 'react-native';\n\nimport { \n\tNavigationContainer \n} from '@react-navigation/native';\n\nimport RootStackNav from './nav.web'\n\nconst config = {\n  screens: {\n\tStarp: {\n\t\tpath:\"webapp\",\n\t\tscreens:{\n\t\t\tFilesTab: {\n\t\t\t\tpath:'media',\n\t\t\t\tscreens:{\n\t\t\t\t\tFolder:{\n\t\t\t\t\t\tpath:\"folder/:folderId\",\n\t\t\t\t\t\t// exact:true\n\t\t\t\t\t},\n\t\t\t\t\tFiles: {\n\t\t\t\t\t\tpath:\"/\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tSettingsTab: {\n\t\t\t\tpath:'settings',\n\t\t\t\tscreens:{\n\t\t\t\t\tDevices:{\n\t\t\t\t\t\tpath:\"devices\",\n\t\t\t\t\t\t// exact:true\n\t\t\t\t\t},\n\t\t\t\t\tSettings: {\n\t\t\t\t\t\tpath:\"/\",\n\t\t\t\t\t\t// exact:true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\n\t\t\t},\n\t\t\tContactsTab:{\n\t\t\t\tpath:\"contact\",\n\t\t\t\tscreens:{\n\t\t\t\t\tChat: {\n\t\t\t\t\t\tpath:\"chat/:chatId\",\n\t\t\t\t\t\t// exact:true\n\t\t\t\t\t},\n\t\t\t\t\tContacts: {\n\t\t\t\t\t\tpath:\"/\",\n\t\t\t\t\t\t// exact:true\n\t\t\t\t\t},\n\t\t\t\t\tFolder: {\n\t\t\t\t\t\tpath:\"folder/:folderId\",\n\t\t\t\t\t\t// exact:true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tEncoderTab:{\n\t\t\t\tpath:\"encoder\",\n\t\t\t\tscreens:{\n\t\t\t\t\tEncoderProjects: {\n\t\t\t\t\t\tpath:\"/\",\n\t\t\t\t\t\t// exact:true\n\t\t\t\t\t},\n\t\t\t\t\tEncoderProject: {\n\t\t\t\t\t\tpath:\"project/:projectId\",\n\t\t\t\t\t\t// exact:true\n\t\t\t\t\t},\n\t\t\t\t\tFolder: {\n\t\t\t\t\t\tpath:\"folder/:folderId\",\n\t\t\t\t\t\t// exact:true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tEditorTab:{\n\t\t\t\tpath:\"editor\",\n\t\t\t\tscreens:{\n\t\t\t\t\tEditorProjects: {\n\t\t\t\t\t\tpath:\"/\",\n\t\t\t\t\t\t// exact:true\n\t\t\t\t\t},\n\t\t\t\t\tEditorProject: {\n\t\t\t\t\t\tpath:\"project/:projectId\",\n\t\t\t\t\t\t// exact:true\n\t\t\t\t\t},\n\t\t\t\t\tFolder: {\n\t\t\t\t\t\tpath:\"folder/:folderId\",\n\t\t\t\t\t\t// exact:true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n  },\n};\n\nconst linking = {\n  prefixes: [\n\t'starpy://', 'https://starpy.me',\n    /* your linking prefixes */\n  ],\n  config,\n};\nimport {\n  UserCtx\n} from '../ctx'\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\n\nconst AppComponent = () => {\n  const current = useContext(UserCtx)\n\n\tconst theme = {\n\t  dark: true,\n\t  colors: {\n\t    primary: current?.colors.textColor,\n\t    background: current?.colors.backgroundColor,\n\t    card: current?.colors.navBorderColor,\n\t    text: current?.colors.navTextColor,\n\t    border: current?.colors.navBorderColor,\n\t    notification: 'black',\n\t  },\n\t};\n\treturn (\n\t\t<GestureHandlerRootView style={{width:\"100%\", height:\"100%\"}}>\n\t\t\t<NavigationContainer\n\t\t\t\t// onStateChange={(state)=>console.info('state change', state)}\n\t\t\t\ttheme={theme as any}\n\t\t\t\tlinking={linking} \n\t\t\t\tfallback={<Text>Loading...</Text>}\n\t\t\t>\n\t\t\t\t<RootStackNav />\n\t\t\t</NavigationContainer>\n\t\t</GestureHandlerRootView>\n\t)\n}\n\nexport default AppComponent ","import React, { useContext, useState,  useMemo } from 'react';\nimport { Appbar, Menu, useTheme, TextInput, Searchbar, Tooltip,  } from 'react-native-paper';\nimport { getHeaderTitle } from '@react-navigation/elements';\nimport { Platform, View } from 'react-native';\nimport {  useWindowDimensions } from 'react-native';\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport uuid from 'react-native-uuid';\n\nimport {\n  UserDataState\n} from '../ctx'\nimport { CurrentUserData, EditorProject, Folder, FolderType, Media } from '../types';\nimport { getFocusedRouteNameFromRoute, useNavigation, useNavigationState, useRoute } from '@react-navigation/native';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { cancel, startOnboarding } from '../store/slices/upload';\nimport FileUpload from './fileupload';\nimport MediaBanner from './mediabanner';\nimport EncoderBanner from './encoderbanner'\nimport EditorBanner from './editorbanner'\nimport EditorToolBar from './editortoolbar'\nimport { useMediaPlayer } from '../hooks/useMediaPlayer';\nimport { setPixelsPerSecond } from '../store/slices/editor';\nimport { encoderProjectTypes } from '../api';\n\nconst defaulPlaceHolderText = 'type to search your collection';\nconst addFolderPlaceholder = 'Type name of the folder';\nconst searchContactsPlaceholderText = \"type to search your contacts\"\nconst chatPlacehoder = \"Type name of the new chat\"\n   \nexport default function CustomNavigationBar({\n  options,\n  route,\n  createNewParty,\n  writeItem,\n  DocumentPicker,\n  extractMedia,\n  ftsIndex,\n  searchDatabaseOnIndex,\n  getById,\n  getUserData,\n  getFolderContent\n} : any) {\n  const navigation = useNavigation()\n  const theme = useTheme()\n  const queryClient = useQueryClient()\n  const dispatch = useAppDispatch()\n  const pixelsPerSecond = useAppSelector((state)=>state.editor.pixelsPerSecond)\n  const [isEditing, setIsEditing] = React.useState(false);\n  const [textValue, setText] = useState(\"\")\n  const [searchValue, setSearch] = useState(\"\")\n  const {width, height} = useWindowDimensions()\n  const [mode, setMode] = useState('');\n\n  const userState = useContext(UserDataState) as CurrentUserData\n  const userData = useQuery(\"UserData\",()=>getUserData())\n  const user = userData.data\n  const userId = userData.data?.id\n  const [isLocked, setLocked] = useState(false) \n  const [isSearching, toggleSearch] = useState(false)\n  const writeItemMutation = useMutation((item:Media | Folder)=>writeItem(item), {retry:true})\n  const routeName = getFocusedRouteNameFromRoute(route)\n  const title = getHeaderTitle(options, routeName!);\n\n  const navState = useNavigationState((state)=>state.routes[0]?.state?.routes?.find(i=>i.name===routeName))\n  const currentNavPage = navState?.state?.routes[navState?.state?.index || 0] || {}\n  const params = currentNavPage?.params || {}\n  const back = [\"Devices\", \"Folder\", \"Chat\", \"EncoderProject\", \"EditorProject\"].includes(currentNavPage?.name)\n  \n  const folderId = params?.folderId  || params.parentFolderId\n  const folderDataQuery = useQuery('folderData_'+folderId, ()=>getById(folderId), \n    {retry:true, enabled: folderId ? true : false}\n  )\n  const parentFolderId = params?.parentFolderId || folderDataQuery.data?.folderId\n\n  let folderType = FolderType.contact\n  if(routeName === \"FilesTab\") \n    folderType = FolderType.media\n  if(routeName === \"SettingsTab\")\n    folderType = FolderType.settings\n  if(routeName === \"EncoderTab\")\n    folderType = FolderType.encoder\n  if(routeName === \"EditorTab\")\n    folderType = FolderType.editor\n\n  const newFolderType = \"new_\"+folderType\n  const media = useMediaPlayer()\n  const isEncoderProject = encoderProjectTypes.includes(folderType)\n  \n  const extractLink = async () => {\n    if (searchValue.search('http') === -1 \n      && searchValue.search('magnet') === -1)\n    return\n    console.info(searchValue);\n\n    if (isLocked === true) return;\n    setLocked(true);\n    setTimeout(()=>{\n      setLocked(false)\n    }, 20000)\n\n    let exData = await extractMedia(searchValue)\n    if (exData && exData.id) {\n      const {id} = exData;\n\n      try {\n\n        const nd: Media = {\n          ...exData,\n          originalId: id,\n          id: uuid.v4(),\n          folderId:folderId || newFolderType,\n          userId: userState.user.id,\n          date: new Date().valueOf(),\n          isMediaNew: true,\n          isFolder: exData.files && exData.files.length ? true : undefined,\n          files: exData.files && exData.files.map((i)=>({name:i.name, size:i.length}))\n        }\n        console.info('new media', nd)\n        await writeItemMutation.mutateAsync(nd);\n        await queryClient.refetchQueries({queryKey:folderId ? \"folderContent_\"+folderId : \"folderContent_\"+folderType})\n        setSearch(\"\")\n      } catch (err) {\n        console.error(\"extractLink\", err);\n      }\n    }\n    setLocked(false);\n  }\n\n  const searchDB = async () => {\n\n  \tif(textValue.trim().length === 0) {\n\t    toggleSearch(false)\n  \t} \n  \telse {\n\t  \ttry {\n\t\t  \t// console.info('search db')\n\t\t  \tconst result = \n\t\t  \t\tawait searchDatabaseOnIndex(\n\t\t  \t\t\tftsIndex, \n\t\t  \t\t\ttextValue\n\t\t  \t\t)\n\t\t  \t// console.info('search db result', result)\n\t\t    toggleSearch(true)\n\t  \t} catch(err) {\n\t  \t\tconsole.error('search db err', err)\n\t  \t}\n  \t}\n\n  };\n\n  const onClickExtra = async () => {\n    console.info('mode', mode);\n    try {\n      switch (mode) {\n        case 'party':\n          console.info(\"createNewParty\") \n          const partyId = userId + '_' + uuid.v4();\n          const party = await createNewParty(\n            {\n              id: partyId,\n              name: textValue,\n              creatorId:userId,\n              partyId,\n              isParty:true,\n              folderId:folderId || newFolderType\n            }\n          )\n          navigation.navigate(\"Chat\", {\n            chatId:partyId,\n            name: textValue,\n            mnemonic:party.mnemonic,\n            parentFolderId: folderId || newFolderType\n          })\n          console.info('createNewParty done', party)\n          break;\n        case 'folder':\n          const newFolderId = 'folder_' + uuid.v4() + '_' + userId;\n          const nFolder: Folder = {\n            id:newFolderId,\n            title: textValue,\n            isFolder: true,\n            date: new Date().valueOf(),\n            userId,\n            folderType,\n            folderId\n          };\n          await writeItemMutation.mutateAsync(nFolder);\n          break;\n\n        case 'search':\n          setIsEditing(false)\n          setMode(\"\")\n          break;\n\n      }\n    } catch (err) {\n      console.error(\"onClickExtra err\", err);\n    }\n    if(folderId) {\n      await queryClient.refetchQueries({queryKey:\"folderContent_\"+folderId})\n    } else {\n      await queryClient.refetchQueries({queryKey:\"folders_\"+folderType})\n    }\n    setIsEditing(false)\n    setMode(\"\")\n    return true;\n  };\n  const onClickFile = async () => {\n    \n    setIsEditing(false)\n    setMode(\"media\")\n    const pickerResult = await DocumentPicker.pickSingle({\n      presentationStyle: 'fullScreen'\n    })\n    console.info('pickerResult', pickerResult)    \n    // setMediaModalVisible(true)      \n    if(!pickerResult)\n      return\n    const url = pickerResult.uri\n    let fId = folderId || newFolderType\n    console.info('isEncoderProject', isEncoderProject)\n    const nd: Media = {\n      id: uuid.v4().toString(),\n      url,\n      title:pickerResult.name,\n      originalId: pickerResult.name,\n      filename: pickerResult.name,\n      fileType: pickerResult.type,\n      folderId: fId,\n      userId,\n      date: new Date().valueOf(),\n      isMediaNew: !isEncoderProject,\n      isEncoderProject,\n      type: pickerResult.file.type,\n      size: pickerResult.file.size,\n      extractor: \"local\"\n    }\n    dispatch(startOnboarding({file:pickerResult.file, media:nd}))\n    // setPickerFile(pickerResult.file)\n    // setPickerFileMeta(nd)\n  }\n\n  const hideMedialModal = () => {\n    dispatch(cancel())\n    // setMediaModalVisible(false)\n  }\n\n  const onClickFolder = () => {\n    setIsEditing(true)\n    setMode(\"folder\")\n  }\n\n  const onClickSearch = () => {\n    setIsEditing(true)\n    setMode(\"search\")\n  }\n\n  const onClickContact = () => {\n    setIsEditing(true)\n    setMode(\"party\")\n  }\n\n  useMemo(() => {\n    // if (mode === 'media') {\n      extractLink()\n    // }\n    // if (mode === 'search') {\n    //   searchDB()\n    // }\n  }, [searchValue]);\n  const showFullSearchBar = width > 700 \n    && Platform.OS !== \"macos\"\n\n  const backPress = () => {\n    if(folderType === FolderType.contact) {\n      if(parentFolderId) {\n        navigation.navigate(\"ContactsTab\", {screen:\"Folder\", params:{folderId: parentFolderId}})\n        return;\n      }\n      console.info('navigate to Contacts')\n      navigation.navigate(\"Contacts\")\n      return\n    }\n    if(folderType === FolderType.settings) {\n      console.info('navigate to Contacts')\n      navigation.navigate(\"Settings\")\n      return\n    }\n    if(folderType === FolderType.editor) {\n      if(parentFolderId) {\n        navigation.navigate(\"EditorTab\", {screen:\"Folder\", params:{folderId: parentFolderId}})\n        return;\n      }\n      navigation.navigate(\"EditorProjects\")\n      return\n    }\n    if(folderType === FolderType.encoder) {\n      if(parentFolderId) {\n        navigation.navigate(\"EncoderTab\", {screen:\"Folder\", params:{folderId: parentFolderId}})\n        return;\n      }\n      console.info('navigate to Encoder')\n      navigation.navigate(\"EncoderProjects\")\n      return\n    }\n    if(folderType === FolderType.media) {\n      if(parentFolderId) {\n        navigation.navigate(\"FilesTab\", {screen:\"Folder\", params:{folderId:parentFolderId}})\n        return;\n      }\n      console.info('navigate to FilesTab')\n      navigation.navigate(\"Files\")\n      return;\n    }\n    const canGo = navigation.canGoBack()\n    if(canGo === true) {\n      return navigation.goBack()\n    }\n  }\n  let placeholderText = addFolderPlaceholder\n  if(mode === \"party\") {\n    placeholderText = chatPlacehoder\n  }\n  if(mode === \"search\") {\n    placeholderText = \"type to search\"\n  }\n  let addFileEnabled = [FolderType.media, FolderType.editor, FolderType.encoder].includes(folderType)\n  let addFolderEnabled = true\n  const showScaleControls = currentNavPage?.name === \"EditorProject\"\n  if(showScaleControls) {\n    addFileEnabled = false;\n    addFolderEnabled = false;\n  }\n  console.info('folderType', folderType, addFileEnabled)\n  return (\n    <>\n    <Appbar.Header theme={theme} >\n      {!isEditing && back ? <Appbar.Action icon=\"chevron-left\" onPress={backPress} /> : null}\n\n      {!isEditing ? <Appbar.Content title={title} theme={theme} /> : null}\n      {isEditing ? \n          <View style={{width:\"100%\"}}><TextInput\n            placeholder={placeholderText}\n            onChangeText={(query) =>\n              mode === \"search\" ? setSearch(query) : setText(query)\n            }\n            style={{width:\"100%\", textAlignVertical:\"bottom\", lineHeight:30, padding:10, height:40}}\n            theme={theme}\n            value={mode === \"search\" ? searchValue : textValue}\n            left={\n              <TextInput.Icon\n                style={{marginTop:20}}\n                icon=\"arrow-left-circle\"\n                onPress={() => {\n                  setIsEditing(false)\n                  setMode(\"\")\n                }}\n              />\n            }\n            autoFocus\n            maxLength={100}\n            right={<TextInput.Icon style={{marginTop:20}} onPress={onClickExtra} icon=\"check-circle\" loading={isLocked} /> }\n          /></View>: null}\n      {addFolderEnabled && !isEditing ? \n        <Tooltip title=\"Create a folder\">\n          <Appbar.Action icon=\"folder-plus\" onPress={() => onClickFolder()} />\n        </Tooltip> \n        : null \n      }\n      {showScaleControls && <EditorToolBar \n        projectId={params.projectId} \n        getById={getById} \n        writeItem={writeItem}\n        routeParams={params} \n        getFolderContent={getFolderContent}\n      />}\n      {!isEditing && folderType === \"contact\" ?\n        <Tooltip title=\"Create a chat\">\n          <Appbar.Action icon=\"chat-plus\" onPress={() => onClickContact()} /> \n        </Tooltip> : null\n      }\n      {addFileEnabled && !isEditing ? \n          <Tooltip title=\"Select a file\">\n            <Appbar.Action icon=\"file-plus\" onPress={() => onClickFile()} /> \n            </Tooltip>: null}\n      {!showFullSearchBar && !isEditing ? <Appbar.Action icon=\"magnify\" onPress={() => onClickSearch()} /> : null}\n      {showFullSearchBar ? <Searchbar \n        loading={isLocked} \n        mode=\"bar\"\n        placeholder={folderType === FolderType.contact ? searchContactsPlaceholderText : defaulPlaceHolderText}\n        theme={theme} \n        style={{height:40, width:300}} \n        inputStyle={{paddingBottom:14}} \n        value={searchValue} \n        onChangeText={setSearch} \n      /> : null}\n    </Appbar.Header>\n    <FileUpload\n      projectId={params.projectId} \n      writeItem={writeItem}\n      userId={userId} \n      folderType={folderType} \n      hideMedialModal={hideMedialModal} \n      folderId={folderId || parentFolderId}\n      routeName={currentNavPage?.name}\n      isEncoderProject={isEncoderProject}\n    />\n    {media.currentMediaId ? <MediaBanner \n      getById={getById}\n      height={height}\n      writeItem={writeItem}\n      media={media}\n      routeParams={params}\n    /> : null }\n    {currentNavPage?.name === \"EncoderProject\" ? <EncoderBanner \n      projectId={params.projectId} \n      getById={getById} \n      height={height} \n      folderId={folderId || parentFolderId}\n      writeItem={writeItem} />\n      : null\n    }\n    {currentNavPage?.name === \"EditorProject\" ? <EditorBanner \n      projectId={params.projectId} \n      getById={getById} \n      height={height} \n      writeItem={writeItem}\n      routeParams={params} \n      folderId={folderId || parentFolderId}\n      getFolderContent={getFolderContent}\n      />\n      : null\n    }\n    </>\n  );\n}\n","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nconst ChatStack = createStackNavigator()\nimport ContactsView from '../routes/contacts';\n\nimport Chat from '../routes/chat'\nimport CustomNavigationBar from './appnav';\nimport { FTSIndex, FolderType } from '../types';\nimport FolderPage from './folderpage';\nconst config = {\n  animation: 'spring',\n  config: {\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01,\n  },\n};\nexport const createChatStack = (ops:any) => {\n    const ChatComponent = (props:any) => (\n        <Chat \n          {...props}\n          {...ops}\n          writeItem={ops.writeItem}\n          setPubCallback={ops.setPubCallback}\n          getPublicMessages={ops.getPublicMessages}\n          writePublicData={ops.writePublicData}\n          getUnreadMessages={ops.getUnreadMessages}\n          sendChatMessage={ops.sendChatMessage}\n          getUserData={ops.getUserData}\n          getById={ops.getById}\n          // params={props.params}\n        />\n      )\n    const FolderComponent = (props:any) => {\n        return (<FolderPage\n            folderType={FolderType.contact}\n            navigation={props.navigation}\n            route={props.route}\n            getFolderContent={ops.getFolderContent}\n            getById={ops.getById}\n            enqMedia={ops.enqMedia}\n            stopMedia={ops.stopMedia}\n            getFoldersByType={ops.getFoldersByType}\n            setWindowClosedCallback={ops.setWindowClosedCallback}\n            writeItem={ops.writeItem}\n        />\n    )}\n      \n  const ContactsComponent = (props:any) => (\n      <ContactsView\n        {...props}\n        getUserData={ops.getUserData} \n        getFolderContent={ops.getFolderContent} \n        getFoldersByType={ops.getFoldersByType}\n        writeItem={ops.writeItem}\n        getPublicMessages={ops.getPublicMessages}\n        getPublicFolderContent={ops.getPublicFolderContent}\n        getCurrentFolder={ops.getCurrentFolder}\n        setCurrentFolder={ops.setCurrentFolder}\n        setPubCallback={ops.setPubCallback}\n        getContactsByFolderWithUnread={ops.getContactsByFolderWithUnread}\n        writePublicData={ops.writePublicData}\n        sendChatMessage={ops.sendChatMessage}\n        getPrevPartiesForChatId={ops.getPrevPartiesForChatId}\n        deleteById={ops.deleteById}\n        publicPartyPref={ops.publicPartyPref}\n        setNetworkUpdateCB={ops.setNetworkUpdateCB}\n        getPublicPartyList={ops.getPublicPartyList}  \n        createNewParty={ops.createNewParty}\n        getById={ops.getById}\n        toggleSearch={ops.toggleSearch}\n        \n      />\n  )\n  const ChatStackScreen = () => {\n    return (\n      <ChatStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur: true,\n          animationEnabled:false,\n        }}\n      >\n        <ChatStack.Screen\n          name=\"Contacts\"\n          component={ContactsComponent} \n          options={{\n            freezeOnBlur:true\n          }}   \n        />\n        <ChatStack.Screen\n          name=\"Chat\"\n          component={ChatComponent}\n          options={({ route }) => ({ title: \n            route!.params?.name, \n            freezeOnBlur:true\n          })}\n          \n        />\n        <ChatStack.Screen\n          name=\"Folder\"\n          component={FolderComponent}\n          options={({ route }) => ({ title: \n            route!.params?.title, \n            freezeOnBlur:true\n          })}\n        />\n      </ChatStack.Navigator>\n    )\n  }\n  return ChatStackScreen\n}","import React, { \n  useState,  \n  useEffect, \n  useRef, \n  useContext,\n  useCallback,\n} from 'react'\nimport {\n  Contact,\n  ChatMessage\n} from \"../types/Contact\"\nimport {\n  UserInfo\n} from \"../types/UserInfo\"\nimport {\n  sendChatMessage as sendChatMessageType\n} from '../api/'\nimport {\n  useIsFocused, useNavigation, useRoute\n} from '@react-navigation/native';\nimport { \n  SafeAreaView, \n  View, \n  VirtualizedList, \n  StyleSheet, \n  StatusBar,\n  useWindowDimensions,\n  TouchableOpacity,\n  Platform\n} from 'react-native';\n\nimport { \n  UserCtx\n} from '../ctx'\n\nimport {useMessages} from '../hooks/useMessages'\nimport { ActivityIndicator, Banner, Button, Card, Chip, List, ProgressBar, Text, useTheme } from 'react-native-paper';\n\nimport { Bubble, Composer, GiftedAvatar, GiftedChat, InputToolbar } from 'react-native-gifted-chat'\nimport { useQuery } from 'react-query';\nimport { useFolder } from '../hooks/useFolder';\nimport ContentItem from './contentitem';\nconst baseInputPlaceholderText = \"Type a message\"\n\nexport interface ChatViewParams {\n  currentUserId:string;\n  chatId:string;\n  backgroundColor: string;\n  disableExtraMessageButtons:boolean;\n  params:{contact: Contact, user: UserInfo};\n  setPubCallback:(callback:(message:ChatMessage) => Promise<void>) => void;\n  getPublicMessages:(chatId: string, skip: number, limit: number) => Promise<ChatMessage[]>;\n  getUnreadMessages:(chatId:string, currentUserId:string) => Promise<ChatMessage[]>;\n  sendChatMessage:typeof sendChatMessageType;\n  isLoading:boolean;\n}\n\nconst ChatView = (chatViewParams:ChatViewParams) => {\n  const {\n    currentUserId, \n    chatId,\n    params,\n    setPubCallback,\n    getPublicMessages,\n    getUnreadMessages,\n    sendChatMessage,\n    getFolderContent,\n    getById,\n    routeParams,\n    isEmbeded\n  } = chatViewParams\n\n  \n  const {user, contact} = params\n  const {\n    messages,\n    loadingMessages,\n    sendMessage,\n    nextPage,\n    isLoadingEarlier,\n  } = useMessages(\n    chatId, \n    currentUserId, \n    getPublicMessages, \n    getUnreadMessages,\n    sendChatMessage,\n    setPubCallback,\n    user,\n    contact,\n  )\n\n  const onSend = useCallback((text) => {\n    console.info('sendmessage', text)\n    sendMessage(text)\n  }, [])\n\n  const route = useRoute()\n  const dim = useWindowDimensions()\n  const {width, height} = dim\n  const navigation = useNavigation()\n  const isMobile = width > 700 ? false : true\n  const parentFolderId = routeParams?.parentFolderId || route.params?.parentFolderId! || (contact && contact.folderId) || null\n  // console.info('parentFolderId', parentFolderId)\n  const parentFolderHook = useFolder(\n    parentFolderId, \n    getFolderContent, \n    getById\n  )\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: 0,\n      marginTop: 0,\n    },\n    item: {\n      paddingTop: 15,\n      paddingLeft: 5,\n      fontSize: 12,\n      height: 160,\n      color: 'black',\n      width: width - 80,\n    },\n    tinyLogo: {\n      marginTop: 2,\n      width: 22,\n      height: 22,\n    },\n    scroll: {\n      height: height-65,\n      display:\"flex\",\n      position:\"relative\",\n      backgroundColor:\"black\",\n      // marginTop,\n      width:\"100%\"\n    },\n    icon: {\n      paddingLeft: 10,\n    },\n  });\n  const textAccentColor = '#b4c0d1'\n  const current = useContext(UserCtx);\n\n  const renderBubble = props => { \n    return ( \n      <Bubble \n        {...props} \n        textStyle={{ \n              left: { color: textAccentColor }, \n        }} \n        wrapperStyle={{\n            right: { backgroundColor: \"#871e69\", alignSelf:\"auto\", maxWidth:\"60%\" }, \n            left: { backgroundColor: \"#344868\", alignSelf:\"auto\", maxWidth:\"60%\" }, \n        }} \n      />\n    )}\n  const renderContent = (i:FolderPreviewContentType) => (\n      <ContentItem\n          i={i}\n          key={i.id}\n          dataHook={parentFolderHook}\n          styles={styles}\n          width={!isMobile ? width / 100 * 70 : width}\n          navigation={navigation}\n          current={current!}\n      />\n  )\n  const theme = useTheme()\n  const {surface} = theme.colors\n  console.info('messages', messages.length)\n  return (\n    <View style={{\n      backgroundColor:current!.colors.backgroundColor, \n      height:\"100%\", \n      width:\"100%\",\n      flexDirection:\"row\"\n    }}>\n    {!isMobile && !isEmbeded ? \n        <View style={{width:\"30%\"}} >\n        {!parentFolderHook.folderContentQuery.isFetching ?\n\n        <SafeAreaView style={{...styles.scroll}}>\n          \n          <VirtualizedList\n            onEndReached={()=>{\n              console.info(\"onEndReached\")\n              // parentFolderHook.folderContentQuery.refetch()\n            }}\n            data={parentFolderHook.folderContent}\n            pagingEnabled={true}\n            initialNumToRender={1000}\n            renderItem={({ item }) => (renderContent(item))}\n            keyExtractor={item => item.id || item.date.toString()}\n            getItemCount={parentFolderHook.getContentCount}\n            getItem={parentFolderHook.getContentItem}\n            // initialScrollIndex={initialScrollIndex}\n            onScrollToTop={()=>{\n             console.info('ontop')\n            }}\n            getItemLayout={(data, index)=>{\n               return {length:130, offset: 130*index, index}\n            }}\n          /> \n        </SafeAreaView>\n         \n      : <ActivityIndicator size={72} />} \n      </View>\n      : null }\n\n      <View style={{width:isMobile || isEmbeded ? \"100%\" : \"70%\"}} >\n      {messages.length > -1 ? <GiftedChat\n          scrollToBottom={true}\n          renderLoading={()=><ActivityIndicator size={72} /> }\n          messages={ messages.map((m)=>{\n            // console.info(\"messages\", m)\n            return {\n              ...m,\n              _id:m.id, \n              user:{\n                  _id:m.userId, \n                  name:m.userName,\n\n              }\n            }\n          })}\n          onSend={([message]) => onSend(message.text)}\n          user={{\n            _id: user.id,\n            avatar: user.photo\n          }}\n          renderBubble={renderBubble}\n          timeTextStyle={{}}\n          renderAvatar={(props)=><GiftedAvatar \n            {...props} \n            user={props.currentMessage.user} \n            avatarStyle={{backgroundColor:\"transparent\", borderWidth:1, borderColor:surface}} \n          />}\n          listViewProps={{\n            scrollEventThrottle: 400,\n            onEndReached:(props)=>{\n              console.info('on end of chat reached', props, isLoadingEarlier)\n              if(isLoadingEarlier === true) \n                return\n              nextPage()\n            }\n          }}\n          isLoadingEarlier={isLoadingEarlier}\n          loadEarlier={true}\n          onLoadEarlier={()=>{\n            console.info('on load earlier')\n            nextPage()\n            console.info(loadingMessages)\n          }}\n          renderLoadEarlier={(props)=><View style={{height:100, width:\"100%\"}}>\n            {props.isLoadingEarlier ? \n              <ActivityIndicator size={32} /> \n              : <View style={{height:100}} />\n            }\n          </View>}\n          \n          renderChatEmpty={(props)=>\n            <View style={{transform:[{scaleY: -1}]}}>\n              <List.Item \n                left={(p)=>\n                  <List.Icon \n                    {...p} \n                    color={textAccentColor} \n                    icon={\"lock\"} \n                  />\n                } \n                titleStyle={{color:textAccentColor}} \n                title={\"Decrypting Messages...\"} \n              />\n              <ProgressBar indeterminate visible={true} />\n            </View>\n          }\n          renderInputToolbar={(inputProps)=>\n            <InputToolbar {...inputProps} \n              containerStyle={{backgroundColor:\"black\", borderColor:\"gray\"}}\n              primaryStyle={{borderColor:\"white\"}} \n              renderComposer={(props)=><Composer \n                {...props} \n                textInputStyle={{color:textAccentColor, padding:10}} \n                multiline={false}\n                textInputAutoFocus={true}\n                textInputProps={{\n                  ...props.textInputProps,\n                  // for enabling the Return key to send a message only on web\n                  blurOnSubmit: Platform.OS === 'web',\n                  onSubmitEditing:\n                    Platform.OS === 'web'\n                      ? () => {\n                          if (props.text && props.onSend) {\n                            props.onSend({text: props.text.trim()}, true);\n                            this.focus()\n                          }\n                        }\n                      : undefined,\n                }}\n              />}\n              renderSend={(props)=>\n                <TouchableOpacity onPress={()=>{\n                  props.onSend([{text:props.text}], true)\n                }}>\n                  <List.Icon style={{padding:10}} {...props} icon={\"send\"} />\n                </TouchableOpacity>\n              }\n              \n            />\n          }\n          placeholder='Write your message'\n          showUserAvatar={false}\n        />\n        : <ActivityIndicator size={72} /> }\n      </View>\n    </View>\n  );\n}\n\n\nexport default ChatView;","import React, { memo } from 'react';\n\nimport {\n  Contact\n} from '../types';\n\n\nimport {\n    sendChatMessage as sendChatMessageType\n} from '../api/'\nimport { Divider, List } from 'react-native-paper';\nimport { CommonActions, useRoute } from '@react-navigation/native';\n\n\nexport interface ContactItemProps {\n  navigation:any \n  i:Contact\n  party:any \n  current:any\n  sendChatMessage:typeof sendChatMessageType;\n  getPrevPartiesForChatId:any\n  width:number\n}\n\nconst ContactItem = (contactItemProps:ContactItemProps) => {\n  const { \n    navigation, \n    i\n  } = contactItemProps\n  const route = useRoute()\n  const isOpen = route.params?.chatId === i.id\n\tconst contact = i\n\tconst title = i.name || i.id\n  const icon = isOpen ? \"chat\" : \"chat-outline\"\n  const onPressContact = () => {\n    console.info(\"onPressContact\", navigation, i)\n    // navigation.pop()\n    navigation.dispatch(CommonActions.navigate({\n      name:\"Chat\",\n      params:{\n        chatId:contact.id, \n        name: contact.name, \n        parentFolderId:contact.folderId, \n        mnemonic:contact.mnemonic\n      }\n    }))\n  };\n\n  const children = isOpen ? <></> : null\n  return (\n    <>\n      <List.Accordion \n        expanded={isOpen} \n        title={title} \n        onPress={onPressContact} \n        left={(props)=><List.Icon {...props} icon={icon} />}\n        right={()=><></>}\n        >\n        {children}\n      </List.Accordion>\n      <Divider />\n    </>\n  )\n}\nexport default memo(ContactItem);\n  ","import React, {useContext, useMemo, useCallback, memo} from 'react';\n\nimport {\n  UserCtx, \n} from '../ctx'\n\nimport { useContacts } from '../hooks/useContacts';\nimport FolderLibrary from './folderlibrary';\n\nexport interface ContactsLibraryProps {\n    navigation:any \n    showPublicParty:any\n    setNetworkUpdateCB:any \n    getUserData:any\n    getFolderContent:any \n    getFoldersByType:any\n    writeItem:any\n    getPublicMessages:any\n    getCurrentFolder:any\n    setCurrentFolder:any\n    setPubCallback:any\n    getContactsByFolderWithUnread:any\n    writePublicData:any\n    sendChatMessage:any\n    getPrevPartiesForChatId:any\n    deleteById:any\n    publicPartyPref:string\n    getPublicPartyList:any\n    getById:any\n    toggleSearch:any\n    getPublicFolderContent:any\n    isFocused:boolean\n}\n\nconst ContactLibrary = (contactsLibraryProps:ContactsLibraryProps) => {\n  const { \n    navigation, \n    getFolderContent, \n    getFoldersByType,\n    sendChatMessage,\n    getPrevPartiesForChatId,\n    getPublicFolderContent,\n    isFocused,\n    writeItem\n  } = contactsLibraryProps\n\n  const dataHook = useContacts(\n    getFoldersByType, \n    getFolderContent, \n    writeItem\n  )\n\n  return (<FolderLibrary \n    dataHook={dataHook}\n    navigation={navigation}\n    sendChatMessage={sendChatMessage}\n    getPrevPartiesForChatId={getPrevPartiesForChatId}\n  />)\n};\n\nexport default memo(ContactLibrary);\n","import React, {useEffect, useContext} from 'react';\n\nimport {\n  Folder,\n  Media,\n  Contact,\n  EditorProject\n} from '../types';\n\nimport {\n  Platform,\n  useWindowDimensions\n} from 'react-native';\n\nimport MediaItem from './mediaitem';\n\nimport ContactItem from './contactitem';\n\nimport FolderItem from './folderitem';\n\nimport ProjectItem from './projectitem'\nimport { useFolders } from '../hooks/useFolders';\nimport { useMedia } from '../hooks/useMedia';\nimport { useContacts } from '../hooks/useContacts';\nimport { useFolder } from '../hooks/useFolder';\nimport { CommonActions, useRoute } from '@react-navigation/native';\nconst enableMove = false;\n\nexport interface ContentItemProps {\n  dataHook:ReturnType<typeof useFolders | typeof useMedia | typeof useContacts | typeof useFolder>\n  styles:any;\n  i:Contact | Media | Folder;\n  navigation:any;\n  party:any;\n  current:any;\n  sendChatMessage:any;\n  getPrevPartiesForChatId:any\n  width:number\n}\n\nconst ContentItem = (ContentItemProps:ContentItemProps) => {\n  const {\n    dataHook,\n    styles,\n    i,\n    navigation,\n    party,\n    current,\n    sendChatMessage,\n    getPrevPartiesForChatId\n  } = ContentItemProps\n    const route = useRoute()\n    const currentFolderId = route.params?.folderId \n    const dim = useWindowDimensions();\n    const drawerOffset = dim.width > 700 ? 80 : 0\n    const width = ContentItemProps.width - drawerOffset\n    const iconSize = 30;\n    const iconColor = 'black';\n    // console.info('content item', i.id, (i as Contact).isContact, (i as Media).isMediaNew)\n    if((i as Media).isMediaNew) {\n      const {\n        onMediaPress, \n        onRemoveFolder:onRemoveMediaPress, \n        onDownloadMediaPress, \n        onCopyLinkPress, \n        onEditMediaPress,\n        isLoadingMedia,\n        currentContentId,\n        currentMediaId,\n        currentMediaPlaying,\n      } = dataHook as ReturnType<typeof useMedia>\n      // console.info('onMediaPress', onMediaPress)\n      return (<MediaItem \n        key={i.id}\n        i={i as Media}\n        width={width}\n        onMediaPress={onMediaPress} \n        onRemoveMediaPress={onRemoveMediaPress} \n        onDownloadMediaPress={onDownloadMediaPress}\n        onCopyLinkPress={onCopyLinkPress} \n        onEditMediaPress={onEditMediaPress}\n        itemLoading={\n            i.id === currentMediaId && isLoadingMedia\n            ? currentMediaId : false\n        }\n        isOpen={\n            i.id ===  currentContentId\n            ? true : false\n        }\n        isPlaying={\n            i.id === currentMediaId && !isLoadingMedia\n            ? true : false\n        }\n        enableMove={enableMove}\n      />)\n    }\n\n    if((i as Media).isEncoderProject || (i as EditorProject).isEditorProject) {\n      return <ProjectItem item={i} folderType={dataHook.folderType} onRemoveFolder={dataHook.onRemoveFolder} />\n    }\n\n    if((i as Contact).isContact) {\n      return (\n        <ContactItem \n          key={i.id}\n          navigation={navigation}\n          i={i as Contact}\n          party={party}\n          current={current}\n          sendChatMessage={sendChatMessage}\n          getPrevPartiesForChatId={getPrevPartiesForChatId}\n          width={width}\n        />\n      )\n    }\n    if((i as Folder).isFolder) {\n      const {\n        onRemoveFolder,\n        isEditingFolder,\n        onFolderActionPress,\n        setFolderEditorName,\n        currentFolderEditorName,\n        folderNameInputRef,\n        abortEditFolder,\n        onShareFolder\n      } = dataHook as ReturnType<typeof useFolders>\n      return (\n        <FolderItem \n          key={i.id}\n          folder={{\n            ...(i as Folder),\n            isInfoOpen: i.id === isEditingFolder,\n            isOpen:i.id === currentFolderId\n          }}\n          styles={styles}\n          setFolderEditorName={setFolderEditorName}\n          currentFolderEditorName={currentFolderEditorName}\n          folderNameInputRef={folderNameInputRef}\n          iconColor={iconColor}\n          iconSize={iconSize}\n          enableMove={enableMove}\n          current={current!}\n          width={width}  \n          isOpen={i.id === currentFolderId}\n          onRemoveFolder={()=>onRemoveFolder(i)}\n          onShareFolder={()=>onShareFolder(i)}\n          onFolderActionPress={()=>onFolderActionPress(i.id)}\n          onFolderPress={()=>\n            navigation.dispatch(CommonActions.navigate(\n              {name:'Folder', params:{\n                folderId:(i as Folder).id, \n                title: (i as Folder).title, \n                parentFolderId:i.folderId\n              }}\n            ))\n          }  \n          isSecondLevel={true}   \n          abortEditFolder={()=>abortEditFolder()}\n        >\n          {i.id === currentFolderId ? <></> : null} \n        </FolderItem>\n      )\n    }\n    return (<></>)\n};\n\nexport default ContentItem;\n","import React from \"react\"\nimport { ActivityIndicator, Divider, List } from \"react-native-paper\"\nimport { useQuery } from \"react-query\"\nimport { Device } from \"../types\"\nimport { useIsFocused } from \"@react-navigation/native\"\nimport { View } from \"react-native\"\n\nexport default function DevicesScreen(props:any) {\n    const user = useQuery(\"UserData\", ()=>props.getUserData(), {refetchOnWindowFocus:false})\n    const userLoading = user.isLoading\n    const userData = user.data\n    if(userLoading) \n        return <ActivityIndicator size={72} />\n    return <List.Section>\n        {userData.devices.map((device:Device)=>(<View key={device.id}>\n            {device.id !== \"unknown\" && device.manufacturer ? \n                <>\n                <Divider />\n                <List.Item\n                    key={device.id} \n                    left={(props)=><List.Icon {...props} icon={device.manufacturer.toLowerCase()} />} \n                    right={(props)=><List.Icon {...props} icon={\"logout\"} />} \n                    description={`Created: ${new Date(device.createdAt).toDateString()}`}\n                    title={`${device.model.replace(new RegExp(\"-\"), \" \")} on ${device.platform}`} \n                />\n                <Divider />\n                </>\n             : null}\n        </View>))}\n    </List.Section>\n    \n}","import * as React from 'react';\nimport { I18nManager, StyleSheet, View, Platform } from 'react-native';\n\nimport { DrawerContentComponentProps, DrawerContentScrollView } from '@react-navigation/drawer';\nimport {\n  Drawer,\n  useTheme,\n} from 'react-native-paper';\n\nconst DrawerCollapsedItemsData = [\n  {\n    label: 'Media',\n    focusedIcon: 'folder',\n    unfocusedIcon: 'folder-outline',\n    key: 0,\n    screen:\"FilesTab\"\n  },\n  {\n    label: 'Chat',\n    focusedIcon: 'forum',\n    unfocusedIcon: 'forum-outline',\n    key: 1,\n    screen:\"ContactsTab\"\n  },\n  {\n    label: 'Encode\\nCompress',\n    focusedIcon: 'state-machine',\n    unfocusedIcon: 'state-machine',\n    key: 2,\n    screen:\"EncoderTab\"\n  },\n  {\n    label: 'Video\\nEditor',\n    focusedIcon: 'scissors-cutting',\n    unfocusedIcon: 'scissors-cutting',\n    key: 3,\n    screen:\"EditorTab\"\n  },\n  {\n    label: 'Settings',\n    focusedIcon: 'cog',\n    unfocusedIcon: 'cog-outline',\n    key: 4,\n    screen:\"SettingsTab\"\n  },\n];\n\nfunction DrawerItems(props:DrawerContentComponentProps) {\n  const nav = props.navigation\n  const drawerItemIndex = props.state.index\n  const theme = useTheme()\n  const isV3 = true;\n  const collapsed = true;\n\n  return (\n    <DrawerContentScrollView\n      alwaysBounceVertical={false}\n      style={[\n        styles.drawerContent,\n        {\n          backgroundColor: theme.colors.surface,\n        },\n      ]}\n      showsVerticalScrollIndicator={false} \n      showsHorizontalScrollIndicator={false}\n    >\n      {isV3 && collapsed && (\n        <>\n          {DrawerCollapsedItemsData.map((props, index) => (\n            <Drawer.Section \n              style={styles.collapsedSection} \n              key={props.key}\n            >\n              <Drawer.CollapsedItem\n                {...props}\n                key={props.key}\n                active={drawerItemIndex === index}\n                onPress={()=>{\n                  nav.navigate(props.screen)\n                }}\n              />\n            </Drawer.Section>\n          ))}\n        </>\n      )}\n      \n    </DrawerContentScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  drawerContent: {\n    flex: 1,\n  },\n  preference: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n  },\n  v3Preference: {\n    height: 56,\n    paddingHorizontal: 28,\n  },\n  badge: {\n    alignSelf: 'center',\n  },\n  collapsedSection: {\n    marginTop: 16,\n    fontSize: 12\n  },\n  annotation: {\n    marginHorizontal: 24,\n    marginVertical: 6,\n  },\n});\n\nexport default DrawerItems;","import React, { memo } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nconst EditorStack = createStackNavigator()\n\nimport FolderPage from './folderpage';\nimport { FolderType } from '../types';\nimport FolderLibrary from './folderlibrary';\nimport { useFolders } from '../hooks/useFolders';\nimport EditorProject from './editorproject'\n\nconst folderType = FolderType.editor\n\nexport const createEditor = (ops:any) => {\n    const FolderComponent = memo((props:any) => <FolderPage\n            folderId={props.route.params.folderId}\n            navigation={props.navigation}\n            route={props.route}\n            getFolderContent={ops.getFolderContent}\n            getById={ops.getById}\n            enqMedia={ops.enqMedia}\n            stopMedia={ops.stopMedia}\n            getFoldersByType={ops.getFoldersByType}\n            setWindowClosedCallback={ops.setWindowClosedCallback}\n            folderType={folderType}\n            writeItem={ops.writeItem}\n        />)\n    const FolderLibraryComponent = memo((props)=><FolderLibrary {...props} {...ops} dataHook={useFolders(\n            folderType, \n            ops.getFoldersByType, \n            ops.getFolderContent, \n            ops.writeItem\n        )} />\n    )\n    const EditorProjectScreen = memo((props)=><EditorProject {...props} \n        writeItem={ops.writeItem} \n        getById={ops.getById} \n        getFolderContent={ops.getFolderContent}\n    />)\n    const EditorStackScreen = () => {\n        return (\n        <EditorStack.Navigator\n            screenOptions={{\n                headerShown: false,\n                freezeOnBlur:true,\n            }}\n        >\n            <EditorStack.Screen\n                name=\"EditorProjects\"\n                component={FolderLibraryComponent} \n                options={{}}   \n            />\n            <EditorStack.Screen\n                name=\"EditorProject\"\n                component={EditorProjectScreen}\n            />\n            <EditorStack.Screen\n                name=\"Folder\"\n                component={FolderComponent}\n            />\n        </EditorStack.Navigator>\n        )\n    }\n    return EditorStackScreen\n}","import React, { memo,  useRef,  } from 'react';\nimport {  View, useWindowDimensions } from 'react-native';\nimport {  Banner,  Divider,  useTheme } from 'react-native-paper';\nimport {  useQuery,  } from 'react-query';\nimport { EditorLayer, EditorProject, } from '../types';\nimport { useAppSelector } from \"../store/hooks\";\nimport EncoderProject from './encoderproject';\nimport EditorForm from './editorform';\nimport EditorVideoComponent from './editorvideo';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { getFolderContent, getUnreadMessages, getUserData, sendChatMessage, getPublicMessages, setPubCallback } from '../api';\nimport Chat from '../routes/chat'\nfunction EditorBanner({getById, projectId, writeItem, height, routeParams}: any) {\n    const theme = useTheme()\n    const mediaData = useQuery([\"projectdata\",projectId], \n      async ()=>await getById(projectId), {\n        enabled:projectId ? true : false\n      }\n    )\n    const video2 = useRef()\n    const mediaRes:EditorProject = mediaData.data\n    \n    const layersQuery = useQuery([\"projectLayers\", projectId], async ()=>{\n      const data = await getFolderContent(projectId)\n      const m = await Promise.all(\n          data.map(async(i)=>{\n              return {\n                  ...i, \n                  media:await getFolderContent(i?.id)\n              }\n          })\n      )\n      return m\n  })\n  const {width} = useWindowDimensions()\n  const codeWidth = (width*0.24)-50\n  const layers:EditorLayer[] | undefined = layersQuery.data\n    return (\n      <View style={{margin:0, display:\"flex\"}} className=\"video-banner\">\n      <Divider />\n      <Banner\n        visible={projectId ? true : false}\n        theme={theme}\n        style={{\n          backgroundColor: \"black\", \n          padding:0, \n          margin:0,\n          height:\"100%\",\n          overflow:\"hidden\",\n          display:\"flex\",\n          flexDirection:\"row\"\n        }}\n        contentStyle={{\n          width:\"100%\", \n          height:\"100%\",\n          maxWidth:\"auto\", \n          padding:0, \n          margin:0,\n          display:\"flex\",\n          flexDirection:\"row\",\n          alignItems:\"stretch\",\n          overflow:\"hidden\",\n        }}\n      >\n      <View style={{display:\"flex\", flexDirection:\"row\", width:\"100%\", height:\"100%\"}} >\n        <ScrollView \n          style={{width:\"24%\", height:height / 2, display:\"flex\", marginRight:5}} \n          key={1} \n          showsHorizontalScrollIndicator={false} \n          showsVerticalScrollIndicator={false}\n        >\n          <EditorForm \n            projectId={projectId}\n            mediaRes={mediaRes} \n            video2={video2}\n            layers={layers}\n            projectQuery={mediaData}\n            writeItem={writeItem}\n          />\n        </ScrollView>\n        <View style={{\n          width:\"50%\", \n          height:height / 2, \n          borderLeftWidth:1, \n          borderRightWidth:1, \n          borderLeftColor:\"rgb(73, 69, 79)\", \n          borderRightColor:\"rgb(73, 69, 79)\", \n          display:\"flex\"\n        }} key={2}>\n          <EditorVideoComponent  \n            video2={video2}\n            projectId={projectId}\n            mediaRes={mediaRes} \n            layers={layers}\n          />\n        </View>\n        <View \n          style={{width:\"24%\", height:height / 2, display:\"flex\"}} \n          key={3}\n        >\n          {routeParams?.encoder && <EncoderProject \n              routeParams={routeParams} \n              writeItem={writeItem} \n              getById={getById} \n              codeWidth={codeWidth}\n            /> }\n          {routeParams?.chatId && <Chat  \n            setPubCallback={setPubCallback}\n            getPublicMessages={getPublicMessages}\n            getUnreadMessages={getUnreadMessages}\n            sendChatMessage={sendChatMessage}\n            getUserData={getUserData}\n            getById={getById}\n            writeItem={writeItem}\n            getFolderContent={getFolderContent}\n            routeParams={routeParams}\n            isEmbeded={true}\n          />}\n        </View>\n      </View>\n      </Banner>\n      <Divider />\n      </View>\n    )\n}\n\nexport default memo(EditorBanner)","\nimport React from 'react';\nimport { PanGestureHandler, State } from 'react-native-gesture-handler';\n\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { setCaretPosition, setScrollPosition } from '../store/slices/editor';\nimport { Animated, useWindowDimensions, View } from 'react-native';\n\nfunction EditorCaret() {\n\tconst dispatch = useAppDispatch()\n\tconst caretPosition = useAppSelector(state=>state.editor.caretPosition)\n\tconst {width, height} = useWindowDimensions()\n  const translateX = new Animated.Value(0);\n  const onGestureEvent = Animated.event([\n    {\n      nativeEvent: {\n        translationX: translateX,\n      },\n    },\n  ], {listener:(event) => {\n    // console.info('ongesture', event)\n  }, useNativeDriver:true});\n\n  const onHandlerStateChange = event => {\n    if (event.nativeEvent.oldState === State.ACTIVE) {\n      const newOffset= event.nativeEvent.translationX\n      let fullOffset = caretPosition+newOffset\n      if(fullOffset < 0)\n        fullOffset = 0;\n\n      translateX.setOffset(fullOffset);\n      translateX.setValue(0);\n      dispatch(setCaretPosition(fullOffset))\n      return fullOffset\n    }\n  };\n  return (\n    <View style={{cursor:\"pointer\", height:0}}>\n      <PanGestureHandler\n        onGestureEvent={onGestureEvent}\n        onHandlerStateChange={onHandlerStateChange}>\n        <Animated.View\n          style={[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twidth:100, \n              opacity:0.5,\n\t\t\t\t\t\t\theight:height / 2,\n\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t\talignItems: 'center',\n\t\t\t\t\t\t\tbackgroundColor: 'red',\n              cursor:\"pointer\",\n\t\t\t\t\t\t},\n            { transform: [{ translateX:translateX\n              .interpolate({\n                inputRange:[0, width],\n                outputRange:[caretPosition, width],\n                extrapolate:\"extend\"\n\t\t\t\t\t\t  }) \n          }] },\n          ]}>\n        </Animated.View>\n      </PanGestureHandler>\n    </View>\n  );\n};\nexport default EditorCaret","\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { useAppSelector } from \"../store/hooks\";\nimport { Animated, View } from \"react-native\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { EditorComment, EditorProject, EncoderProject } from \"../types\";\nimport { PanGestureHandler, TouchableOpacity, State } from \"react-native-gesture-handler\";\nimport { Avatar, IconButton, List } from \"react-native-paper\";\nimport React from \"react\";\nconst minDuration = 40\n\nconst EditorContentItem = ({ \n  item, \n  onDragEnd, \n  onDragStart, \n  index, \n  layerIndex, \n  writeItem, \n  parentDataHook\n}: {item:EncoderProject | EditorComment, folder:EditorProject}) => {\n\tconst nav = useNavigation()\n\tconst route = useRoute()\n\tconst queryClient = useQueryClient()\n\tconst editor = useAppSelector((state)=>state.editor)\n\tconst {pixelsPerSecond} = editor\n\tconst {projectId} = route.params\n\tconst maxDuration = (((item?.duration || 0)-1)*pixelsPerSecond)\n\tconst start = item.encoding?.start || 0\n\tconst end = item.encoding?.end || item.duration\n\tlet currentDuration = \n    (end \n      ? ((end - start) * pixelsPerSecond) : maxDuration) \n\t// if(currentDuration < minDuration)\n\t// \tcurrentDuration = minDuration / 2\n\tlet width = new Animated.Value(currentDuration);\n\tconst writeItemMutation = useMutation((item:EncoderProject)=>writeItem(item), {onSuccess: async () => {\n    await queryClient.refetchQueries(\n        [\"projectLayers\", projectId],\n    )\n    await queryClient.refetchQueries(\n      [\"encodedMedia\",projectId]\n    )\n    await queryClient.refetchQueries([\"project_\"+projectId])\n\t}})\n\tconst onGestureEvent = Animated.event([\n\t\t{\n\t\tnativeEvent: {\n\t\t\ttranslationX: width,\n\t\t},\n\t\t},\n\t], {listener:(event) => {\n    // console.info('ongesture', event)\n  }, useNativeDriver:true});\n\tconst combIndex = index+layerIndex\n\tlet backgroundColor = combIndex % 2 ?  \"darkcyan\" : \"green\"\n\tif(combIndex % 3 > 1) \n\t\tbackgroundColor = \"darkslateblue\"\n\n\n  const deleteItem = async () => {\n    parentDataHook.onRemoveFolder(item)\n  }\n  const onHandlerStateChange = async (event) => {\n    if (event.nativeEvent.oldState === State.ACTIVE) {\n      let newvalue = width._value \n\n      if(newvalue > maxDuration)\n        newvalue = maxDuration\n      if(newvalue < minDuration)\n        newvalue = minDuration\n      \n      if(width._value !== newvalue)\n        width.setValue(newvalue)\n\n      if(!item.encoding)\n        item.encoding = {}\n      newvalue = newvalue / pixelsPerSecond\n      if(newvalue < item.encoding?.start || 0)\n        newvalue += item.encoding?.start\n      item.encoding.end = newvalue\n      // item.encoding.lastUpdated = new Date().valueOf()\n      await writeItemMutation.mutateAsync(item)\n    }\n  };\n  return (\n    <View key={item.id} style={{height:68, position:'relative'}}>\n        <Animated.View\n          style={{\n            width:!item.isContact ? width\n            .interpolate({\n\t\t\t\t\t\t\tinputRange:[start, maxDuration],\n\t\t\t\t\t\t\toutputRange:[start, maxDuration],\n\t\t\t\t\t\t\textrapolate:\"clamp\"\n\t\t\t\t\t\t}) : 75,\n\t\t\t\t\t\theight:\"100%\",\n            top:0,\n\t\t\t\t\t\tpadding:0,\n\t\t\t\t\t\tmargin:0,\n            left:item.currentPosition ? pixelsPerSecond*item.currentPosition : 0,\n            position:item.currentPosition ? \"absolute\" : \"relative\",\n            backgroundColor,\n            zIndex:2,\n\t\t\t\t\t\tborderWidth:item.id === route.params.encoder || item.id  === route.params.chatId ? 1 : 0,\n            borderRadius: item.isContact ? 100 : 0,\n\t\t\t\t\t\tborderColor:\"white\"\n          }}\n        >\n\t\t\t\t{!item.isContact && <><PanGestureHandler onGestureEvent={onGestureEvent} onHandlerStateChange={onHandlerStateChange}>  \n\t\t\t\t\t<View style={{\n\t\t\t\t\t\tposition:\"absolute\",left:0,bottom:0, transform:[{rotate:\"90deg\"}],cursor:\"pointer\",zIndex:100\n\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<List.Icon icon={\"resize-bottom-right\"} style={{padding:0, margin:0}} />\n\t\t\t\t\t</View>\n\t\t\t\t</PanGestureHandler>\n\t\t\t\t<PanGestureHandler onGestureEvent={onGestureEvent} onHandlerStateChange={onHandlerStateChange} >  \n\t\t\t\t\t<View style={{\n\t\t\t\t\t\tposition:\"absolute\",right:0,bottom:0,cursor:\"pointer\",zIndex:100\n\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<List.Icon icon={\"resize-bottom-right\"} style={{padding:0, margin:0}} />\n\t\t\t\t\t</View>\n\t\t\t\t</PanGestureHandler></>}\n          <List.Item \n\t\t\t\t\t\tonPress={()=>\n              nav.setParams({\n                ...route.params, \n                encoder:!item.isContact && item.id, \n                chatId: item.isContact && item.id\n              })\n            }\n\t\t\t\t\t\tstyle={{height:\"100%\"}}\n            // left={()=>item.isContact ?<Avatar.Text \n            //   size={30} \n            //   label={[item.title.split(\" \")[0][0], item.title.split(\" \")[1][0]].join(\"\")} \n            //   // style={{zIndex:2}}\n            // /> : null }\n\t\t\t\t\t\ttitle={item.isContact ? \"\": item.title}\n\t\t\t\t\t\tright={()=><>\n              {!item.isContact &&\n                <TouchableOpacity\n                onPressIn={onDragStart}\n                onPressOut={onDragEnd}\n                style={{pointerEvents:\"auto\"}} >\n                  <IconButton size={18} icon={\"drag\"} />\n                </TouchableOpacity>\n              }\n              {item.isContact && <Avatar.Text \n                size={30} \n                label={[item.title?.split(\" \")[0][0], item.title?.split(\" \")[1][0]].join(\"\")} \n                style={{marginLeft:-10, marginTop:8, backgroundColor:\"transparent\"}}\n              />}\n              <IconButton size={18} icon={\"delete\"} onPress={deleteItem} />\n            </>}\n\t\t\t\t\t\t/>\n        </Animated.View>\n    </View>\n  );\n};\n\nexport default EditorContentItem","import React, {  useCallback, useEffect, useRef, useState } from 'react';\nimport { SafeAreaView, View, useWindowDimensions, Clipboard } from 'react-native';\nimport { Button, Divider, IconButton, List, Menu, TextInput, } from 'react-native-paper';\nimport { EditorLayer, EditorProject, FFMpegOutputType, FFMpegPreset } from '../types';\nimport { genRenderCmd, genExecTime, getTotalTime, encodeProject } from '../api/media';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { addNewLogLine, setActiveLayer, setCaretPosition, setIsRendering, setRenderProgress, setRenderUrl, setScrollPosition } from '../store/slices/editor';\nimport { useMutation } from 'react-query';\nimport SyntaxHighlighter from 'react-native-syntax-highlighter';\nimport { xonokai } from 'react-syntax-highlighter/src/styles/prism';\nimport CodeEditor, { CodeEditorSyntaxStyles } from '@rivascva/react-native-code-editor';\nfunction EditorForm(props: {mediaRes:EditorProject, layers: EditorLayer[]}) {\n    const {mediaRes, video2, layers, writeItem, projectQuery} = props\n    const dispatch = useAppDispatch()\n    const caretPosition = useAppSelector(state=>state.editor.caretPosition)\n    const scrollPosition = useAppSelector(state=>state.editor.scrollPosition)\n    const pixelsPerSecond = useAppSelector(state=>state.editor.pixelsPerSecond)\n    const activeLayer = useAppSelector(state=>state.editor.activeLayer)\n    const isPlaying = useAppSelector(state=>state.editor.isPlaying)\n    const isRendering = useAppSelector(state=>state.editor.isRendering)\n    const renderOutputURL = useAppSelector(state=>state.editor.renderOutputURL)\n    const renderProgress = useAppSelector(state=>state.editor.renderProgress)\n    const ffmpegLogs = useAppSelector(state=>state.editor.ffmpegLogs)\n    const ffmpegError = useAppSelector(state=>state.editor.ffmpegError)\n    const totalTime = layers?.length ? getTotalTime(layers) : 0\n    const [showCode, setShowCode] = useState(false)\n    const {width} = useWindowDimensions()\n    const codeEditorRef = useRef()\n    const currentPosition = (caretPosition+scrollPosition)/pixelsPerSecond\n    const fontSize = 12\n    const inputWidth = 120\n    const codeWidth = (width*0.24)-50\n    const [outputMenuVisible, setOutputMenuVisible] = useState(false)\n    const [presetMenuVisible, setPresetMenuVisible] = useState(false)\n    const outputTypes = Object.keys(FFMpegOutputType)\n    const execCmd = genRenderCmd(mediaRes, layers, true).execCmd\n    const codeString = execCmd.join(\"\\n\")\n    const closeMenu = () => {\n        setOutputMenuVisible(false)\n        setPresetMenuVisible(false)\n    }\n    const projectWriteMutation = useMutation((item:EditorProject)=>writeItem(item), {onSuccess:()=>{\n        console.info('after writing project')\n        projectQuery.refetch()\n    }})\n    const processKey = useCallback((ev)=>{\n      const step = 5\n      if(ev.code === \"ArrowLeft\") {\n        if(!video2.current?.paused) {\n          video2.current?.pause()\n        }\n        console.info(\"arrowLeft, caretPosition, scrollPosition\",caretPosition, scrollPosition)\n        caretPosition > 0 ?\n        dispatch(setCaretPosition( caretPosition-step))\n        : dispatch(setScrollPosition(scrollPosition-step))\n      }\n      if(ev.code === \"ArrowRight\") {\n        if(!video2.current?.paused) {\n          video2.current?.pause()\n        }\n        console.info(\"arrowRight, caretPosition, scrollPosition\",caretPosition, scrollPosition)\n        dispatch(setCaretPosition(caretPosition+step))\n      }\n      if(ev.code === \"Space\") {\n        if(video2.current?.paused)\n          video2.current?.play()\n        else\n          video2.current?.pause()\n      }\n    }, [caretPosition, scrollPosition])\n    useEffect(()=>{\n      document.onkeyup = ev=>processKey(ev)\n    },[processKey])\n    const selectValue = (valueType:keyof EditorProject[\"editor\"], value:string | number) => {\n        const np = mediaRes\n        const numericTypes = [\"width\", \"height\", 'start', \"end\", \"framerate\"]\n        const nonRenderTypes = ['start','end']\n        const shouldRerender = !nonRenderTypes.includes(valueType)\n        if(numericTypes.includes(valueType) && isNaN(value)) {\n            console.info('invalid type')\n            return;\n        }\n        if(!np.editor) {\n            np.editor = {}\n        }\n        np.editor[valueType] = value;\n\n        if(shouldRerender)\n            np.editor.lastUpdated = new Date().valueOf()\n\n        projectWriteMutation.mutateAsync(np)\n        closeMenu()\n\n    }\n    return <>\n        <List.Item \n        left={(p)=><List.Icon {...p} style={{fontSize}} icon={\"clock\"} />} \n        title={genExecTime(currentPosition)} \n        right={(p)=>\n            <IconButton \n                {...p} \n                style={{fontSize}} \n                icon={!isPlaying ? \"play\" : \"pause\"} \n                onPress={()=>{\n                    if(video2?.current?.paused === true) {\n                        // dispatch(resetCurrentVideoStateToMain())\n                        dispatch(setActiveLayer({\n                            activeLayerId:activeLayer,\n                            caretPosition,\n                            scrollPosition\n                        }))\n                        video2?.current.play()\n                    }\n                    else {\n                        video2?.current.pause()\n                        // dispatch(resetCurrentVideoStateToMain())\n                    }\n                }} \n            />\n        } \n        />\n        <Divider key={\"div01\"} />\n        <List.Item \n            key={'start'}\n            left={(p)=><List.Icon  {...p} style={{fontSize}}  icon={\"clock-plus\"} />} \n            titleStyle={{fontSize}}\n            title={\"Start\"}\n            right={(p)=><View style={{width:inputWidth}}>\n                <TextInput \n                    dense={true}\n                    mode='outlined'\n                    value={0} \n                    style={{textAlign:\"right\", pointerEvents:\"auto\"}}\n                    keyboardType='numeric'\n                    onChangeText={(text)=>selectValue(\"start\", parseInt(text, 10))}\n                />\n            </View>}\n        />\n        <Divider key={\"div7\"} />\n        <List.Item \n            key={'end'}\n            left={(p)=><List.Icon  {...p} style={{fontSize}} icon={\"clock-minus\"} />} \n            titleStyle={{fontSize}}\n            title={`End`}\n            right={(p)=><View style={{width:inputWidth}}>\n                <TextInput \n                    dense={true}\n                    mode='outlined'\n                    value={genExecTime(totalTime) || 0} \n                    style={{textAlign:\"right\", pointerEvents:\"auto\"}}\n                    keyboardType='numeric'\n                    onChangeText={(text)=>selectValue(\"end\", parseInt(text, 10))}\n                />\n            </View>}\n        />\n        <Divider key={\"div3\"} />\n        <List.Item \n            key={'width'}\n            left={(p)=><List.Icon {...p} style={{fontSize}} icon={\"ruler\"} />} \n            title={`Width`}\n            titleStyle={{fontSize}}\n            right={(p)=><View style={{width:inputWidth}}>\n                <TextInput \n                    dense={true}\n                    mode='outlined'\n                    value={mediaRes?.editor?.width} \n                    style={{textAlign:\"right\", pointerEvents:\"auto\"}}\n                    keyboardType='numeric'\n                    onChangeText={(text)=>selectValue(\"width\", parseInt(text, 10))}\n                />\n            </View>}\n        />\n        <Divider key={\"div2\"} />\n        <List.Item \n            key={'height'}\n            left={(p)=><List.Icon {...p} style={{fontSize}} icon={\"ruler\"} />} \n            title={`Height`}\n            titleStyle={{fontSize}}\n            right={(p)=><View style={{width:inputWidth}}>\n                <TextInput \n                    dense={true}\n                    mode='outlined'\n                    value={mediaRes?.editor?.height} \n                    style={{textAlign:\"right\", pointerEvents:\"auto\"}}\n                    keyboardType='numeric'\n                    onChangeText={(text)=>selectValue(\"height\", parseInt(text, 10))}\n                />\n            </View>}\n        />\n        <Divider key={\"divaspect\"} />\n        <List.Item \n            key={'aspect'}\n            left={(p)=><List.Icon  {...p} style={{fontSize}}  icon={\"aspect-ratio\"} />} \n            titleStyle={{fontSize}}\n            title={\"Aspect Ratio\"}\n            right={(p)=><View style={{width:inputWidth}}>\n                <TextInput \n                    dense={true}\n                    mode='outlined'\n                    value={mediaRes?.editor?.aspectRatio || \"16/9\"} \n                    style={{textAlign:\"right\", pointerEvents:\"auto\"}}\n                    keyboardType=\"default\"\n                    onChangeText={(text)=>selectValue(\"aspectRatio\", text)}\n                />\n            </View>}\n        />\n        <Divider key={\"divrate\"} />\n        <List.Item \n            key={'frames'}\n            left={(p)=><List.Icon  {...p} style={{fontSize}}  icon={\"movie-roll\"} />} \n            titleStyle={{fontSize}}\n            title={\"Frame Rate\"}\n            right={(p)=><View style={{width:inputWidth}}>\n                <TextInput \n                    dense={true}\n                    mode='outlined'\n                    value={mediaRes?.editor?.framerate || 30} \n                    style={{textAlign:\"right\", pointerEvents:\"auto\"}}\n                    keyboardType=\"numeric\"\n                    onChangeText={(text)=>selectValue(\"framerate\", parseInt(text, 10))}\n                />\n            </View>}\n        />\n        <Divider key={\"div1\"} />\n        <List.Item \n            key={'output'}\n            left={(p)=><List.Icon {...p} style={{fontSize}} icon={\"file-export\"} />} \n            title={\"Output\"}\n            titleStyle={{fontSize}}\n            right={(p)=><View style={{width:inputWidth}}>\n                <Menu\n                visible={outputMenuVisible}\n                onDismiss={closeMenu}\n                anchor={<Button mode='outlined' onPress={()=>setOutputMenuVisible(true)}>{mediaRes?.editor?.output}</Button>}>\n                    <>\n                    {outputTypes.map((item)=>\n                        <Menu.Item key={item} onPress={() => selectValue(\"output\", item)} title={item} />\n                    )}\n                    </>\n                </Menu>\n            </View>}\n        />\n        <Divider key={\"divPreset\"} />\n        <List.Item \n            key={'preset'}\n            left={(p)=><List.Icon {...p} style={{fontSize}} icon={\"file-export\"} />} \n            title={\"Preset\"}\n            titleStyle={{fontSize}}\n            right={(p)=><View style={{width:inputWidth}}>\n                <Menu\n                visible={presetMenuVisible}\n                onDismiss={closeMenu}\n                anchor={<Button mode='outlined' onPress={()=>setPresetMenuVisible(true)}>{mediaRes?.editor?.preset}</Button>}>\n                    <>\n                    {Object.keys(FFMpegPreset).map((item)=>\n                        <Menu.Item key={item} onPress={() => selectValue(\"preset\", item)} title={item} />\n                    )}\n                    </>\n                </Menu>\n            </View>}\n        />\n        {showCode === true ? \n            <View>\n                <Divider key={\"divinputcode\"} />\n                <List.Item \n                    key={'code'}\n                    left={(p)=><List.Icon {...p} icon={\"code-brackets\"} />} \n                    title={\"\"}\n                    titleStyle={{fontSize}}\n                    onPress={()=>codeEditorRef?.current?.focus()}\n                    right={(p)=><SafeAreaView style={{width:codeWidth, zIndex:10}}>\n                        <CodeEditor\n                            className={\"codeEditor\"}\n                            ref={codeEditorRef}\n                            style={{\n                                fontSize,\n                                inputLineHeight: fontSize,\n                                highlighterLineHeight: fontSize,\n                                marginLeft:0,\n                            }}\n                            language=\"bash\"\n                            \n                            syntaxStyle={CodeEditorSyntaxStyles.xonokai}\n                            initialValue={mediaRes.editor?.code?.join(\",\") || \"\"} \n                            onChange={(text)=>{\n                                if(text === mediaRes.editor?.code?.join(\",\") || \"\")\n                                    return\n                                selectValue(\"code\", text.split(\",\"))  \n                            }}\n                            autoFocus={false}\n                            showLineNumbers\n                        /></SafeAreaView>\n                    }\n                />\n                <Divider key={\"divoutputcode\"} />\n                {codeString && <List.Item\n                    key={\"output_code\"}\n                    left={(p)=><List.Icon {...p} icon={\"code-tags\"} />} \n                    title=\"\"\n                    onPress={()=>Clipboard.setString(codeString)}\n                    titleStyle={{fontSize}}\n                    right={()=><View style={{width:codeWidth}}><SyntaxHighlighter \n                        language='bash' \n                        style={xonokai}\n                        fontSize={fontSize}\n                        pointerEvents={true}\n                        scroll={true}\n                        highlighter={\"prism\"}\n                    >\n                        {codeString}\n                    </SyntaxHighlighter> </View> } \n                /> }\n                <Divider key={\"divlogs\"} />\n                {codeString && <List.Item\n                    key={\"output_logs\"}\n                    left={(p)=><List.Icon {...p} icon={\"code-parentheses\"} />} \n                    title=\"\"\n                    onPress={()=>Clipboard.setString(ffmpegLogs)}\n                    titleStyle={{fontSize}}\n                    right={()=><View style={{width:codeWidth, pointerEvents:\"auto\"}}><SyntaxHighlighter \n                        language='bash' \n                        style={xonokai}\n                        customStyle={{pointerEvents:\"auto\", userSelect:\"all\"}}\n                        fontSize={fontSize}\n                        userSelect={true}\n                        pointerEvents={true}\n                        scroll={true}\n                        highlighter={\"prism\"}\n                    >\n                        {ffmpegLogs}\n                    </SyntaxHighlighter> </View> } \n                /> }\n                <Divider key={\"div8\"} />\n            </View>\n            : null\n        }\n        <Divider key={\"divinputcode2\"} />\n        <Button icon={\"code-brackets\"} onPress={()=>setShowCode(!showCode)}>Show FFMpeg Code</Button> \n        <Divider key={\"divinputrender\"} />\n        <Button \n          icon={\"movie\"} \n          style={{pointerEvents:\"auto\", cursor:\"pointer\"}} \n          onPress={async ()=>{\n            dispatch(setIsRendering(true))\n            const render = await encodeProject(mediaRes, layers, false, \n              (renderParams)=>dispatch(setRenderProgress(renderParams)),\n              (logLine)=>dispatch(addNewLogLine(logLine))\n            )\n            dispatch(setRenderUrl(render))\n            dispatch(setIsRendering(false))\n          }}\n          loading={isRendering}\n          disabled={isRendering}\n          mode={\"outlined\"}>\n            {isRendering ? `Rendering project: ${parseInt((renderProgress*100).toString(), 10)}%` : ffmpegError ? \"Render Project (Error! check logs)\" : \"Render Project\" }\n        </Button>\n        <Divider key={\"divinputdownload\"} />\n        {renderOutputURL && <a href={renderOutputURL} download={true} style={{width:\"100%\"}}><Button \n          icon={\"film\"} \n          style={{pointerEvents:\"auto\", cursor:\"pointer\", width:\"100%\"}} \n          mode={\"outlined\"}>\n            Download video\n        </Button></a>}\n    </>\n}\n\nexport default EditorForm","import React, { useCallback, useRef, useState } from 'react'\nimport {View, useWindowDimensions,Animated, VirtualizedList, GestureResponderEvent} from 'react-native'\nimport { useFolder } from '../hooks/useFolder';\nimport { EditorLayer, EncoderProject, Folder, FolderType } from '../types';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { Divider, IconButton, List, Text } from 'react-native-paper';\n\nimport DragList from 'react-native-draglist';\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\n\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { setScrollPosition, setScrollParams } from '../store/slices/editor';\nimport uuid from 'react-native-uuid';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { DocumentPicker, getById } from '../api';\nimport { startOnboarding } from '../store/slices/upload';\nimport EditorCaret from './editorcaret'\nimport EditorContentItem from './editorcontentitem'\nconst folderType = FolderType.editor\n\nfunction EditorLayerHeaderComponent(props) {\n    const dataHook = useFolder(\n      props.folderId, \n      props.getFolderContent, \n      (itemId)=>props.getById(itemId, props.parentFolderId), \n      FolderType.editor,\n      props.writeItem\n    )\n    const folder = dataHook.folder as EditorLayer\n    const layer = folder?.editor\n    const showComments = useAppSelector((state)=>state.editor.showComments)\n    const toggleLayerProp = async (propName:keyof typeof layer) =>{\n      await props.writeItem({\n      ...dataHook.folder, \n      editor:{\n        ...layer || {}, \n        [propName]: layer && layer[propName] === true ? false : true\n      }} as EditorLayer)\n      dataHook.folderData.refetch()\n    }\n    \n    const muteLayer = (_e: GestureResponderEvent)=>toggleLayerProp(\"muted\")\n\n    const hideLayer = (_e: GestureResponderEvent)=>toggleLayerProp(\"videoDisabled\")\n\n    const isCommentLayer = folder?.id !== undefined && layer?.isCommentLayer\n\n    if(isCommentLayer && !showComments)\n      return <></>\n    return <View style={{display:\"flex\", flexDirection:\"row\", height:68}}>\n        <View style={{width:\"100%\"}}>\n\t\t\t\t\t\t<Divider />\n            <List.Item \n\t\t\t\ttitle={()=><TouchableOpacity \n\t\t\t\t\tonPressIn={props.onDragStart}\n\t\t\t\t\tonPressOut={props.onDragEnd}\n\t\t\t\t\tstyle={{pointerEvents:\"auto\"}}>\n\t\t\t\t\t\t<Text style={{fontSize:14}}>{dataHook.folder?.title}</Text>\n\t\t\t\t\t</TouchableOpacity>} \n\t\t\t\tright={(p)=> {\n          if(!isCommentLayer)\n          return <>\n            <IconButton\n            {...p}  \n            size={14} \n            icon={layer?.muted ? \"volume-off\" : \"volume-high\"} \n            mode={\"outlined\"} \n            onPress={muteLayer} />\n            <IconButton size={14} {...p} mode={\"outlined\"} \n            icon={layer?.videoDisabled ? \"video-off\" : \"video\" } \n            onPress={hideLayer} />\n            <IconButton size={14} {...p} icon={\"delete\"} onPress={async ()=>{\n              await dataHook.onRemoveFolder({id:props.folderId} as Folder)\n              props.parentHook.folderContentQuery.refetch()\n            }} mode={\"outlined\"} /> \n          </>\n          \n          return <IconButton size={14} {...p} mode={\"outlined\"} icon={\"forum\"} />}} />\n        </View>\n    </View>\n}\n\n\nfunction EditorLayerBodyComponent(props) {\n\tconst dispatch = useAppDispatch()\n\tconst dataHook = useFolder(\n\t\tprops.folderId, \n\t\tprops.getFolderContent, \n    (itemId)=>props.getById(itemId, props.parentFolderId), \n\t\tFolderType.editor,\n\t\tprops.writeItem\n\t)\n  const folder = (dataHook.folder as EditorLayer)\n  const layer = folder?.editor\n  const showComments = useAppSelector((state)=>state.editor.showComments)\n  const isCommentLayer = folder?.id !== undefined && layer?.isCommentLayer\n  if(isCommentLayer && !showComments)\n    return <></>\n\n\tconst renderContent = ({item, onDragEnd, onDragStart, index}:{item:EncoderProject}) => (\n\t\t<EditorContentItem \n\t\t\tonDragEnd={onDragEnd} \n\t\t\tonDragStart={onDragStart} \n\t\t\titem={item} \n\t\t\tindex={index} \n\t\t\tlayerIndex={props.layerIndex} \n\t\t\twriteItem={props.writeItem}\n\t\t\tparentDataHook={dataHook}\n\t\t/>\n\t)\n\tconst onClickAddContent = async () => {\n\n\t\tconst pickerResult = await DocumentPicker.pickSingle({\n\t\t\tpresentationStyle: 'fullScreen'\n\t\t})\n\t\tconsole.info('pickerResult', pickerResult, dataHook.folder)    \n\t\t// setMediaModalVisible(true)      \n\t\tif(!pickerResult)\n\t\t\treturn\n\t\tconst url = pickerResult.uri\n\t\tlet fId = props.folderId\n\t\tconst nd: Media = {\n\t\t\tid: uuid.v4().toString(),\n\t\t\turl,\n\t\t\ttitle:pickerResult.name,\n\t\t\toriginalId: pickerResult.name,\n\t\t\tfilename: pickerResult.name,\n\t\t\tfileType: pickerResult.type,\n\t\t\tfolderId: fId,\n\t\t\tuserId:props.userId,\n\t\t\tdate: new Date().valueOf(),\n\t\t\tisMediaNew:false,\n\t\t\tisEncoderProject:true,\n\t\t\ttype: pickerResult.file.type,\n\t\t\tsize: pickerResult.file.size,\n\t\t\textractor: dataHook.folder?.mnemonic ? \"wt\" : \"local\"\n\t\t}\n\t\tdispatch(startOnboarding({file:pickerResult.file, media:nd}))\n\t}\n\tconst data = dataHook.folderContent\n\treturn <View style={{display:\"flex\", flexDirection:\"row\"}}>\n\t\t\t<View style={{width:\"80%\",display:\"flex\", flexDirection:\"row\"}}>\n\t\t\t\t{!isCommentLayer &&<>\n\t\t\t\t<DragList\n\t\t\t\t\t\thorizontal={true}\n\t\t\t\t\t\trenderItem={(renderContent)}\n\t\t\t\t\t\tkeyExtractor={item => item.id || item.date.toString()}\n\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\tonReordered={dataHook.onReordered}\n            style={{width:\"100%\"}}\n            showsHorizontalScrollIndicator={false}\n            showsVerticalScrollIndicator={false}\n\t\t\t\t/>  \n        <List.Item \n\t\t\t\t\ttitle={\"Add Content\"} \n\t\t\t\t\ttitleStyle={{fontSize:14}} \n\t\t\t\t\tstyle={{pointerEvents:\"auto\"}} \n\t\t\t\t\tonPress={()=>onClickAddContent()} right={(props)=><>\n\t\t\t\t\t\t<IconButton {...props} icon={\"plus\"} onPress={()=>onClickAddContent()} mode={\"outlined\"} />\n\t\t\t\t</>} /></> }\n\t\t\t\t{isCommentLayer && <>\n        {data?.map((item, index)=>\n          <EditorContentItem \n            item={item} \n            index={index} \n            layerIndex={props.layerIndex} \n            writeItem={props.writeItem}\n            parentDataHook={dataHook}\n          />\n        )}\n        <List.Item \n\t\t\t\t\ttitle={\"\"} \n\t\t\t\t\ttitleStyle={{fontSize:14}} \n\t\t\t\t\tstyle={{pointerEvents:\"auto\", height:68}} \n          // right={(p)=><IconButton size={14} {...p} mode={\"outlined\"} icon={\"forum\"} /> } \n          /> \n        </>}\n\n\t\t\t</View>\n\t</View>\n}\n\nfunction EditorProjectComponent(props) {\n  const {width} = useWindowDimensions()\n  const route = useRoute()\n\tconst {userId, writeItem} = props\n\tconst scrollPosition = useAppSelector((state)=>state.editor.scrollPosition)\n\tconst scrollParams = useAppSelector((state)=>state.editor.scrollParams)\n  const {projectId, parentFolderId} = route.params\n  // console.info('parentFolderId', parentFolderId)\n  const getByIdCallback = useCallback((itemId)=>props.getById(itemId, parentFolderId), [parentFolderId])\n\tconst dispatch = useAppDispatch()\n  const dataHook = useFolder(\n      projectId, \n      props.getFolderContent, \n      getByIdCallback, \n      FolderType.editor, \n      props.writeItem,\n  )\n\tconst writeItemMutation = useMutation((item:EditorLayer)=>writeItem(item))\n\tconst onClickAddLayer = async () => {\n\t\tconst layer:EditorLayer = {\n\t\t\tid:uuid.v4().toString(),\n\t\t\ttitle:\"Layer\"+parseInt(dataHook.folderContent.length+1),\n\t\t\tfolderId: projectId,\n\t\t\tuserId,\n\t\t\tisEditorLayer:true,\n\t\t\torderId:dataHook.folderContent.length+1,\n\t\t\tfolderType,\n\t\t\tisFolder:false,\n\t\t\tdate: new Date().valueOf(),\n      mnemonic: dataHook.folder?.mnemonic\n\t\t}\n\t\tawait writeItemMutation.mutateAsync(layer)\n\t\tdataHook.folderContentQuery.refetch()\n\t}\n\tconst renderContent = ({item, onDragEnd, onDragStart, index}:{item:EncoderProject}) => (\n\t\t<EditorLayerHeaderComponent \n\t\t\t\t{...props}\n\t\t\t\tkey={item.id}\n\t\t\t\tonDragEnd={onDragEnd}\n\t\t\t\tonDragStart={onDragStart}\n\t\t\t\tfolderId={item.id} \n\t\t\t\tlayerIndex={index}\n\t\t\t\tparentHook={dataHook}\n        parentFolderId={parentFolderId}\n\t\t/>\n\t)\n\tconst horizontalScroll = useRef()\n    return <ScrollView \n      style={{width, height:\"100%\", position:\"absolute\"}} \n      showsHorizontalScrollIndicator={false}\n      showsVerticalScrollIndicator={false}\n    >\n        <View style={{display:\"flex\", flexDirection:\"column\"}}>\n\t\t\t<View style={{width:\"100%\", flexDirection:\"row\"}} >\n\t\t\t\t<View style={{width:\"20%\"}} >\n\t\t\t\t\t<DragList\n\t\t\t\t\t\t\trenderItem={(renderContent)}\n\t\t\t\t\t\t\tkeyExtractor={item => item.id || item.date.toString()}\n\t\t\t\t\t\t\tdata={dataHook.folderContent}\n\t\t\t\t\t\t\tonReordered={async (start, end)=>{\n\t\t\t\t\t\t\t\tawait dataHook.onReordered(start, end)\n\t\t\t\t\t\t\t}}\n              showsHorizontalScrollIndicator={false}\n              showsVerticalScrollIndicator={false}\n\t\t\t\t\t/> \n\t\t\t\t</View>\n\t\t\t\t<ScrollView \n\t\t\t\thorizontal={true} \n\t\t\t\tstyle={{width:\"80%\",display:\"flex\", flexDirection:\"row\", height:\"100%\"}} \n\t\t\t\tonScroll={(e)=>{\n\t\t\t\t\tdispatch(setScrollPosition(e.nativeEvent.contentOffset.x))\n\t\t\t\t}} \n\t\t\t\tref={(e)=>{\n\t\t\t\t\thorizontalScroll.current = e\n\t\t\t\t\tconst totalWidth = horizontalScroll?.current?.clientWidth\n\t\t\t\t\tconst totalScroll = horizontalScroll.current?.scrollWidth\n\t\t\t\t\tif(scrollParams.totalScroll !== totalScroll \n\t\t\t\t\t\t|| scrollParams.totalWidth !== totalWidth) {\n\t\t\t\t\t\t\tdispatch(setScrollParams({\n\t\t\t\t\t\t\t\ttotalWidth, \n\t\t\t\t\t\t\t\ttotalScroll\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t}\n\t\t\t\t\thorizontalScroll?.current?.scrollTo({x:scrollPosition})\n\t\t\t\t}}\n\t\t\t\tscrollEventThrottle={50}\n\t\t\t\tshowsHorizontalScrollIndicator={false}\n\t\t\t\tshowsVerticalScrollIndicator={false}\n        >\n\t\t\t\t<VirtualizedList \n\t\t\t\t\t\trenderItem={({item, index})=>\n\t\t\t\t\t\t\t<EditorLayerBodyComponent \n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\tfolderId={item.id} \n\t\t\t\t\t\t\t\tlayerIndex={index}\n                parentFolderId={parentFolderId}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tkeyExtractor={item => item.id || item.date.toString()}\n\t\t\t\t\t\tgetItem={dataHook.getContentItem}\n\t\t\t\t\t\tgetItemCount={dataHook.getContentCount}\n\t\t\t\t\t\tdata={dataHook.folderContent}\n            showsHorizontalScrollIndicator={false}\n            showsVerticalScrollIndicator={false}\n\t\t\t\t/>\n\t\t\t\t</ScrollView>\n\t\t\t</View>\n\t\t\t<View style={{width:\"20%\"}}>\n\t\t\t\t<Divider />\n\t\t\t\t<List.Item title={\"Add Layer\"} titleStyle={{fontSize:14}} onPress={()=>onClickAddLayer()} right={(props)=><>\n\t\t\t\t\t\t<IconButton {...props} icon={\"plus\"} mode={\"outlined\"} />\n\t\t\t\t</>} />\n\t\t\t</View>\n\t\t\t<View style={{width:\"80%\", position:\"absolute\", height:0, left:\"20%\"}} >\n\t\t\t\t\t<EditorCaret />\n\t\t\t</View>\n        </View>\n    </ScrollView>\n}\n\nexport default EditorProjectComponent","import React, { useState } from \"react\"\nimport { Appbar } from \"react-native-paper\"\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\"\nimport { setPixelsPerSecond, setShowComments } from \"../store/slices/editor\"\nimport { createNewParty, getActiveProjectLayer, sendChatMessage } from \"../api\"\nimport { useQuery, useQueryClient } from \"react-query\"\nimport { EditorComment, EditorLayer, EncoderProject } from \"../types\"\nimport { getFolderContent, getUserData } from '../api';\n\nimport uuid from 'react-native-uuid';\n\nexport default function EditorToolBar(props){\n    const {projectId, writeItem, routeParams, getById, } = props\n    const {encoder} = routeParams\n    const dispatch = useAppDispatch()\n    const queryClient = useQueryClient()\n    const caretPosition = useAppSelector(state=>state.editor.caretPosition)\n    const scrollPosition = useAppSelector(state=>state.editor.scrollPosition)\n    const pixelsPerSecond = useAppSelector((state)=>state.editor.pixelsPerSecond)\n    const showComments = useAppSelector((state)=>state.editor.showComments)\n    const showEditor = useAppSelector((state)=>state.editor.showEditor)\n    const currentPosition = (caretPosition+scrollPosition)/pixelsPerSecond\n    const [isRefreshing, setRefreshing] = useState(false)\n\n    const layersQuery = useQuery([\"projectLayersToolbar\", projectId], async ()=>{\n        const data = await getFolderContent(projectId)\n        const m = await Promise.all(\n            data.map(async(i)=>{\n                return {\n                    ...i, \n                    media:await getFolderContent(i?.id)\n                }\n            })\n        )\n        return m\n    })\n    const layers:EditorLayer[] | undefined = layersQuery.data\n    const forgetEverything = async () => {\n      await layersQuery.refetch()\n      await queryClient.refetchQueries([\"folderData_\"+projectId])\n      await queryClient.refetchQueries([\"folderContent_\"+projectId])\n      await queryClient.refetchQueries([\"project_\"+projectId])\n      await queryClient.refetchQueries([\"projectLayers\", projectId])\n      await queryClient.refetchQueries([\"encodedMedia\", projectId])\n      await queryClient.refetchQueries([\"folderContent_\"+projectId+\"_comments\"])\n      const folders = layers?.map(layer=>layer.id)\n      console.info('project.folders', folders)\n      if(folders?.length)\n        for (let f = 0; f < folders.length; f++) {\n          const fId = folders[f];\n          queryClient.refetchQueries([\"folderContent_\"+fId])\n        }\n    }\n\n    const onClickSetScale = (scale: \"+\" | \"-\") => {\n      let nscale = scale === \"+\" ? pixelsPerSecond * 1.25 : pixelsPerSecond * 0.75\n      if(nscale < 0.5)\n      nscale = 0.5\n      dispatch(setPixelsPerSecond(nscale))\n    }\n\n    const onClickCopy = async () => {\n      if(isRefreshing) {\n        return;\n      }\n      setRefreshing(true)\n      try {\n        const item = await getById(encoder, projectId)\n        item.isCopy = item.isCopy || item.id\n        item.id = uuid.v4().toString()\n        item.orderId += 1\n        item.createdAt = new Date().valueOf().toString()\n        console.info('click copy', {encoder, currentPosition, item})\n        await writeItem(item)\n        await queryClient.refetchQueries([\"projectLayers\", projectId])\n        await queryClient.refetchQueries(['folderContent_'+item.folderId])\n        await forgetEverything()\n      } catch(err) {\n        console.error('oncClickCopy',err)\n      }\n      setRefreshing(false)\n    }\n    \n    const onClickCut = async () => {\n      if(isRefreshing) {\n        return;\n      }\n      setRefreshing(true)\n      try {\n        const currentData = getActiveProjectLayer(layers, currentPosition) \n        const item:EncoderProject = await getById(encoder, projectId)\n        const offsetPosition = (currentPosition - currentData.offset) + (item.encoding.start || 0)\n        console.info('click cut', {encoder, currentPosition, currentData, offsetPosition})\n        \n        const nitem = JSON.parse(JSON.stringify({...item}))\n        nitem.isCopy = item.isCopy || item.id\n        nitem.id = uuid.v4().toString()\n        nitem.orderId -= 1\n        nitem.encoding.start = offsetPosition\n        nitem.encoding.end = (item.encoding.end || item.duration || 0)\n        nitem.createdAt = new Date().valueOf().toString()\n\n        item.encoding.end = offsetPosition\n        await writeItem(item)\n        await writeItem(nitem)\n        await forgetEverything()\n      } catch(err) {\n        console.error('oncClickCut',err)\n      }\n      setRefreshing(false)\n    }\n\n    const onClickRefresh = async () => {\n      try {\n        if(isRefreshing) {\n          return;\n        }\n        setRefreshing(true)\n\n        if(dbConns[projectId])\n          await dbConns[projectId].sync()\n\n        await forgetEverything()\n      } catch(err) {\n        console.error('onClickRefresh',err)\n      }\n      setRefreshing(false)\n    }\n    const onClickShowComments = () => \n        dispatch(setShowComments(!showComments))\n    \n    \n    const onClickAddComment = async () => {\n      const user = await getUserData()\n      const id = uuid.v4().toString()\n      const mnemonic = layers[0]?.mnemonic\n      const comment:EditorComment = {\n        id,\n        partyId:id,\n        userId:user.id,\n        title: user.name,\n        currentPosition,\n        isContact:true,\n        isParty:true,\n        authorName:user.name,\n        name: user.name,\n        mnemonic,\n        folderId:projectId+\"_comments\",\n        isFolder:true,\n        duration:10,\n        encoding:{\n          start:0,\n          end:10\n        }\n      }\n      await createNewParty(comment)\n      await forgetEverything()\n      console.info(mnemonic)\n      await sendChatMessage(comment.id, user.name+\" has created comment\", mnemonic!, {system:true})\n    }\n\n    const onClickUndo = () => {\n\n    }\n\n    const onClickRedo = () => {\n        \n    }\n    return <>\n        <Appbar.Action icon=\"refresh\" disabled={isRefreshing} onPress={()=>onClickRefresh()} />\n        {showComments ? <Appbar.Action icon=\"comment-plus\" onPress={() => onClickAddComment()} /> : null}\n        <Appbar.Action icon={showComments ? \"comment-eye\" : \"comment-eye-outline\"} onPress={() => onClickShowComments()} />\n        <Appbar.Action icon=\"magnify-plus-outline\" onPress={() => onClickSetScale(\"+\")} />\n        <Appbar.Action icon=\"magnify-minus-outline\" onPress={() => onClickSetScale(\"-\")} />\n        {/* {showEditor && <Appbar.Action icon=\"undo\" onPress={() => onClickUndo()} /> }\n        {showEditor && <Appbar.Action icon=\"redo\" onPress={() => onClickRedo()} /> } */}\n        {showEditor && <Appbar.Action disabled={isRefreshing} icon=\"content-cut\" onPress={() => onClickCut()} /> }\n        {showEditor && <Appbar.Action disabled={isRefreshing} icon=\"content-copy\" onPress={() => onClickCopy()} /> }\n      </>\n}","import React, { memo, useCallback, useEffect, useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ProgressBar } from 'react-native-paper';\nimport { useQuery} from 'react-query';\nimport { getActiveProjectLayer, getProjectMedia } from '../api/media';\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { useIsFocused } from '@react-navigation/native';\nimport { setEncoderProgress, setCaretPosition, setScrollPosition, setIsPlaying, setActiveLayer } from '../store/slices/editor';\nimport { EditorLayer } from '../types';\nconst styles = StyleSheet.create(({\n  video: {\n    width:\"100%\", \n    height:\"100%\",\n    position:\"absolute\",\n    top:0,\n    bottom:0,\n    left:0,\n    right:0\n  },\n  chip: {\n    fontSize:18\n  }\n}))\nfunction EditorVideoComponent({video2, mediaRes, layers, projectId}){\n  const dispatch = useAppDispatch()\n  const encoderProgress = useAppSelector(state=>state.editor.encoderProgress)\n  const pixelsPerSecond = useAppSelector(state=>state.editor.pixelsPerSecond)\n  const caretPosition = useAppSelector(state=>state.editor.videoCaretPosition)\n  const scrollPosition = useAppSelector(state=>state.editor.videoScrollPosition)\n  const isPlaying = useAppSelector(state=>state.editor.isPlaying)\n  const canScroll = useAppSelector(state=>state.editor.canScroll)\n  const scroll = useAppSelector(state=>state.editor.scroll)\n  const activeLayer = useAppSelector(state=>state.editor.activeLayer)\n  const focused = useIsFocused()\n  const currentPosition = (caretPosition+scrollPosition)/pixelsPerSecond || 0.0\n  const encodedMediaQuery = useQuery(\n    [\"encodedMedia\", projectId, currentPosition, activeLayer], \n    async ()=> await getProjectMedia(\n      layers!,\n      currentPosition, \n      (progress:number)=>dispatch(setEncoderProgress(progress))\n    ), {\n      enabled: mediaRes?.id !== undefined && layers !== undefined && focused,\n      keepPreviousData:false,\n      onSuccess: () => {\n        console.info('after query')\n        if(video2.current)\n          video2.current.currentTime = encodedMediaQuery.data?.currentPosition || 0.0\n      }\n    }\n  )\n\n  const queryPosition = encodedMediaQuery.data?.currentPosition || 0.0\n  const offsetPosition = encodedMediaQuery.data?.offset || 0.0\n  // console.info('queryPosition', queryPosition)\n  // console.info('offsetPosition', offsetPosition)\n  const onTimeUpdate = useCallback((e)=>{\n    const {currentTime, paused} = e.nativeEvent.target\n    const newtime = ((offsetPosition || 0)+currentTime) - (encodedMediaQuery.data?.activeMedia.encoding.start || 0)\n    \n    if(newtime >= encodedMediaQuery.data?.totalTime)\n      video2.current?.pause()\n\n    const newoffset = newtime*pixelsPerSecond\n    const activeLayerId = getActiveProjectLayer(layers!, newtime)?.activeMedia?.id\n    const layerSwitched = activeLayerId && activeLayerId !== activeLayer\n    let nscrollPosition = 0\n    let ncaretPosition = caretPosition\n\n    if(!paused) {\n      if(canScroll) {\n        const offset = newoffset - scroll\n        // console.info('offset', offset, scroll, newoffset)\n        if(offset > 0) {\n          const diff = newoffset - offset\n          // console.info('diff', diff, offset, scroll, newoffset)\n          nscrollPosition = diff\n          ncaretPosition = offset\n        }\n        else {\n          nscrollPosition = newoffset - caretPosition\n        }\n      } else {\n        ncaretPosition = newoffset\n      }\n      dispatch(setIsPlaying(true))\n      dispatch(setCaretPosition(ncaretPosition))\n      dispatch(setScrollPosition(nscrollPosition))\n    }\n    if(paused && isPlaying)\n      dispatch(setIsPlaying(false))\n    if(layerSwitched) {\n      // console.info('layerSwitched', layerSwitched, activeLayer, activeLayerId)\n      dispatch(setActiveLayer({activeLayerId, scrollPosition:nscrollPosition, caretPosition:ncaretPosition}))\n    }\n  }, [encodedMediaQuery, canScroll, isPlaying, layers, offsetPosition])\n  \n\n  return <>{encodedMediaQuery.isFetching && !isPlaying ?\n    <ProgressBar style={{height:\"100%\", position:\"absolute\", top:0}} progress={encoderProgress} /> \n  :\n  <>\n    <video \n      controls={false} \n      style={styles.video} \n      src={encodedMediaQuery.data?.url}\n      muted={encodedMediaQuery.data?.muted}\n      ref={(e)=>{\n        // console.info('rerender video')\n        // console.info(\"ref\", e, encodedMediaQuery.data)\n        if(e) {\n          e.currentTime = queryPosition\n          video2.current = e\n          if(isPlaying)\n            e.play()\n        }\n      }}\n      onPlaying={(e)=>{\n        dispatch(setIsPlaying(true))\n      }}\n      onPause={(e)=>{\n        dispatch(setIsPlaying(false))\n      }}\n      onEnded={(p)=>{\n        console.info('ended', p)\n      }}\n      onTimeUpdate={onTimeUpdate}\n    />\n  </>\n  }</>\n}\nexport default EditorVideoComponent","import React, { memo } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nconst EncoderStack = createStackNavigator()\n\nimport FolderPage from './folderpage';\nimport { FolderType } from '../types';\nimport FolderLibrary from './folderlibrary';\nimport { useFolders } from '../hooks/useFolders';\nimport EncoderProject from './encoderproject'\nimport { useRoute } from '@react-navigation/native';\nconst folderType = FolderType.encoder\n\nexport const createEncoder = (ops:any) => {\n  const FolderComponent = memo((props:any) => <FolderPage\n          folderId={props.route.params.folderId}\n          navigation={props.navigation}\n          route={props.route}\n          getFolderContent={ops.getFolderContent}\n          getById={ops.getById}\n          enqMedia={ops.enqMedia}\n          stopMedia={ops.stopMedia}\n          getFoldersByType={ops.getFoldersByType}\n          setWindowClosedCallback={ops.setWindowClosedCallback}\n          folderType={folderType}\n          writeItem={ops.writeItem}\n      />)\n  const FolderLibraryComponent = memo((props)=><FolderLibrary {...props} {...ops} dataHook={useFolders(\n          folderType, \n          ops.getFoldersByType, \n          ops.getFolderContent, \n          ops.writeItem\n      )} />\n  )\n  const EncoderProjectScreen = memo((props)=><EncoderProject \n    {...props} \n    writeItem={ops.writeItem} \n    routeParams={useRoute().params} \n  />)\n  const EncoderStackScreen = () => {\n    return (\n      <EncoderStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur:true,\n        }}\n      >\n        <EncoderStack.Screen\n          name=\"EncoderProjects\"\n          component={FolderLibraryComponent} \n          options={{}}   \n        />\n        <EncoderStack.Screen\n          name=\"EncoderProject\"\n          component={EncoderProjectScreen}\n        />\n        <EncoderStack.Screen\n          name='Folder'\n          component={FolderComponent}\n        />\n      </EncoderStack.Navigator>\n    )\n  }\n  return EncoderStackScreen\n}","import React, { useRef } from 'react';\nimport { ImageBackground, StyleSheet, View } from 'react-native';\nimport { ActivityIndicator, Banner, Chip, Divider, ProgressBar, Text, useTheme } from 'react-native-paper';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { EncoderProject, FFMpegOutputType, FFMpegPreset, Media } from '../types';\nimport { getFileOpfs, encodeMedia, getVideoWT } from '../api';\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { useIsFocused } from '@react-navigation/native';\nimport {niceBytes} from '../api/util'\nimport { setEncoderProgress } from '../store/slices/encoder';\n\nconst styles = StyleSheet.create(({\n  video: {\n    width:\"100%\", \n    height:\"100%\",\n    position:\"absolute\",\n    top:0,\n    bottom:0,\n    left:0,\n    right:0\n  },\n  chip: {\n    fontSize:18\n  }\n}))\nexport default function EncoderBanner({getById, projectId, writeItem, height, folderId}: any) {\n    const dispatch = useAppDispatch()\n    const state = useAppSelector((state)=>state.encoder)\n    const theme = useTheme()\n    const queryClient = useQueryClient()\n    const mediaData = useQuery([\"projectdata\",projectId], \n      async ()=>await getById(projectId, folderId), {\n        enabled:projectId ? true : false\n      }\n    )\n    const focused = useIsFocused()\n\n    const mediaRes:EncoderProject = mediaData.data\n    // const {encoder} = mediaRes \n\n    const localMediaQuery = useQuery(\n      [\"localMedia\",projectId], \n      async () => {\n        if(!mediaRes?.id)\n          return undefined\n        // const folder = await getById(mediaRes.folderId)\n        let file;\n        try {\n          file = await getFileOpfs(mediaRes)\n        } catch(err) {\n          console.error(err)\n        }\n        \n        if(mediaRes.extractor === \"wt\" && !file)\n          file = await getVideoWT(mediaRes)\n\n        return file;\n      }, {\n        enabled: mediaData.isFetched && focused && mediaRes?.id !== undefined ? true : false\n      }\n    )\n\n    const encodedMediaQuery = useQuery(\n      [\"encodedMedia\", projectId], \n      async ()=> encodeMedia(mediaRes, (progress:number)=>\n        dispatch(setEncoderProgress(progress))\n      ), {\n        enabled: mediaData.isFetched && focused && mediaRes?.id !== undefined ? true : false\n      }\n    )\n\n    const encodedFileSize = useQuery([\"encodedFileSize\",projectId], async () => {\n      // console.info(\"encoded url\", encodedMediaQuery.data)\n      if(!encodedMediaQuery.data)\n        return \"0\"\n      const head = await fetch(encodedMediaQuery.data, {cache:\"no-cache\"})\n      // console.info('head', head)\n      return head.headers.get('Content-Length')?.toString()\n    }, \n      {\n      enabled: \n      !mediaData.isFetching \n        && focused \n        && encodedMediaQuery.data \n        && encodedMediaQuery.data.search(\"blob\") > -1 \n        ? true \n        : false,\n      \n      retry:false\n      }\n    )\n\n    const projectMutation = useMutation(async(np:EncoderProject)=>{\n      const item = await writeItem(np)\n      await queryClient.cancelQueries({queryKey:[\"encodedMedia\"]})\n      await Promise.all([\n        mediaData.refetch(),\n        encodedMediaQuery.refetch(), \n        queryClient.refetchQueries(\"project_\"+projectId)\n      ])\n      // await queryClient.refetchQueries(\"project_\"+projectId)\n      // await encodedFileSize.refetch()\n      return item;\n    })\n    const mediaLoading = mediaData.isFetching \n    || localMediaQuery.isFetching\n    console.info('encodedFileSize', encodedFileSize.data)\n    const mediaSrc = localMediaQuery.data \n    const video2 = useRef()\n    const video1 = useRef()\n    if(!mediaRes) {\n      return <ActivityIndicator size={72} />\n    }\n    return (\n      <>\n      <Divider />\n      <Banner\n        visible={projectId ? true : false}\n        theme={theme}\n        style={{\n          backgroundColor: \"black\", \n          padding:0, \n          margin:0\n        }}\n        contentStyle={{\n          width:\"100%\", \n          height:\"100%\",\n          maxWidth:\"auto\", \n          padding:0, \n          margin:0\n        }}\n      >\n      <View style={{width:\"50%\", height:height / 2, borderRightWidth:1, borderRightColor:\"rgb(73, 69, 79)\"}}>\n        <Text style={{textAlign:\"left\", zIndex:10}}>\n          <Chip textStyle={styles.chip}>\n            Before: {mediaRes?.size && niceBytes(mediaRes.size)}\n          </Chip>\n        </Text>\n        {mediaLoading ? <ActivityIndicator size={72} /> : null}\n\n        {projectId && !mediaLoading && focused ? \n          <video \n            controls={true} \n            style={styles.video} \n            onPlaying={(e)=>{\n              const {currentTime} = e.nativeEvent.target\n              window.video1 = e.nativeEvent.target\n              if(video2.current)\n                video2.current.currentTime = currentTime\n              if(video2.current && video2.current.paused)\n                video2.current.play()\n            }}\n            onPause={(e)=>{\n              const {currentTime} = e.nativeEvent.target\n              if(video2.current)\n                video2.current.currentTime = currentTime\n              if(video2.current && !video2.current.paused)\n                video2.current.pause()\n            }}\n            onEnded={(p)=>{\n              console.info('ended', p)\n            }}\n            onTimeUpdate={(e)=>{\n              const {currentTime, paused} = e.nativeEvent.target\n              if(video2.current && paused)\n                video2.current.currentTime = currentTime\n            }}\n            onLoadedMetadata={(e)=> {\n              const video = e.nativeEvent.target\n              if(!mediaRes.width || !mediaRes.height) {\n                const width = video.videoWidth\n                const height = video.videoHeight\n                projectMutation.mutateAsync({...mediaRes, \n                  width, \n                  height,\n                  encoding: {\n                    width,\n                    height,\n                    output: FFMpegOutputType.mp4,\n                    compressionLevel: 20,\n                    preset: FFMpegPreset.veryfast,\n                  }\n                })\n              }\n            }}\n            ref={video1}\n            src={mediaSrc}\n          /> \n          : \n          null \n        }\n      </View>\n      <View style={{width:\"50%\", height:height / 2, borderLeftWidth:1, borderLeftColor:\"rgb(73, 69, 79)\"}}>\n        {encodedMediaQuery.isFetching \n          ? \n          <>\n          <Text style={{textAlign:\"right\", zIndex:10}}> </Text>\n          <ProgressBar style={{height:\"100%\", position:\"absolute\", top:-25}} progress={state.encoderProgress} /> \n          <View style={{\n            position:\"absolute\", \n            top:\"40%\",\n            display:\"flex\",\n            textAlign:\"center\", \n            width:\"100%\"\n          }}>\n              <Text style={{textAlign:'center', color:\"coral\"}}>\n              Loading {parseFloat(Math.abs(state.encoderProgress*100)).toFixed(2)}%\n               </Text>\n          </View>\n          </>\n          : \n          <Text style={{textAlign:\"right\", zIndex:10}}>\n            <Chip textStyle={styles.chip}>\n              After: {!encodedFileSize.isFetching && encodedFileSize.data && niceBytes(encodedFileSize.data)}\n            </Chip>\n            <a href={encodedMediaQuery.data} download={true}>\n            <Chip textStyle={styles.chip} onPress={()=>{}}>\n              Download\n            </Chip>\n            </a>\n          </Text>\n        }\n\n        {projectId && !encodedMediaQuery.isFetching && focused ? \n          <>\n            {mediaRes?.encoding?.output === \"mp4\" &&\n              <video \n                controls={true} \n                style={styles.video} \n                onPlaying={(e)=>{\n                  const {currentTime} = e.nativeEvent.target\n                  if(video1.current.paused)\n                    video1.current.play()\n                }}\n                onPause={(e)=>{\n                  if(!video1.current.paused)\n                    video1.current.pause()\n                }}\n                ref={video2}\n                src={encodedMediaQuery.data}\n              /> \n            }\n            {mediaRes?.encoding?.output === \"gif\" && <ImageBackground \n              source={{uri:encodedMediaQuery.data}} \n              resizeMode='contain' \n              style={styles.video} \n            />}\n          </>\n          : \n          null \n        }\n      </View>\n      </Banner>\n      <Divider />\n      </>\n    )\n}","import React, { useCallback, useEffect, useRef, useState, memo } from 'react'\nimport {SafeAreaView, View, useWindowDimensions} from 'react-native'\nimport {ActivityIndicator, Button, Divider, List, Menu, TextInput} from 'react-native-paper'\nimport { useMutation, useQuery, useQueryClient } from 'react-query'\nimport { findBy, genExecCmd, getById } from '../api'\nimport { useFocusEffect, useRoute } from '@react-navigation/native'\nimport { EncoderProject as EncoderProjectType, FFMpegOutputType, FFMpegPreset } from '../types'\nimport { ScrollView } from 'react-native-gesture-handler'\nimport SyntaxHighlighter from 'react-native-syntax-highlighter';\nimport { xonokai } from 'react-syntax-highlighter/src/styles/prism';\nimport CodeEditor, { CodeEditorSyntaxStyles } from '@rivascva/react-native-code-editor';\n\nfunction EncoderProject(props) {\n    const {writeItem} = props\n    const route = useRoute()\n    const queryClient = useQueryClient()\n    const [showCode, setShowCode] = useState(false)\n    let {projectId, encoder, folderId, parentFolderId} = props.routeParams \n    if(encoder)\n        projectId = encoder;\n    const project = useQuery(\"project_\"+projectId,async()=>await getById(projectId, parentFolderId || folderId))\n    const projectData:EncoderProjectType = project.data\n    console.info('projectData', projectData)\n    const afterWrite = useRef<number | undefined>()\n    const codeEditorRef = useRef()\n    const {width} = useWindowDimensions()\n    const codeWidth = props.codeWidth || width - 200\n    const projectWriteMutation = useMutation(async (np:EncoderProjectType)=>{\n        const ni = await writeItem(np)\n        clearTimeout(afterWrite.current)\n        afterWrite.current = setTimeout(()=>{\n            queryClient.refetchQueries({queryKey:['folderContent_'+projectData?.folderId]})\n            queryClient.refetchQueries({queryKey:[\"projectdata\",projectId]})\n            queryClient.resetQueries({queryKey:[\"encodedMedia\",projectId], exact:true})\n            queryClient.resetQueries({queryKey:[\"encodedFileSize\",projectId], exact:true})\n            queryClient.resetQueries({queryKey:[\"encodedFileSize\",projectId], exact:true})\n            project.refetch()\n        }, 1000)\n        return ni\n    })\n    const [outputMenuVisible, setOutputMenuVisible] = useState(false)\n    const [presetMenuVisible, setPresetMenuVisible] = useState(false)\n    const outputTypes = Object.keys(FFMpegOutputType)\n    const closeMenu = () => {\n        setOutputMenuVisible(false)\n        setPresetMenuVisible(false)\n    }\n    const selectValue = (valueType: keyof EncoderProjectType[\"encoding\"], value: string | number) => {\n        const np = projectData\n        const numericTypes = [\"width\", \"compressionLevel\",\"height\", 'start', \"end\", 'soundVolume']\n        const nonRenderTypes = ['start','end', 'soundVolume']\n        const shouldRerender = !nonRenderTypes.includes(valueType)\n        if(numericTypes.includes(valueType) && isNaN(value)) {\n            console.info('invalid type')\n            return;\n        }\n        if(value === \"\") {\n          return;\n        }\n        if(!np.encoding) {\n            np.encoding = {}\n        }\n        np.encoding[valueType] = value;\n        console.info(np)\n\n        if(shouldRerender)\n            np.encoding.lastUpdated = new Date().valueOf()\n\n        projectWriteMutation.mutateAsync(np)\n        closeMenu()\n    }\n    if(project.isFetching) {\n        return <ActivityIndicator size={72} />\n    }\n    const execCmd = genExecCmd(projectData)\n    const codeString = execCmd.join(\"\\n\")\n    const fontSize = 12\n    const inputWidth = 120\n    return <ScrollView \n        showsVerticalScrollIndicator={false} \n        showsHorizontalScrollIndicator={false}\n    >\n    <Divider key={\"div00\"} />\n    <List.Item \n        key={'info'}\n        left={(p)=><List.Icon {...p} icon={\"information\"} />} \n        title={projectData?.title}\n    />\n    <Divider key={\"div01\"} />\n    <List.Item \n        key={'start'}\n        left={(p)=><List.Icon {...p} icon={\"clock-plus\"} />} \n        title={\"Start\"}\n        titleStyle={{fontSize}}\n        right={(p)=><View style={{width:inputWidth}}>\n            <TextInput \n                dense={true}\n                mode='outlined'\n                value={projectData?.encoding?.start || 0} \n                style={{textAlign:\"right\", pointerEvents:\"auto\"}}\n                keyboardType='numeric'\n                onChangeText={(text)=>selectValue(\"start\", parseFloat(text))}\n            />\n        </View>}\n    />\n    <Divider key={\"div7\"} />\n    <List.Item \n        key={'end'}\n        left={(p)=><List.Icon {...p} icon={\"clock-minus\"} />} \n        title={`End (${projectData?.duration})`}\n        titleStyle={{fontSize}}\n        right={(p)=><View style={{width:inputWidth}}>\n            <TextInput \n                dense={true}\n                mode='outlined'\n                value={projectData?.encoding?.end || projectData?.duration} \n                style={{textAlign:\"right\", pointerEvents:\"auto\"}}\n                keyboardType='numeric'\n                onChangeText={(text)=>selectValue(\"end\", parseFloat(text))}\n            />\n        </View>}\n    />\n    <Divider key={\"div4\"} />\n    <List.Item \n        key={'cl'}\n        left={(p)=><List.Icon {...p} icon={\"zip-box\"} />} \n        title={\"Compression\"}\n        titleStyle={{fontSize}}\n        right={(p)=><View style={{width:inputWidth}}>\n            <TextInput \n                dense={true}\n                mode='outlined'\n                value={projectData?.encoding?.compressionLevel} \n                style={{textAlign:\"right\", pointerEvents:\"auto\"}}\n                keyboardType='numeric'\n                onChangeText={(text)=>selectValue(\"compressionLevel\", parseInt(text, 10))}\n            />\n        </View>}\n    />\n    <Divider key={\"divvolume\"} />\n    <List.Item \n        key={'volume'}\n        left={(p)=><List.Icon {...p} icon={\"zip-box\"} />} \n        title={\"Sound Volume\"}\n        titleStyle={{fontSize}}\n        right={(p)=><View style={{width:inputWidth}}>\n            <TextInput \n                dense={true}\n                mode='outlined'\n                value={projectData?.encoding?.soundVolume || 100} \n                style={{textAlign:\"right\", pointerEvents:\"auto\"}}\n                keyboardType='numeric'\n                onChangeText={(text)=>selectValue(\"soundVolume\", parseInt(text, 10))}\n            />\n        </View>}\n    />\n    <Divider key={\"div3\"} />\n    <List.Item \n        key={'width'}\n        left={(p)=><List.Icon {...p} icon={\"ruler\"} />} \n        title={`Width(${projectData?.width})`}\n        titleStyle={{fontSize}}\n        right={(p)=><View style={{width:inputWidth}}>\n            <TextInput \n                dense={true}\n                mode='outlined'\n                value={projectData?.encoding?.width} \n                style={{textAlign:\"right\", pointerEvents:\"auto\"}}\n                keyboardType='numeric'\n                onChangeText={(text)=>selectValue(\"width\", parseInt(text, 10))}\n            />\n        </View>}\n    />\n    <Divider key={\"div2\"} />\n    <List.Item \n        key={'height'}\n        left={(p)=><List.Icon {...p} icon={\"ruler\"} />} \n        title={`Height(${projectData?.height})`}\n        titleStyle={{fontSize}}\n        right={(p)=><View style={{width:inputWidth}}>\n            <TextInput \n                dense={true}\n                mode='outlined'\n                value={projectData?.encoding?.height} \n                style={{textAlign:\"right\", pointerEvents:\"auto\"}}\n                keyboardType='numeric'\n                onChangeText={(text)=>selectValue(\"height\", parseInt(text, 10))}\n            />\n        </View>}\n    />\n    <Divider key={\"div1\"} />\n    <List.Item \n        key={'output'}\n        left={(p)=><List.Icon {...p} icon={\"file-export\"} />} \n        title={\"Output\"}\n        titleStyle={{fontSize}}\n        right={(p)=><View style={{width:inputWidth}}>\n            <Menu\n            visible={outputMenuVisible}\n            onDismiss={closeMenu}\n            anchor={<Button mode='outlined' onPress={()=>setOutputMenuVisible(true)}>{projectData?.encoding?.output}</Button>}>\n                <>\n                {outputTypes.map((item)=>\n                    <Menu.Item key={item} onPress={() => selectValue(\"output\", item)} title={item} />\n                )}\n                </>\n            </Menu>\n        </View>}\n    />\n    <Divider key={\"div\"} />\n    <List.Item \n        key={'preset'}\n        left={(p)=><List.Icon {...p} icon={\"cog\"} />} \n        title={\"Preset\"}\n        titleStyle={{fontSize}}\n        right={(p)=><View style={{width:inputWidth}}>\n            <Menu\n            visible={presetMenuVisible}\n            onDismiss={closeMenu}\n            anchor={<Button mode='outlined' onPress={()=>setPresetMenuVisible(true)}>{projectData?.encoding?.preset}</Button>}>\n                <>\n                {Object.keys(FFMpegPreset).map((item)=>\n                    <Menu.Item key={item} onPress={() => selectValue(\"preset\", item)} title={item} />\n                )}\n                </>\n            </Menu>\n        </View>}\n    />\n    {showCode === true ? \n        <View>\n            <Divider key={\"div5\"} />\n            <List.Item \n                key={'code'}\n                left={(p)=><List.Icon {...p} icon={\"code-brackets\"} />} \n                title={\"\"}\n                titleStyle={{fontSize}}\n                onPress={()=>codeEditorRef?.current?.focus()}\n                right={(p)=><SafeAreaView style={{width:codeWidth, zIndex:10}}>\n                    <CodeEditor\n                        className={\"codeEditor\"}\n                        ref={codeEditorRef}\n                        style={{\n                            fontSize,\n                            inputLineHeight:fontSize,\n                            highlighterLineHeight: fontSize,\n                            display:\"flex\"\n                        }}\n                        language=\"bash\"\n                        \n                        syntaxStyle={CodeEditorSyntaxStyles.xonokai}\n                        initialValue={projectData?.encoding?.code?.join(\",\") || \"\"} \n                        onChange={(text)=>{\n                            if(text === projectData?.encoding?.code?.join(\",\") || \"\")\n                                return\n                            selectValue(\"code\", text.split(\",\"))  \n                        }}\n                        autoFocus={false}\n                        showLineNumbers\n                    /></SafeAreaView>\n                }\n            />\n            <Divider key={\"div6\"} />\n            {codeString && <List.Item\n                key={\"output_code\"}\n                left={(p)=><List.Icon {...p} icon={\"code-tags\"} />} \n                title=\"\"\n                titleStyle={{fontSize}}\n                right={()=><View style={{width:codeWidth}}><SyntaxHighlighter \n                    language='bash' \n                    style={xonokai}\n                    highlighter={\"prism\"}\n                    fontSize={fontSize}\n                >\n                    {codeString}\n                </SyntaxHighlighter> </View> } \n            /> }\n            <Divider key={\"div8\"} />\n        </View>\n        : null\n    }\n    <Button icon={\"code-brackets\"} onPress={()=>setShowCode(!showCode)}>Show FFMpeg Code</Button> \n    </ScrollView>\n}\n\nexport default memo(EncoderProject)","import React, {memo} from \"react\"\nimport { createStackNavigator } from \"@react-navigation/stack\"\nimport FolderPage from './folderpage'\nimport HomeView from \"../routes/home\"\nimport CustomNavigationBar from \"./appnav\"\nimport { FTSIndex, FolderType } from \"../types\"\n\nconst FileStack = createStackNavigator()\n\nexport const createFileStack = (ops:any) => {\n    const FolderComponent = memo((props:any) => <FolderPage\n            folderId={props.route.params.folderId}\n            navigation={props.navigation}\n            getPrevPartiesForChatId={ops.getPrevPartiesForChatId}\n            sendChatMessage={ops.sendChatMessage}\n            route={props.route}\n            getFolderContent={ops.getFolderContent}\n            getById={ops.getById}\n            enqMedia={ops.enqMedia}\n            stopMedia={ops.stopMedia}\n            getFoldersByType={ops.getFoldersByType}\n            setWindowClosedCallback={ops.setWindowClosedCallback}\n            folderType={FolderType.media}\n            writeItem={ops.writeItem}\n        />)\n\n    const HomeComponent = memo((props:any) => <HomeView {...props} {...ops} />)\n    const FileStackScreen = () => {\n        return (\n            <FileStack.Navigator \n                screenOptions={{\n                    headerShown: false,\n                    freezeOnBlur:true,\n                    animationEnabled:false,\n                }}\n                >\n                <FileStack.Screen\n                    name=\"Files\"\n                    component={HomeComponent} \n                    options={{\n                        freezeOnBlur:true\n                    }}   \n                />\n                <FileStack.Screen\n                    name=\"Folder\"\n                    component={FolderComponent}\n                    options={({ route }) => ({ \n                        title: route.params?.title, \n                        freezeOnBlur:true\n                    })}\n                />\n            </FileStack.Navigator>\n        )\n    }\n    return FileStackScreen;\n}","import axios from 'axios';\nimport React, { useContext, useState,  useMemo, useCallback } from 'react';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport {  Portal, Modal,  Card, Avatar, Button, List, Switch, Divider, ActivityIndicator, Tooltip, Banner, ProgressBar, useTheme } from 'react-native-paper';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { domain, cdndomain } from '../db/defaults';\nimport { EditorLayer, EditorProject, EncoderProject, FFMpegOutputType, FFMpegPreset, Folder, FolderType, Media } from '../types';\n\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { setEncrypt, setFileUploadProgress, setMediaModalVisible, setShareToWt, setUploadInProgress, setUploadToCloud, startOnboarding } from '../store/slices/upload';\nimport { shareFileToWT, writeFileOpfs } from '../api/media';\nimport { useNavigation } from '@react-navigation/native';\nimport {niceBytes} from '../api/util'\nimport uuid from 'react-native-uuid';\nimport { getById, getFolderContent } from '../api';\n\nconst preset = FFMpegPreset.superfast\nconst output = FFMpegOutputType.mp4\nconst compressionLevel = 20\n\nexport default function FileUpload(props:any) {\n\n  //FILE UPLOAD\n  const {writeItem, userId, folderType, hideMedialModal, folderId, routeName, projectId, isEncoderProject} = props\n  const theme = useTheme()\n  const queryClient = useQueryClient()\n  const uploadState = useAppSelector((state)=>state.upload)\n  const dispatch = useAppDispatch()\n  const nav = useNavigation()\n  const mediaModalVisible = uploadState.modalVisible\n  const pickerFile = uploadState.file\n  const pickerFileMeta = uploadState.media\n  const uploadToCloud = uploadState.uploadToCloud\n  const shareToWt = uploadState.shareToWT\n  const encryptionEnabled = uploadState.encryption\n  const fileUploadProgress = uploadState.fileUploadProgress\n  const isUploadInProgress = uploadState.isUploadInProgress\n  const uuidFilename = `${pickerFileMeta?.id}-${pickerFileMeta?.filename}`\n  const authToken = localStorage.getItem(\"authToken\")\n  const writeItemMutation = useMutation((item:Media | Folder | EditorProject | EditorLayer)=>writeItem(item))\n  const [videoMeta, setVideoMeta] = useState({}) \n  \n  const uploadFileMutation = useMutation(()=>axios.request({\n    url:`${domain}api/v1/backend/files/${uuidFilename}?authToken=${authToken}`,\n    method:\"PUT\", \n    data:pickerFile, \n    withCredentials:true,\n    onUploadProgress:(progress)=>dispatch(setFileUploadProgress(progress))\n  }), {retry(attempts) { if(attempts < 4) return true }})\n\n  const writeItemToLocalStoreMutation = useMutation((meta)=>writeFileOpfs({...meta, ...videoMeta}, pickerFile!))\n\n  const writingItem = writeItemMutation.isLoading || uploadFileMutation.isLoading\n  let peerShared = shareToWt\n  if(pickerFileMeta?.extractor === \"wt\") {\n    peerShared = true\n  }\n  const confirmFile = async () => {\n    const meta:Media = JSON.parse(JSON.stringify(pickerFileMeta!))\n    const {width,height} = videoMeta\n    const end = videoMeta.duration - 1\n    console.info('routeName', routeName, 'folderType', folderType)\n    meta.isDownloaded = true\n    let folder:Folder = await getById(meta.folderId)\n    if(!folder) {\n      folder = await getById(meta.folderId, folderId) as Folder\n    }\n    console.info('project folder', folder, folderId, meta.folderId)\n    if(folder?.mnemonic) {\n      peerShared = true\n    }\n    if(folderType === FolderType.editor && routeName !== \"EditorProject\") {\n      console.info('creating a new editor project from file')\n      const editor:EditorProject = {\n        id:uuid.v4().toString(),\n        title:meta.title,\n        userId,\n        isEditorProject:true,\n        folderType,\n        folderId,\n        orderId:1,\n        isFolder:false,\n        editor: {\n          length:1*60*1000,\n          width,\n          height,\n          preset,\n          output,\n          lastUpdated:new Date().valueOf(),\n          compressionLevel,\n          code:[]\n        },\n        mnemonic:folder?.mnemonic,\n        date: new Date().valueOf()\n      }\n      await writeItemMutation.mutateAsync(editor)\n      const layer:EditorLayer = {\n        id:uuid.v4().toString(),\n        title:\"Layer 1\",\n        folderId: editor.id,\n        userId,\n        isEditorLayer:true,\n        orderId:1,\n        folderType,\n        isFolder:false,\n        date: new Date().valueOf(),\n        editor:{\n          videoDisabled:false,\n          muted:false\n        },\n        mnemonic:folder?.mnemonic,\n      }\n      await writeItemMutation.mutateAsync(layer)\n      const comment_layer:EditorLayer = {\n        id:editor.id+\"_comments\",\n        title:\"Comments\",\n        folderId: editor.id,\n        userId,\n        isEditorLayer:true,\n        orderId:1,\n        folderType,\n        isFolder:false,\n        date: new Date().valueOf(),\n        editor:{\n          videoDisabled:true,\n          muted:true,\n          isCommentLayer:true\n        },\n        mnemonic:folder?.mnemonic,\n      }\n      await writeItemMutation.mutateAsync(comment_layer)\n      meta.folderId = layer.id\n      meta.isMediaNew = isEncoderProject\n      meta.isEncoderProject = isEncoderProject\n      meta.encoding = {\n        end,\n        width,\n        height,\n        preset,\n        output,\n        compressionLevel\n      }\n    }\n    if(folderType === FolderType.editor) {\n      (meta as EncoderProject).encoding = {\n        end,\n        width,\n        height,\n        preset,\n        output,\n        compressionLevel\n      }\n    }\n    console.info('foldertype saveitem', folderType, meta)\n    await writeItemToLocalStoreMutation.mutateAsync(meta)\n    await writeItemMutation.mutateAsync({...meta, ...videoMeta})\n    if(peerShared) {\n      console.info('sharing file to wt', meta)\n      await shareFileToWT(meta.id, meta.folderId)\n    }\n    if(uploadToCloud) {\n      dispatch(setUploadInProgress(true))\n      dispatch(setMediaModalVisible(false))\n      await uploadFileMutation.mutateAsync()\n      const fileUrl = cdndomain+userId+\"/\"+uuidFilename\n      meta.webpage_url = fileUrl\n      meta.hasCloud = true\n      meta.extractor = \"cloud\"\n      meta.url = fileUrl\n      console.info('after upload File Mutation', meta)\n    }\n    await queryClient.refetchQueries({queryKey:[\"folderContent_\"+meta.folderId]})\n    await queryClient.refetchQueries({queryKey:[\"folderContent_\"+folderId]})\n    await queryClient.refetchQueries({queryKey:[\"projectLayers\", projectId]})\n    await queryClient.refetchQueries({queryKey:[\"encodedMedia\", projectId]})\n    dispatch(setUploadInProgress(false))\n    dispatch(setMediaModalVisible(false))\n    if(!folderId) {\n      nav.navigate(\"Folder\", {folderId:meta.folderId})\n    }\n  }\n  return (\n    <>\n      <Banner\n        theme={theme}\n        visible={isUploadInProgress} \n      > \n        <Card.Title \n          titleStyle={{fontSize:20}} \n          title=\"Uploading file\" \n          subtitle={pickerFileMeta?.filename} \n          left={props => <Avatar.Icon {...props} icon=\"file\" />} \n        />\n        <Divider />\n        <ProgressBar animatedValue={fileUploadProgress?.progress || 0} />\n      </Banner>\n      <Portal>\n        <Modal \n          visible={mediaModalVisible} \n          onDismiss={hideMedialModal} \n          theme={theme} \n          style={{padding: 20}}\n        >\n          <Card>\n            <Card.Title \n              titleStyle={{fontSize:20}} \n              title=\"Adding a new file\" \n              subtitle=\"Please confirm\" \n              left={props => <Avatar.Icon {...props} icon=\"file\" />} \n            />\n            <Divider />\n            <ScrollView>\n            <Card.Content>\n              <List.Section>\n                <List.Item title={\"Filename\"} description={pickerFileMeta?.filename} />\n                <List.Item title={\"Format\"} description={pickerFileMeta?.type} />\n                <List.Item title={\"Duration\"} description={videoMeta?.duration} />\n                <List.Item title={\"Width\"} description={videoMeta?.width} />\n                <List.Item title={\"Height\"} description={videoMeta?.height} />\n                <List.Item title={\"Size\"} description={niceBytes(pickerFileMeta?.size?.toString())} />\n                <List.Item title={\"FolderId\"} description={pickerFileMeta?.folderId} />\n                {pickerFile && (<video style={{display:\"none\"}} src={URL.createObjectURL(pickerFile)} onLoadedMetadata={(e)=>{\n                  // console.info(\"metaLoaded\", e.nativeEvent.target, e.nativeEvent.target.videoWidth, e.nativeEvent.target.videoHeight, e.nativeEvent.target.duration)\n                  // window.video1 = e.nativeEvent.target\n                  setVideoMeta({\n                    width:e.nativeEvent.target.videoWidth,\n                    height:e.nativeEvent.target.videoHeight,\n                    duration:e.nativeEvent.target.duration\n                  })\n                }} />) }\n                {/* <List.Item \n                  onPress={()=>dispatch(setShareToWt(!shareToWt))}\n                  title={\"Share To WebTorrent\"} \n                  right={(props)=><Switch theme={theme} value={peerShared || shareToWt}/>\n                } /> */}\n                {/* <List.Item\n                  onPress={()=>dispatch(setUploadToCloud(!uploadToCloud))} \n                  title={\"Upload To Cloud\"} \n                  right={(props)=><Switch theme={theme} value={uploadToCloud}/>} \n                /> */}\n                {/* <List.Item\n                  onPress={()=>dispatch(setEncrypt(!encryptionEnabled))} \n                  title={\"Encrypt\"} \n                  right={(props)=><Switch theme={theme} value={encryptionEnabled}/>} \n                /> */}\n              </List.Section>\n            </Card.Content>\n            </ScrollView>\n            <Divider />\n            <Card.Actions>\n              <Button disabled={writingItem} onPress={hideMedialModal}>Cancel</Button>\n              <Button loading={writingItem} onPress={confirmFile}>Confirm</Button>\n            </Card.Actions>\n          </Card>\n        </Modal>\n      </Portal>\n    </>\n  )\n\n}","import React, \n{\n  MutableRefObject, useMemo\n} from 'react';\n\nimport {\n  CurrentUserData,\n  Folder,\n} from '../types';\n\nimport {\n  View,\n  TextInput as TextInputType,\n  TouchableOpacity\n} from 'react-native';\nimport {\n  defaultFolders\n} from '../db/defaults'\nimport { ActivityIndicator, Divider, List, Text, useTheme, TextInput } from 'react-native-paper';\n\ntype FolderItemCallback = (i: Folder, isSecondLevel?:boolean) => void;\n\nexport interface FolderItemProps {\n  folder: Folder;\n  enableMove?: boolean;\n  currentFolderEditorName?: string;\n  styles: any;\n  folderNameInputRef?: MutableRefObject<TextInputType | null>;\n  setFolderEditorName?: any;\n  iconColor: string;\n  iconSize: number;\n  onFolderPress: FolderItemCallback;\n  onFolderActionPress?: FolderItemCallback;\n  onRemoveFolder?: FolderItemCallback;\n  onMoveFolder?: FolderItemCallback;\n  onShareFolder?: FolderItemCallback;\n  abortEditFolder?: FolderItemCallback;\n  width:number;\n  current: CurrentUserData;\n  isSecondLevel?: boolean;\n  children?:React.ReactNode\n  isOpen?:boolean;\n  isLoadingContent?:boolean;\n}\n\nconst FolderItem = (props: FolderItemProps) => {\n\n  const {\n    folder,\n    width,\n    onFolderPress,\n    onRemoveFolder,\n    onFolderActionPress,\n    isSecondLevel,\n    children,\n    isOpen,\n    isLoadingContent,\n    currentFolderEditorName,\n    folderNameInputRef,\n    setFolderEditorName,\n    abortEditFolder,\n    onShareFolder\n  } = props;\n  const theme = useTheme()\n\n  let folderIcon = folder.isOpen ? 'folder-open' : 'folder-outline';\n  let folderAccesory = folder.isInfoOpen\n    ? 'checkbox-outline'\n    : 'pencil-outline';\n  let isDefaultFolder = false;\n  if(defaultFolders.includes(folder.id)) {\n    isDefaultFolder = true\n    folderAccesory = \"star\"\n  }\n  if(folder.mnemonic) {\n    folderIcon = folder.isOpen ? 'folder-network' : 'folder-network-outline'\n  }\n  if (folder.isInfoOpen) {\n    folderIcon = 'arrow-left-circle';\n  }\n  const touchableStyle = {\n    \"pointerEvents\": \"auto\",\n    padding:isOpen ? 5 : 0\n    // paddingTop:controlIconPaddingTop,\n  }\n\n  useMemo(()=>{\n    if(folder.isInfoOpen)\n      setFolderEditorName(folder.title)\n  }, [folder.isInfoOpen])\n\n  const remove = async () => {\n    if(onRemoveFolder)\n      await onRemoveFolder(folder)\n  }\n  const edit = async () => {\n    \n    if(isDefaultFolder)\n      return\n\n    if(onFolderActionPress)\n      await onFolderActionPress(folder, isSecondLevel)\n    setTimeout(()=>{\n      folderNameInputRef?.current?.focus()\n    }, 300)\n  }\n\n  const leftItem = (props:any) => isLoadingContent \n  ? \n    <ActivityIndicator style={{paddingLeft:20}}/> \n  : \n    <TouchableOpacity onPress={()=>onFolderPress(folder, isSecondLevel)} style={{pointerEvents: \"auto\", paddingTop:5} as any}>\n      <List.Icon {...props}  icon={folderIcon} />\n    </TouchableOpacity>\n\n  const rightItem = (props:any) => (<View style={{flexDirection:\"row\", flexWrap:\"wrap\"}}>\n    {!folder.isInfoOpen &&\n      <TouchableOpacity onPress={edit} style={touchableStyle}><List.Icon {...props} icon={folderAccesory} /></TouchableOpacity>\n    }\n    {!isDefaultFolder && !folder.isInfoOpen ? \n      <>\n      <TouchableOpacity onPress={remove} style={touchableStyle}><List.Icon {...props} icon={\"delete\"} /></TouchableOpacity> \n      <TouchableOpacity onPress={onShareFolder} style={touchableStyle}><List.Icon {...props} icon={\"share\"} /></TouchableOpacity> \n      </>\n      : null \n    }\n  </View>)\n  return (\n    <>\n    <Divider/>\n    {!children \n      ? \n      <List.Item\n        style={{width}}\n        title={({ ellipsizeMode, color: titleColor, fontSize }) => (\n          <>\n            {folder.isInfoOpen ? \n              <TextInput \n                mode=\"outlined\"\n                style={{height:50, width:\"100%\", pointerEvents:\"auto\"} as any}\n                placeholder={\"new folder name\"}\n                theme={theme}\n                value={currentFolderEditorName} \n                ref={folderNameInputRef} \n                onChangeText={setFolderEditorName}\n                left={<TextInput.Icon onPress={()=>abortEditFolder()} icon={folderIcon} />}\n                right={<TextInput.Icon onPress={edit} icon={folderAccesory} />}\n                autoFocus\n                id=\"test-input\"\n              /> \n              :\n              \n              <TouchableOpacity style={{pointerEvents:\"auto\"} as any} onPress={()=>onFolderPress(folder, isSecondLevel)}>\n\n              <View style={{}}>\n                <Text\n                  ellipsizeMode={ellipsizeMode}\n                  style={{ color: titleColor, fontSize }}\n                  numberOfLines={2}\n                >\n                  {folder.title}\n                </Text>\n              </View>\n              </TouchableOpacity>\n            }\n          </>\n        )}\n        left={!folder.isInfoOpen ? leftItem : ()=><></>}\n        right={rightItem}\n        theme={theme} /> \n      :\n      <List.Accordion\n        expanded={isOpen}\n        title={folder.title}\n        style={{width}}\n        left={leftItem}\n        right={()=><></>}\n        onPress={()=>onFolderPress(folder, isSecondLevel)}\n        theme={theme}>\n        {children}\n      </List.Accordion>\n    }\n    {/* <Divider/> */}\n    </>\n  );\n};\n\nexport default FolderItem;\n","import React, {useMemo, useContext, useEffect, memo} from 'react';\n\nimport {\n  Folder,\n  FolderType\n} from '../types';\n\nimport {\n  SafeAreaView,\n  StyleSheet,\n  View,\n  useWindowDimensions,\n  VirtualizedList,\n  Platform\n} from 'react-native';\n\nimport { \n  PartyCtx,\n  UserCtx, \n} from '../ctx'\n\nimport { useMedia } from '../hooks/useMedia';\nimport { useContacts } from '../hooks/useContacts';\nimport { useFolders } from '../hooks/useFolders';\n\nimport FolderItem from './folderitem';\nimport { ActivityIndicator } from 'react-native-paper';\nimport { CommonActions, useNavigation } from '@react-navigation/native';\n\nconst enableMove = false;\n\nexport interface FolderLibraryProps {\n  dataHook:ReturnType<typeof useMedia | typeof useContacts | typeof useFolders>\n  getPrevPartiesForChatId?:any;\n  sendChatMessage?:any\n}\n\nconst FolderLibrary = (folderLibraryProps:FolderLibraryProps) => {\n  const {\n    dataHook\n  } = folderLibraryProps\n  const dim = useWindowDimensions();\n  const {height} = dim\n  const drawerOffset = dim.width > 700 ? 80 : 0\n  const width = dim.width - drawerOffset\n  const iconSize = 30;\n  const iconColor = 'black';\n  const party = useContext(PartyCtx)\n  const current = useContext(UserCtx);\n  let marginTop = 0;\n  let contentWidth = dim.width > 700 ? width + 40 : width - 40\n  const navigation = useNavigation()\n  const {\n    folders,\n    currentFolderId,\n    getItem,\n    getItemCount,\n    isEditingFolder,\n    currentFolderEditorName,\n    setFolderEditorName,\n    folderNameInputRef,\n    onFolderActionPress,\n    loadingContent,\n    loadingFolders,\n    onRemoveFolder,\n    folderContentQuery,\n    abortEditFolder\n  } = dataHook\n\n  const itemIndex = folders.findIndex((i)=>i.id===currentFolderId) || 0\n  const initialScrollIndex = !folderContentQuery.isFetching ? itemIndex : 0;\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: 0,\n      marginTop: 0,\n    },\n    item: {\n      paddingLeft: 5,\n      fontSize: 12,\n      height: 120,\n      color: 'black',\n      width: \"100%\",\n    },\n    tinyLogo: {\n      marginTop: 2,\n      width: 22,\n      height: 22,\n    },\n    scroll: {\n      height: height-55,\n      display:\"flex\",\n      position:\"relative\",\n      backgroundColor:\"black\",\n      marginTop,\n      width:\"100%\"\n    },\n    icon: {\n      paddingLeft: 10,\n    },\n  });\n  const renderFolder = (item:Folder) => (\n    <View style={{width}} key={item.id}>\n      <FolderItem \n        key={item.id}\n        folder={{\n          ...item, \n          isOpen:item.id === currentFolderId && !isEditingFolder,\n          isInfoOpen:item.id === isEditingFolder\n        }}\n        styles={styles}\n        abortEditFolder={abortEditFolder}\n        folderNameInputRef={folderNameInputRef}\n        iconColor={iconColor}\n        iconSize={iconSize}\n        enableMove={enableMove}\n        current={current!}\n        width={width}  \n        isLoadingContent={currentFolderId === item.id && loadingContent}\n        isOpen={item.id === currentFolderId}\n        currentFolderEditorName={currentFolderEditorName}\n        setFolderEditorName={setFolderEditorName}\n        onFolderPress={()=>{\n          navigation.dispatch(CommonActions.navigate(\n            {name:'Folder', params:{\n              folderId:item.id, \n              title: item.title, \n              parentFolderId:item.folderId\n            }}\n          ))\n        }}     \n        onShareFolder={()=>dataHook.onShareFolder(item)}\n        onFolderActionPress={()=>onFolderActionPress(item.id)}  \n        onRemoveFolder={()=>onRemoveFolder(item)}\n      >\n           {item.id === currentFolderId && !isEditingFolder ?  (\n            <View style={{width, height:\"auto\"}}>\n              </View>\n             ) : null }\n      </FolderItem>\n    </View>\n  )\n  // console.info('loadingFolders', folders, loadingFolders)\n  if(loadingFolders) {\n    return <ActivityIndicator size={72}/>\n  }\n  return (\n    \n    <SafeAreaView style={{...styles.scroll}}>\n      <VirtualizedList\n        onEndReached={()=>{\n          console.info(\"onEndReached\")\n        }}\n        data={folders}\n        // pagingEnabled={true}\n        initialNumToRender={100}\n        renderItem={({ item }) => (renderFolder(item))}\n        keyExtractor={item => item.id || item.date.toString()}\n        getItemCount={getItemCount}\n        getItem={getItem}\n        getItemLayout={(data, index)=>{\n           return {length:50, offset: 50*index, index}\n        }}\n        // initialScrollIndex={initialScrollIndex}\n      />\n    </SafeAreaView>\n  );\n};\n\nexport default FolderLibrary;\n","import React, {useContext, memo, useState, useRef} from 'react';\n\nimport {\n  SafeAreaView,\n  StyleSheet,\n  View,\n  useWindowDimensions,\n  VirtualizedList,\n  Platform\n} from 'react-native';\n\nimport { \n  LoadingContext,\n  PartyCtx,\n  UserCtx, \n} from '../ctx'\nimport DragList, {DragListRenderItemInfo} from 'react-native-draglist';\n\nimport { FolderPreviewContentType, useFolders } from '../hooks/useFolders';\n\nimport ContentItem from './contentitem';\nimport { useFolder } from '../hooks/useFolder';\nimport { ActivityIndicator, IconButton, List } from 'react-native-paper';\nimport Medialibrary from './medialibrary';\nimport { useIsFocused, useRoute } from '@react-navigation/native';\nimport { FolderType } from '../types';\nimport Contactlibrary from './contactlibrary';\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport FolderLibrary from './folderlibrary';\n\n\nexport interface FolderLibraryProps {\n  navigation:any\n  getPrevPartiesForChatId?:any;\n  sendChatMessage?:any\n  route:any\n  getFolderContent:any;\n  getById:any;\n  enqMedia:any;\n  stopMedia:any\n  folderId:string;\n  getFoldersByType:any;\n  setWindowClosedCallback: any;\n  folderType: FolderType;\n  writeItem:any;\n}\n\nconst FolderNavigator = memo(({\n  parentFolderId, \n  getFolderContent, \n  getFoldersByType, \n  enqMedia, \n  stopMedia, \n  setWindowClosedCallback, \n  parentFolderHook,\n  styles,\n  folderId,\n  renderContent,\n  initialScrollIndex,\n  flatListRef,\n  folderType,\n  writeItem\n}: any) => (\n  <View style={{width:\"30%\"}} >\n  {!parentFolderId ?\n    <>\n    {folderType === FolderType.media ?\n    <Medialibrary\n       getFolderContent={getFolderContent}\n       getFoldersByType={getFoldersByType}\n       enqMedia={enqMedia}\n       stopMedia={stopMedia}\n       setWindowClosedCallback={setWindowClosedCallback}\n     /> : null}\n     {folderType === FolderType.contact ?\n     <Contactlibrary\n      getFolderContent={getFolderContent}\n      getFoldersByType={getFoldersByType} /> : null\n     } \n     {folderType === FolderType.editor ||\n     folderType === FolderType.encoder  \n     ?\n        <FolderLibrary dataHook={useFolders(\n            folderType, \n            getFoldersByType, \n            getFolderContent, \n            writeItem\n        )} />\n      : null\n     }\n     </> \n     : null }\n     {parentFolderId && !parentFolderHook.isLoadingFolder ?\n       <SafeAreaView style={{...styles.scroll}}>\n         {!parentFolderHook.folderContentQuery.isFetching ?\n         <VirtualizedList\n           onEndReached={()=>{\n             console.info(\"onEndReached\")\n             // parentFolderHook.folderContentQuery.refetch()\n           }}\n           data={parentFolderHook.folderContent}\n           pagingEnabled={true}\n           initialNumToRender={1000}\n           renderItem={renderContent}\n           keyExtractor={item => item.id || item.date.toString()}\n           getItemCount={parentFolderHook.getContentCount}\n           getItem={parentFolderHook.getContentItem}\n          //  initialScrollIndex={initialScrollIndex}\n           onScrollToTop={()=>{\n            console.info('ontop')\n           }}\n           ref={flatListRef}\n           getItemLayout={(data, index)=>{\n              return {length:130, offset: 130*index, index}\n           }}\n         /> : <ActivityIndicator size={72} />}\n         </SafeAreaView>\n     : null}\n  </View>\n))\nconst FolderPage = (props:FolderLibraryProps) => {\n  const {\n    navigation,\n    getFolderContent,\n    getById,\n    enqMedia,\n    stopMedia,\n    getFoldersByType,\n    setWindowClosedCallback,\n    folderType,\n    writeItem\n  } = props\n  const isFocused = useIsFocused()\n  const {height, width} = useWindowDimensions();\n  const isMobile = width > 700 ? false : true\n  const party = useContext(PartyCtx)\n  const current = useContext(UserCtx);\n  const route = useRoute()\n  const flatListRef = useRef()\n  let marginTop = Platform.OS === \"web\" ? 0 : 0;\n  const {folderId, mnemonic, title, userId} = route.params\n  const dataHook = useFolder(\n    folderId, \n    getFolderContent, \n    getById, \n    folderType,\n    writeItem,\n    mnemonic,\n    title,\n    userId\n  )\n  const {\n    folderContent,\n    getContentCount,\n    getContentItem,\n    isLoadingFolder,\n    folderContentQuery,\n    folder,\n    onReordered,\n    addMedia\n  } = dataHook\n  const parentFolderId = route.params!.parentFolderId! || (folder && folder.folderId) || null\n  const parentFolderHook = useFolder(\n    parentFolderId, \n    getFolderContent, \n    getById, \n    folderType,\n    writeItem\n  )\n  let initialScrollIndex:number | undefined | boolean = route.params!.scrollIndex! || (!parentFolderHook.isLoadingFolder \n    && parentFolderHook.folderContent \n    && parentFolderHook.folderContent.findIndex((i)=>i && i.id===folderId))\n  // console.info(\"initialScrollIndex\", initialScrollIndex)\n  if(initialScrollIndex === false || initialScrollIndex as number < 1) {\n    initialScrollIndex = 0\n  } \n  // console.info('initialScrollIndex', initialScrollIndex)\n  if(!isFocused)\n    return (<></>)\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: 0,\n      marginTop: 0,\n    },\n    item: {\n      paddingTop: 15,\n      paddingLeft: 5,\n      fontSize: 12,\n      height: 160,\n      color: 'black',\n      width: width - 80,\n    },\n    tinyLogo: {\n      marginTop: 2,\n      width: 22,\n      height: 22,\n    },\n    scroll: {\n      height: height-65,\n      display:\"flex\",\n      position:\"relative\",\n      backgroundColor:\"black\",\n      marginTop,\n      width:\"100%\"\n    },\n    icon: {\n      paddingLeft: 10,\n    },\n  });\n  const renderContent = ({item:i, onDragEnd, onDragStart}:DragListRenderItemInfo<FolderPreviewContentType>) => (\n        <TouchableOpacity\n        key={i.id}\n        onPressIn={onDragStart}\n        onPressOut={onDragEnd}>\n        \n        <ContentItem\n            i={i}\n            key={i.id}\n            dataHook={dataHook}\n            styles={styles}\n            width={!isMobile ? width / 100 * 70 : width}\n            navigation={navigation}\n            party={party!}\n            current={current!}\n        />\n        </TouchableOpacity>\n    )\n  return (\n    <SafeAreaView \n      // style={{overflow:\"scroll\"}}\n    >\n      <View style={{\n        backgroundColor:current!.colors.backgroundColor, \n        height:dataHook.currentMediaId ? height/2 : height,\n        width:\"100%\",\n        flexDirection:\"row\"\n      }}>\n      {!isMobile ? \n        <FolderNavigator \n          parentFolderId={parentFolderId}\n          navgation={navigation}\n          getFolderContent={getFolderContent}\n          getFoldersByType={getFoldersByType}\n          enqMedia={enqMedia}\n          stopMedia={stopMedia}\n          setWindowClosedCallback={setWindowClosedCallback} \n          parentFolderHook={parentFolderHook}\n          styles={styles}\n          folderId={folderId}\n          renderContent={renderContent}\n          // initialScrollIndex={initialScrollIndex}\n          flatListRef={flatListRef}\n          folderType={folderType}\n          writeItem={writeItem}\n        /> \n        : \n        null }\n      <ScrollView \n          style={{\n            // position:isMobile ? \"relative\" : \"absolute\", \n            // overflow:\"scroll\", \n            // width:isMobile ? \"100%\" : \"70%\", \n            // left:isMobile ? 0 : \"30%\",\n            height:dataHook.currentMediaId ? height/2 : height\n          }} \n          showsHorizontalScrollIndicator={false} \n          showsVerticalScrollIndicator={false}\n        >\n          {!isLoadingFolder ?\n          <DragList\n            // initialNumToRender={100}\n            renderItem={renderContent}\n            keyExtractor={item => item.id || item.date.toString()}\n            // getItemCount={getContentCount}\n            // getItem={getContentItem || {id:\"null\"}}\n            data={folderContent}\n            ListEmptyComponent={()=><List.Item \n              title={\"Create your first project\"} left={()=><IconButton icon={\"creation\"} mode=\"outlined\" />} \n              style={{padding:10}}\n              onPress={()=>addMedia()}\n            />}\n            // layoutAnimationDisabled={true}\n            onReordered={onReordered}\n            // enableLayoutAnimationExperimental={true}\n            // getItemLayout={(data, index)=>{\n            //    return {length:80, offset: 80*index, index}\n            //  }}\n          /> : <ActivityIndicator size={72} />}\n          <View style={{width:\"100%\", height:150, position:\"relative\"}} />\n      </ScrollView>\n    </View>\n    </SafeAreaView>\n  );\n};\n\nexport default memo(FolderPage);\n","import React from 'react';\nimport { View } from 'react-native';\nimport { ActivityIndicator, Banner, Divider, IconButton, useTheme } from 'react-native-paper';\nimport { useMutation, useQuery } from 'react-query';\nimport { Media } from '../types';\nimport { getFileOpfs, getVideoWT } from '../api/media';\nconsole.info('getFileOpfs', getFileOpfs)\nimport { useIsFocused } from '@react-navigation/native';\nimport { MediaActionType, loaded, togglePause } from '../store/slices/media';\nimport { useAppDispatch } from '../store/hooks';\nexport default function MediaBanner({getById, height, writeItem, media, routeParams}: any) {\n    const theme = useTheme()\n    const dispatch = useAppDispatch()\n    const {currentMediaId} = media\n    const mediaData = useQuery(\"mediaData_\"+currentMediaId, \n      ()=>getById(media.currentMediaId, routeParams.folderId), {\n        enabled:media.currentMediaId ? true : false\n      }\n    )\n    const focused = useIsFocused()\n    \n    const mediaRes:Media = mediaData.data\n    const isLocalMedia = mediaRes?.extractor === \"local\"\n    const isWT = mediaRes?.extractor === \"wt\"\n    const updateMediaTime = useMutation(async (currentTime:number)=>{\n      if(mediaRes) {\n        mediaRes.currentPosition = currentTime\n        // await writeItem(mediaRes)\n        // await mediaData.refetch()\n      }\n    }, {retry:false})\n\n    const localMediaQuery = useQuery(\n      \"localMedia_\"+currentMediaId, \n      async ()=> {\n        const r = await getFileOpfs(mediaRes)\n        if(r) {\n          dispatch(loaded({actionType:MediaActionType.loaded, mediaId:currentMediaId!}))\n          return r\n        }\n        return undefined\n      }, {\n        enabled: focused && mediaRes?.id ? true : false\n      }\n    )\n\n    const wtMediaQuery = useQuery(\"wtMedia_\"+currentMediaId, \n      async ()=>{\n        const r = await getVideoWT(mediaRes)\n        dispatch(loaded({actionType:MediaActionType.loaded, mediaId:currentMediaId!}))\n        return r\n      },{\n        enabled: isWT && (localMediaQuery.isFetched && !localMediaQuery.data) && focused\n      }\n    )\n    const mediaLoading = mediaData.isLoading \n    || wtMediaQuery.isFetching \n    || localMediaQuery.isFetching\n\n    const mediaSrc = \n      wtMediaQuery.data || localMediaQuery.data || mediaRes?.url\n    const currentPosition = mediaRes?.currentPosition || 0\n    return (\n      <>\n      <Divider />\n      <Banner\n        visible={media.currentMediaId ? true : false}\n        theme={theme}\n        style={{\n          backgroundColor: \"black\", \n          padding:0, \n          margin:0\n        }}\n        contentStyle={{\n          width:\"100%\", \n          height:\"100%\",\n          maxWidth:\"auto\", \n          padding:0, \n          margin:0\n        }}\n      >\n      <View style={{width:\"100%\", height:height / 2}}>\n        <IconButton \n          style={{\n            position:\"absolute\", \n            cursor:\"pointer\", \n            right:0,\n            pointerEvents:\"auto\", \n            zIndex:100\n          }} \n          icon={\"close\"} \n          mode='outlined' \n          onPress={()=>media.onMediaPress(\"\")} \n        />\n        {mediaLoading ? <ActivityIndicator size={72} /> : null}\n\n        {currentMediaId && !mediaLoading && focused ? \n          <video \n            // autoPlay={!media.isMediaPaused ? true : false}\n            controls={true} \n            style={{\n              width:\"100%\", \n              height:\"100%\",\n              // objectFit: \"cover\"\n            }} \n            onPlaying={(e)=>{\n              const {currentTime} = e.nativeEvent.target\n              updateMediaTime.mutateAsync(currentTime)\n              dispatch(togglePause({pause:false, actionType:MediaActionType.pause}))\n            }}\n            onPause={(e)=>{\n              dispatch(togglePause({pause:true, actionType:MediaActionType.pause}))\n            }}\n            onEnded={(p)=>{\n              console.info('ended', p)\n            }}\n            onTimeUpdate={(e)=>{\n              const {currentTime} = e.nativeEvent.target\n              // console.info('time', currentTime)\n              const minimumTimeDiff = 5\n              if(currentTime > minimumTimeDiff\n                &&  currentTime - currentPosition > minimumTimeDiff \n                && !updateMediaTime.isLoading) {\n                updateMediaTime.mutateAsync(currentTime)\n              }\n            }}\n            onResize={()=>{\n              console.info('resize')\n            }}\n            onLoadedData={(e)=>{\n              if(!media.isMediaPaused)\n                e.nativeEvent.target.play()\n            }}\n            ref={(el)=>{\n              // console.info(\"onmount\", el)\n              if(el && el.paused && el.currentTime !== currentPosition) {\n                // el.currentTime = currentPosition\n              }\n            }}\n            src={mediaSrc}\n          >\n            <track label=\"language one\" kind=\"subtitles\" srcLang=\"en\" default />\n          </video> \n          : \n          null \n        }\n      </View>\n      </Banner>\n      <Divider />\n      </>\n    )\n}","import React, { useState } from 'react';\n\nimport {\n  Media,\n} from '../types';\n\nimport {\n  View,\n  StyleSheet, ImageBackground,\n  TouchableOpacity,\n} from 'react-native';\n\nimport {\n  useAppSelector\n} from '../store/hooks'\nexport interface MediaItemProps {\n  i: Media;\n  itemLoading: string | boolean;\n  enableMove: boolean;\n  width: number;\n  onMediaPress:(mediaId:string)=>void\n  onRemoveMediaPress:(media:Media)=>void\n  onDownloadMediaPress:(mediaId:string)=>void\n  onCopyLinkPress:(mediaId:string)=>void\n  onEditMediaPress:(mediaId:string)=>void\n  isOpen: boolean;\n  isPlaying: boolean;\n}\nimport { List,ActivityIndicator, useTheme, Divider,  Caption, Text, Chip, TouchableRipple, } from 'react-native-paper';\nimport { useQuery } from 'react-query';\nimport { getFileReaderOpfs } from '../api/media';\nimport { infinity } from 'effect/Duration';\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n  customTitle: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  additionalPadding: {\n    paddingTop: 8,\n  },\n  image: {\n    width:\"100%\",\n    height:\"auto\",\n    opacity:.6,\n    position:\"absolute\",\n    resizeMode: \"cover\",\n    zIndex:-1,\n    flex:1,\n    \n  },\n});\n\n\nconst MediaItem = (props: MediaItemProps) => {\n  const {\n    i,\n    itemLoading,\n    width,\n    onMediaPress,\n    onRemoveMediaPress,\n    onDownloadMediaPress,\n    onCopyLinkPress,\n    onEditMediaPress,\n    isPlaying\n  } = props\n  const theme = useTheme()\n  // const width = \"100%\"\n  const thisItemIsLoading = i.id === itemLoading;\n\n  const onActionPress = () => onEditMediaPress(i.id)\n  const onCellPress = () => onMediaPress(i.id)\n  const onRemove = async () => onRemoveMediaPress(i)\n  const onCopyLink = async () => onCopyLinkPress(i.id)\n  const isDownloading = useAppSelector((state)=>state.fs.downloadingProgress[i.id])\n  const isDownloadedQuery = useQuery([\"isDownloaded\", i.id, i.isDownloaded],async ()=>{\n    try {\n      const file = await getFileReaderOpfs(i)\n      console.info('hasfile', file)\n      if(file) {\n        return true\n      }\n      else {\n        return false\n      }\n    } catch(err) {\n      return false\n    }\n  }, {refetchOnMount:false, refetchOnReconnect:false, refetchOnWindowFocus:false, staleTime:Infinity})\n  const isDownloaded = isDownloadedQuery.data\n  const onDownloadToggle = async () => isDownloaded ? null : onDownloadMediaPress(i.id)\n  const imageSource = {uri:i.thumbnail, cache: \"force-cache\"}\n  let iconName = isPlaying ? 'stop-circle-outline' : 'play-circle-outline';\n  \n  let offlineTitle = isDownloaded\n    ? 'Remove From Device'\n    : 'Download To Device';\n  \n  let offlineIconName = isDownloadedQuery.isFetched && isDownloaded\n    ? 'floppy'\n    : 'cloud-download-outline';\n\n  if (isDownloading) {\n    offlineTitle = 'Downloading / Cancel';\n  }\n  let extractorIcon = i.extractor.toLowerCase()\n  if(extractorIcon === \"wt\")\n    extractorIcon = \"folder-network\"\n  if(extractorIcon === \"local\")\n    extractorIcon = \"file\"\n  const height = 100\n  const cloudIcon = (isDownloading !== undefined ? ()=><ActivityIndicator animating={true} theme={theme} /> : offlineIconName)\n  const controlIconPaddingTop = 30\n  const touchableStyle = {\n    \"pointerEvents\": \"auto\",\n    paddingTop:controlIconPaddingTop,\n  } as any\n\n  return (\n    <View style={{width, height}}>\n    <List.Item\n      style={{height, zIndex:2, position:'absolute', width}}\n      left={props => (\n        <TouchableOpacity onPress={onCellPress} style={touchableStyle}>\n        <List.Icon \n        {...props} \n        icon={\n          (\n            thisItemIsLoading \n            ?  () =><ActivityIndicator animating={true} theme={theme} />\n            : iconName\n          )\n        } /></TouchableOpacity>)}\n      \n      right={(props) => (<>\n        {/* <TouchableOpacity onPress={onActionPress} style={touchableStyle}>\n          <List.Icon {...props} icon=\"star-outline\" />\n        </TouchableOpacity> */}\n        <TouchableOpacity onPress={onDownloadToggle} style={touchableStyle}>\n          <List.Icon {...props} icon={cloudIcon} />\n        </TouchableOpacity>\n        {/* <TouchableOpacity onPress={onCopyLink} style={touchableStyle}>\n          <List.Icon {...props} icon=\"share\" />\n        </TouchableOpacity> */}\n        <TouchableOpacity onPress={onRemove} style={touchableStyle}>\n          <List.Icon {...props} icon=\"delete\" />\n        </TouchableOpacity>\n      </>)}\n      title={({ ellipsizeMode, color: titleColor, fontSize }) => (\n        <View style={[styles.container, styles.row, styles.customTitle]}>\n          <Text\n            ellipsizeMode={ellipsizeMode}\n            style={{ color: titleColor, fontSize }}\n            numberOfLines={2}\n          >\n            {i.title}\n          </Text>\n        </View>\n      )}\n      description={({\n        ellipsizeMode,\n        color: descriptionColor,\n        fontSize,\n      }) => (\n        <View style={[styles.container, styles.column]}>\n          <Text\n            numberOfLines={1}\n            ellipsizeMode={ellipsizeMode}\n            style={{ color: descriptionColor, fontSize }}\n          >\n           {i.description}\n          </Text>\n          <View\n            style={[styles.container, styles.row, styles.additionalPadding]}\n          >\n          <Chip icon={extractorIcon} onPress={() => {}} style={{height:30}}>\n            From {i.extractor}\n          </Chip>\n\n          {!isDownloaded \n          && isDownloading \n          && isDownloading * 100 > 1 && <Chip icon={extractorIcon} onPress={() => {}} style={{height:30}}>\n            Downloading {parseInt((isDownloading*100).toString(), 10)}%\n          </Chip> }\n          </View>\n        </View>\n      )}\n    />\n      {i.thumbnail ? <ImageBackground \n        source={{uri:i.thumbnail, cache:\"force-cache\"}} \n        resizeMethod=\"resize\"\n        resizeMode='cover' \n        style={{\n          ...styles.image, \n          height, \n          width,\n        }} \n        imageStyle={{...styles.image, height, width}}\n      /> : null}\n    <Divider />\n    </View>\n    )\n};\n\nexport default MediaItem;\n","import React, {useMemo, useCallback, memo} from 'react';\nimport { useMedia } from '../hooks/useMedia';\nimport FolderLibrary from './folderlibrary';\nimport { Folder } from '../types';\n\nexport interface MediaLibraryProps {\n  getFolderContent:any\n  getFoldersByType:any\n  enqMedia:any;\n  stopMedia:any\n  setWindowClosedCallback?:any;\n  writeItem:any\n}\n\nconst MediaLibrary = (mediaLibraryProps:MediaLibraryProps) => {\n  const {\n    getFolderContent, \n    getFoldersByType,\n    enqMedia,\n    stopMedia,\n    setWindowClosedCallback,\n    writeItem\n  } = mediaLibraryProps\n\n  const dataHook = useMedia(\n    getFoldersByType, \n    getFolderContent, \n    enqMedia, \n    stopMedia, \n    setWindowClosedCallback,\n    writeItem\n  )\n\n  return (<FolderLibrary \n    dataHook={dataHook}\n  />)\n};\n\nexport default memo(MediaLibrary);\n","import React, {useCallback, useContext, useMemo} from 'react';\n\nimport { createMaterialBottomTabNavigator } from 'react-native-paper/react-navigation';\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nconst Tab = createMaterialBottomTabNavigator();\n\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nconst DrawerNav = createDrawerNavigator();\nimport CustomNavigationBar from './appnav';\n\nimport { FTSIndex, FolderType } from '../types';\n\nimport {\n  UserCtx\n} from '../ctx'\n\nimport { \n  getUserData, \n  getFolderContent, \n  getFoldersByType,\n  writeItem,\n  findByOriginalId,\n  createNewParty,\n  publicPartyPref,\n  getById,\n  deleteById,\n  extractMedia,\n  domain,\n  setPubCallback,\n  getPublicMessages,\n  writePublicData,\n  getUnreadMessages,\n  sendChatMessage,\n  getPublicPartyList,\n  getPublicFolderContent,\n  getMediaAndEnq,\n  stopVideo,\n  setWindowClosedCallback,\n  DocumentPicker\n} from '../api'\nimport { createFileStack } from './filestack';\nimport { useWindowDimensions } from 'react-native';\nimport DrawerItems from './drawer';\nimport { createChatStack } from './chatstack';\nimport { createSettings } from './settings';\nimport { createEncoder } from './encoder'\nimport { createEditor } from './editor'\n\nconst setNetworkUpdateCB = () => {}\n\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationState, useRoute } from '@react-navigation/native';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { setCurrentPage } from '../store/slices/ui';\nimport { useKeyboardDispatcher } from '../hooks/useKeyboardListener';\nconst RootStack = createNativeStackNavigator()\nconst ops = {\n  writeItem, \n  getUserData,\n  getPublicFolderContent, \n  getFolderContent, \n  getFoldersByType,\n  getById,\n  enqMedia:getMediaAndEnq,\n  stopMedia:stopVideo,\n  extractMedia,\n  findByOriginalId,\n  setNetworkUpdateCB,\n  getPublicMessages,\n  setPubCallback,\n  publicPartyPref,\n  getPublicPartyList,\n  createNewParty,\n  deleteById,\n  sendChatMessage,\n  writePublicData,\n  getUnreadMessages,\n  setWindowClosedCallback,\n  DocumentPicker,\n  stopVideo,\n  domain\n}\n\n\nconst FileStack = createFileStack(ops)\n\nconst ChatStackScreen = createChatStack(ops)\n\nconst SettingsStack = createSettings(ops)\n\nconst EncoderStack = createEncoder(ops)\n\nconst EditorStack = createEditor(ops)\n\nconst TabNav = () => {\n\n  const dim = useWindowDimensions()\n  const dispatch = useAppDispatch()\n  const isNavHidden = useAppSelector(state=>state.ui.isTabBarHidden)\n  useKeyboardDispatcher()\n  if(dim.width > 700) {\n    return (\n      <SafeAreaInsetsContext.Consumer>\n      {(insets) => {\n      const { left, right } = insets || { left: 0, right: 0 };\n      const collapsedDrawerWidth = 80 + Math.max(left, right);\n      const nonCollasedWidth = 180;\n      const collapsed = true;\n      return (\n        <DrawerNav.Navigator\n          screenOptions={{\n            drawerStyle: {\n              width: collapsed ? collapsedDrawerWidth : nonCollasedWidth,\n            },\n            drawerPosition:\"left\",\n            drawerType: \"permanent\"\n          }}\n          detachInactiveScreens={true}\n          defaultStatus=\"open\"\n          // backBehavior=\"order\"\n          drawerContent={(props) => <DrawerItems {...props} />}\n        >\n          <DrawerNav.Screen\n            name=\"FilesTab\"\n            component={FileStack}\n            options={{ \n              headerShown: false, \n              drawerIcon: ({color, size}) => (\n                <Ionicons name=\"folder-outline\" color={color} size={24} />\n              ),\n              title: \"Files\"\n          }}\n          />\n          <DrawerNav.Screen\n            name=\"ContactsTab\"\n            component={ChatStackScreen}\n            options={{ \n              headerShown: false, \n              title: \"Contacts\"\n          }}\n          />\n          <DrawerNav.Screen\n            name=\"EncoderTab\"\n            component={EncoderStack}\n            options={{ \n              headerShown: false, \n              title: \"Encoder\"\n          }}\n          />\n          <DrawerNav.Screen\n            name=\"EditorTab\"\n            component={EditorStack}\n            options={{ \n              headerShown: false, \n              title: \"Editor\"\n          }}\n          />\n          <DrawerNav.Screen\n            name=\"SettingsTab\"\n            component={SettingsStack}\n            options={{ \n              headerShown: false, \n              drawerIcon: ({color, size}) => (\n                <Ionicons name=\"people-outline\" color={color} size={24} />\n              ),\n              title: \"Contacts\"\n          }}\n          />\n        </DrawerNav.Navigator>\n      );\n      }}\n      </SafeAreaInsetsContext.Consumer>\n    )\n  }\n  return (\n    <Tab.Navigator\n    barStyle={{  display: isNavHidden ? 'none' : 'flex' }}\n    screenListeners={{\n      state: state => {\n        try {\n          const navState = state as unknown as { data: { state: NavigationState } }\n          const currentTab = navState?.data?.state?.routes[navState?.data.state?.index || 0] || {}\n          const currentNavPage = currentTab?.state?.routes[currentTab?.state?.index || 0]\n          dispatch(setCurrentPage({ currentPage: currentNavPage?.name as string }))\n        } catch (err) {}\n      },\n    }}\n\n    >\n      <Tab.Screen\n        name=\"FilesTab\"\n        options={{\n          tabBarLabel: 'Files',\n          tabBarIcon:\"folder\",\n        }}\n        component={FileStack}\n      />\n      <Tab.Screen\n        name=\"Account\"\n        options={{\n          tabBarIcon:\"account\"\n        }}\n        component={SettingsStack}\n      />\n      <Tab.Screen\n        name=\"ContactsTab\"\n        component={ChatStackScreen}\n        options={{\n          tabBarLabel: 'Contacts',\n          tabBarIcon:\"contacts\"\n        }}\n      />\n      <Tab.Screen\n        name=\"EditorTab\"\n        component={EditorStack}\n        options={{\n          tabBarLabel: 'Editor',\n          tabBarIcon:\"scissors-cutting\"\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nconst RootStackNav = () => <RootStack.Navigator\n  screenOptions={{\n    header: (props) => \n    <CustomNavigationBar {...props} \n      ftsIndex={FTSIndex.title}\n      writeItem={writeItem}\n      findByOriginalId={findByOriginalId}\n      searchDatabaseOnIndex={()=>{}}\n      createNewParty={createNewParty}\n      publicPartyPref={publicPartyPref}\n      extractMedia={extractMedia}\n      folderType={FolderType.contact}\n      getById={getById}\n      getUserData={getUserData} \n      DocumentPicker={DocumentPicker} \n    />\n  }}\n  >\n    <RootStack.Screen\n      name=\"Starp\"\n      component={TabNav} \n      options={{\n        title:\"starpy.me\",\n        freezeOnBlur:true,\n      }}   \n    />\n  </RootStack.Navigator>\n\nexport default RootStackNav;\n","import React from \"react\"\nimport {Divider, IconButton, List} from 'react-native-paper'\nimport {FolderType, Media} from '../types'\nimport { useNavigation } from \"@react-navigation/native\"\nfunction ProjectItem({item, folderType, onRemoveFolder}:{item:Media, folderType:FolderType, onRemoveFolder:(item:{id:string})=>void}) {\n    const nav = useNavigation()\n    const projectType = folderType === FolderType.encoder ? \"EncoderProject\" : \"EditorProject\"\n    const projectIcon = folderType === FolderType.editor ? \"film\" : \"matrix\"\n    return <>\n        <Divider />\n        <List.Item \n            style={{padding:19}} \n            title={item.title} \n            onPress={()=>{\n                nav.navigate(projectType,  {projectId:item.id, parentFolderId:item.folderId})\n            }} \n            left={()=><List.Icon icon={projectIcon} />} \n            right={()=><IconButton icon={\"delete\"} onPress={()=>onRemoveFolder(item)} />}\n        />\n    </>\n}\n\nexport default ProjectItem;","import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nconst SettingsStack = createStackNavigator()\n\nimport SettingsView from '../routes/settings';\nimport DevicesScreen from './devices';\n\nexport const createSettings = (ops:any) => {\n  const {colorOptions, current} = ops\n  const RenderSettings = (props:any)=><SettingsView {...props} domain={ops.domain} getUserData={ops.getUserData}  />\n  const Devices = (props:any)=><DevicesScreen {...props} getUserData={ops.getUserData} />\n  const SettingsStackScreen = () => {\n    return (\n      <SettingsStack.Navigator\n        screenOptions={{\n          headerShown: false,\n          freezeOnBlur:true,\n        }}\n      >\n        <SettingsStack.Screen\n          name=\"Settings\"\n          component={RenderSettings} \n          options={{\n            ...colorOptions\n          }}   \n        />\n        <SettingsStack.Screen\n          name=\"Devices\"\n          component={Devices}\n          options={({ route }) => ({\n            ...colorOptions,\n            headerStyle: {\n              backgroundColor: current?.colors?.backgroundColor,\n              color:current?.colors?.navTextColor,\n            } \n          })}\n        />\n      </SettingsStack.Navigator>\n    )\n  }\n  return SettingsStackScreen\n}","import { createContext } from 'react';\n\nimport { CurrentUserData } from '../types';\n\nimport { UserDataAction } from '../hooks/useUserData';\n\nexport const PeerCtx = createContext(null);\n\nexport const MediaCtx = createContext(null);\n\nexport const PartyCtx = createContext(null);\n\nexport const UserCtx = createContext<CurrentUserData | null>(null);\n\nexport const LocalCtx = createContext(null);\n\nexport const LoadingContext = createContext(false);\n\nexport const UserDataState = createContext<CurrentUserData | null>(null);\n\nexport const UserDataDispatch = createContext<React.Dispatch<UserDataAction> | null>(null)","export * from './ctx'","import { FolderType } from \"../types\";\n\nexport const migrationKey = 'afanassii25662';\n// export const migrationKey = 'p2';\nexport const dbID = migrationKey;\nexport const userDocKey = 'userDoc';\nexport const domain = 'https://www.starpy.me/';\nexport const cdndomain = \"https://cdn.starpy.me/\"\nexport const contactPrefix = 'contact_';\nexport const publicPartyPref = 'public_party_';\n\nexport const encoderProjectTypes = [FolderType.encoder, FolderType.editor]\nexport const googleDocumentKey = \"google_document\"\nexport const defaultFolders = [\n  \"demo\", \n  \"new\", \n  \"nearby\", \n  publicPartyPref, \n  \"tutorial\", \n  \"new_editor\", \n  \"new_media\", \n  \"new_chat\", \n  \"new_encoder\"\n]\nexport const loaderURI =\n  'https://raw.githubusercontent.com/AboutReact/sampleresource/master/old_logo.png';\n\nexport const MEDIA = [\n  {\n    id: 'sintel',\n    title: 'Sintel',\n    thumbnail: 'https://starpy.me/webapp/sintel.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:08ada5a7a6183aae1e09d831df6748d566095a10&dn=Sintel&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fsintel.torrent',\n  },\n  {\n    id: 'tears',\n    title: 'Tears of Steel',\n    thumbnail: 'https://starpy.me/webapp/tearsOfSteel.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:209c8226b299b308beaf2b9cd3fb49212dbd13ec&dn=Tears+of+Steel&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Ftears-of-steel.torrent',\n  },\n  {\n    id: 'cosmoslaundromat',\n    title: 'Cosmos Laundromat',\n    thumbnail: 'https://starpy.me/webapp/cosmosLaundromat.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:c9e15763f722f23e98a29decdfae341b98d53056&dn=Cosmos+Laundromat&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fcosmos-laundromat.torrent',\n  },\n  {\n    id: 'bbb',\n    title: 'Big Buck Bunny',\n    thumbnail: 'https://starpy.me/webapp/bigBuckBunny.jpg',\n    folderId: 'demo',\n    extractor: 'wt',\n    url: 'magnet:?xt=urn:btih:dd8255ecdc7ca55fb0bbf81323d87062db1f6d1c&dn=Big+Buck+Bunny&tr=udp%3A%2F%2Fexplodie.org%3A6969&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969&tr=udp%3A%2F%2Ftracker.empire-js.us%3A1337&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969&tr=udp%3A%2F%2Ftracker.opentrackr.org%3A1337&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fbig-buck-bunny.torrent',\n  },\n];\n\nconst FOLDERS = [\n  {\n    id: 'wired',\n    title: 'The WIRED CD - Rip. Sample. Mash. Share',\n    posterFileName: 'wiredCd.jpg',\n    torrentFileName: 'wiredCd.torrent',\n  },\n];\n\nexport const colors = {\n  textColor:\"white\",\n  backgroundColor:\"black\",\n  mediaItemTextColor:\"palegoldenrod\",\n  mediaBackgroundColor:'#2b2b2b',\n  mediaBorderColor:\"black\",\n  navTextColor:\"#e1d76a\",\n  navInactiveColor:\"#585858\",\n  folderColor:\"#585858\",\n  folderTextColor:\"black\",\n  deleteBackgroundColor:\"red\",\n  deleteTextColor:\"black\",\n  navBorderColor:'#585858',\n  contactItemBackgroundColor:\"#2b2b2b\",\n  contactItemTitleColor:\"#e1d76a\",\n  contactItemOnlineColor:\"green\",\n  theme:\"dark\",\n  currentUserColor:\"#585858\",\n  remoteUserColor:\"cornflowerblue\"\n}","import {\n  migrationKey,\n  MEDIA\n} from './defaults';\nexport * from \"./defaults\"\n\nimport {faker} from '@faker-js/faker';\n\nimport uuid from 'react-native-uuid';\n\nimport {\n  UserInfo, \n  DocsGeneric, \n  DocsGenericArray, \n  FolderType\n} from '../types';\n\nconst baseFolder = {\n  id: 'folder01',\n  title: 'My First Folder',\n  isFolder: true,\n};\n\nexport const createUser = async (): Promise<UserInfo> => {\n  const photo = faker.image.cats();\n  const name = faker.name.fullName();\n  const description = faker.animal.cat();\n  const year = '19' + new Date(faker.date.birthdate()).getFullYear();\n  const id = uuid.v4().toString();\n  const handle = '@' + (name + description + year).replace(/[^A-Z0-9]+/gi, '');\n  return {\n    handle,\n    photo,\n    name,\n    description,\n    year,\n    id,\n    idHash:id,\n    userDoc: true,\n    version: migrationKey,\n    prevVersion: '',\n  };\n};\n\nexport const createNewUser = async (writeItem:any) => {\n  try {\n    const newUser = await createUser();\n    console.info('==== creating temp user ====', newUser);\n    await writeItem(newUser);\n    return newUser;\n  } catch (err) {\n    console.error('==== error on creating a new user ====', err);\n  }\n};\n\nexport const doInitialMigration = async (writeItem:any, getUserData:any) => {\n  console.info('==== do migration ====');\n  try {\n    let user = await getUserData();\n    console.info(\"initialMigrationUserCheck\", user);\n    if(user && user.id) {\n      return user\n    }\n\n    if (!user || !user.id) {\n      user = await createNewUser(writeItem)\n    }\n\n    const userId = user.id;\n    await Promise.all([\n      writeItem({\n        ...baseFolder,\n        title: 'Demo',\n        id: 'demo',\n        folderType: FolderType.media,\n        date: new Date().toISOString(),\n        userId,\n      }),\n      ...MEDIA.map(async media =>\n        writeItem({\n          ...media,\n          isMediaNew:true,\n          folderId:\"demo\",\n          date: new Date().valueOf(),\n        }),\n      ),\n    ]);\n  } catch (err) {\n    console.error('====migration err===', err);\n  }\n  console.info('==== after migration ====');\n};\n","import { UseFoldersState, useFolders } from \"./useFolders\"\n\nimport { Folder, FolderType, Contact } from \"../types\"\n\nexport interface UseContactsState extends UseFoldersState<Contact> {}\n\nexport const useContacts = (\n    getFoldersByType:(folderType:FolderType) => Promise<Folder[]>,\n    getFolderContent:(folderId:string) => Promise<Contact[]>,\n    writeItem:any,\n) : UseContactsState => {\n    \n    const getContactsFolders = async () => {\n        const contacts = await getFoldersByType(FolderType.contact)\n        return contacts\n    }\n\n    const getContactsFolderContent = async (folderId:string) => {\n        const content = await getFolderContent(folderId)\n        return content\n    }\n\n    const useFoldersState = useFolders<Contact>(\n        FolderType.contact, \n        getContactsFolders, \n        getContactsFolderContent,\n        writeItem\n    )\n    \n    return useFoldersState\n}","\nimport { useMutation, useQuery, useQueryClient } from \"react-query\"\nimport { CurrentUserData, Folder, Media, EditorProject, EditorLayer } from \"../types\";\nimport { useMediaPlayer } from \"./useMediaPlayer\";\nimport { useContext, useMemo, useRef, useState } from \"react\";\nimport { UserDataDispatch, UserDataState } from \"../ctx\";\nimport { UserDataAction, UserDataActionType } from \"./useUserData\";\nimport { TextInput } from \"react-native-gesture-handler\";\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { Clipboard } from \"react-native\";\nimport { DocumentPicker, domain, genMnemonic, getUserData } from \"../api\";\nimport { startOnboarding } from \"../store/slices/upload\";\nimport uuid from 'react-native-uuid';\n\nexport function useFolder (\n    folderId:string, \n    getFolderContent:(folderId:string) => Promise<[]>,\n    getById:(folderId:string)=>Promise<any>,\n    folderType:string,\n    writeItem?:any,\n    mnemonic?: string,\n    title?:string,\n    userId?:string\n) {\n    const route = useRoute()\n    const mediaPlayer = useMediaPlayer(folderId)\n    const dispatch = useAppDispatch()\n    const folderData = useQuery(\n        'folderData_'+folderId, \n        async () => {\n          console.info('useFolder', folderId, mnemonic)\n          try {\n            const folder = await getById(folderId)\n            console.info('folder', folder)\n            if(folder?.id !== undefined)\n              return folder\n          } catch(err ) {\n            console.error(err)\n          }\n          console.info(\"mnemonic\", mnemonic, title)\n          if(mnemonic && title) {\n            const nfolder = await writeItem({\n              id:folderId,\n              mnemonic,\n              title,\n              isFolder:true,\n              folderId:\"new_\"+folderType,\n              folderType,\n              userId\n            })\n            console.info('after create new folder, nf', nfolder)\n          }\n          return (await getById(folderId))\n        }, \n        {\n            enabled:folderId ? true : false,\n            refetchOnWindowFocus:false, \n            refetchOnMount:false, \n            retry(count){\n                if(count > 3) \n                    return false;\n                return true;\n            }\n        }\n    )\n    const queryKey = 'folderContent_'+folderId\n    const queryClient = useQueryClient()\n    const isLoadingFolder = folderData.isFetching\n    const folder: Folder | EditorProject | EditorLayer = folderData.data\n    const mnemo = mnemonic || folder?.mnemonic\n    // console.info(\"mnemo\", mnemo)\n    const refetchInterval = (mnemo?.length && mnemo.length > 1)  ? 1000 : undefined\n    const folderContentQuery = useQuery(queryKey, () => getFolderContent(folderId), \n        {\n            enabled:folderId ? true : false, \n            refetchOnWindowFocus:false, \n            refetchOnMount:false, \n            retry:true, \n            keepPreviousData:true,\n            refetchInterval\n        }\n    )\n    const deleteFolderMutation = useMutation(async (folderId:string)=>await writeItem({...(await getById(folderId)), isDeleted:true}))\n    const folderContent = folderContentQuery.data\n    const isLoadingFolderContent = folderContentQuery.isFetching\n    const writeItemMutation = useMutation(item=>writeItem(item), {onSuccess:async()=>{\n        // content.sort((a,b)=>a.orderId-b.orderId)\n        await queryClient.refetchQueries(queryKey)\n        if(route.params?.projectId) {\n            const {projectId} = route.params\n            console.info('onReordered project items', projectId)\n            await queryClient.refetchQueries([\"projectLayers\", projectId])\n            \n            await queryClient.refetchQueries([\"encodedMedia\",projectId])\n        }\n    }})\n\n    const folderFiles = !isLoadingFolder && folder && folder.files ? folder?.files?.map((file:string)=>({\n        id:file,\n        url:file,\n        title:file,\n        filename:file,\n        isMediaNew:true,\n        folderId: folder!.id,\n        _id:file,\n        date: (folder! as any as Media).date,\n        originalId:(folder! as any as Media).originalId,\n        webpage_url:(folder! as any as Media).webpage_url,\n        thumbnail:(folder! as any as Media).thumbnail,\n        extractor:(folder! as any as Media).extractor,\n    })) as Media[] : [];\n    const userState = useContext(UserDataState) as CurrentUserData\n    const userDispatch = useContext(UserDataDispatch) as React.Dispatch<UserDataAction>\n    const isEditingFolder = userState.isEditingFolder[folderId]\n    const folderNameInputRef = useRef<TextInput | null>(null);\n    const [currentFolderEditorName, setFolderEditorName] = useState(\"\")\n    const editableFolder = folderContent?.find((f:Folder)=>f.id === isEditingFolder)\n\n    const content = isLoadingFolder || isLoadingFolderContent  ? [] : folderFiles.concat(folderContent!);\n\n\n    const updateFolderTitleMutation = useMutation( async (folder:Folder)=> await writeItem(folder))\n    const onRemoveFolder = async (folder:Folder) => {\n        console.info('onRemoveFolder', folder)\n        await deleteFolderMutation.mutateAsync(folder.id)\n        await folderContentQuery.refetch()\n        if(route.params?.projectId) {\n          const {projectId} = route.params\n          await dbConns[projectId].sync()\n          await queryClient.refetchQueries([\"folderData_\"+projectId])\n        }\n        console.info('after delete mutation',)\n    }\n\n\n    const abortEditFolder = () => \n        userDispatch({\n            actionType: UserDataActionType.setEditingFolder, \n            folderId: undefined, \n            folderType:folderId as any\n        })\n\n    const editFolder = (fId:string) => \n        userDispatch({\n            actionType:UserDataActionType.setEditingFolder, \n            folderId:fId, \n            folderType:folderId as any\n        })\n    \n\n\n    const onFolderActionPress = async (folderId:string) => {\n        console.info('isEditingFolder: '+(folderId === isEditingFolder), folderId)\n        if(editableFolder?.id === folderId) {\n            editableFolder.title = currentFolderEditorName\n            await updateFolderTitleMutation.mutateAsync(editableFolder)\n            abortEditFolder()\n            await folderContentQuery.refetch()\n            return\n        }\n        editFolder(folderId)\n    }\n\n    const onReordered = (start:number, end:number)=>{\n        console.info('dragend', start,end)\n        \n        if(start === end)\n            return\n        content[start].orderId = end+1\n        const didEnd = content[end] ? \n            content[end].orderId = start+1 : undefined\n            \n        writeItemMutation.mutateAsync(content[start])\n        didEnd ? writeItemMutation.mutateAsync(content[end]) : null\n        \n    }\n\n    const onShareFolder = async (folder:Folder) => {\n      console.info('onShareFolder', folder)\n      const {id, title, userId} = folder\n      const folderPref = domain+\"webapp/\"+folderType+\"/folder/\"+id+\"?title=\"+title+\"&userId=\"+userId+\"&mnemonic=\"\n      if(folder.mnemonic) {\n        console.info('folder has mnemonic')\n        const folderUrl = folderPref+encodeURIComponent(folder.mnemonic)\n        console.info(folderUrl)\n        Clipboard.setString(folderUrl)\n      }\n      if(!folder.mnemonic) {\n        const mnemonic = genMnemonic()\n        folder.mnemonic = mnemonic;\n        await updateFolderTitleMutation.mutateAsync(folder)\n        const folderUrl = folderPref+encodeURIComponent(mnemonic)\n        console.info(folderUrl)\n        Clipboard.setString(folderUrl)\n      }\n    }\n\n    const addMedia = async () => {\n\n      const pickerResult = await DocumentPicker.pickSingle({\n        presentationStyle: 'fullScreen'\n      })\n      console.info('pickerResult', pickerResult)    \n      // setMediaModalVisible(true)      \n      if(!pickerResult)\n        return\n      const user = await getUserData()\n      const url = pickerResult.uri\n      let fId = folderId \n      const nd: Media = {\n        id: uuid.v4().toString(),\n        url,\n        title:pickerResult.name,\n        originalId: pickerResult.name,\n        filename: pickerResult.name,\n        fileType: pickerResult.type,\n        folderId: fId,\n        userId:user.id,\n        date: new Date().valueOf(),\n        type: pickerResult.file.type,\n        size: pickerResult.file.size,\n        extractor: \"local\"\n      }\n      dispatch(startOnboarding({file:pickerResult.file, media:nd}))\n    }\n\n    return {\n        isLoadingFolder,\n        isLoadingFolderError: folderData.error,\n        folderData,\n        isLoadingFolderContentError: folderContentQuery.error,\n        isLoadingFolderContent,\n        folderContentQuery,\n        folder,\n        folderContent:content,\n        isEditingFolder,\n        abortEditFolder,\n        folderNameInputRef,\n        currentFolderEditorName,\n        setFolderEditorName,\n        onFolderActionPress,\n        onRemoveFolder,\n        onShareFolder,\n        folderType,\n        getContentItem: (_data:unknown, index:number) => content[index],\n        getContentCount: () => content?.length || 0,\n        ...mediaPlayer,\n        onReordered,\n        addMedia\n    }\n}","import { useReducer, useState, useRef, useContext, useMemo, useEffect, useCallback } from \"react\"\nimport { Contact, Folder, FolderType, Media, CurrentUserData } from \"../types\"\nimport { Clipboard, TextInput } from \"react-native\"\nimport { UserDataState, UserDataDispatch } from '../ctx'\nimport { UserDataAction, UserDataActionType } from \"./useUserData\"\nimport { UseQueryResult, useMutation, useQuery } from \"react-query\"\nimport { useIsFocused, useRoute } from \"@react-navigation/native\"\nimport { domain, genMnemonic } from \"../api\"\n\nexport type FolderPreviewContentType = Media | Contact | Folder\n\nexport type getItem = (data:any, index: number) => Folder\n\nexport type getContentItem = (data:any, index: number) => FolderPreviewContentType\n\nexport interface FoldersState <T extends FolderPreviewContentType> {\n    folderType:FolderType\n    isEditingFolder:string;\n    newFolderName?: string;\n    currentContentId?:string;\n}\n\nexport enum FoldersActionType {\n    edit = \"edit\",\n    select = \"select\",\n    deselect = \"deselect\",\n    abortEdit = \"abortEdit\"\n}\n\nexport type FolderGenericActions = \nFoldersActionType.abortEdit |\nFoldersActionType.deselect \n\n\nexport interface FolderSelect {\n    actionType:FoldersActionType.select\n    folderId:string | undefined\n}\n\nexport interface FolderEdit {\n    actionType: FoldersActionType.edit,\n    folderId:string;\n}\n\nexport type FoldersAction = \n{actionType:FolderGenericActions}\n| FolderSelect \n| FolderEdit\n\nexport interface UseFoldersState\n<T extends FolderPreviewContentType> extends FoldersState<T> {\n    selectFolder: (folderId:string) => Promise<void>\n    getItem: getItem\n    getItemCount: () => number\n    getContentCount: () => number\n    getContentItem: getContentItem\n    editFolder: (folderId:string) => void\n    abortEditFolder: () => void\n    currentFolderEditorName: string;\n    setFolderEditorName: (newFolderName: string) => void\n    onFolderActionPress: (folderId:string) => void\n    onFolderPress: (folderId:string) => void\n    onRemoveFolder: (folder:Folder) => void\n    onShareFolder: (folder:Folder) => void\n    folderNameInputRef: React.MutableRefObject<TextInput | null>\n    userState: CurrentUserData\n    userDispatch: React.Dispatch<UserDataAction>\n    currentFolderId?:string;\n    isFocused:boolean;\n    folderContent:T[];\n    loadingContent:boolean;\n    loadingFolders:boolean;\n    folders:Folder[]\n    folderContentQuery:UseQueryResult<T[], unknown>;\n}\n\nexport const useFolders = <T extends FolderPreviewContentType> (\n    folderType:FolderType, \n    getFoldersByType:(folderType:FolderType) => Promise<Folder[]>,\n    getFolderContent:(folderId:string) => Promise<T[]>,\n    writeItem:any\n) : UseFoldersState<T> => {\n    const route = useRoute()\n    const routeFolderId: string | undefined = route.params?.folderId!\n    const userState = useContext(UserDataState) as CurrentUserData\n    const userDispatch = useContext(UserDataDispatch) as React.Dispatch<UserDataAction>\n    const currentFolderId = userState.currentFolderIds[folderType]\n    const isEditingFolder = userState.isEditingFolder[folderType]\n    const folderNameInputRef = useRef<TextInput | null>(null);\n    const [currentFolderEditorName, setFolderEditorName] = useState(\"\")\n    const isFocused = useIsFocused()\n    \n    const foldersQuery = useQuery(\"folders_\"+folderType, async ()=>{\n        const data = await getFoldersByType(folderType) \n        \n        const hasNew = data.find((i)=>i.id === \"new_\"+folderType)\n        if(!hasNew)\n            data.unshift({\n                id: \"new_\"+folderType,\n                title: \"New\",\n                isFolder: true,\n                date: new Date().valueOf(),\n                userId: \"\",\n                folderType,\n            })\n        return data\n    }, {refetchOnWindowFocus:false, refetchOnMount:false, retry:true})\n    const loadingFolders = foldersQuery.isFetching\n    const folders = foldersQuery.data || [{\n        id: \"new_\"+folderType,\n        title: \"New\",\n        isFolder: true,\n        date: new Date().valueOf(),\n        userId: \"\",\n        folderType,\n    }]\n\n    const editableFolder = folders?.find((f)=>f.id === isEditingFolder)\n    const folderContentQuery = useQuery(\"folderContent_\"+folderType, \n        ()=>getFolderContent(currentFolderId!), \n        {enabled: false, retry:true, refetchOnWindowFocus:false}\n    )\n    const loadingContent = folderContentQuery.isLoading || folderContentQuery.isFetching\n    const folderContent = folderContentQuery.data || []\n    // console.info(writeItem)\n    const deleteFolderMutation = useMutation(async (folderId)=>await writeItem({id:folderId, isDeleted:true}))\n\n    const updateFolderTitleMutation = useMutation( async (folder:Folder)=> await writeItem(folder))\n    const deselectFolder = () => \n        userDispatch({\n            actionType:UserDataActionType.setActiveFolder, \n            folderId:undefined, \n            folderType\n        })\n    \n\n    const selectFolder = async (folderId:string) => {\n        deselectFolder() \n        if(currentFolderId !== folderId) { \n            userDispatch({\n                actionType:UserDataActionType.setActiveFolder, \n                folderId, \n                folderType\n            })\n        }\n    }\n\n    const editFolder = (folderId:string) => \n        userDispatch({\n            actionType:UserDataActionType.setEditingFolder, \n            folderId, \n            folderType\n        })\n    \n\n    const abortEditFolder = () => \n        userDispatch({\n            actionType: UserDataActionType.setEditingFolder, \n            folderId: undefined, \n            folderType\n        })\n    \n    \n\n    const onFolderActionPress = async (folderId:string) => {\n        console.info('isEditingFolder: '+(folderId === isEditingFolder), folderId)\n        if(editableFolder?.id === folderId) {\n            editableFolder.title = currentFolderEditorName\n            await updateFolderTitleMutation.mutateAsync(editableFolder)\n            abortEditFolder()\n            await foldersQuery.refetch()\n            return\n        }\n        editFolder(folderId)\n    }\n    \n    const onFolderPress = (folderId:string) => {\n        selectFolder(folderId)\n    }\n    \n\n    const onRemoveFolder = async (folder:Folder) => {\n        console.info('onRemoveFolder', folder)\n        await deleteFolderMutation.mutateAsync(folder.id)\n        await foldersQuery.refetch()\n        console.info('after delete mutation',)\n    }\n\n    const onShareFolder = async (folder:Folder) => {\n      console.info('onShareFolder', folder)\n      const {id, title, userId} = folder\n      const folderPref = domain+\"webapp/\"+folderType+\"/folder/\"+id+\"?title=\"+title+\"&userId=\"+userId+\"&mnemonic=\"\n      if(folder.mnemonic) {\n        console.info('folder has mnemonic')\n        const folderUrl = folderPref+encodeURIComponent(folder.mnemonic)\n        console.info(folderUrl)\n        Clipboard.setString(folderUrl)\n      }\n      if(!folder.mnemonic) {\n        const mnemonic = genMnemonic()\n        folder.mnemonic = mnemonic;\n        await updateFolderTitleMutation.mutateAsync(folder)\n        const folderUrl = folderPref+encodeURIComponent(mnemonic)\n        console.info(folderUrl)\n        Clipboard.setString(folderUrl)\n      }\n    }\n\n    \n    return {\n        folderType,\n        selectFolder,\n        currentFolderId: routeFolderId,\n        getItem: (_data:unknown, index: number) => folders[index],\n        getItemCount: () => folders.length,\n        getContentItem: (_data:unknown, index:number) => folderContent[index],\n        getContentCount: () => folderContent.length,\n        folderContent,\n        loadingContent,\n        loadingFolders,\n        folders,\n        onRemoveFolder,\n        editFolder,\n        abortEditFolder,\n        onShareFolder,\n        folderContentQuery,\n        currentFolderEditorName, \n        setFolderEditorName,\n        folderNameInputRef,\n        onFolderPress,\n        onFolderActionPress,\n        userState,\n        userDispatch,\n        isFocused,\n        isEditingFolder\n    }\n}","import { useEffect } from 'react'\nimport { Keyboard } from 'react-native'\nimport { useAppDispatch } from '../store/hooks'\nimport { setKeyboardHeight } from '../store/slices/ui'\n\nexport function useKeyboardDispatcher() {\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    Keyboard.addListener('keyboardDidShow', e => dispatch(setKeyboardHeight({ keyboardHeight: e.endCoordinates.height })))\n    Keyboard.addListener('keyboardDidHide', () => dispatch(setKeyboardHeight({ keyboardHeight: 0 })))\n\n    return () => {\n      Keyboard.removeAllListeners('keyboardDidShow')\n      Keyboard.removeAllListeners('keyboardDidHide')\n    }\n  }, [])\n}\n\n","\nimport { useFolders } from \"./useFolders\"\n\nimport { Folder, FolderType,  Media } from \"../types\"\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { stop } from \"../store/slices/media\";\nimport { useCallback } from \"react\";\nimport { useMediaPlayer } from \"./useMediaPlayer\";\n\nexport const useMedia = (\n    getFoldersByType:(folderType:FolderType) => Promise<Folder[]>,\n    getFolderContent:(folderId:string) => Promise<Media[]>,\n    enqMedia:any,\n    stopMedia:any,\n    setWindowClosedCallback:(callback:() => Promise<void>) => void,\n    writeItem?:any\n) => { \n    const mediaState = useAppSelector((state) => state.media)\n    const dispatch = useAppDispatch()\n    const useFoldersState = useFolders<Media>(\n        FolderType.media, \n        getFoldersByType, \n        getFolderContent,\n        writeItem\n    )\n\n    const onWindowClosed = async () => {\n        dispatch(stop())\n        await stopMedia()\n    }\n    useCallback(()=>{\n        if(setWindowClosedCallback)\n            setWindowClosedCallback(onWindowClosed)\n    }, [])()\n\n    const mediaPlayer = useMediaPlayer(enqMedia, stopMedia, writeItem)\n    \n    return {\n        ...useFoldersState, \n        ...mediaState,\n        ...mediaPlayer\n    }\n}","import { MediaActionType } from \"../store/slices/media\";\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\";\nimport { play, stop, loaded } from \"../store/slices/media\";\nimport { useContext } from \"react\";\nimport { MediaCtx } from \"../ctx\";\nimport { downloadFileById, getById, writeItem } from \"../api\";\nimport { setDownloadingProgress } from \"../store/slices/fs\";\nimport { Media } from \"../types\";\n\nexport const useMediaPlayer = (\n    folderId?:string\n) => {\n    const mediaState = useAppSelector((state) => state.media)\n    const downloads = useAppSelector(state=>state.fs.downloadingProgress)\n    const dispatch = useAppDispatch()\n\n    const onMediaPress = async (mediaId:string) => {\n        console.info('mediapress', mediaId, folderId)\n        try {\n            dispatch(stop())\n            // await stopMedia()\n            if(mediaState.currentMediaId !== mediaId && mediaId !== \"\") {\n                dispatch(play({actionType:MediaActionType.play, mediaId}))\n                // await enqMedia(mediaId)\n                // dispatch(loaded({actionType:MediaActionType.loaded, mediaId}))\n            }\n        } catch(err) {\n            console.error(\"mediapress error\", err)\n        }\n    }\n\n    const onRemoveMediaPress = (mediaId:string) => {\n        console.info(\"onRemoveMediaPress\", mediaId)\n    }\n\n    const onDownloadMediaPress = async (mediaId:string) => {\n        console.info(\"onDownloadMediaPress\", mediaId)\n        const itemId = mediaId\n        if(downloads[itemId])\n          return\n        dispatch(setDownloadingProgress({itemId, progress:0.001}))\n        try {\n          await downloadFileById(\n            mediaId, \n            folderId,\n            progress=>dispatch(\n              setDownloadingProgress({\n                itemId, \n                progress\n              })\n            )\n          )\n        } catch(err) {\n          console.error(err)\n        }\n        dispatch(setDownloadingProgress({itemId:mediaId, progress:undefined}))\n    }\n\n    const onCopyLinkPress = (mediaId:string) => {\n        console.info(\"onShareMediaPress\", mediaId)\n    }\n\n    const onEditMediaPress = (mediaId:string) => {\n        console.info('onEditMediaPress', mediaId)\n    }\n\n    return {\n        ...mediaState,\n        onMediaPress, \n        onRemoveMediaPress, \n        onDownloadMediaPress, \n        onCopyLinkPress, \n        onEditMediaPress\n    }\n}","import { useCallback, useReducer, useState } from \"react\"\n\nimport {\n    ChatMessage,\n    ChatMessageStatus,\n    Contact,\n    UserInfo\n} from \"../types/\"\n\nimport {\n    sendChatMessage as sendChatMessageType\n} from '../api/'\nimport { useMutation, useQuery } from \"react-query\"\nimport { CommonActions, useIsFocused, useNavigation, useRoute } from \"@react-navigation/native\"\nimport { useAppDispatch, useAppSelector } from \"../store/hooks\"\nimport { setPaginationState } from \"../store/slices/chat\"\n\n\nexport const useMessages = (\n    chatId:string, \n    currentUserId:string,\n    getPublicMessages:(chatId: string, mnemonic:string, limit?: number, offset?: number) => Promise<ChatMessage[]>,\n    getUnreadMessages:(chatId:string, currentUserId:string) => Promise<ChatMessage[]>,\n    sendChatMessage:typeof sendChatMessageType,\n    setPubCallback: (callback:(message:ChatMessage) => Promise<void>) => void,\n    user: UserInfo\n) =>  {\n    const isLoadingEarlier = useAppSelector(state=> state.chat.loadingPagination[chatId])\n    const dispatch = useAppDispatch()\n\n    const route = useRoute()\n    const focused = useIsFocused()\n    const navigation = useNavigation()\n    const mnemonic = route.params?.mnemonic\n    const pageIndex = route.params?.page || 1\n    const name = route.params?.name\n    const parentFolderId = route.params?.parentFolderId\n    const perPage = 25\n    const messagesQuery = useQuery(\"chatMessages_\"+chatId, async ()=>{\n        const [messages] = await Promise.all([\n            getPublicMessages(chatId, mnemonic, perPage*pageIndex, 0)\n        ])\n        return {messages}\n    }, {\n        retry:true, \n        refetchInterval:5000, \n        enabled: focused\n    })\n    const loadingMessages = messagesQuery.isFetching || isLoadingEarlier\n\n    const sendMessageMutation = useMutation( async (text:string)=>{\n        try {\n            const message = await sendChatMessage(\n                chatId, \n                text,  \n                mnemonic\n            )\n            await messagesQuery.refetch()\n            return message;\n        } catch(err) {\n            console.error('==== sendMessage error ===', err)\n        }\n    }, {retry:true})\n    \n    const messages = messagesQuery.data?.messages || []\n\n    const nextPage = async () => {\n\n        if(isLoadingEarlier)\n            return\n\n        const nPage = parseInt(pageIndex)+1\n        console.info('nextPage', nPage, loadingMessages)\n        dispatch(setPaginationState({[chatId]:true}))\n        navigation.dispatch({\n            ...CommonActions.setParams({page:nPage}),\n            source: route.key\n        })\n        await messagesQuery.refetch()\n        setTimeout(()=>{\n            dispatch(setPaginationState({[chatId]:false}))\n        }, 2000)\n    } \n\n\n    return {\n        messages,\n        nextPage,\n        loadingMessages,\n        sendingMessage: sendMessageMutation.isLoading,\n        messagesError: messagesQuery.error as string | undefined,\n        sendMessage: sendMessageMutation.mutate,\n        isLoadingEarlier\n    }\n    \n}","import { useMutation, useQueryClient } from \"react-query\";\nimport { Contact, UserInfo } from \"../types\";\nimport { useMemo } from \"react\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\n\nexport const useRouteContact = (contact: Contact | undefined, writeItem:any, isLoading:boolean, sendChatMessage:any, user: UserInfo, routeParams) => {\n\n    const queryClient = useQueryClient()\n    const navigation = useNavigation()\n    const route = useRoute()\n    const {chatId, name, mnemonic} = routeParams || route.params\n    const folderId = \"new_contact\"\n    const createContactMutation = useMutation((data)=>{\n        const ncontact = {\n            id:chatId,\n            isContact:true,\n            folderId,\n            name,\n            mnemonic\n        }\n        console.info(ncontact)\n        writeItem(ncontact)\n    }, {retry:true, onSuccess: async () => {\n\n        await queryClient.refetchQueries(\"contact_\"+chatId)\n        navigation.navigate('Chat', {\n            chatId, \n            name, \n            parentFolderId:folderId, \n            mnemonic\n        })\n        await sendChatMessage(chatId, user.name+\" has joined\", mnemonic, {system:true})\n    }})\n\n    useMemo(()=>{\n        // console.info('useRouteContact Memo', isLoading, contact, createContactMutation)\n        if(!isLoading && !contact && !createContactMutation.isLoading && !routeParams) {\n            createContactMutation\n            .mutateAsync()\n            .then(async ()=>{\n                console.info('after create contact')\n            })\n        }\n    }, [isLoading, contact, createContactMutation, routeParams])\n\n    \n}","import { useReducer } from \"react\"\nimport { CurrentUserData, FolderType, UserInfo } from \"../types\"\nimport { useQuery } from \"react-query\";\n\nexport enum UserDataActionType {\n    setUser = \"setUser\",\n    setTheme = \"setTheme\",\n    setActiveFolder = \"setActiveFolder\",\n    setEditingFolder = \"setEditingFolder\",\n    setFolderType = \"setFolderType\"\n}\n\nexport type UserDataGenericAction = \nUserDataActionType.setTheme \n\n\nexport interface UserDataSet {\n    actionType: UserDataActionType.setUser;\n    currentUserId: string;\n    userData: UserInfo;\n}\n\nexport interface SetActiveFolder {\n    actionType: UserDataActionType.setActiveFolder\n    folderId: string | undefined;\n    folderType: FolderType\n}\n\nexport interface SetEditingFolder {\n    actionType: UserDataActionType.setEditingFolder\n    folderId: string | undefined;\n    folderType: FolderType\n}\n\nexport interface SetFolderType {\n    actionType: UserDataActionType.setFolderType\n    folderType: FolderType\n}\n\nexport type UserDataAction = \n{ actionType: UserDataGenericAction }\n| UserDataSet\n| SetActiveFolder\n| SetFolderType\n| SetEditingFolder\n\nexport interface UserDataResponse {\n    userDataState: CurrentUserData;\n    userDataDispatch: React.Dispatch<UserDataAction>\n}\n\nconst userDataReducer = (state:CurrentUserData, action:UserDataAction) : CurrentUserData => {\n    const {actionType} = action\n    switch (actionType) {\n        case UserDataActionType.setUser:\n            return {\n                ...state, \n                user:action.userData\n            }\n        case UserDataActionType.setActiveFolder:\n            return {\n                ...state,\n                currentFolderIds:{\n                    ...(state.currentFolderIds || {}),\n                    [action.folderType]: action.folderId\n                },\n                isEditingFolder:{\n                    ...(state.isEditingFolder || {}),\n                    [action.folderType]: undefined\n                },\n            }\n        case UserDataActionType.setFolderType:\n            return {\n                ...state,\n                currentFolderType:action.folderType\n            }\n        case UserDataActionType.setEditingFolder:\n            return {\n                ...state,\n                isEditingFolder:{\n                    ...(state.isEditingFolder || {}),\n                    [action.folderType]: action.folderId\n                },\n                currentFolderIds:{\n                    ...(state.currentFolderIds || {}),\n                    [action.folderType]: action.folderId\n                }\n            }\n        default:\n            return state\n    }\n}\n\nexport const useUserData = () : UserDataResponse => {\n    // const user = useQuery(\"UserData\", async ()=>await getUserData(), {refetchOnMount:false, refetchOnReconnect:false, refetchOnWindowFocus:false})\n    const [userDataState, userDataDispatch] = useReducer(userDataReducer, {\n        user:{}, \n        currentFolderIds:{},\n        colors:{},\n        isEditingFolder:{}\n    })\n    \n    return {\n        userDataState,\n        userDataDispatch\n    }\n}","import React, { useMemo } from 'react'\nimport ChatView from '../components/chatview'\nimport { useQuery } from 'react-query'\nimport { ActivityIndicator } from 'react-native-paper'\nimport { useRouteContact } from '../hooks/useRouteContact'\nimport { useRoute } from '@react-navigation/native'\n\nfunction Chat(props) {\n  \n  const {\n    setPubCallback,\n    getPublicMessages,\n    getUnreadMessages,\n    sendChatMessage,\n    getUserData,\n    getById,\n    writeItem,\n    getFolderContent,\n    routeParams,\n    isEmbeded\n  } = props\n  const route = useRoute()\n  const chatId = routeParams?.chatId || route.params?.chatId\n  const user = useQuery(\"UserData\",()=>getUserData(), {\n    refetchOnMount:false, \n    refetchOnReconnect:false, \n    refetchOnWindowFocus:false\n  })\n  const contact = useQuery(\"contact_\"+chatId, ()=>getById(chatId), {\n    refetchOnMount:false, \n    refetchOnReconnect:false, \n    refetchOnWindowFocus:false, \n    onError(err) {\n      console.error('on get contact error', err)\n    }})\n  const isLoading = user.isLoading || contact.isLoading\n  console.info('contact', contact.data)\n  useRouteContact(\n    contact.data, \n    writeItem, \n    isLoading, \n    sendChatMessage,\n    user.data,\n    routeParams\n  )\n  return (\n  \t<>{isLoading \n      ? \n        <ActivityIndicator size={72} /> \n      : \n        (<ChatView \n          currentUserId={user.data.id}\n          params={{user:user.data, contact:contact.data}}\n          chatId={chatId}\n          isLoading={isLoading}\n          setPubCallback={setPubCallback}\n          getPublicMessages={getPublicMessages}\n          getById={getById}\n          getFolderContent={getFolderContent}\n          getUnreadMessages={getUnreadMessages}\n          sendChatMessage={sendChatMessage}\n          disableExtraMessageButtons={true}\n          backgroundColor='black'\n          routeParams={routeParams}\n          isEmbeded={isEmbeded}\n        />)\n      }\n    </>\n  )\n}\n\nexport default Chat;\n","import React from 'react';\n\nimport {\n  View,\n} from 'react-native';\n\nimport ContactLibrary from '../components/contactlibrary';\n\nconst ContactsView = (props:any) => {\n  return (\n    <View style={{\n      height:\"100%\", \n      width:\"100%\"\n    }}>\n      <View>\n      <ContactLibrary \n        {...props}\n        showPublicParty={true}   \n      />\n    </View>\n  </View>\n  );\n};\nexport default ContactsView;\n","import React, {memo} from 'react';\n\nimport {\n  View,\n} from 'react-native';\n\nimport MediaLibrary from '../components/medialibrary';\nimport { useIsFocused } from '@react-navigation/native';\n\nconst HomeView = (ops) => {\n\n  return (\n    <View style={{\n      height:\"100%\", \n      width:\"100%\"\n    }}>\n      <View>\n          <MediaLibrary\n            getFolderContent={ops.getFolderContent}\n            getFoldersByType={ops.getFoldersByType}\n            enqMedia={ops.enqMedia}\n            stopMedia={ops.stopVideo}\n            setWindowClosedCallback={ops.setWindowClosedCallback}\n            writeItem={ops.writeItem}\n          /> \n      </View>\n\n    </View>\n  );\n};\n\nexport default memo(HomeView);\n","import React, { useCallback } from 'react';\n\nimport {\n  View,\n  Linking,\n  StyleSheet,\n  Pressable,\n  Platform\n} from 'react-native';\n\nimport {\n  UserInfo\n} from '../types';\nimport { useQuery } from 'react-query';\nimport { ActivityIndicator, List, Avatar, Divider, Switch, Text, Chip } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\n\nconst appLoginUrl = \"https://www.starpy.me?appLogin=true\"\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n  customTitle: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  additionalPadding: {\n    paddingTop: 8,\n  },\n  image: {\n    width:\"100%\",\n    height:\"auto\",\n    opacity:.6,\n    position:\"absolute\",\n    resizeMode: \"cover\",\n    zIndex:-1,\n    flex:1,\n    \n  },\n});\nconst SettingsView = ({\n  getUserData\n} : {domain:string, getUserData:()=>Promise<UserInfo>}) => {\n  const userDataQuery = useQuery(\"UserData\", getUserData)\n  const isLoadingUserData = userDataQuery.isLoading\n  const nav = useNavigation()\n  const UserData = userDataQuery.data\n  const onAddEmail = () => {\n    // if(UserData?.email)\n    //   return;\n    Linking.openURL(appLoginUrl)\n  }\n\n  const openDevices = () => {\n    nav.navigate(\"Devices\")\n  }\n\n  const toggleTheme = () => {\n    console.info('toggleTheme')\n  }\n\n  const onEditProfile = () => {\n    console.info(\"onEditProfile\")\n  }\n  const AvatarSize = 72\n  const controlIconPaddingTop = 20\n  const touchableStyle = {\n    \"pointerEvents\": \"auto\",\n    paddingTop:controlIconPaddingTop,\n  }\n  const showCert = () => {\n    \n  }\n  const showDiskStatus = () => {\n\n  }\n  const showCloudStatus = () => {\n\n  }\n  return (\n    <View style={{\n        height:\"100%\", \n        width:\"100%\"\n      }}>\n        {isLoadingUserData ? \n          (<ActivityIndicator animating={true} size={72} />) \n          : (\n          <>\n          <List.Section >\n            <List.Item\n              title={UserData?.name}\n              left={(props) => (\n                UserData?.photo \n                ? \n                  <Avatar.Image style={props.style} source={{uri:UserData?.photo, cache: \"force-cache\"}} size={AvatarSize} />\n                :\n                  <Avatar.Text style={props.style} label={UserData?.name && UserData?.name.slice(0,2).toUpperCase()} size={AvatarSize} /> \n              )}\n              description={({\n                ellipsizeMode,\n                color: descriptionColor,\n                fontSize,\n              }) => (\n                <View style={[styles.container, styles.column]}>\n                  <Text\n                    numberOfLines={1}\n                    ellipsizeMode={ellipsizeMode}\n                    style={{ color: descriptionColor, fontSize }}\n                  >\n                   {UserData?.description}\n                  </Text>\n                  <View\n                    style={[styles.container, styles.row, styles.additionalPadding]}\n                  >\n                  {Platform.OS == \"macos\" ? <Chip icon=\"laptop\" onPress={() => {}} style={{height:30}}>\n                    MacOS\n                  </Chip> : null }\n                  {Platform.OS === \"web\" ? <Chip icon=\"web\" onPress={() => {}} style={{height:30}}>\n                    WEB\n                  </Chip> : null }\n                  </View>\n                </View>\n              )}\n              right={props=> <Pressable style={touchableStyle} onPress={onEditProfile}><List.Icon {...props} icon=\"pencil-outline\" /></Pressable>}\n            />\n            <Divider />\n            {Platform.OS !== \"web\" ? <List.Item\n              onPress={showDiskStatus}\n              title={\"Local Storage Status\"}\n              left={(props)=>(\n                <List.Icon icon=\"harddisk\" style={props.style} />\n              )}\n            /> : null }\n            <Divider />\n            <List.Item\n              onPress={showCloudStatus}\n              title={\"Cloud Storage Status\"}\n              left={(props)=>(\n                <List.Icon icon=\"cloud\" style={props.style} />\n              )}\n            />\n            <Divider />\n            <List.Item\n              onPress={onAddEmail}\n              title={\"Login With Google\"}\n              left={(props)=>(\n                <List.Icon icon=\"google\" style={props.style} />\n              )}\n              right={(props)=>(\n                <Switch  value={UserData?.email ? true : false} />\n              )}\n            /> \n            <Divider />\n            <List.Item\n              onPress={openDevices}\n              title={\"Devices\"}\n              left={(props)=>(\n                <List.Icon icon=\"devices\" style={props.style} />\n              )}\n            />\n            <Divider />\n            <List.Item\n              onPress={toggleTheme}\n              title={\"Toggle Theme\"}\n              left={(props)=>(\n                <List.Icon icon=\"theme-light-dark\" style={props.style} />\n              )}\n              right={(props)=>(\n                <Switch />\n              )}\n            />\n            <Divider />\n            <List.Item\n              onPress={showCert}\n              title={\"Certificate\"}\n              left={(props)=>(\n                <List.Icon icon=\"certificate\" style={props.style} />\n              )}\n            />\n            <Divider />\n          </List.Section>\n          </>\n        )}\n    </View>\n  );\n};\n\nexport default SettingsView;\n","import { useDispatch, useSelector } from 'react-redux'\nimport type { TypedUseSelectorHook } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createSlice } from '@reduxjs/toolkit'\nimport type { PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '../store'\nimport { act } from 'react-test-renderer'\n\nexport interface ChatsState {\n    loadingPagination:{[key:string]:boolean}\n}\n\nconst initialState:ChatsState = {\n    loadingPagination: {}\n}\n\nexport const chatSlice = createSlice({\n    name: 'chat',\n    initialState,\n    reducers: {\n        setPaginationState:(state, action:PayloadAction<{[key:string]:boolean}>)=> {\n            const key = Object.keys(action.payload)[0]\n            state.loadingPagination[key] = action.payload[key]\n        }\n    }\n})\n\nexport const {\n    setPaginationState\n} = chatSlice.actions\n\nexport default chatSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\nimport type { PayloadAction } from '@reduxjs/toolkit'\nimport { EncoderProject } from '../../types';\n\nexport interface EditorState {\n    encoderProgress:number;\n    caretPosition:number;\n    scrollPosition:number;\n    pixelsPerSecond:number;\n    jobs:BackgroundRenderJob[];\n    jobsProgress:{[key:string]:number}\n    isPlaying:boolean;\n    videoScrollPosition:number;\n    videoCaretPosition:number;\n    scrollParams:{\n        totalWidth:number;\n        totalScroll:number\n    };\n    canScroll:boolean;\n    activeLayer:string\n    prevActiveLayer:string;\n    scroll:number;\n    totalTime:number;\n    showEditor:boolean;\n    showComments:boolean;\n    isRendering:boolean;\n    renderProgress:number;\n    renderTime:number;\n    renderOutputURL?:string;\n    ffmpegLogs:string;\n    ffmpegError:boolean;\n}\n\nexport interface BackgroundRenderJob {\n    id:string;\n    encoder?:EncoderProject;\n    progress?:number;\n}\n\nconst initialState:EditorState = {\n    encoderProgress: 0,\n    caretPosition: 0,\n    scrollPosition: 0,\n    pixelsPerSecond: 8,\n    jobs:[],\n    jobsProgress:{},\n    isPlaying:false,\n    videoCaretPosition:0,\n    videoScrollPosition:0,\n    scrollParams:{\n        totalWidth:0, \n        totalScroll:0\n    },\n    canScroll:true,\n    activeLayer:\"1\",\n    prevActiveLayer:\"1\",\n    scroll:0,\n    totalTime:0,\n    showEditor:true,\n    showComments:false,\n    isRendering:false,\n    renderProgress:0,\n    renderTime:0,\n    ffmpegLogs:\"\",\n    ffmpegError:false\n}\n\nexport const editorSlice = createSlice({\n    name: 'editor',\n    initialState,\n    reducers: {\n        setEncoderProgress:(state, action:PayloadAction<number>)=> {\n            state.encoderProgress = action.payload\n        },\n        setActiveLayer:(state, action:PayloadAction<{activeLayerId:string; caretPosition:number; scrollPosition:number}>) => {\n            if(state.isPlaying === true) {\n                state.videoCaretPosition = action.payload.caretPosition\n                state.videoScrollPosition = action.payload.scrollPosition\n                state.activeLayer = action.payload.activeLayerId\n                // console.info(\"active update video\", state.videoCaretPosition, state.videoScrollPosition)\n            }\n                \n        },\n        setCaretPosition:(state, action:PayloadAction<number>)=> {\n            state.caretPosition = action.payload\n            if(state.isPlaying === false) {\n                state.videoCaretPosition = action.payload\n            }\n        },\n        setScrollPosition:(state, action:PayloadAction<number>)=> {\n            state.scrollPosition = action.payload\n            if(state.isPlaying === false) {\n                state.videoScrollPosition = action.payload\n            }\n        },\n        setPixelsPerSecond:(state, action:PayloadAction<number>)=> {\n            state.pixelsPerSecond = action.payload\n        },\n        createBackgroundRenderJob:(state, action:PayloadAction<BackgroundRenderJob>)=> {\n            state.jobs.push(action.payload)\n        },\n        setJobProgress:(state, action:PayloadAction<BackgroundRenderJob>)=>{\n            state.jobsProgress[action.payload.id] = action.payload.progress!\n        },\n        setIsPlaying:(state, action:PayloadAction<boolean>)=> {\n            state.isPlaying = action.payload\n            if(action.payload === false) {\n                state.videoCaretPosition = state.caretPosition\n                state.videoScrollPosition = state.scrollPosition\n            }\n        },\n        setTotalTime:(state, action:PayloadAction<number>)=> {\n            state.totalTime = action.payload\n        },\n        setScrollParams:(state, action:PayloadAction<{totalWidth:number, totalScroll:number}>)=> {\n          state.scrollParams = action.payload\n          const canScroll = state.scrollParams.totalScroll > state.scrollParams.totalWidth\n          const newscroll = state.scrollParams.totalScroll - state.scrollParams.totalWidth\n          if(state.canScroll !== canScroll \n              && state.isPlaying === false ) {\n              // console.info('update scroll', newscroll, canScroll)\n              state.canScroll = canScroll\n          }\n          if(state.scroll !== newscroll\n              && !isNaN(newscroll)) {\n                  state.scroll = newscroll\n              }\n        },\n        setShowEditor:(state, action:PayloadAction<boolean>) => {\n            state.showEditor = action.payload\n        },\n        setShowComments:(state, action:PayloadAction<boolean>) =>  {\n            state.showComments = action.payload\n        },\n        setIsRendering:(state, action:PayloadAction<boolean>) =>  {\n          state.isRendering = action.payload\n          if(state.isRendering) {\n            state.ffmpegLogs = \"\"\n            state.ffmpegError = false;\n          }\n        },\n        setRenderUrl:(state, action:PayloadAction<string|undefined>) => {\n          state.renderOutputURL = action.payload\n        },\n        setRenderProgress:(state, action:PayloadAction<{progress:number, time:number}>) => {\n          state.renderProgress = action.payload.progress\n          state.renderTime = action.payload.time / 1000000\n          // console.info('renderTime', state.renderTime)\n          state.caretPosition = state.renderTime * state.pixelsPerSecond \n          state.videoCaretPosition = state.caretPosition\n        },\n        addNewLogLine:(state, action:PayloadAction<string>) =>  {\n          state.ffmpegLogs += ('\\n'+action.payload)\n          if(action.payload.toLowerCase().search(\"error\") > -1)\n            state.ffmpegError = true;\n        }\n    }\n})\n\nexport const {\n    setEncoderProgress,\n    setCaretPosition,\n    setScrollPosition,\n    setPixelsPerSecond,\n    setIsPlaying,\n    setScrollParams,\n    setActiveLayer,\n    setShowComments,\n    setShowEditor,\n    setIsRendering,\n    setRenderUrl,\n    setRenderProgress,\n    addNewLogLine\n} = editorSlice.actions\n\nexport default editorSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\nimport type { PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '../store'\nimport { act } from 'react-test-renderer'\n\nexport interface EncoderState {\n    encoderProgress:number\n}\n\nconst initialState:EncoderState = {\n    encoderProgress: 0\n}\n\nexport const encoderSlice = createSlice({\n    name: 'encoder',\n    initialState,\n    reducers: {\n        setEncoderProgress:(state, action:PayloadAction<number>)=> {\n            state.encoderProgress = action.payload\n        }\n    }\n})\n\nexport const {\n    setEncoderProgress\n} = encoderSlice.actions\n\nexport default encoderSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\nimport type { PayloadAction } from '@reduxjs/toolkit'\n\nexport interface FileSystemState {\n    isDeleting: boolean;\n    deleteItemId?: string;\n    downloadingProgress:{[key:string]:number | undefined}\n}\n\nconst initialState:FileSystemState = {\n    isDeleting: false,\n    downloadingProgress:{}\n}\n\nexport const FileSystemSlice = createSlice({\n    name: 'fs',\n    initialState,\n    reducers: {\n        setDeleteItem:(\n          state, \n          {payload:{deleteItemId}}:PayloadAction<{deleteItemId:string}>\n        )=> {\n          state.isDeleting = deleteItemId ? true : false\n          state.deleteItemId = deleteItemId\n        },\n        setDownloadingProgress:(\n          state,\n          {payload:{itemId, progress}}:PayloadAction<{itemId:string, progress:number | undefined}>\n        )=>{\n          state.downloadingProgress[itemId] = progress\n        }\n    }\n})\n\nexport const {\n    setDeleteItem,\n    setDownloadingProgress\n} = FileSystemSlice.actions\n\nexport default FileSystemSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\nimport type { PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '../store'\n\nexport interface MediaState {\n    currentMediaPlaying?:string;\n    currentMediaId?:string;\n    isMediaPlaying?:boolean;\n    isMediaPaused?:boolean;\n    isMediaPreloadingPlayback?:boolean;\n    isMediaDownloading?:boolean;\n    isLoadingMedia?:boolean;\n}\n\nexport enum MediaActionType {\n    stop = \"stop\",\n    play = \"play\",\n    loaded = \"loaded\",\n    pause = \"pause\"\n}\n\nexport interface MediaPlayAction {\n    actionType: MediaActionType.play;\n    mediaId: string;\n}\nexport interface MediaPauseAction {\n    actionType: MediaActionType.pause;\n    pause: boolean;\n}\n\nexport interface MediaLoadedAction {\n    actionType: MediaActionType.loaded;\n    mediaId: string;\n}\n\nexport type MediaGenericActions = \nMediaActionType.stop\n\nexport type MediaAction = \n{ actionType: MediaGenericActions }\n| MediaPlayAction\n| MediaLoadedAction\n\n\nconst initialState: MediaState = {}\n  \nexport const mediaSlice = createSlice({\n  name: 'media',\n  initialState,\n  reducers: {\n    stop: (state) => {\n      state.isLoadingMedia = undefined;\n      state.currentMediaId = undefined;\n    },\n    play: (state, action: PayloadAction<MediaPlayAction>) => {\n      state.currentMediaId = action.payload.mediaId\n      state.isLoadingMedia = true\n    },\n    togglePause: (state, action: PayloadAction<MediaPauseAction>) => {\n      state.isMediaPaused = action.payload.pause\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    loaded: (state, _action: PayloadAction<MediaLoadedAction>) => {\n      state.isLoadingMedia = false\n      state.isMediaPlaying = true\n    },\n  },\n})\n\nexport const { stop, play, loaded, togglePause } = mediaSlice.actions\n\nexport const selectCurrentMediaId = (state: RootState) => state.media.currentMediaId\n\nexport const selectIsLoadingMedia = (state: RootState) => state.media.isLoadingMedia\n\nexport const selectIsPlayingMedia = (state: RootState) => state.media.isMediaPlaying\n\nexport default mediaSlice.reducer","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nexport interface UIState {\n  isTabBarHidden: boolean\n  isKeyboardOpen: boolean\n  keyboardHeight: number\n  currentPage: string\n  isReady: boolean\n  isSignedIn: boolean\n}\n\nconst initialState: UIState = {\n  isTabBarHidden: false,\n  isKeyboardOpen: false,\n  keyboardHeight: 0,\n  currentPage: 'Login',\n  isReady: false,\n  isSignedIn: false,\n}\n\nconst PagesWithoutTabBar = ['Chat', 'EditorProject']\n\nconst uiSlice = createSlice({\n  name: 'ui',\n  initialState,\n  reducers: {\n    setCurrentPage(state, { payload: { currentPage } }: PayloadAction<{ currentPage: string }>) {\n      state.currentPage = currentPage\n      if (PagesWithoutTabBar.includes(currentPage)) {\n        state.isTabBarHidden = true\n\n        return\n      }\n      state.isTabBarHidden = false\n    },\n    setKeyboardHeight(state, { payload: { keyboardHeight } }: PayloadAction<{ keyboardHeight: number }>) {\n      state.keyboardHeight = keyboardHeight\n      if (keyboardHeight === 0) {\n        state.isKeyboardOpen = false\n      } else {\n        state.isKeyboardOpen = true\n      }\n    },\n    setIsReady(state, { payload }: PayloadAction<boolean>) {\n      state.isReady = payload\n    },\n    setIsSigned(state, { payload }: PayloadAction<boolean>) {\n      state.isSignedIn = payload\n    },\n  },\n})\nexport const { setCurrentPage, setKeyboardHeight, setIsReady, setIsSigned } = uiSlice.actions\nexport default uiSlice.reducer\n\n","import { createSlice } from '@reduxjs/toolkit'\nimport type { PayloadAction } from '@reduxjs/toolkit'\nimport type { RootState } from '../store'\nimport { Media } from '../../types';\nimport { AxiosProgressEvent } from 'axios';\n\nexport interface UploadState {\n  file?:FileReader;\n  media?:Media;\n  modalVisible:boolean;\n  uploadToCloud:boolean;\n  shareToWT:boolean;\n  encryption:boolean;\n  persist: boolean;\n  fileUploadProgress:AxiosProgressEvent | undefined;\n  isUploadInProgress:boolean\n  totalChunks: number;\n} \n\nexport interface UploadAction {\n  file:FileReader;\n  media:Media;\n}\n\nexport interface UploadContinueAction extends UploadAction {\n  uploadId:string;\n}\n\nexport interface UploadStopAction {\n  uploadId:string;\n}\n\nconst initialState: UploadState = {\n  modalVisible:false,\n  uploadToCloud:false,\n  persist: true,\n  shareToWT:false,\n  encryption:false,\n  fileUploadProgress: undefined,\n  isUploadInProgress: false,\n  totalChunks: 0\n}\n\nexport const uploadSlice = createSlice({\n    name: 'upload',\n    initialState,\n    reducers: {\n      startOnboarding: (state, action: PayloadAction<UploadAction>) => {\n        console.info(\"start\", action)\n        state.file = action.payload.file\n        state.media = action.payload.media\n        state.modalVisible = true;\n      },\n      continue: (state, action: PayloadAction<UploadContinueAction>) => {\n\n      },\n      cancel: (state) => {\n        state.modalVisible = false\n      },\n      setMediaModalVisible: (state, action: PayloadAction<boolean>) => {\n        state.modalVisible = action.payload;\n        if(!action.payload) {\n          state.file = undefined \n        }\n      },\n      setFileUploadProgress: (state, action: PayloadAction<AxiosProgressEvent>) => {\n        state.fileUploadProgress = action.payload;\n      },\n      setUploadInProgress: (state, action: PayloadAction<boolean>) => {\n        state.isUploadInProgress = action.payload;\n      },\n      setShareToWt: (state, action: PayloadAction<boolean>) => {\n        state.shareToWT = action.payload;\n      },\n      setUploadToCloud: (state, action: PayloadAction<boolean>) => {\n        state.uploadToCloud = action.payload;\n      },\n      setEncrypt: (state, action: PayloadAction<boolean>) => {\n        state.encryption = action.payload;\n      },\n      setMetaForCloud: (state, action: PayloadAction<string>) => {\n        state.media!.webpage_url = action.payload\n        state.media!.hasCloud = true\n        state.media!.extractor = \"cloud\"\n        state.media!.url = action.payload\n      }\n    },\n  })\n  \n  export const { \n    startOnboarding, \n    cancel, \n    setMediaModalVisible, \n    setFileUploadProgress, \n    setUploadInProgress,\n    setUploadToCloud,\n    setEncrypt,\n    setShareToWt,\n    setMetaForCloud\n   } = uploadSlice.actions\n  \n  export const selectCurrentMediaId = (state: RootState) => state.media.currentMediaId\n  \n  export const selectIsLoadingMedia = (state: RootState) => state.media.isLoadingMedia\n  \n  export const selectIsPlayingMedia = (state: RootState) => state.media.isMediaPlaying\n  \n  export default uploadSlice.reducer","import { configureStore } from '@reduxjs/toolkit'\nimport mediaReducer from './slices/media'\nimport uploadReducer from './slices/upload'\nimport editorReducer from './slices/editor'\nimport chatReducer from './slices/chat'\nimport fsReducer from './slices/fs'\nimport encoderReducer from './slices/encoder'\nimport uiReducer from './slices/ui'\nexport const store = configureStore({\n  reducer: {\n    media: mediaReducer,\n    upload: uploadReducer,\n    encoder: encoderReducer,\n    chat: chatReducer,\n    fs: fsReducer,\n    editor: editorReducer,\n    ui: uiReducer\n  },\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch","import { IMessage } from \"react-native-gifted-chat\";\n\nexport interface Contact {\n  id: string;\n  isContact: boolean;\n  name: string;\n  photo: string;\n  date: number;\n  description: string;\n  email?: string;\n  originalId: string;\n  folderId: string;\n  online?: boolean;\n  lastSeen?: number;\n  thumbnail?: string;\n  unread?:number;\n  partyId?:string\n  mnemonic: string;\n}\n\nexport interface ContactRes {\n  docs: Contact[];\n}\n\nexport interface ChatRoom {\n  userIds: string[];\n  _id: string;\n  created: number;\n  admins: string[];\n  userId: string[];\n}\n\nexport interface ChatRoomRes {\n  docs: ChatRoom[];\n}\n\nexport enum ChatMessageType {\n  media = 'media',\n  call = 'call',\n  text = 'text',\n  party_request = 'party_request',\n  party_confirmation = 'party_confirmation',\n  party_start = 'party_start',\n  party_join = 'party_join',\n  party_stop = 'party_stop',\n  party_quit = 'party_quit',\n  party_media = 'party_media',\n  party_stop_media = 'party_media_stop',\n  party_media_pause = 'party_media_pause',\n  party_media_unpause = 'party_media_unpause',\n  party_media_sync = 'party_media_sync',\n}\n\nexport interface ChatMessage extends IMessage {\n  id: string;\n  created: number;\n  roomId: string;\n  userId: string;\n  readByUserIds: string[];\n  jwt: string;\n  messageStatus: ChatMessageStatus;\n  text: string;\n  pushed?: boolean;\n  encryptedContent?: string;\n  messageType?: ChatMessageType;\n  partyId?: string;\n  createdAt: number;\n  message: {\n    type: 'media' | 'call' | 'text';\n    data: string;\n  };\n  orderId:number;\n}\n\nexport enum ChatMessageStatus {\n  created = 'created',\n  sent = 'sent',\n  delivered = 'delivered',\n  read = 'read',\n}\n\nexport interface ChatMessageRes {\n  docs: ChatMessage[];\n}\n","export interface Folder {\n  id: string;\n  isFolder: boolean;\n  userId: string;\n  folderType: FolderType;\n  title: string;\n  isOpen?: boolean;\n  date: number;\n  isEditing?: boolean;\n  isInfoOpen?: boolean;\n  sortId?: number;\n  thumbnail?: string;\n  files?: string[]\n  folderId?: string;\n  orderId:number;\n  mnemonic?: string;\n  isShared?:boolean;\n}\n\nexport enum FolderType {\n  contact = 'contact',\n  media = 'media',\n  settings = 'settings',\n  encoder = \"encoder\",\n  editor = \"editor\"\n}\n\nexport interface FolderRes {\n  docs: Folder[];\n}\n","import { Contact } from \"./Contact\";\nimport { Folder } from \"./Folder\";\n\nexport interface ExtractorResponse {\n  id: string;\n  url: string;\n  extractor: string;\n  _has_drm?: boolean;\n  _filename?: string;\n  _type?: string;\n  _version?: string;\n}\n\nexport interface MediaStateType { \n  currentVideo:Media|null;\n  currentVideoId:string|null;\n  isLoading:boolean;\n  isPlaying:boolean;\n  openItemId:string|null;\n  enqMedia:(media:Media)=>Promise<any>;\n  setOpenItem:(i:Media)=>void;\n  webViewUrl?:string | null;\n  host?:string;\n  fileParam?:string;\n  webViewRef?:any;\n  magnetURI?:string | null;\n  onUpdateMagnet?:()=>Promise<any>\n}\n\nexport interface Media extends ExtractorResponse {\n  _id?: string;\n  _rev?: string;\n  _deleted?: boolean;\n  date: number;\n  isMediaNew: boolean;\n  folderId: string;\n  originalId: string;\n  webpage_url?: string;\n  title: string;\n  isPlaying?: boolean;\n  isDownloaded?: boolean;\n  isDownloading?: boolean;\n  isOpen?: boolean;\n  isInfoOpen?: boolean;\n  thumbnail?: string;\n  currentPosition?: number;\n  local?:string;\n  torrentFileName?: string;\n  files?:IFile[];\n  magnetURI?:string;\n  infoHash?:string;\n  description?:string;\n  filename: string;\n  fileType: string;\n  userId: string;\n  size?: number;\n  type?: string;\n  hasCloud?:boolean;\n  isEncoderProject?:boolean;\n  width:number;\n  height:number;\n  orderId:number;\n  duration?:number;\n  isCopy?:string;\n}\n\nexport enum FFMpegPreset {\n  ultrafast = \"ultrafast\",\n  superfast = \"superfast\",\n  veryfast = \"veryfast\",\n  faster = \"faster\",\n  fast = \"fast\",\n  medium = \"medium\",\n}\n\nexport enum FFMpegOutputType {\n  mp4 = \"mp4\",\n  gif = \"gif\"\n}\n\nexport interface EncoderProject extends Media {\n  encoding: {\n    outputFilePath?:string;\n    compressionLevel:number;\n    width:number;\n    height:number;\n    crf:number;\n    preset:FFMpegPreset;\n    output:FFMpegOutputType;\n    code:String[];\n    lastUpdated:number;\n    start?:number;\n    end?:number;\n    soundVolume?:number;\n  }\n}\n\nexport interface EditorComment extends EncoderProject, Contact {\n  description:string;\n}\n\nexport interface EditorProject extends Folder {\n  isEditorProject?:boolean;\n  editor:{\n    length:number;\n    width:number;\n    height:number;\n    lastUpdated:number;\n    start?:number;\n    end?:number;\n    outputFilePath?:string;\n    compressionLevel:number;\n    framerate?:number;\n    aspectRatio?:string;\n    preset:FFMpegPreset;\n    output:FFMpegOutputType;\n    code?: string[]\n  }\n}\n\nexport interface EditorLayer extends Folder {\n  isEditorLayer?:boolean;\n  editor: {\n    muted?:boolean;\n    videoDisabled?:boolean;\n    isCommentLayer?:boolean;\n  }\n  media?:EncoderProject[]\n}\n \n\nexport interface MediaRes {\n  docs: Media[];\n}\n\nexport interface IFile {\n  url: string,\n  name: string,\n  type: string,\n}","export * from './Contact';\nexport * from './Media';\nexport * from './UserInfo';\nexport * from './Folder';\n\nimport {Contact} from './Contact';\nimport {Media} from './Media';\nimport {UserInfo} from './UserInfo';\nimport {Folder} from './Folder';\nimport { Platform } from 'react-native';\n\nexport enum FTSIndex {\n  title = 'titleFTSIndex',\n  name = 'nameFTSIndex',\n  text = 'textFTSIndex',\n}\n\nexport interface DocsGeneric {\n  docs: (Folder | Media | Contact | UserInfo)[];\n  rows: {\n    _id: string;\n    doc: Folder | Media | Contact | UserInfo;\n  }[];\n}\n\nexport interface Device {\n  id: string;\n  manufacturer: string;\n  createdAt:number;\n  isDevice:boolean;\n  model:string;\n  ip?:string;\n  userAgent:string;\n  os: string;\n  platform:typeof Platform.OS;\n}\n\nexport type DocsGenericArray = (Folder | Media | Contact | UserInfo)[];\n\n\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"bundle.web.\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkStarpyApp\"] = self[\"webpackChunkStarpyApp\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [74,997,803], () => (__webpack_require__(47488)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_Ionicons","_interopRequireDefault","_MaterialCommunityIcons","_Ionicons2","_App","enableFreeze","iconFontStyles","iconFont","style","document","createElement","type","styleSheet","cssText","appendChild","createTextNode","head","initUserData","then","createRoot","getElementById","render","App","_react","_LogBox","_Platform","_app","LogBox","ignoreAllLogs","theme","_extends2","default","MD3DarkTheme","fonts","configureFonts","config","fontFamily","fontWeight","letterSpacing","lineHeight","fontSize","isV3","_exports","_useUserData","useUserData","userDataState","userDataDispatch","console","info","_reactRedux","Provider","store","_reactQuery","QueryClientProvider","client","queryClient","_ctx","UserCtx","value","UserData","PeerCtx","PartyCtx","LocalCtx","MediaCtx","MediaState","UserDataState","UserDataDispatch","_reactNativeSafeAreaContext","SafeAreaProvider","_reactNativePaper","PaperProvider","Fragment","require","_reactNativeUuid","sendChatMessage","chatId","text","mnemonic","message","u","id","data","ndata","nEvolu","_regenerator","async","_context","prev","next","awrap","getUserData","sent","uuid","v4","userId","folderId","messageStatus","userName","name","createdAt","Date","valueOf","createDBConn","writeItem","abrupt","stop","Promise","genMnemonic","limit","offset","_e","_e2","folder","e","query","_context2","getById","createQuery","db","selectFrom","selectAll","where","orderBy","loadQuery","rows","map","i","item","t0","error","party","user","contact","_context3","authorId","authorName","isContact","system","faker","animal","bird","split","join","toLowerCase","color","human","fish","insect","hacker","noun","QueryClient","defaultOptions","queries","refetchOnWindowFocus","refetchOnMount","refetchOnReconnect","Database","database","ItemTable","dbConns","window","dbMnemoCons","dbname","index","ops","createEvolu","res","indexAllFoldersForDB","subscribeSyncState","state","getSyncState","_tag","refetchQueries","isFirstSync","folders","evolu","getFolderContent","apiKey","authData","_await$findBy","_await$findBy2","userData","devices","_context4","localStorage","getItem","findBy","_slicedToArray2","photo","picture","_context5","_context6","_context7","parentFolderId","_context8","URL","location","toString","searchParams","get","isFolder","isEditorLayer","isEditorProject","isMediaNew","isEncoderProject","extractor","createOrUpdate","title","isDevice","userDoc","folderType","isDeleted","orderId","lastUpdated","_context9","key","_context10","_e3","_e4","_item$row","_context11","row","undefined","_getRequireWildcardCache","WeakMap","r","t","SomeJson","S","__esModule","has","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","hasOwnProperty","call","set","_interopRequireWildcard","Struct","foo","String","bar","Boolean","ItemId","table","String1000","isCompleted","SqliteBoolean","keys","_defaults","forEach","prototype","_exportNames","enumerable","_db","_media","_chat","apiURL","domain","searchEnabled","searchFolder","colors","searchItems","currentFolderIds","cb","playPartyById","currentVideo","currentVideoId","isLoading","isPlaying","openItemId","enqMedia","setOpenItem","url","params","response","method","credentials","body","JSON","stringify","headers","fetch","t1","json","userAgent","os","browserName","deviceId","device","ndevice","doInitialMigration","getUserAgent","replace","getBaseOs","getBrowserName","manufacturer","model","platform","startUpMediaSharing","hideVideoPlayer","link","_media$files","_media$files2","media","getWT","magnetURI","originalId","infoHash","filename","files","length","pickSingle","resolve","fileInput","click","addEventListener","file","nfile","size","partyListUrl","FFmpeg","mediaClient","mediaWorker","ffmpeg","appDirectory","rtcConfig","baseURL","recursiveShare","innerContent","isDownloaded","shareFileToWT","all","shareFolder","content","downloadFileById","sharedFolders","cast","mediaId","progressCB","wt","_wt","blob","getVideoWT","mediaClientFiles","on","bytes","progress","arrayBuffer","File","writeFileOpfs","dirCore","dir","fileId","fileHandle","writable","navigator","storage","getDirectory","getDirectoryHandle","create","getFileHandle","createWritable","write","close","getFileOpfs","getFileReaderOpfs","createObjectURL","getFile","announce","createMediaClient","WebTorrent","tracker","err","serviceWorker","register","reg","worker","active","waiting","installing","checkState","loadWorker","_ref","target","isVideo","_file$name","_file$name2","_file$name3","_file$name4","endsWith","processWT","_wt$files","streamUrl","find","reject","_file","getStreamURL","_context12","add","magnet","_context15","_context14","_context13","_context17","seed","_context16","_context18","_context19","setupPartyView","playMediaLink","currentPosition","cancelEncoding","terminate","cachedMedia","encodeMedia","isPrerender","nmedia","encoding","cachedId","outPostfix","outFileId","cache","opfsFile","dlFIle","fs","execCmd","_file2","_context20","isCopy","output","_ref2","t2","toBlobURL","t3","t4","t5","coreURL","wasmURL","t6","load","t7","t8","t9","fetchFile","writeFile","genExecCmd","exec","readFile","t10","t11","t12","genRenderCmd","projectData","layers","logs","_projectData$editor","cmd","encoded","_context22","filter","editor","medias","_ref3","log","_context21","_projectData$editor2","_medias$map","_medias$map2","_medias$map2$filter","_encoding$compression","_encoding$framerate","threads","hardwareConcurrency","extraCode","code","trim","layer","_layer$media","m","flat","_e$encoding","_e$encoding2","hasAudio","reduce","_layer$editor","muted","hasVideo","_layer$editor2","videoDisabled","audioOutput","audioMap","videoOutput","videoMap","aspectRatio","scale","width","height","filterTrim","_e$encoding3","_e$encoding4","_e$layer","_e$layer$editor","_e$layer2","_e$layer2$editor","trimV","start","parseInt","end","duration","trimA","videosLength","_i$layer","_i$layer$editor","audiosLength","_i$layer2","_i$layer2$editor","filterConcat","_a$layer","_a$layer$editor","_a$layer2","_a$layer2$editor","push","concat","_toConsumableArray2","compressionLevel","preset","framerate","_encoding$compression2","prerenderOptionalCode","genExecTime","seconds","comma","endMins","endSeconds","getActiveProjectLayer","activeMedia","layerCount","_activeMedia","_layer","_layer2","_layer2$editor","_media$encoding","_media$encoding2","activeLayer","getNextActiveProjectMedia","startPosition","_media$encoding3","_media$encoding4","nextPosition","getTotalTime","_layer$media2","agv","_media$encoding5","_media$encoding6","_layer$editor3","_getActiveProjectLaye","offsetPosition","totalTime","encode","_context25","parseFloat","_context24","_context23","isOpera","opr","addons","opera","indexOf","InstallTrigger","test","HTMLElement","safari","pushNotification","isIE","documentMode","StyleMedia","chrome","isChrome","CSS","units","x","l","toFixed","_Text","_nav","linking","prefixes","screens","Starp","path","FilesTab","Folder","Files","SettingsTab","Devices","Settings","ContactsTab","Chat","Contacts","EncoderTab","EncoderProjects","EncoderProject","EditorTab","EditorProjects","EditorProject","current","useContext","dark","primary","textColor","background","backgroundColor","card","navBorderColor","navTextColor","border","notification","_reactNativeGestureHandler","GestureHandlerRootView","_native","NavigationContainer","fallback","_userData$data","_navState$state","_navState$state2","_folderDataQuery$data","options","route","createNewParty","DocumentPicker","extractMedia","ftsIndex","searchDatabaseOnIndex","navigation","useNavigation","useTheme","useQueryClient","dispatch","useAppDispatch","_React$useState","useAppSelector","pixelsPerSecond","React","useState","_React$useState2","isEditing","setIsEditing","_useState","_useState2","textValue","setText","_useState3","_useState4","searchValue","setSearch","_useWindowDimensions","useWindowDimensions","_useState5","_useState6","mode","setMode","userState","useQuery","_useState7","_useState8","isLocked","setLocked","_useState9","_useState10","writeItemMutation","useMutation","retry","routeName","getFocusedRouteNameFromRoute","getHeaderTitle","navState","useNavigationState","_state$routes$","_state$routes$$state","_state$routes$$state$","routes","currentNavPage","back","includes","folderDataQuery","enabled","FolderType","settings","encoder","newFolderType","useMediaPlayer","encoderProjectTypes","useMemo","exData","nd","search","setTimeout","date","mutateAsync","queryKey","extractLink","showFullSearchBar","placeholderText","addFolderPlaceholder","chatPlacehoder","addFileEnabled","addFolderEnabled","showScaleControls","Appbar","Header","Action","icon","onPress","navigate","screen","canGoBack","goBack","Content","_View","TextInput","placeholder","onChangeText","textAlignVertical","padding","left","Icon","marginTop","autoFocus","maxLength","right","partyId","newFolderId","nFolder","creatorId","isParty","loading","Tooltip","_editortoolbar","projectId","routeParams","pickerResult","fId","presentationStyle","uri","fileType","startOnboarding","onClickFile","Searchbar","searchContactsPlaceholderText","defaulPlaceHolderText","inputStyle","paddingBottom","_fileupload","hideMedialModal","cancel","currentMediaId","_mediabanner","_encoderbanner","_editorbanner","_useWindowDimensions2","_contacts","_folderpage","ChatStack","createStackNavigator","ChatComponent","props","setPubCallback","getPublicMessages","writePublicData","getUnreadMessages","FolderComponent","stopMedia","getFoldersByType","setWindowClosedCallback","ContactsComponent","getPublicFolderContent","getCurrentFolder","setCurrentFolder","getContactsByFolderWithUnread","getPrevPartiesForChatId","deleteById","publicPartyPref","setNetworkUpdateCB","getPublicPartyList","toggleSearch","Navigator","screenOptions","headerShown","freezeOnBlur","animationEnabled","Screen","component","_params","_params2","_SafeAreaView","_VirtualizedList","_StyleSheet","_TouchableOpacity","_contentitem","chatViewParams","_route$params","currentUserId","isEmbeded","_useMessages","useMessages","messages","loadingMessages","sendMessage","nextPage","isLoadingEarlier","onSend","useCallback","useRoute","dim","isMobile","parentFolderHook","useFolder","styles","StyleSheet","container","flex","paddingTop","paddingLeft","tinyLogo","scroll","display","position","textAccentColor","surface","flexDirection","folderContentQuery","isFetching","ActivityIndicator","onEndReached","folderContent","pagingEnabled","initialNumToRender","renderItem","dataHook","keyExtractor","getItemCount","getContentCount","getContentItem","onScrollToTop","getItemLayout","_reactNativeGiftedChat","GiftedChat","scrollToBottom","renderLoading","_id","avatar","renderBubble","Bubble","textStyle","wrapperStyle","alignSelf","maxWidth","timeTextStyle","renderAvatar","GiftedAvatar","currentMessage","avatarStyle","borderWidth","borderColor","listViewProps","scrollEventThrottle","loadEarlier","onLoadEarlier","renderLoadEarlier","renderChatEmpty","transform","scaleY","List","Item","p","titleStyle","ProgressBar","indeterminate","visible","renderInputToolbar","inputProps","InputToolbar","containerStyle","primaryStyle","renderComposer","Composer","textInputStyle","multiline","textInputAutoFocus","textInputProps","blurOnSubmit","onSubmitEditing","focus","renderSend","showUserAvatar","memo","contactItemProps","isOpen","children","Accordion","expanded","CommonActions","Divider","_folderlibrary","contactsLibraryProps","isFocused","useContacts","_mediaitem","_contactitem","_folderitem","_projectitem","enableMove","ContentItemProps","currentFolderId","drawerOffset","onMediaPress","onRemoveMediaPress","onRemoveFolder","onDownloadMediaPress","onCopyLinkPress","onEditMediaPress","isLoadingMedia","currentContentId","currentMediaPlaying","itemLoading","isEditingFolder","onFolderActionPress","setFolderEditorName","currentFolderEditorName","folderNameInputRef","abortEditFolder","onShareFolder","isInfoOpen","iconColor","iconSize","onFolderPress","isSecondLevel","userLoading","Section","description","toDateString","RegExp","DrawerCollapsedItemsData","label","focusedIcon","unfocusedIcon","drawerContent","preference","justifyContent","alignItems","paddingVertical","paddingHorizontal","v3Preference","badge","collapsedSection","annotation","marginHorizontal","marginVertical","nav","drawerItemIndex","_drawer","DrawerContentScrollView","alwaysBounceVertical","showsVerticalScrollIndicator","showsHorizontalScrollIndicator","Drawer","CollapsedItem","_editorproject","EditorStack","FolderLibraryComponent","useFolders","EditorProjectScreen","_encoderproject","_editorform","_editorvideo","mediaData","video2","useRef","mediaRes","layersQuery","codeWidth","margin","className","Banner","overflow","contentStyle","ScrollView","marginRight","projectQuery","borderLeftWidth","borderRightWidth","borderLeftColor","borderRightColor","_Animated","caretPosition","translateX","Animated","Value","onGestureEvent","event","nativeEvent","translationX","listener","useNativeDriver","cursor","PanGestureHandler","onHandlerStateChange","oldState","State","ACTIVE","newOffset","fullOffset","setOffset","setValue","setCaretPosition","View","opacity","interpolate","inputRange","outputRange","extrapolate","_item$encoding","_item$encoding2","onDragEnd","onDragStart","layerIndex","parentDataHook","maxDuration","currentDuration","onSuccess","combIndex","deleteItem","_item$encoding3","_item$encoding4","newvalue","_value","top","zIndex","borderRadius","bottom","rotate","setParams","_item$title","_item$title2","TouchableOpacity","onPressIn","onPressOut","pointerEvents","IconButton","Avatar","Text","marginLeft","_Clipboard","_reactNativeSyntaxHighlighter","_reactNativeCodeEditor","scrollPosition","isRendering","renderOutputURL","renderProgress","ffmpegLogs","ffmpegError","showCode","setShowCode","codeEditorRef","inputWidth","outputMenuVisible","setOutputMenuVisible","presetMenuVisible","setPresetMenuVisible","outputTypes","FFMpegOutputType","codeString","closeMenu","projectWriteMutation","refetch","processKey","ev","_video2$current5","_video2$current6","_video2$current7","_video2$current","_video2$current2","paused","pause","setScrollPosition","_video2$current3","_video2$current4","play","useEffect","onkeyup","selectValue","valueType","np","shouldRerender","isNaN","_video2$current8","setActiveLayer","activeLayerId","dense","textAlign","keyboardType","_mediaRes$editor","_mediaRes$editor2","_mediaRes$editor3","_mediaRes$editor4","_mediaRes$editor5","Menu","onDismiss","anchor","Button","_mediaRes$editor6","FFMpegPreset","_codeEditorRef$curren","_mediaRes$editor7","_mediaRes$editor7$cod","ref","inputLineHeight","highlighterLineHeight","language","syntaxStyle","CodeEditorSyntaxStyles","xonokai","initialValue","onChange","_mediaRes$editor8","_mediaRes$editor8$cod","showLineNumbers","Clipboard","setString","highlighter","customStyle","userSelect","setIsRendering","encodeProject","renderParams","setRenderProgress","logLine","addNewLogLine","setRenderUrl","disabled","href","download","_reactNativeDraglist","_editorcaret","_editorcontentitem","EditorLayerHeaderComponent","itemId","showComments","toggleLayerProp","propName","_extends3","_defineProperty2","folderData","muteLayer","hideLayer","isCommentLayer","_dataHook$folder","parentHook","EditorLayerBodyComponent","onClickAddContent","_dataHook$folder2","horizontal","onReordered","scrollParams","getByIdCallback","horizontalScroll","onScroll","contentOffset","_horizontalScroll$cur","_horizontalScroll$cur2","_horizontalScroll$cur3","totalWidth","clientWidth","totalScroll","scrollWidth","setScrollParams","scrollTo","_dataHook$folder3","onClickAddLayer","showEditor","isRefreshing","setRefreshing","forgetEverything","f","onClickSetScale","nscale","setPixelsPerSecond","sync","_layers$","comment","onClickAddComment","setShowComments","currentData","nitem","parse","onClickCut","onClickCopy","video","chip","_encodedMediaQuery$da2","_encodedMediaQuery$da3","_encodedMediaQuery$da6","_encodedMediaQuery$da7","encoderProgress","videoCaretPosition","videoScrollPosition","canScroll","focused","useIsFocused","encodedMediaQuery","getProjectMedia","setEncoderProgress","keepPreviousData","_encodedMediaQuery$da","currentTime","queryPosition","onTimeUpdate","_encodedMediaQuery$da4","_encodedMediaQuery$da5","_getActiveProjectLaye2","_e$nativeEvent$target","newtime","newoffset","layerSwitched","nscrollPosition","ncaretPosition","setIsPlaying","controls","src","onPlaying","onPause","onEnded","EncoderStack","EncoderProjectScreen","_mediaRes$encoding","_mediaRes$encoding2","localMediaQuery","isFetched","encodedFileSize","_head$headers$get","projectMutation","cancelQueries","mediaLoading","mediaSrc","video1","Chip","niceBytes","onLoadedMetadata","videoWidth","videoHeight","mp4","veryfast","Math","abs","_ImageBackground","source","resizeMode","_props$routeParams","project","afterWrite","ni","clearTimeout","resetQueries","exact","_projectData$encoding","_projectData$encoding2","_projectData$encoding3","_projectData$encoding4","soundVolume","_projectData$encoding5","_projectData$encoding6","_projectData$encoding7","_projectData$encoding8","_projectData$encoding9","_projectData$encoding10","_projectData$encoding11","_projectData$encoding12","_home","FileStack","HomeComponent","_pickerFileMeta$size","uploadState","upload","mediaModalVisible","modalVisible","pickerFile","pickerFileMeta","uploadToCloud","shareToWt","shareToWT","fileUploadProgress","encryption","isUploadInProgress","uuidFilename","authToken","videoMeta","setVideoMeta","uploadFileMutation","axios","request","withCredentials","onUploadProgress","setFileUploadProgress","attempts","writeItemToLocalStoreMutation","meta","writingItem","peerShared","Card","Title","subtitle","animatedValue","Portal","Modal","Actions","_folder","_folder2","_folder3","_folder4","comment_layer","fileUrl","setUploadInProgress","setMediaModalVisible","cdndomain","webpage_url","hasCloud","_axios","superfast","isLoadingContent","folderIcon","folderAccesory","isDefaultFolder","defaultFolders","touchableStyle","remove","edit","_folderNameInputRef$c","leftItem","ellipsizeMode","titleColor","numberOfLines","flexWrap","folderLibraryProps","loadingContent","loadingFolders","itemIndex","findIndex","renderFolder","_medialibrary","_contactlibrary","FolderNavigator","renderContent","flatListRef","initialScrollIndex","isLoadingFolder","addMedia","scrollIndex","navgation","ListEmptyComponent","isWT","updateMediaTime","loaded","actionType","MediaActionType","wtMediaQuery","togglePause","onResize","onLoadedData","isMediaPaused","el","kind","srcLang","column","customTitle","additionalPadding","image","thisItemIsLoading","onCellPress","onRemove","isDownloading","downloadingProgress","isDownloadedQuery","staleTime","Infinity","onDownloadToggle","iconName","thumbnail","offlineIconName","extractorIcon","cloudIcon","animating","descriptionColor","resizeMethod","imageStyle","mediaLibraryProps","useMedia","_appnav","_drawer2","Tab","createMaterialBottomTabNavigator","DrawerNav","createDrawerNavigator","RootStack","createNativeStackNavigator","getMediaAndEnq","stopVideo","findByOriginalId","createFileStack","ChatStackScreen","createChatStack","SettingsStack","createSettings","createEncoder","createEditor","TabNav","isNavHidden","ui","isTabBarHidden","useKeyboardDispatcher","SafeAreaInsetsContext","Consumer","insets","collapsedDrawerWidth","max","drawerStyle","drawerPosition","drawerType","detachInactiveScreens","defaultStatus","drawerIcon","barStyle","screenListeners","_navState$data","_navState$data$state","_navState$data$state2","_currentTab$state","_currentTab$state2","currentTab","setCurrentPage","currentPage","tabBarLabel","tabBarIcon","header","FTSIndex","projectType","projectIcon","_settings","_devices","colorOptions","RenderSettings","_current$colors","_current$colors2","headerStyle","createContext","migrationKey","mediaItemTextColor","mediaBackgroundColor","mediaBorderColor","navInactiveColor","folderColor","folderTextColor","deleteBackgroundColor","deleteTextColor","contactItemBackgroundColor","contactItemTitleColor","contactItemOnlineColor","currentUserColor","remoteUserColor","baseFolder","createUser","year","handle","cats","fullName","cat","birthdate","getFullYear","idHash","version","prevVersion","createNewUser","newUser","toISOString","MEDIA","contacts","_folder$files","mediaPlayer","nfolder","count","mnemo","refetchInterval","deleteFolderMutation","isLoadingFolderContent","folderFiles","userDispatch","editableFolder","updateFolderTitleMutation","UserDataActionType","setEditingFolder","editFolder","isLoadingFolderError","isLoadingFolderContentError","_route$params2","folderPref","folderUrl","_mnemonic","_folderUrl","encodeURIComponent","_data","didEnd","FoldersActionType","routeFolderId","foldersQuery","unshift","selectFolder","setActiveFolder","Keyboard","addListener","setKeyboardHeight","keyboardHeight","endCoordinates","removeAllListeners","mediaState","useFoldersState","onWindowClosed","downloads","setDownloadingProgress","_route$params3","_route$params4","_messagesQuery$data","chat","loadingPagination","pageIndex","page","messagesQuery","_await$Promise$all","_await$Promise$all2","sendMessageMutation","nPage","setPaginationState","sendingMessage","messagesError","mutate","createContactMutation","ncontact","userDataReducer","action","setUser","_extends6","setFolderType","currentFolderType","_useReducer","useReducer","_useReducer2","_chatview","onError","useRouteContact","disableExtraMessageButtons","showPublicParty","_Linking","_Pressable","userDataQuery","isLoadingUserData","onEditProfile","Image","slice","toUpperCase","Linking","openURL","Switch","email","useDispatch","useSelector","chatSlice","createSlice","initialState","reducers","payload","actions","reducer","editorSlice","jobs","jobsProgress","prevActiveLayer","renderTime","createBackgroundRenderJob","setJobProgress","setTotalTime","newscroll","setShowEditor","time","_editorSlice$actions","encoderSlice","FileSystemSlice","isDeleting","setDeleteItem","deleteItemId","_ref2$payload","_FileSystemSlice$acti","mediaSlice","_action","isMediaPlaying","_mediaSlice$actions","PagesWithoutTabBar","uiSlice","isKeyboardOpen","isReady","isSignedIn","setIsReady","setIsSigned","_ref4","_uiSlice$actions","persist","totalChunks","uploadSlice","continue","setShareToWt","setUploadToCloud","setEncrypt","setMetaForCloud","_uploadSlice$actions","_upload","_editor","_fs","_encoder","_ui","configureStore","mediaReducer","uploadReducer","encoderReducer","chatReducer","fsReducer","editorReducer","uiReducer","ChatMessageType","ChatMessageStatus","_Contact","_Media","_UserInfo","_Folder","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","deferred","O","result","chunkIds","fn","priority","notFulfilled","fulfilled","j","every","splice","getter","d","definition","o","chunkId","g","globalThis","this","Function","obj","prop","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","scripts","getElementsByTagName","Error","b","baseURI","self","installedChunks","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","bind","__webpack_exports__"],"sourceRoot":""}